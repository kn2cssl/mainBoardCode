
base1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005fe0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000048  00802000  00005fe0  00006074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000003de  00802048  00802048  000060bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000060bc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007c8  00000000  00000000  00006118  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000c445  00000000  00000000  000068e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002123  00000000  00000000  00012d25  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00008654  00000000  00000000  00014e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00002098  00000000  00000000  0001d49c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00026581  00000000  00000000  0001f534  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00007351  00000000  00000000  00045ab5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006a8  00000000  00000000  0004ce08  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000ad90  00000000  00000000  0004d4b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f9 c0       	rjmp	.+498    	; 0x1f4 <__ctors_end>
       2:	00 00       	nop
       4:	1d c1       	rjmp	.+570    	; 0x240 <__bad_interrupt>
       6:	00 00       	nop
       8:	0c 94 c5 28 	jmp	0x518a	; 0x518a <__vector_2>
       c:	19 c1       	rjmp	.+562    	; 0x240 <__bad_interrupt>
       e:	00 00       	nop
      10:	17 c1       	rjmp	.+558    	; 0x240 <__bad_interrupt>
      12:	00 00       	nop
      14:	15 c1       	rjmp	.+554    	; 0x240 <__bad_interrupt>
      16:	00 00       	nop
      18:	13 c1       	rjmp	.+550    	; 0x240 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	11 c1       	rjmp	.+546    	; 0x240 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0f c1       	rjmp	.+542    	; 0x240 <__bad_interrupt>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__bad_interrupt>
      26:	00 00       	nop
      28:	0b c1       	rjmp	.+534    	; 0x240 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	09 c1       	rjmp	.+530    	; 0x240 <__bad_interrupt>
      2e:	00 00       	nop
      30:	07 c1       	rjmp	.+526    	; 0x240 <__bad_interrupt>
      32:	00 00       	nop
      34:	05 c1       	rjmp	.+522    	; 0x240 <__bad_interrupt>
      36:	00 00       	nop
      38:	44 c5       	rjmp	.+2696   	; 0xac2 <__vector_14>
      3a:	00 00       	nop
      3c:	7a c5       	rjmp	.+2804   	; 0xb32 <__vector_15>
      3e:	00 00       	nop
      40:	b0 c5       	rjmp	.+2912   	; 0xba2 <__vector_16>
      42:	00 00       	nop
      44:	e6 c5       	rjmp	.+3020   	; 0xc12 <__vector_17>
      46:	00 00       	nop
      48:	1c c6       	rjmp	.+3128   	; 0xc82 <__vector_18>
      4a:	00 00       	nop
      4c:	52 c6       	rjmp	.+3236   	; 0xcf2 <__vector_19>
      4e:	00 00       	nop
      50:	88 c6       	rjmp	.+3344   	; 0xd62 <__vector_20>
      52:	00 00       	nop
      54:	be c6       	rjmp	.+3452   	; 0xdd2 <__vector_21>
      56:	00 00       	nop
      58:	f4 c6       	rjmp	.+3560   	; 0xe42 <__vector_22>
      5a:	00 00       	nop
      5c:	2a c7       	rjmp	.+3668   	; 0xeb2 <__vector_23>
      5e:	00 00       	nop
      60:	ef c0       	rjmp	.+478    	; 0x240 <__bad_interrupt>
      62:	00 00       	nop
      64:	ed c0       	rjmp	.+474    	; 0x240 <__bad_interrupt>
      66:	00 00       	nop
      68:	eb c0       	rjmp	.+470    	; 0x240 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e9 c0       	rjmp	.+466    	; 0x240 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e7 c0       	rjmp	.+462    	; 0x240 <__bad_interrupt>
      72:	00 00       	nop
      74:	e5 c0       	rjmp	.+458    	; 0x240 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c0       	rjmp	.+454    	; 0x240 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e1 c0       	rjmp	.+450    	; 0x240 <__bad_interrupt>
      7e:	00 00       	nop
      80:	df c0       	rjmp	.+446    	; 0x240 <__bad_interrupt>
      82:	00 00       	nop
      84:	dd c0       	rjmp	.+442    	; 0x240 <__bad_interrupt>
      86:	00 00       	nop
      88:	db c0       	rjmp	.+438    	; 0x240 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d9 c0       	rjmp	.+434    	; 0x240 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d7 c0       	rjmp	.+430    	; 0x240 <__bad_interrupt>
      92:	00 00       	nop
      94:	d5 c0       	rjmp	.+426    	; 0x240 <__bad_interrupt>
      96:	00 00       	nop
      98:	d3 c0       	rjmp	.+422    	; 0x240 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d1 c0       	rjmp	.+418    	; 0x240 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cf c0       	rjmp	.+414    	; 0x240 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cd c0       	rjmp	.+410    	; 0x240 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cb c0       	rjmp	.+406    	; 0x240 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0c 94 7b 22 	jmp	0x44f6	; 0x44f6 <__vector_43>
      b0:	c7 c0       	rjmp	.+398    	; 0x240 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c5 c0       	rjmp	.+394    	; 0x240 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c3 c0       	rjmp	.+390    	; 0x240 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__vector_47>
      c0:	0c 94 c1 09 	jmp	0x1382	; 0x1382 <__vector_48>
      c4:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__vector_49>
      c8:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__vector_50>
      cc:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__vector_51>
      d0:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_52>
      d4:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__vector_53>
      d8:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__vector_54>
      dc:	0c 94 49 0b 	jmp	0x1692	; 0x1692 <__vector_55>
      e0:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__vector_56>
      e4:	ad c0       	rjmp	.+346    	; 0x240 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ab c0       	rjmp	.+342    	; 0x240 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	a9 c0       	rjmp	.+338    	; 0x240 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a7 c0       	rjmp	.+334    	; 0x240 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a5 c0       	rjmp	.+330    	; 0x240 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a3 c0       	rjmp	.+326    	; 0x240 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a1 c0       	rjmp	.+322    	; 0x240 <__bad_interrupt>
      fe:	00 00       	nop
     100:	9f c0       	rjmp	.+318    	; 0x240 <__bad_interrupt>
     102:	00 00       	nop
     104:	9d c0       	rjmp	.+314    	; 0x240 <__bad_interrupt>
     106:	00 00       	nop
     108:	9b c0       	rjmp	.+310    	; 0x240 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	99 c0       	rjmp	.+306    	; 0x240 <__bad_interrupt>
     10e:	00 00       	nop
     110:	97 c0       	rjmp	.+302    	; 0x240 <__bad_interrupt>
     112:	00 00       	nop
     114:	95 c0       	rjmp	.+298    	; 0x240 <__bad_interrupt>
     116:	00 00       	nop
     118:	93 c0       	rjmp	.+294    	; 0x240 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	91 c0       	rjmp	.+290    	; 0x240 <__bad_interrupt>
     11e:	00 00       	nop
     120:	8f c0       	rjmp	.+286    	; 0x240 <__bad_interrupt>
     122:	00 00       	nop
     124:	8d c0       	rjmp	.+282    	; 0x240 <__bad_interrupt>
     126:	00 00       	nop
     128:	8b c0       	rjmp	.+278    	; 0x240 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	89 c0       	rjmp	.+274    	; 0x240 <__bad_interrupt>
     12e:	00 00       	nop
     130:	87 c0       	rjmp	.+270    	; 0x240 <__bad_interrupt>
     132:	00 00       	nop
     134:	0c 94 e6 26 	jmp	0x4dcc	; 0x4dcc <__vector_77>
     138:	f4 c6       	rjmp	.+3560   	; 0xf22 <__vector_78>
     13a:	00 00       	nop
     13c:	2a c7       	rjmp	.+3668   	; 0xf92 <__vector_79>
     13e:	00 00       	nop
     140:	60 c7       	rjmp	.+3776   	; 0x1002 <__vector_80>
     142:	00 00       	nop
     144:	96 c7       	rjmp	.+3884   	; 0x1072 <__vector_81>
     146:	00 00       	nop
     148:	cc c7       	rjmp	.+3992   	; 0x10e2 <__vector_82>
     14a:	00 00       	nop
     14c:	0c 94 a9 08 	jmp	0x1152	; 0x1152 <__vector_83>
     150:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <__vector_84>
     154:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__vector_85>
     158:	0c 94 51 09 	jmp	0x12a2	; 0x12a2 <__vector_86>
     15c:	71 c0       	rjmp	.+226    	; 0x240 <__bad_interrupt>
     15e:	00 00       	nop
     160:	6f c0       	rjmp	.+222    	; 0x240 <__bad_interrupt>
     162:	00 00       	nop
     164:	6d c0       	rjmp	.+218    	; 0x240 <__bad_interrupt>
     166:	00 00       	nop
     168:	6b c0       	rjmp	.+214    	; 0x240 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	69 c0       	rjmp	.+210    	; 0x240 <__bad_interrupt>
     16e:	00 00       	nop
     170:	67 c0       	rjmp	.+206    	; 0x240 <__bad_interrupt>
     172:	00 00       	nop
     174:	65 c0       	rjmp	.+202    	; 0x240 <__bad_interrupt>
     176:	00 00       	nop
     178:	0c 94 71 28 	jmp	0x50e2	; 0x50e2 <__vector_94>
     17c:	0c 94 ef 28 	jmp	0x51de	; 0x51de <__vector_95>
     180:	0c 94 9b 28 	jmp	0x5136	; 0x5136 <__vector_96>
     184:	0c 94 19 29 	jmp	0x5232	; 0x5232 <__vector_97>
     188:	5b c0       	rjmp	.+182    	; 0x240 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	59 c0       	rjmp	.+178    	; 0x240 <__bad_interrupt>
     18e:	00 00       	nop
     190:	0c 94 37 29 	jmp	0x526e	; 0x526e <__vector_100>
     194:	55 c0       	rjmp	.+170    	; 0x240 <__bad_interrupt>
     196:	00 00       	nop
     198:	53 c0       	rjmp	.+166    	; 0x240 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	51 c0       	rjmp	.+162    	; 0x240 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	0c 94 62 28 	jmp	0x50c4	; 0x50c4 <__vector_104>
     1a4:	4d c0       	rjmp	.+154    	; 0x240 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4b c0       	rjmp	.+150    	; 0x240 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	49 c0       	rjmp	.+146    	; 0x240 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__vector_108>
     1b4:	0c 94 f1 0b 	jmp	0x17e2	; 0x17e2 <__vector_109>
     1b8:	0c 94 29 0c 	jmp	0x1852	; 0x1852 <__vector_110>
     1bc:	0c 94 61 0c 	jmp	0x18c2	; 0x18c2 <__vector_111>
     1c0:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <__vector_112>
     1c4:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__vector_113>
     1c8:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__vector_114>
     1cc:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__vector_115>
     1d0:	0c 94 79 0d 	jmp	0x1af2	; 0x1af2 <__vector_116>
     1d4:	0c 94 b1 0d 	jmp	0x1b62	; 0x1b62 <__vector_117>
     1d8:	33 c0       	rjmp	.+102    	; 0x240 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	0c 94 8a 29 	jmp	0x5314	; 0x5314 <__vector_119>
     1e0:	2f c0       	rjmp	.+94     	; 0x240 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2d c0       	rjmp	.+90     	; 0x240 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2b c0       	rjmp	.+86     	; 0x240 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	29 c0       	rjmp	.+82     	; 0x240 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	27 c0       	rjmp	.+78     	; 0x240 <__bad_interrupt>
	...

000001f4 <__ctors_end>:
     1f4:	11 24       	eor	r1, r1
     1f6:	1f be       	out	0x3f, r1	; 63
     1f8:	cf ef       	ldi	r28, 0xFF	; 255
     1fa:	cd bf       	out	0x3d, r28	; 61
     1fc:	df e3       	ldi	r29, 0x3F	; 63
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0c bf       	out	0x3c, r16	; 60
     204:	18 be       	out	0x38, r1	; 56
     206:	19 be       	out	0x39, r1	; 57
     208:	1a be       	out	0x3a, r1	; 58
     20a:	1b be       	out	0x3b, r1	; 59

0000020c <__do_copy_data>:
     20c:	10 e2       	ldi	r17, 0x20	; 32
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	e0 ee       	ldi	r30, 0xE0	; 224
     214:	ff e5       	ldi	r31, 0x5F	; 95
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a8 34       	cpi	r26, 0x48	; 72
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>
     226:	1b be       	out	0x3b, r1	; 59

00000228 <__do_clear_bss>:
     228:	24 e2       	ldi	r18, 0x24	; 36
     22a:	a8 e4       	ldi	r26, 0x48	; 72
     22c:	b0 e2       	ldi	r27, 0x20	; 32
     22e:	01 c0       	rjmp	.+2      	; 0x232 <.do_clear_bss_start>

00000230 <.do_clear_bss_loop>:
     230:	1d 92       	st	X+, r1

00000232 <.do_clear_bss_start>:
     232:	a6 32       	cpi	r26, 0x26	; 38
     234:	b2 07       	cpc	r27, r18
     236:	e1 f7       	brne	.-8      	; 0x230 <.do_clear_bss_loop>
     238:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <main>
     23c:	0c 94 ee 2f 	jmp	0x5fdc	; 0x5fdc <_exit>

00000240 <__bad_interrupt>:
     240:	df ce       	rjmp	.-578    	; 0x0 <__vectors>

00000242 <LCDDataLines>:
}
void LCDStringFlash(char *data)	
{ 
 char k;
 while (k=*data++) LCDSendData(k);
}
     242:	e4 e2       	ldi	r30, 0x24	; 36
     244:	f6 e0       	ldi	r31, 0x06	; 6
     246:	90 81       	ld	r25, Z
     248:	a8 2f       	mov	r26, r24
     24a:	a1 70       	andi	r26, 0x01	; 1
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	aa 0f       	add	r26, r26
     250:	bb 1f       	adc	r27, r27
     252:	aa 0f       	add	r26, r26
     254:	bb 1f       	adc	r27, r27
     256:	9b 7f       	andi	r25, 0xFB	; 251
     258:	a9 2b       	or	r26, r25
     25a:	a0 83       	st	Z, r26
     25c:	90 81       	ld	r25, Z
     25e:	81 fb       	bst	r24, 1
     260:	66 27       	eor	r22, r22
     262:	60 f9       	bld	r22, 0
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	66 0f       	add	r22, r22
     268:	77 1f       	adc	r23, r23
     26a:	62 95       	swap	r22
     26c:	72 95       	swap	r23
     26e:	70 7f       	andi	r23, 0xF0	; 240
     270:	76 27       	eor	r23, r22
     272:	60 7f       	andi	r22, 0xF0	; 240
     274:	76 27       	eor	r23, r22
     276:	9f 7d       	andi	r25, 0xDF	; 223
     278:	69 2b       	or	r22, r25
     27a:	60 83       	st	Z, r22
     27c:	90 81       	ld	r25, Z
     27e:	82 fb       	bst	r24, 2
     280:	44 27       	eor	r20, r20
     282:	40 f9       	bld	r20, 0
     284:	50 e0       	ldi	r21, 0x00	; 0
     286:	42 95       	swap	r20
     288:	52 95       	swap	r21
     28a:	50 7f       	andi	r21, 0xF0	; 240
     28c:	54 27       	eor	r21, r20
     28e:	40 7f       	andi	r20, 0xF0	; 240
     290:	54 27       	eor	r21, r20
     292:	9f 7e       	andi	r25, 0xEF	; 239
     294:	49 2b       	or	r20, r25
     296:	40 83       	st	Z, r20
     298:	e4 e4       	ldi	r30, 0x44	; 68
     29a:	f6 e0       	ldi	r31, 0x06	; 6
     29c:	90 81       	ld	r25, Z
     29e:	83 fb       	bst	r24, 3
     2a0:	22 27       	eor	r18, r18
     2a2:	20 f9       	bld	r18, 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	22 0f       	add	r18, r18
     2a8:	33 1f       	adc	r19, r19
     2aa:	22 95       	swap	r18
     2ac:	32 95       	swap	r19
     2ae:	30 7f       	andi	r19, 0xF0	; 240
     2b0:	32 27       	eor	r19, r18
     2b2:	20 7f       	andi	r18, 0xF0	; 240
     2b4:	32 27       	eor	r19, r18
     2b6:	89 2f       	mov	r24, r25
     2b8:	8f 7d       	andi	r24, 0xDF	; 223
     2ba:	28 2b       	or	r18, r24
     2bc:	20 83       	st	Z, r18
     2be:	08 95       	ret

000002c0 <LCDDirOut>:
     2c0:	e0 e2       	ldi	r30, 0x20	; 32
     2c2:	f6 e0       	ldi	r31, 0x06	; 6
     2c4:	80 81       	ld	r24, Z
     2c6:	84 60       	ori	r24, 0x04	; 4
     2c8:	80 83       	st	Z, r24
     2ca:	80 81       	ld	r24, Z
     2cc:	80 62       	ori	r24, 0x20	; 32
     2ce:	80 83       	st	Z, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	80 61       	ori	r24, 0x10	; 16
     2d4:	80 83       	st	Z, r24
     2d6:	e0 e4       	ldi	r30, 0x40	; 64
     2d8:	f6 e0       	ldi	r31, 0x06	; 6
     2da:	80 81       	ld	r24, Z
     2dc:	80 62       	ori	r24, 0x20	; 32
     2de:	80 83       	st	Z, r24
     2e0:	08 95       	ret

000002e2 <LCDDirIn>:
     2e2:	e0 e2       	ldi	r30, 0x20	; 32
     2e4:	f6 e0       	ldi	r31, 0x06	; 6
     2e6:	80 81       	ld	r24, Z
     2e8:	8b 7f       	andi	r24, 0xFB	; 251
     2ea:	80 83       	st	Z, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	8f 7d       	andi	r24, 0xDF	; 223
     2f0:	80 83       	st	Z, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	8f 7e       	andi	r24, 0xEF	; 239
     2f6:	80 83       	st	Z, r24
     2f8:	e0 e4       	ldi	r30, 0x40	; 64
     2fa:	f6 e0       	ldi	r31, 0x06	; 6
     2fc:	80 81       	ld	r24, Z
     2fe:	8f 7d       	andi	r24, 0xDF	; 223
     300:	80 83       	st	Z, r24
     302:	08 95       	ret

00000304 <LCDSendData>:
     304:	cf 93       	push	r28
     306:	c8 2f       	mov	r28, r24
     308:	8f e1       	ldi	r24, 0x1F	; 31
     30a:	93 e0       	ldi	r25, 0x03	; 3
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <LCDSendData+0x8>
     310:	00 c0       	rjmp	.+0      	; 0x312 <LCDSendData+0xe>
     312:	00 00       	nop
     314:	8c 2f       	mov	r24, r28
     316:	82 95       	swap	r24
     318:	8f 70       	andi	r24, 0x0F	; 15
     31a:	93 df       	rcall	.-218    	; 0x242 <LCDDataLines>
     31c:	e4 e2       	ldi	r30, 0x24	; 36
     31e:	f6 e0       	ldi	r31, 0x06	; 6
     320:	80 81       	ld	r24, Z
     322:	82 60       	ori	r24, 0x02	; 2
     324:	80 83       	st	Z, r24
     326:	80 81       	ld	r24, Z
     328:	88 60       	ori	r24, 0x08	; 8
     32a:	80 83       	st	Z, r24
     32c:	95 ed       	ldi	r25, 0xD5	; 213
     32e:	9a 95       	dec	r25
     330:	f1 f7       	brne	.-4      	; 0x32e <LCDSendData+0x2a>
     332:	00 00       	nop
     334:	80 81       	ld	r24, Z
     336:	87 7f       	andi	r24, 0xF7	; 247
     338:	80 83       	st	Z, r24
     33a:	85 ed       	ldi	r24, 0xD5	; 213
     33c:	8a 95       	dec	r24
     33e:	f1 f7       	brne	.-4      	; 0x33c <LCDSendData+0x38>
     340:	00 00       	nop
     342:	8c 2f       	mov	r24, r28
     344:	7e df       	rcall	.-260    	; 0x242 <LCDDataLines>
     346:	e4 e2       	ldi	r30, 0x24	; 36
     348:	f6 e0       	ldi	r31, 0x06	; 6
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	95 ed       	ldi	r25, 0xD5	; 213
     352:	9a 95       	dec	r25
     354:	f1 f7       	brne	.-4      	; 0x352 <LCDSendData+0x4e>
     356:	00 00       	nop
     358:	80 81       	ld	r24, Z
     35a:	87 7f       	andi	r24, 0xF7	; 247
     35c:	80 83       	st	Z, r24
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <LCDSendCommand>:
     362:	cf 93       	push	r28
     364:	c8 2f       	mov	r28, r24
     366:	8f ef       	ldi	r24, 0xFF	; 255
     368:	8c 0f       	add	r24, r28
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	38 f4       	brcc	.+14     	; 0x37c <LCDSendCommand+0x1a>
     36e:	8f e3       	ldi	r24, 0x3F	; 63
     370:	9c e9       	ldi	r25, 0x9C	; 156
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <LCDSendCommand+0x10>
     376:	00 c0       	rjmp	.+0      	; 0x378 <LCDSendCommand+0x16>
     378:	00 00       	nop
     37a:	06 c0       	rjmp	.+12     	; 0x388 <LCDSendCommand+0x26>
     37c:	8f e3       	ldi	r24, 0x3F	; 63
     37e:	9f e1       	ldi	r25, 0x1F	; 31
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <LCDSendCommand+0x1e>
     384:	00 c0       	rjmp	.+0      	; 0x386 <LCDSendCommand+0x24>
     386:	00 00       	nop
     388:	8c 2f       	mov	r24, r28
     38a:	82 95       	swap	r24
     38c:	8f 70       	andi	r24, 0x0F	; 15
     38e:	59 df       	rcall	.-334    	; 0x242 <LCDDataLines>
     390:	e4 e2       	ldi	r30, 0x24	; 36
     392:	f6 e0       	ldi	r31, 0x06	; 6
     394:	80 81       	ld	r24, Z
     396:	8d 7f       	andi	r24, 0xFD	; 253
     398:	80 83       	st	Z, r24
     39a:	80 81       	ld	r24, Z
     39c:	88 60       	ori	r24, 0x08	; 8
     39e:	80 83       	st	Z, r24
     3a0:	95 ed       	ldi	r25, 0xD5	; 213
     3a2:	9a 95       	dec	r25
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <LCDSendCommand+0x40>
     3a6:	00 00       	nop
     3a8:	80 81       	ld	r24, Z
     3aa:	87 7f       	andi	r24, 0xF7	; 247
     3ac:	80 83       	st	Z, r24
     3ae:	85 ed       	ldi	r24, 0xD5	; 213
     3b0:	8a 95       	dec	r24
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCDSendCommand+0x4e>
     3b4:	00 00       	nop
     3b6:	8c 2f       	mov	r24, r28
     3b8:	44 df       	rcall	.-376    	; 0x242 <LCDDataLines>
     3ba:	e4 e2       	ldi	r30, 0x24	; 36
     3bc:	f6 e0       	ldi	r31, 0x06	; 6
     3be:	80 81       	ld	r24, Z
     3c0:	88 60       	ori	r24, 0x08	; 8
     3c2:	80 83       	st	Z, r24
     3c4:	95 ed       	ldi	r25, 0xD5	; 213
     3c6:	9a 95       	dec	r25
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <LCDSendCommand+0x64>
     3ca:	00 00       	nop
     3cc:	80 81       	ld	r24, Z
     3ce:	87 7f       	andi	r24, 0xF7	; 247
     3d0:	80 83       	st	Z, r24
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <LCDInit>:
     3d6:	e4 e2       	ldi	r30, 0x24	; 36
     3d8:	f6 e0       	ldi	r31, 0x06	; 6
     3da:	80 81       	ld	r24, Z
     3dc:	87 7f       	andi	r24, 0xF7	; 247
     3de:	80 83       	st	Z, r24
     3e0:	80 df       	rcall	.-256    	; 0x2e2 <LCDDirIn>
     3e2:	2f ef       	ldi	r18, 0xFF	; 255
     3e4:	87 ee       	ldi	r24, 0xE7	; 231
     3e6:	93 e0       	ldi	r25, 0x03	; 3
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <LCDInit+0x12>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <LCDInit+0x1c>
     3f2:	00 00       	nop
     3f4:	65 df       	rcall	.-310    	; 0x2c0 <LCDDirOut>
     3f6:	83 e0       	ldi	r24, 0x03	; 3
     3f8:	24 df       	rcall	.-440    	; 0x242 <LCDDataLines>
     3fa:	e0 e2       	ldi	r30, 0x20	; 32
     3fc:	f6 e0       	ldi	r31, 0x06	; 6
     3fe:	80 81       	ld	r24, Z
     400:	82 60       	ori	r24, 0x02	; 2
     402:	80 83       	st	Z, r24
     404:	80 81       	ld	r24, Z
     406:	81 60       	ori	r24, 0x01	; 1
     408:	80 83       	st	Z, r24
     40a:	a4 e2       	ldi	r26, 0x24	; 36
     40c:	b6 e0       	ldi	r27, 0x06	; 6
     40e:	8c 91       	ld	r24, X
     410:	8d 7f       	andi	r24, 0xFD	; 253
     412:	8c 93       	st	X, r24
     414:	8c 91       	ld	r24, X
     416:	8e 7f       	andi	r24, 0xFE	; 254
     418:	8c 93       	st	X, r24
     41a:	80 81       	ld	r24, Z
     41c:	88 60       	ori	r24, 0x08	; 8
     41e:	80 83       	st	Z, r24
     420:	25 ed       	ldi	r18, 0xD5	; 213
     422:	2a 95       	dec	r18
     424:	f1 f7       	brne	.-4      	; 0x422 <LCDInit+0x4c>
     426:	00 00       	nop
     428:	e4 e2       	ldi	r30, 0x24	; 36
     42a:	f6 e0       	ldi	r31, 0x06	; 6
     42c:	80 81       	ld	r24, Z
     42e:	88 60       	ori	r24, 0x08	; 8
     430:	80 83       	st	Z, r24
     432:	85 ed       	ldi	r24, 0xD5	; 213
     434:	8a 95       	dec	r24
     436:	f1 f7       	brne	.-4      	; 0x434 <LCDInit+0x5e>
     438:	00 00       	nop
     43a:	80 81       	ld	r24, Z
     43c:	87 7f       	andi	r24, 0xF7	; 247
     43e:	80 83       	st	Z, r24
     440:	9f ef       	ldi	r25, 0xFF	; 255
     442:	23 ef       	ldi	r18, 0xF3	; 243
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	91 50       	subi	r25, 0x01	; 1
     448:	20 40       	sbci	r18, 0x00	; 0
     44a:	80 40       	sbci	r24, 0x00	; 0
     44c:	e1 f7       	brne	.-8      	; 0x446 <LCDInit+0x70>
     44e:	00 c0       	rjmp	.+0      	; 0x450 <LCDInit+0x7a>
     450:	00 00       	nop
     452:	80 81       	ld	r24, Z
     454:	88 60       	ori	r24, 0x08	; 8
     456:	80 83       	st	Z, r24
     458:	95 ed       	ldi	r25, 0xD5	; 213
     45a:	9a 95       	dec	r25
     45c:	f1 f7       	brne	.-4      	; 0x45a <LCDInit+0x84>
     45e:	00 00       	nop
     460:	80 81       	ld	r24, Z
     462:	87 7f       	andi	r24, 0xF7	; 247
     464:	80 83       	st	Z, r24
     466:	8f e1       	ldi	r24, 0x1F	; 31
     468:	93 e0       	ldi	r25, 0x03	; 3
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	f1 f7       	brne	.-4      	; 0x46a <LCDInit+0x94>
     46e:	00 c0       	rjmp	.+0      	; 0x470 <LCDInit+0x9a>
     470:	00 00       	nop
     472:	80 81       	ld	r24, Z
     474:	88 60       	ori	r24, 0x08	; 8
     476:	80 83       	st	Z, r24
     478:	95 ed       	ldi	r25, 0xD5	; 213
     47a:	9a 95       	dec	r25
     47c:	f1 f7       	brne	.-4      	; 0x47a <LCDInit+0xa4>
     47e:	00 00       	nop
     480:	80 81       	ld	r24, Z
     482:	87 7f       	andi	r24, 0xF7	; 247
     484:	80 83       	st	Z, r24
     486:	8f e1       	ldi	r24, 0x1F	; 31
     488:	93 e0       	ldi	r25, 0x03	; 3
     48a:	01 97       	sbiw	r24, 0x01	; 1
     48c:	f1 f7       	brne	.-4      	; 0x48a <LCDInit+0xb4>
     48e:	00 c0       	rjmp	.+0      	; 0x490 <LCDInit+0xba>
     490:	00 00       	nop
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	d6 de       	rcall	.-596    	; 0x242 <LCDDataLines>
     496:	95 ed       	ldi	r25, 0xD5	; 213
     498:	9a 95       	dec	r25
     49a:	f1 f7       	brne	.-4      	; 0x498 <LCDInit+0xc2>
     49c:	00 00       	nop
     49e:	e4 e2       	ldi	r30, 0x24	; 36
     4a0:	f6 e0       	ldi	r31, 0x06	; 6
     4a2:	80 81       	ld	r24, Z
     4a4:	88 60       	ori	r24, 0x08	; 8
     4a6:	80 83       	st	Z, r24
     4a8:	25 ed       	ldi	r18, 0xD5	; 213
     4aa:	2a 95       	dec	r18
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <LCDInit+0xd4>
     4ae:	00 00       	nop
     4b0:	80 81       	ld	r24, Z
     4b2:	87 7f       	andi	r24, 0xF7	; 247
     4b4:	80 83       	st	Z, r24
     4b6:	8f e1       	ldi	r24, 0x1F	; 31
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <LCDInit+0xe4>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <LCDInit+0xea>
     4c0:	00 00       	nop
     4c2:	88 e2       	ldi	r24, 0x28	; 40
     4c4:	4e df       	rcall	.-356    	; 0x362 <LCDSendCommand>
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	4c df       	rcall	.-360    	; 0x362 <LCDSendCommand>
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	4a df       	rcall	.-364    	; 0x362 <LCDSendCommand>
     4ce:	86 e0       	ldi	r24, 0x06	; 6
     4d0:	48 df       	rcall	.-368    	; 0x362 <LCDSendCommand>
     4d2:	8c e0       	ldi	r24, 0x0C	; 12
     4d4:	46 cf       	rjmp	.-372    	; 0x362 <LCDSendCommand>
     4d6:	08 95       	ret

000004d8 <LCDStringRam>:
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
     4de:	21 96       	adiw	r28, 0x01	; 1
     4e0:	fc 01       	movw	r30, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	88 23       	and	r24, r24
     4e6:	21 f0       	breq	.+8      	; 0x4f0 <LCDStringRam+0x18>
     4e8:	0d df       	rcall	.-486    	; 0x304 <LCDSendData>
     4ea:	89 91       	ld	r24, Y+
     4ec:	81 11       	cpse	r24, r1
     4ee:	fc cf       	rjmp	.-8      	; 0x4e8 <LCDStringRam+0x10>
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	08 95       	ret

000004f6 <LCDGotoXY>:
void LCDGotoXY(unsigned char x, unsigned char y)	//Cursor to X Y position
{
 unsigned char DDRAMAddr;	
 switch(y)
     4f6:	62 30       	cpi	r22, 0x02	; 2
     4f8:	31 f0       	breq	.+12     	; 0x506 <LCDGotoXY+0x10>
     4fa:	63 30       	cpi	r22, 0x03	; 3
     4fc:	31 f0       	breq	.+12     	; 0x50a <LCDGotoXY+0x14>
     4fe:	61 30       	cpi	r22, 0x01	; 1
     500:	29 f4       	brne	.+10     	; 0x50c <LCDGotoXY+0x16>
 {
  case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
  case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     502:	80 5c       	subi	r24, 0xC0	; 192
     504:	03 c0       	rjmp	.+6      	; 0x50c <LCDGotoXY+0x16>
  case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     506:	8c 5e       	subi	r24, 0xEC	; 236
     508:	01 c0       	rjmp	.+2      	; 0x50c <LCDGotoXY+0x16>
  case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     50a:	8c 5a       	subi	r24, 0xAC	; 172
  default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
 }	
 LCDSendCommand(1<<LCD_DDRAM | DDRAMAddr);	
     50c:	80 68       	ori	r24, 0x80	; 128
     50e:	29 cf       	rjmp	.-430    	; 0x362 <LCDSendCommand>
     510:	08 95       	ret

00000512 <menu_check_sw>:
    menu_index[2] = 0;
}

bool menu_check_sw(uint8_t SW,uint8_t *SW_Flag)
{
    if(SW && !(*SW_Flag))
     512:	88 23       	and	r24, r24
     514:	39 f0       	breq	.+14     	; 0x524 <menu_check_sw+0x12>
     516:	fb 01       	movw	r30, r22
     518:	80 81       	ld	r24, Z
     51a:	81 11       	cpse	r24, r1
     51c:	07 c0       	rjmp	.+14     	; 0x52c <menu_check_sw+0x1a>
    {
        *SW_Flag = true;
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	80 83       	st	Z, r24
        return 1;
     522:	08 95       	ret
    }
    else if(SW == 0)
        *SW_Flag = false;
     524:	fb 01       	movw	r30, r22
     526:	10 82       	st	Z, r1
    return 0;
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	08 95       	ret
     52c:	80 e0       	ldi	r24, 0x00	; 0
}
     52e:	08 95       	ret

00000530 <Menu_Display>:
	}
}

void Menu_Display(void)
{
    Disp_R(menu_index[0]);
     530:	e0 e0       	ldi	r30, 0x00	; 0
     532:	f7 e0       	ldi	r31, 0x07	; 7
     534:	94 81       	ldd	r25, Z+4	; 0x04
     536:	80 91 ab 20 	lds	r24, 0x20AB
     53a:	a0 91 00 20 	lds	r26, 0x2000
     53e:	b0 e0       	ldi	r27, 0x00	; 0
     540:	aa 0f       	add	r26, r26
     542:	bb 1f       	adc	r27, r27
     544:	a8 5f       	subi	r26, 0xF8	; 248
     546:	bf 4d       	sbci	r27, 0xDF	; 223
     548:	90 78       	andi	r25, 0x80	; 128
     54a:	2c 91       	ld	r18, X
     54c:	92 2b       	or	r25, r18
     54e:	98 23       	and	r25, r24
     550:	94 83       	std	Z+4, r25	; 0x04
    Disp_L(menu_index[1]);
     552:	e0 ee       	ldi	r30, 0xE0	; 224
     554:	f6 e0       	ldi	r31, 0x06	; 6
     556:	94 81       	ldd	r25, Z+4	; 0x04
     558:	a0 91 01 20 	lds	r26, 0x2001
     55c:	b0 e0       	ldi	r27, 0x00	; 0
     55e:	aa 0f       	add	r26, r26
     560:	bb 1f       	adc	r27, r27
     562:	a8 5f       	subi	r26, 0xF8	; 248
     564:	bf 4d       	sbci	r27, 0xDF	; 223
     566:	90 78       	andi	r25, 0x80	; 128
     568:	2c 91       	ld	r18, X
     56a:	92 2b       	or	r25, r18
     56c:	89 23       	and	r24, r25
     56e:	84 83       	std	Z+4, r24	; 0x04
     570:	08 95       	ret

00000572 <menu_table>:
}

void menu_table(void)
{

    switch(menu_index[1])
     572:	80 91 01 20 	lds	r24, 0x2001
     576:	8e 30       	cpi	r24, 0x0E	; 14
     578:	31 f4       	brne	.+12     	; 0x586 <menu_table+0x14>
			break;
			
		}
		break;
	case 0xE:
		switch(menu_index[0])
     57a:	80 91 00 20 	lds	r24, 0x2000
     57e:	8f 30       	cpi	r24, 0x0F	; 15
     580:	11 f4       	brne	.+4      	; 0x586 <menu_table+0x14>
		{
		case 0xF:
			wdt_reset_mcu();
     582:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <wdt_reset_mcu>
     586:	08 95       	ret

00000588 <Menu_Reset>:
uint8_t menu_index[3]={Menu_Clear,Menu_Clear,0};
uint8_t disp;
uint16_t menu_time = 0;

void Menu_Reset(void)
{
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
    uint8_t i=0;
    for (i=0;i<16;i++)
     594:	f1 2c       	mov	r15, r1
    {
        menu_index[1] = i;
     596:	01 e0       	ldi	r16, 0x01	; 1
     598:	10 e2       	ldi	r17, 0x20	; 32
        menu_index[0] = Menu_Default;
     59a:	c0 e0       	ldi	r28, 0x00	; 0
     59c:	d0 e2       	ldi	r29, 0x20	; 32
     59e:	0f 2e       	mov	r0, r31
     5a0:	f1 e1       	ldi	r31, 0x11	; 17
     5a2:	ef 2e       	mov	r14, r31
     5a4:	f0 2d       	mov	r31, r0
void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
    {
        menu_index[1] = i;
     5a6:	f8 01       	movw	r30, r16
     5a8:	f0 82       	st	Z, r15
        menu_index[0] = Menu_Default;
     5aa:	e8 82       	st	Y, r14
        menu_table();
     5ac:	e2 df       	rcall	.-60     	; 0x572 <menu_table>
uint16_t menu_time = 0;

void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
     5ae:	f3 94       	inc	r15
     5b0:	f0 e1       	ldi	r31, 0x10	; 16
     5b2:	ff 12       	cpse	r15, r31
     5b4:	f8 cf       	rjmp	.-16     	; 0x5a6 <Menu_Reset+0x1e>
    {
        menu_index[1] = i;
        menu_index[0] = Menu_Default;
        menu_table();
    }
    menu_index[0] = Menu_Clear;
     5b6:	80 e1       	ldi	r24, 0x10	; 16
     5b8:	80 93 00 20 	sts	0x2000, r24
    menu_index[1] = Menu_Clear;
     5bc:	80 93 01 20 	sts	0x2001, r24
    menu_index[2] = 0;
     5c0:	10 92 02 20 	sts	0x2002, r1
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <menu_check_status>:
        *SW_Flag = false;
    return 0;
}

void menu_check_status(void)
{
     5d2:	8f 92       	push	r8
     5d4:	9f 92       	push	r9
     5d6:	af 92       	push	r10
     5d8:	bf 92       	push	r11
     5da:	cf 92       	push	r12
     5dc:	df 92       	push	r13
     5de:	ef 92       	push	r14
     5e0:	ff 92       	push	r15
     5e2:	0f 93       	push	r16
     5e4:	1f 93       	push	r17
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
	switch(menu_index[2])
     5ea:	80 91 02 20 	lds	r24, 0x2002
     5ee:	81 30       	cpi	r24, 0x01	; 1
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <menu_check_status+0x22>
     5f2:	65 c0       	rjmp	.+202    	; 0x6be <menu_check_status+0xec>
     5f4:	20 f0       	brcs	.+8      	; 0x5fe <menu_check_status+0x2c>
     5f6:	82 30       	cpi	r24, 0x02	; 2
     5f8:	09 f4       	brne	.+2      	; 0x5fc <menu_check_status+0x2a>
     5fa:	c2 c0       	rjmp	.+388    	; 0x780 <menu_check_status+0x1ae>
     5fc:	df c0       	rjmp	.+446    	; 0x7bc <menu_check_status+0x1ea>
	{
		case 0://Wait for Index0
		Disp_L_PORT.OUT = (Disp_L_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     5fe:	c0 ee       	ldi	r28, 0xE0	; 224
     600:	d6 e0       	ldi	r29, 0x06	; 6
     602:	1c 81       	ldd	r17, Y+4	; 0x04
     604:	60 91 9f 20 	lds	r22, 0x209F
     608:	70 91 a0 20 	lds	r23, 0x20A0
     60c:	80 91 a1 20 	lds	r24, 0x20A1
     610:	90 91 a2 20 	lds	r25, 0x20A2
     614:	24 e6       	ldi	r18, 0x64	; 100
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>
     620:	20 fb       	bst	r18, 0
     622:	17 f9       	bld	r17, 7
     624:	1c 83       	std	Y+4, r17	; 0x04
		Disp_R_PORT.OUTCLR = Segment_DP_bm;
     626:	80 e8       	ldi	r24, 0x80	; 128
     628:	e0 e0       	ldi	r30, 0x00	; 0
     62a:	f7 e0       	ldi	r31, 0x07	; 7
     62c:	86 83       	std	Z+6, r24	; 0x06
		menu_index[1] = Menu_Num;
     62e:	98 85       	ldd	r25, Y+8	; 0x08
     630:	28 85       	ldd	r18, Y+8	; 0x08
     632:	88 85       	ldd	r24, Y+8	; 0x08
     634:	38 85       	ldd	r19, Y+8	; 0x08
     636:	30 fb       	bst	r19, 0
     638:	88 24       	eor	r8, r8
     63a:	80 f8       	bld	r8, 0
     63c:	91 2c       	mov	r9, r1
     63e:	88 0c       	add	r8, r8
     640:	99 1c       	adc	r9, r9
     642:	22 fb       	bst	r18, 2
     644:	22 27       	eor	r18, r18
     646:	20 f9       	bld	r18, 0
     648:	82 2a       	or	r8, r18
     64a:	93 fb       	bst	r25, 3
     64c:	aa 24       	eor	r10, r10
     64e:	a0 f8       	bld	r10, 0
     650:	b1 2c       	mov	r11, r1
     652:	aa 0c       	add	r10, r10
     654:	bb 1c       	adc	r11, r11
     656:	aa 0c       	add	r10, r10
     658:	bb 1c       	adc	r11, r11
     65a:	a8 28       	or	r10, r8
     65c:	81 fb       	bst	r24, 1
     65e:	cc 24       	eor	r12, r12
     660:	c0 f8       	bld	r12, 0
     662:	d1 2c       	mov	r13, r1
     664:	cc 0c       	add	r12, r12
     666:	dd 1c       	adc	r13, r13
     668:	cc 0c       	add	r12, r12
     66a:	dd 1c       	adc	r13, r13
     66c:	cc 0c       	add	r12, r12
     66e:	dd 1c       	adc	r13, r13
     670:	ca 28       	or	r12, r10
     672:	c0 92 01 20 	sts	0x2001, r12
		menu_index[0] = Menu_Clear;
     676:	80 e1       	ldi	r24, 0x10	; 16
     678:	80 93 00 20 	sts	0x2000, r24
		Menu_Display();
     67c:	59 df       	rcall	.-334    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     67e:	80 91 e8 06 	lds	r24, 0x06E8
     682:	6b e4       	ldi	r22, 0x4B	; 75
     684:	70 e2       	ldi	r23, 0x20	; 32
     686:	88 1f       	adc	r24, r24
     688:	88 27       	eor	r24, r24
     68a:	88 1f       	adc	r24, r24
     68c:	42 df       	rcall	.-380    	; 0x512 <menu_check_sw>
     68e:	88 23       	and	r24, r24
     690:	29 f0       	breq	.+10     	; 0x69c <menu_check_status+0xca>
		{
			menu_index[2]++;
     692:	e2 e0       	ldi	r30, 0x02	; 2
     694:	f0 e2       	ldi	r31, 0x20	; 32
     696:	80 81       	ld	r24, Z
     698:	8f 5f       	subi	r24, 0xFF	; 255
     69a:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     69c:	80 91 a8 06 	lds	r24, 0x06A8
     6a0:	6a e4       	ldi	r22, 0x4A	; 74
     6a2:	70 e2       	ldi	r23, 0x20	; 32
     6a4:	82 95       	swap	r24
     6a6:	81 70       	andi	r24, 0x01	; 1
     6a8:	34 df       	rcall	.-408    	; 0x512 <menu_check_sw>
     6aa:	88 23       	and	r24, r24
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <menu_check_status+0xde>
     6ae:	86 c0       	rjmp	.+268    	; 0x7bc <menu_check_status+0x1ea>
		{
			 menu_time=100;
     6b0:	84 e6       	ldi	r24, 0x64	; 100
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	80 93 48 20 	sts	0x2048, r24
     6b8:	90 93 49 20 	sts	0x2049, r25
     6bc:	7f c0       	rjmp	.+254    	; 0x7bc <menu_check_status+0x1ea>
		}
		break;
		case 1://Wait for Index1
		Disp_R_PORT.OUT = (Disp_R_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     6be:	0f 2e       	mov	r0, r31
     6c0:	c1 2c       	mov	r12, r1
     6c2:	f7 e0       	ldi	r31, 0x07	; 7
     6c4:	df 2e       	mov	r13, r31
     6c6:	f0 2d       	mov	r31, r0
     6c8:	f6 01       	movw	r30, r12
     6ca:	b4 80       	ldd	r11, Z+4	; 0x04
     6cc:	60 91 9f 20 	lds	r22, 0x209F
     6d0:	70 91 a0 20 	lds	r23, 0x20A0
     6d4:	80 91 a1 20 	lds	r24, 0x20A1
     6d8:	90 91 a2 20 	lds	r25, 0x20A2
     6dc:	24 e6       	ldi	r18, 0x64	; 100
     6de:	30 e0       	ldi	r19, 0x00	; 0
     6e0:	40 e0       	ldi	r20, 0x00	; 0
     6e2:	50 e0       	ldi	r21, 0x00	; 0
     6e4:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>
     6e8:	20 fb       	bst	r18, 0
     6ea:	b7 f8       	bld	r11, 7
     6ec:	f6 01       	movw	r30, r12
     6ee:	b4 82       	std	Z+4, r11	; 0x04
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     6f0:	e0 ee       	ldi	r30, 0xE0	; 224
     6f2:	f6 e0       	ldi	r31, 0x06	; 6
     6f4:	80 e8       	ldi	r24, 0x80	; 128
     6f6:	85 83       	std	Z+5, r24	; 0x05
		menu_index[0] = Menu_Num;
     6f8:	90 85       	ldd	r25, Z+8	; 0x08
     6fa:	20 85       	ldd	r18, Z+8	; 0x08
     6fc:	80 85       	ldd	r24, Z+8	; 0x08
     6fe:	30 85       	ldd	r19, Z+8	; 0x08
     700:	30 fb       	bst	r19, 0
     702:	ee 24       	eor	r14, r14
     704:	e0 f8       	bld	r14, 0
     706:	f1 2c       	mov	r15, r1
     708:	ee 0c       	add	r14, r14
     70a:	ff 1c       	adc	r15, r15
     70c:	22 fb       	bst	r18, 2
     70e:	22 27       	eor	r18, r18
     710:	20 f9       	bld	r18, 0
     712:	e2 2a       	or	r14, r18
     714:	93 fb       	bst	r25, 3
     716:	00 27       	eor	r16, r16
     718:	00 f9       	bld	r16, 0
     71a:	10 e0       	ldi	r17, 0x00	; 0
     71c:	00 0f       	add	r16, r16
     71e:	11 1f       	adc	r17, r17
     720:	00 0f       	add	r16, r16
     722:	11 1f       	adc	r17, r17
     724:	0e 29       	or	r16, r14
     726:	86 95       	lsr	r24
     728:	81 70       	andi	r24, 0x01	; 1
     72a:	c8 2f       	mov	r28, r24
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	df 2f       	mov	r29, r31
     730:	cc 0f       	add	r28, r28
     732:	dd 1f       	adc	r29, r29
     734:	cc 0f       	add	r28, r28
     736:	dd 1f       	adc	r29, r29
     738:	cc 0f       	add	r28, r28
     73a:	dd 1f       	adc	r29, r29
     73c:	c0 2b       	or	r28, r16
     73e:	c0 93 00 20 	sts	0x2000, r28
		Menu_Display();
     742:	f6 de       	rcall	.-532    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     744:	80 91 e8 06 	lds	r24, 0x06E8
     748:	6b e4       	ldi	r22, 0x4B	; 75
     74a:	70 e2       	ldi	r23, 0x20	; 32
     74c:	88 1f       	adc	r24, r24
     74e:	88 27       	eor	r24, r24
     750:	88 1f       	adc	r24, r24
     752:	df de       	rcall	.-578    	; 0x512 <menu_check_sw>
     754:	88 23       	and	r24, r24
     756:	29 f0       	breq	.+10     	; 0x762 <menu_check_status+0x190>
		{
			menu_index[2]++;
     758:	e2 e0       	ldi	r30, 0x02	; 2
     75a:	f0 e2       	ldi	r31, 0x20	; 32
     75c:	80 81       	ld	r24, Z
     75e:	8f 5f       	subi	r24, 0xFF	; 255
     760:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     762:	80 91 a8 06 	lds	r24, 0x06A8
     766:	6a e4       	ldi	r22, 0x4A	; 74
     768:	70 e2       	ldi	r23, 0x20	; 32
     76a:	82 95       	swap	r24
     76c:	81 70       	andi	r24, 0x01	; 1
     76e:	d1 de       	rcall	.-606    	; 0x512 <menu_check_sw>
     770:	88 23       	and	r24, r24
     772:	21 f1       	breq	.+72     	; 0x7bc <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     774:	e2 e0       	ldi	r30, 0x02	; 2
     776:	f0 e2       	ldi	r31, 0x20	; 32
     778:	80 81       	ld	r24, Z
     77a:	81 50       	subi	r24, 0x01	; 1
     77c:	80 83       	st	Z, r24
     77e:	1e c0       	rjmp	.+60     	; 0x7bc <menu_check_status+0x1ea>
		}
		break;
		case 2:
		Disp_R_PORT.OUTSET = Segment_DP_bm;
     780:	80 e8       	ldi	r24, 0x80	; 128
     782:	e0 e0       	ldi	r30, 0x00	; 0
     784:	f7 e0       	ldi	r31, 0x07	; 7
     786:	85 83       	std	Z+5, r24	; 0x05
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     788:	e0 ee       	ldi	r30, 0xE0	; 224
     78a:	f6 e0       	ldi	r31, 0x06	; 6
     78c:	85 83       	std	Z+5, r24	; 0x05
		menu_table();
     78e:	f1 de       	rcall	.-542    	; 0x572 <menu_table>
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     790:	80 91 a8 06 	lds	r24, 0x06A8
     794:	6a e4       	ldi	r22, 0x4A	; 74
     796:	70 e2       	ldi	r23, 0x20	; 32
     798:	82 95       	swap	r24
     79a:	81 70       	andi	r24, 0x01	; 1
     79c:	ba de       	rcall	.-652    	; 0x512 <menu_check_sw>
     79e:	88 23       	and	r24, r24
     7a0:	69 f0       	breq	.+26     	; 0x7bc <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     7a2:	e2 e0       	ldi	r30, 0x02	; 2
     7a4:	f0 e2       	ldi	r31, 0x20	; 32
     7a6:	80 81       	ld	r24, Z
     7a8:	81 50       	subi	r24, 0x01	; 1
     7aa:	80 83       	st	Z, r24
			menu_index[0] = Menu_Default;
     7ac:	c0 e0       	ldi	r28, 0x00	; 0
     7ae:	d0 e2       	ldi	r29, 0x20	; 32
     7b0:	81 e1       	ldi	r24, 0x11	; 17
     7b2:	88 83       	st	Y, r24
			menu_table();
     7b4:	de de       	rcall	.-580    	; 0x572 <menu_table>
			menu_index[0] = Menu_Clear;
     7b6:	80 e1       	ldi	r24, 0x10	; 16
     7b8:	88 83       	st	Y, r24
			Menu_Display();
     7ba:	ba de       	rcall	.-652    	; 0x530 <Menu_Display>
		}

		break;
	}
}
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	ff 90       	pop	r15
     7c6:	ef 90       	pop	r14
     7c8:	df 90       	pop	r13
     7ca:	cf 90       	pop	r12
     7cc:	bf 90       	pop	r11
     7ce:	af 90       	pop	r10
     7d0:	9f 90       	pop	r9
     7d2:	8f 90       	pop	r8
     7d4:	08 95       	ret

000007d6 <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7d6:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7d8:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     7da:	fc 01       	movw	r30, r24
     7dc:	e0 59       	subi	r30, 0x90	; 144
     7de:	ff 4f       	sbci	r31, 0xFF	; 255
     7e0:	60 95       	com	r22
     7e2:	80 81       	ld	r24, Z
     7e4:	68 23       	and	r22, r24
     7e6:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7e8:	2f bf       	out	0x3f, r18	; 63
     7ea:	08 95       	ret

000007ec <sysclk_disable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7ec:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7ee:	f8 94       	cli

void sysclk_disable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) |= id;
     7f0:	fc 01       	movw	r30, r24
     7f2:	e0 59       	subi	r30, 0x90	; 144
     7f4:	ff 4f       	sbci	r31, 0xFF	; 255
     7f6:	80 81       	ld	r24, Z
     7f8:	68 2b       	or	r22, r24
     7fa:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7fc:	2f bf       	out	0x3f, r18	; 63
     7fe:	08 95       	ret

00000800 <adc_enable_clock>:
	conf->ctrlb = adc->CTRLB;

	adc_disable_clock(adc);

	cpu_irq_restore(flags);
}
     800:	81 15       	cp	r24, r1
     802:	22 e0       	ldi	r18, 0x02	; 2
     804:	92 07       	cpc	r25, r18
     806:	69 f4       	brne	.+26     	; 0x822 <adc_enable_clock+0x22>
     808:	80 91 4d 20 	lds	r24, 0x204D
     80c:	91 e0       	ldi	r25, 0x01	; 1
     80e:	98 0f       	add	r25, r24
     810:	90 93 4d 20 	sts	0x204D, r25
     814:	81 11       	cpse	r24, r1
     816:	14 c0       	rjmp	.+40     	; 0x840 <adc_enable_clock+0x40>
     818:	62 e0       	ldi	r22, 0x02	; 2
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	db cf       	rjmp	.-74     	; 0x7d6 <sysclk_enable_module>
     820:	08 95       	ret
     822:	80 34       	cpi	r24, 0x40	; 64
     824:	92 40       	sbci	r25, 0x02	; 2
     826:	61 f4       	brne	.+24     	; 0x840 <adc_enable_clock+0x40>
     828:	80 91 4c 20 	lds	r24, 0x204C
     82c:	91 e0       	ldi	r25, 0x01	; 1
     82e:	98 0f       	add	r25, r24
     830:	90 93 4c 20 	sts	0x204C, r25
     834:	81 11       	cpse	r24, r1
     836:	04 c0       	rjmp	.+8      	; 0x840 <adc_enable_clock+0x40>
     838:	62 e0       	ldi	r22, 0x02	; 2
     83a:	82 e0       	ldi	r24, 0x02	; 2
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	cb cf       	rjmp	.-106    	; 0x7d6 <sysclk_enable_module>
     840:	08 95       	ret

00000842 <adc_disable_clock>:
     842:	81 15       	cp	r24, r1
     844:	22 e0       	ldi	r18, 0x02	; 2
     846:	92 07       	cpc	r25, r18
     848:	61 f4       	brne	.+24     	; 0x862 <adc_disable_clock+0x20>
     84a:	80 91 4d 20 	lds	r24, 0x204D
     84e:	81 50       	subi	r24, 0x01	; 1
     850:	80 93 4d 20 	sts	0x204D, r24
     854:	81 11       	cpse	r24, r1
     856:	13 c0       	rjmp	.+38     	; 0x87e <adc_disable_clock+0x3c>
     858:	62 e0       	ldi	r22, 0x02	; 2
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	c6 cf       	rjmp	.-116    	; 0x7ec <sysclk_disable_module>
     860:	08 95       	ret
     862:	80 34       	cpi	r24, 0x40	; 64
     864:	92 40       	sbci	r25, 0x02	; 2
     866:	59 f4       	brne	.+22     	; 0x87e <adc_disable_clock+0x3c>
     868:	80 91 4c 20 	lds	r24, 0x204C
     86c:	81 50       	subi	r24, 0x01	; 1
     86e:	80 93 4c 20 	sts	0x204C, r24
     872:	81 11       	cpse	r24, r1
     874:	04 c0       	rjmp	.+8      	; 0x87e <adc_disable_clock+0x3c>
     876:	62 e0       	ldi	r22, 0x02	; 2
     878:	82 e0       	ldi	r24, 0x02	; 2
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	b7 cf       	rjmp	.-146    	; 0x7ec <sysclk_disable_module>
     87e:	08 95       	ret

00000880 <adc_enable>:
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	ec 01       	movw	r28, r24
     888:	1f b7       	in	r17, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	b9 df       	rcall	.-142    	; 0x800 <adc_enable_clock>
     88e:	88 81       	ld	r24, Y
     890:	81 60       	ori	r24, 0x01	; 1
     892:	88 83       	st	Y, r24
     894:	1f bf       	out	0x3f, r17	; 63
     896:	8f b7       	in	r24, 0x3f	; 63
     898:	f8 94       	cli
     89a:	ed ea       	ldi	r30, 0xAD	; 173
     89c:	f0 e2       	ldi	r31, 0x20	; 32
     89e:	90 81       	ld	r25, Z
     8a0:	9f 5f       	subi	r25, 0xFF	; 255
     8a2:	90 83       	st	Z, r25
     8a4:	8f bf       	out	0x3f, r24	; 63
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	08 95       	ret

000008ae <adc_write_configuration>:
     8ae:	df 92       	push	r13
     8b0:	ef 92       	push	r14
     8b2:	ff 92       	push	r15
     8b4:	0f 93       	push	r16
     8b6:	1f 93       	push	r17
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	ec 01       	movw	r28, r24
     8be:	8b 01       	movw	r16, r22
     8c0:	c1 15       	cp	r28, r1
     8c2:	22 e0       	ldi	r18, 0x02	; 2
     8c4:	d2 07       	cpc	r29, r18
     8c6:	71 f4       	brne	.+28     	; 0x8e4 <adc_write_configuration+0x36>
     8c8:	61 e2       	ldi	r22, 0x21	; 33
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	82 e0       	ldi	r24, 0x02	; 2
     8ce:	a7 d0       	rcall	.+334    	; 0xa1e <nvm_read_byte>
     8d0:	e8 2e       	mov	r14, r24
     8d2:	f1 2c       	mov	r15, r1
     8d4:	60 e2       	ldi	r22, 0x20	; 32
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	82 e0       	ldi	r24, 0x02	; 2
     8da:	a1 d0       	rcall	.+322    	; 0xa1e <nvm_read_byte>
     8dc:	fe 2c       	mov	r15, r14
     8de:	ee 24       	eor	r14, r14
     8e0:	e8 2a       	or	r14, r24
     8e2:	10 c0       	rjmp	.+32     	; 0x904 <adc_write_configuration+0x56>
     8e4:	80 34       	cpi	r24, 0x40	; 64
     8e6:	92 40       	sbci	r25, 0x02	; 2
     8e8:	59 f5       	brne	.+86     	; 0x940 <adc_write_configuration+0x92>
     8ea:	65 e2       	ldi	r22, 0x25	; 37
     8ec:	70 e0       	ldi	r23, 0x00	; 0
     8ee:	82 e0       	ldi	r24, 0x02	; 2
     8f0:	96 d0       	rcall	.+300    	; 0xa1e <nvm_read_byte>
     8f2:	e8 2e       	mov	r14, r24
     8f4:	f1 2c       	mov	r15, r1
     8f6:	64 e2       	ldi	r22, 0x24	; 36
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	82 e0       	ldi	r24, 0x02	; 2
     8fc:	90 d0       	rcall	.+288    	; 0xa1e <nvm_read_byte>
     8fe:	fe 2c       	mov	r15, r14
     900:	ee 24       	eor	r14, r14
     902:	e8 2a       	or	r14, r24
     904:	df b6       	in	r13, 0x3f	; 63
     906:	f8 94       	cli
     908:	ce 01       	movw	r24, r28
     90a:	7a df       	rcall	.-268    	; 0x800 <adc_enable_clock>
     90c:	28 81       	ld	r18, Y
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	88 83       	st	Y, r24
     912:	ec 86       	std	Y+12, r14	; 0x0c
     914:	fd 86       	std	Y+13, r15	; 0x0d
     916:	f8 01       	movw	r30, r16
     918:	85 81       	ldd	r24, Z+5	; 0x05
     91a:	96 81       	ldd	r25, Z+6	; 0x06
     91c:	88 8f       	std	Y+24, r24	; 0x18
     91e:	99 8f       	std	Y+25, r25	; 0x19
     920:	82 81       	ldd	r24, Z+2	; 0x02
     922:	8a 83       	std	Y+2, r24	; 0x02
     924:	84 81       	ldd	r24, Z+4	; 0x04
     926:	8c 83       	std	Y+4, r24	; 0x04
     928:	83 81       	ldd	r24, Z+3	; 0x03
     92a:	8b 83       	std	Y+3, r24	; 0x03
     92c:	81 81       	ldd	r24, Z+1	; 0x01
     92e:	89 83       	std	Y+1, r24	; 0x01
     930:	82 2f       	mov	r24, r18
     932:	81 70       	andi	r24, 0x01	; 1
     934:	90 81       	ld	r25, Z
     936:	89 2b       	or	r24, r25
     938:	88 83       	st	Y, r24
     93a:	ce 01       	movw	r24, r28
     93c:	82 df       	rcall	.-252    	; 0x842 <adc_disable_clock>
     93e:	df be       	out	0x3f, r13	; 63
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	ff 90       	pop	r15
     94a:	ef 90       	pop	r14
     94c:	df 90       	pop	r13
     94e:	08 95       	ret

00000950 <adcch_write_configuration>:
 * is called if callbacks are enabled and interrupts are enabled in the
 * channel configuration.
 */
void adcch_write_configuration(ADC_t *adc, uint8_t ch_mask,
		const struct adc_channel_config *ch_conf)
{
     950:	df 92       	push	r13
     952:	ef 92       	push	r14
     954:	ff 92       	push	r15
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	7c 01       	movw	r14, r24
     960:	8a 01       	movw	r16, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     962:	86 2f       	mov	r24, r22
     964:	83 70       	andi	r24, 0x03	; 3
     966:	21 f4       	brne	.+8      	; 0x970 <adcch_write_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     968:	66 95       	lsr	r22
     96a:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	01 c0       	rjmp	.+2      	; 0x972 <adcch_write_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     970:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     972:	60 ff       	sbrs	r22, 0
		index++;
     974:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     976:	e7 01       	movw	r28, r14
     978:	a0 96       	adiw	r28, 0x20	; 32
     97a:	98 e0       	ldi	r25, 0x08	; 8
     97c:	89 9f       	mul	r24, r25
     97e:	c0 0d       	add	r28, r0
     980:	d1 1d       	adc	r29, r1
     982:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     984:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     986:	f8 94       	cli
			return;
		}
	}
#endif /* CONFIG_ADC_CALLBACK_ENABLE */

	adc_enable_clock(adc);
     988:	c7 01       	movw	r24, r14
     98a:	3a df       	rcall	.-396    	; 0x800 <adc_enable_clock>
	adc_ch->CTRL = ch_conf->ctrl;
     98c:	f8 01       	movw	r30, r16
     98e:	80 81       	ld	r24, Z
     990:	88 83       	st	Y, r24
	adc_ch->INTCTRL = ch_conf->intctrl;
     992:	82 81       	ldd	r24, Z+2	; 0x02
     994:	8a 83       	std	Y+2, r24	; 0x02
	adc_ch->MUXCTRL = ch_conf->muxctrl;
     996:	81 81       	ldd	r24, Z+1	; 0x01
     998:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		adc_ch->SCAN = ch_conf->scan;
	}
#endif
	adc_disable_clock(adc);
     99a:	c7 01       	movw	r24, r14
     99c:	52 df       	rcall	.-348    	; 0x842 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     99e:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	ff 90       	pop	r15
     9aa:	ef 90       	pop	r14
     9ac:	df 90       	pop	r13
     9ae:	08 95       	ret

000009b0 <adcch_read_configuration>:
 * can be given in mask)
 * \param ch_conf Pointer to ADC channel configuration.
 */
void adcch_read_configuration(ADC_t *adc, uint8_t ch_mask,
		struct adc_channel_config *ch_conf)
{
     9b0:	df 92       	push	r13
     9b2:	ef 92       	push	r14
     9b4:	ff 92       	push	r15
     9b6:	0f 93       	push	r16
     9b8:	1f 93       	push	r17
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	7c 01       	movw	r14, r24
     9c0:	ea 01       	movw	r28, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     9c2:	86 2f       	mov	r24, r22
     9c4:	83 70       	andi	r24, 0x03	; 3
     9c6:	21 f4       	brne	.+8      	; 0x9d0 <adcch_read_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     9c8:	66 95       	lsr	r22
     9ca:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     9cc:	82 e0       	ldi	r24, 0x02	; 2
     9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <adcch_read_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     9d0:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     9d2:	60 ff       	sbrs	r22, 0
		index++;
     9d4:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     9d6:	87 01       	movw	r16, r14
     9d8:	00 5e       	subi	r16, 0xE0	; 224
     9da:	1f 4f       	sbci	r17, 0xFF	; 255
     9dc:	98 e0       	ldi	r25, 0x08	; 8
     9de:	89 9f       	mul	r24, r25
     9e0:	00 0d       	add	r16, r0
     9e2:	11 1d       	adc	r17, r1
     9e4:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     9e6:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     9e8:	f8 94       	cli

	adc_ch = adc_get_channel(adc, ch_mask);

	flags = cpu_irq_save();

	adc_enable_clock(adc);
     9ea:	c7 01       	movw	r24, r14
     9ec:	09 df       	rcall	.-494    	; 0x800 <adc_enable_clock>
	ch_conf->ctrl = adc_ch->CTRL;
     9ee:	f8 01       	movw	r30, r16
     9f0:	80 81       	ld	r24, Z
     9f2:	88 83       	st	Y, r24
	ch_conf->intctrl = adc_ch->INTCTRL;
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	8a 83       	std	Y+2, r24	; 0x02
	ch_conf->muxctrl = adc_ch->MUXCTRL;
     9f8:	81 81       	ldd	r24, Z+1	; 0x01
     9fa:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		ch_conf->scan = adc_ch->SCAN;
	}
#endif
	adc_disable_clock(adc);
     9fc:	c7 01       	movw	r24, r14
     9fe:	21 df       	rcall	.-446    	; 0x842 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     a00:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	1f 91       	pop	r17
     a08:	0f 91       	pop	r16
     a0a:	ff 90       	pop	r15
     a0c:	ef 90       	pop	r14
     a0e:	df 90       	pop	r13
     a10:	08 95       	ret

00000a12 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
     a12:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
     a14:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
     a16:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
     a18:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
     a1a:	60 83       	st	Z, r22
	ret                             // Return to caller
     a1c:	08 95       	ret

00000a1e <nvm_read_byte>:
#endif

#ifndef __DOXYGEN__
	PUBLIC_FUNCTION(nvm_read_byte)
#if defined(__GNUC__)
	lds r20, NVM_CMD          ; Store NVM command register
     a1e:	40 91 ca 01 	lds	r20, 0x01CA
	mov ZL, r22               ; Load byte index into low byte of Z.
     a22:	e6 2f       	mov	r30, r22
	mov ZH, r23               ; Load high byte into Z.
     a24:	f7 2f       	mov	r31, r23
	sts NVM_CMD, r24          ; Load prepared command into NVM Command register.
     a26:	80 93 ca 01 	sts	0x01CA, r24
	lpm r24, Z                ; Perform an LPM to read out byte
     a2a:	84 91       	lpm	r24, Z
	sts NVM_CMD, r20          ; Restore NVM command register
     a2c:	40 93 ca 01 	sts	0x01CA, r20
	sts NVM_CMD, r16          ; Load prepared command into NVM Command register.
	lpm r16, Z                ; Perform an LPM to read out byte
	sts NVM_CMD, r20          ; Restore NVM command register
#endif

	ret
     a30:	08 95       	ret

00000a32 <spi_xmega_set_baud_div>:
 * \return Status of operation.
 *   \retval >=0  Success.
 *   \retval  <0  Error.
 */
int8_t spi_xmega_set_baud_div(SPI_t *spi, uint32_t baudrate, uint32_t clkper_hz)
{
     a32:	cf 92       	push	r12
     a34:	df 92       	push	r13
     a36:	ef 92       	push	r14
     a38:	ff 92       	push	r15
     a3a:	0f 93       	push	r16
     a3c:	1f 93       	push	r17
     a3e:	cf 93       	push	r28
     a40:	df 93       	push	r29
     a42:	ec 01       	movw	r28, r24
     a44:	6a 01       	movw	r12, r20
     a46:	7b 01       	movw	r14, r22

	/*
	 * Get wanted divisor rounded up so we don't get speed higher than
	 * requested baudrate.
	 */
	divisor = (clkper_hz + baudrate - 1) / baudrate;
     a48:	db 01       	movw	r26, r22
     a4a:	ca 01       	movw	r24, r20
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	a1 09       	sbc	r26, r1
     a50:	b1 09       	sbc	r27, r1
     a52:	bc 01       	movw	r22, r24
     a54:	cd 01       	movw	r24, r26
     a56:	60 0f       	add	r22, r16
     a58:	71 1f       	adc	r23, r17
     a5a:	82 1f       	adc	r24, r18
     a5c:	93 1f       	adc	r25, r19
     a5e:	a7 01       	movw	r20, r14
     a60:	96 01       	movw	r18, r12
     a62:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>

	if (divisor > 128) {
     a66:	21 38       	cpi	r18, 0x81	; 129
     a68:	31 05       	cpc	r19, r1
     a6a:	41 05       	cpc	r20, r1
     a6c:	51 05       	cpc	r21, r1
     a6e:	f8 f4       	brcc	.+62     	; 0xaae <spi_xmega_set_baud_div+0x7c>

	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
     a70:	21 34       	cpi	r18, 0x41	; 65
     a72:	60 f4       	brcc	.+24     	; 0xa8c <spi_xmega_set_baud_div+0x5a>
		ctrl = SPI_PRESCALER_DIV128_gc;
	}
	else if (divisor_8bit > 32) {
     a74:	21 32       	cpi	r18, 0x21	; 33
     a76:	60 f4       	brcc	.+24     	; 0xa90 <spi_xmega_set_baud_div+0x5e>
		ctrl = SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 16) {
     a78:	21 31       	cpi	r18, 0x11	; 17
     a7a:	60 f4       	brcc	.+24     	; 0xa94 <spi_xmega_set_baud_div+0x62>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 8) {
     a7c:	29 30       	cpi	r18, 0x09	; 9
     a7e:	60 f4       	brcc	.+24     	; 0xa98 <spi_xmega_set_baud_div+0x66>
		ctrl = SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 4) {
     a80:	25 30       	cpi	r18, 0x05	; 5
     a82:	60 f4       	brcc	.+24     	; 0xa9c <spi_xmega_set_baud_div+0x6a>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 2) {
     a84:	23 30       	cpi	r18, 0x03	; 3
     a86:	60 f0       	brcs	.+24     	; 0xaa0 <spi_xmega_set_baud_div+0x6e>
		ctrl = SPI_PRESCALER_DIV4_gc;
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0b c0       	rjmp	.+22     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
		ctrl = SPI_PRESCALER_DIV128_gc;
     a8c:	93 e0       	ldi	r25, 0x03	; 3
     a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 32) {
		ctrl = SPI_PRESCALER_DIV64_gc;
     a90:	92 e0       	ldi	r25, 0x02	; 2
     a92:	07 c0       	rjmp	.+14     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 16) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
     a94:	92 e8       	ldi	r25, 0x82	; 130
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 8) {
		ctrl = SPI_PRESCALER_DIV16_gc;
     a98:	91 e0       	ldi	r25, 0x01	; 1
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 4) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
     a9c:	91 e8       	ldi	r25, 0x81	; 129
     a9e:	01 c0       	rjmp	.+2      	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 2) {
		ctrl = SPI_PRESCALER_DIV4_gc;
	}
	else {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV4_gc;
     aa0:	90 e8       	ldi	r25, 0x80	; 128
	}

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;
     aa2:	88 81       	ld	r24, Y
     aa4:	8c 77       	andi	r24, 0x7C	; 124
     aa6:	89 2b       	or	r24, r25
     aa8:	88 83       	st	Y, r24

	return 1;
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	01 c0       	rjmp	.+2      	; 0xab0 <spi_xmega_set_baud_div+0x7e>
	if (divisor > 128) {
		/*
		 * Highest possible divisor is 128 so fail since we can't get
		 * low enough baudrate.
		 */
		return -1;
     aae:	8f ef       	ldi	r24, 0xFF	; 255

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;

	return 1;
}
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	ef 90       	pop	r14
     abc:	df 90       	pop	r13
     abe:	cf 90       	pop	r12
     ac0:	08 95       	ret

00000ac2 <__vector_14>:
 *
 * This function will handle interrupt on Timer Counter CO overflow and
 * call the callback function.
 */
ISR(TCC0_OVF_vect)
{
     ac2:	1f 92       	push	r1
     ac4:	0f 92       	push	r0
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	0f 92       	push	r0
     aca:	11 24       	eor	r1, r1
     acc:	08 b6       	in	r0, 0x38	; 56
     ace:	0f 92       	push	r0
     ad0:	18 be       	out	0x38, r1	; 56
     ad2:	09 b6       	in	r0, 0x39	; 57
     ad4:	0f 92       	push	r0
     ad6:	19 be       	out	0x39, r1	; 57
     ad8:	0b b6       	in	r0, 0x3b	; 59
     ada:	0f 92       	push	r0
     adc:	1b be       	out	0x3b, r1	; 59
     ade:	2f 93       	push	r18
     ae0:	3f 93       	push	r19
     ae2:	4f 93       	push	r20
     ae4:	5f 93       	push	r21
     ae6:	6f 93       	push	r22
     ae8:	7f 93       	push	r23
     aea:	8f 93       	push	r24
     aec:	9f 93       	push	r25
     aee:	af 93       	push	r26
     af0:	bf 93       	push	r27
     af2:	ef 93       	push	r30
     af4:	ff 93       	push	r31
	if (tc_tcc0_ovf_callback) {
     af6:	e0 91 9a 20 	lds	r30, 0x209A
     afa:	f0 91 9b 20 	lds	r31, 0x209B
     afe:	30 97       	sbiw	r30, 0x00	; 0
     b00:	09 f0       	breq	.+2      	; 0xb04 <__vector_14+0x42>
		tc_tcc0_ovf_callback();
     b02:	19 95       	eicall
	}
}
     b04:	ff 91       	pop	r31
     b06:	ef 91       	pop	r30
     b08:	bf 91       	pop	r27
     b0a:	af 91       	pop	r26
     b0c:	9f 91       	pop	r25
     b0e:	8f 91       	pop	r24
     b10:	7f 91       	pop	r23
     b12:	6f 91       	pop	r22
     b14:	5f 91       	pop	r21
     b16:	4f 91       	pop	r20
     b18:	3f 91       	pop	r19
     b1a:	2f 91       	pop	r18
     b1c:	0f 90       	pop	r0
     b1e:	0b be       	out	0x3b, r0	; 59
     b20:	0f 90       	pop	r0
     b22:	09 be       	out	0x39, r0	; 57
     b24:	0f 90       	pop	r0
     b26:	08 be       	out	0x38, r0	; 56
     b28:	0f 90       	pop	r0
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	0f 90       	pop	r0
     b2e:	1f 90       	pop	r1
     b30:	18 95       	reti

00000b32 <__vector_15>:
 *
 * This function will handle interrupt on Timer Counter CO error and
 * call the callback function.
 */
ISR(TCC0_ERR_vect)
{
     b32:	1f 92       	push	r1
     b34:	0f 92       	push	r0
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	0f 92       	push	r0
     b3a:	11 24       	eor	r1, r1
     b3c:	08 b6       	in	r0, 0x38	; 56
     b3e:	0f 92       	push	r0
     b40:	18 be       	out	0x38, r1	; 56
     b42:	09 b6       	in	r0, 0x39	; 57
     b44:	0f 92       	push	r0
     b46:	19 be       	out	0x39, r1	; 57
     b48:	0b b6       	in	r0, 0x3b	; 59
     b4a:	0f 92       	push	r0
     b4c:	1b be       	out	0x3b, r1	; 59
     b4e:	2f 93       	push	r18
     b50:	3f 93       	push	r19
     b52:	4f 93       	push	r20
     b54:	5f 93       	push	r21
     b56:	6f 93       	push	r22
     b58:	7f 93       	push	r23
     b5a:	8f 93       	push	r24
     b5c:	9f 93       	push	r25
     b5e:	af 93       	push	r26
     b60:	bf 93       	push	r27
     b62:	ef 93       	push	r30
     b64:	ff 93       	push	r31
	if (tc_tcc0_err_callback) {
     b66:	e0 91 98 20 	lds	r30, 0x2098
     b6a:	f0 91 99 20 	lds	r31, 0x2099
     b6e:	30 97       	sbiw	r30, 0x00	; 0
     b70:	09 f0       	breq	.+2      	; 0xb74 <__vector_15+0x42>
		tc_tcc0_err_callback();
     b72:	19 95       	eicall
	}
}
     b74:	ff 91       	pop	r31
     b76:	ef 91       	pop	r30
     b78:	bf 91       	pop	r27
     b7a:	af 91       	pop	r26
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	7f 91       	pop	r23
     b82:	6f 91       	pop	r22
     b84:	5f 91       	pop	r21
     b86:	4f 91       	pop	r20
     b88:	3f 91       	pop	r19
     b8a:	2f 91       	pop	r18
     b8c:	0f 90       	pop	r0
     b8e:	0b be       	out	0x3b, r0	; 59
     b90:	0f 90       	pop	r0
     b92:	09 be       	out	0x39, r0	; 57
     b94:	0f 90       	pop	r0
     b96:	08 be       	out	0x38, r0	; 56
     b98:	0f 90       	pop	r0
     b9a:	0f be       	out	0x3f, r0	; 63
     b9c:	0f 90       	pop	r0
     b9e:	1f 90       	pop	r1
     ba0:	18 95       	reti

00000ba2 <__vector_16>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC0_CCA_vect)
{
     ba2:	1f 92       	push	r1
     ba4:	0f 92       	push	r0
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	0f 92       	push	r0
     baa:	11 24       	eor	r1, r1
     bac:	08 b6       	in	r0, 0x38	; 56
     bae:	0f 92       	push	r0
     bb0:	18 be       	out	0x38, r1	; 56
     bb2:	09 b6       	in	r0, 0x39	; 57
     bb4:	0f 92       	push	r0
     bb6:	19 be       	out	0x39, r1	; 57
     bb8:	0b b6       	in	r0, 0x3b	; 59
     bba:	0f 92       	push	r0
     bbc:	1b be       	out	0x3b, r1	; 59
     bbe:	2f 93       	push	r18
     bc0:	3f 93       	push	r19
     bc2:	4f 93       	push	r20
     bc4:	5f 93       	push	r21
     bc6:	6f 93       	push	r22
     bc8:	7f 93       	push	r23
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	af 93       	push	r26
     bd0:	bf 93       	push	r27
     bd2:	ef 93       	push	r30
     bd4:	ff 93       	push	r31
	if (tc_tcc0_cca_callback) {
     bd6:	e0 91 96 20 	lds	r30, 0x2096
     bda:	f0 91 97 20 	lds	r31, 0x2097
     bde:	30 97       	sbiw	r30, 0x00	; 0
     be0:	09 f0       	breq	.+2      	; 0xbe4 <__vector_16+0x42>
		tc_tcc0_cca_callback();
     be2:	19 95       	eicall
	}
}
     be4:	ff 91       	pop	r31
     be6:	ef 91       	pop	r30
     be8:	bf 91       	pop	r27
     bea:	af 91       	pop	r26
     bec:	9f 91       	pop	r25
     bee:	8f 91       	pop	r24
     bf0:	7f 91       	pop	r23
     bf2:	6f 91       	pop	r22
     bf4:	5f 91       	pop	r21
     bf6:	4f 91       	pop	r20
     bf8:	3f 91       	pop	r19
     bfa:	2f 91       	pop	r18
     bfc:	0f 90       	pop	r0
     bfe:	0b be       	out	0x3b, r0	; 59
     c00:	0f 90       	pop	r0
     c02:	09 be       	out	0x39, r0	; 57
     c04:	0f 90       	pop	r0
     c06:	08 be       	out	0x38, r0	; 56
     c08:	0f 90       	pop	r0
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	0f 90       	pop	r0
     c0e:	1f 90       	pop	r1
     c10:	18 95       	reti

00000c12 <__vector_17>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC0_CCB_vect)
{
     c12:	1f 92       	push	r1
     c14:	0f 92       	push	r0
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	0f 92       	push	r0
     c1a:	11 24       	eor	r1, r1
     c1c:	08 b6       	in	r0, 0x38	; 56
     c1e:	0f 92       	push	r0
     c20:	18 be       	out	0x38, r1	; 56
     c22:	09 b6       	in	r0, 0x39	; 57
     c24:	0f 92       	push	r0
     c26:	19 be       	out	0x39, r1	; 57
     c28:	0b b6       	in	r0, 0x3b	; 59
     c2a:	0f 92       	push	r0
     c2c:	1b be       	out	0x3b, r1	; 59
     c2e:	2f 93       	push	r18
     c30:	3f 93       	push	r19
     c32:	4f 93       	push	r20
     c34:	5f 93       	push	r21
     c36:	6f 93       	push	r22
     c38:	7f 93       	push	r23
     c3a:	8f 93       	push	r24
     c3c:	9f 93       	push	r25
     c3e:	af 93       	push	r26
     c40:	bf 93       	push	r27
     c42:	ef 93       	push	r30
     c44:	ff 93       	push	r31
	if (tc_tcc0_ccb_callback) {
     c46:	e0 91 94 20 	lds	r30, 0x2094
     c4a:	f0 91 95 20 	lds	r31, 0x2095
     c4e:	30 97       	sbiw	r30, 0x00	; 0
     c50:	09 f0       	breq	.+2      	; 0xc54 <__vector_17+0x42>
		tc_tcc0_ccb_callback();
     c52:	19 95       	eicall
	}
}
     c54:	ff 91       	pop	r31
     c56:	ef 91       	pop	r30
     c58:	bf 91       	pop	r27
     c5a:	af 91       	pop	r26
     c5c:	9f 91       	pop	r25
     c5e:	8f 91       	pop	r24
     c60:	7f 91       	pop	r23
     c62:	6f 91       	pop	r22
     c64:	5f 91       	pop	r21
     c66:	4f 91       	pop	r20
     c68:	3f 91       	pop	r19
     c6a:	2f 91       	pop	r18
     c6c:	0f 90       	pop	r0
     c6e:	0b be       	out	0x3b, r0	; 59
     c70:	0f 90       	pop	r0
     c72:	09 be       	out	0x39, r0	; 57
     c74:	0f 90       	pop	r0
     c76:	08 be       	out	0x38, r0	; 56
     c78:	0f 90       	pop	r0
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	0f 90       	pop	r0
     c7e:	1f 90       	pop	r1
     c80:	18 95       	reti

00000c82 <__vector_18>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureC and
 * call the callback function.
 */
ISR(TCC0_CCC_vect)
{
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
     c8c:	08 b6       	in	r0, 0x38	; 56
     c8e:	0f 92       	push	r0
     c90:	18 be       	out	0x38, r1	; 56
     c92:	09 b6       	in	r0, 0x39	; 57
     c94:	0f 92       	push	r0
     c96:	19 be       	out	0x39, r1	; 57
     c98:	0b b6       	in	r0, 0x3b	; 59
     c9a:	0f 92       	push	r0
     c9c:	1b be       	out	0x3b, r1	; 59
     c9e:	2f 93       	push	r18
     ca0:	3f 93       	push	r19
     ca2:	4f 93       	push	r20
     ca4:	5f 93       	push	r21
     ca6:	6f 93       	push	r22
     ca8:	7f 93       	push	r23
     caa:	8f 93       	push	r24
     cac:	9f 93       	push	r25
     cae:	af 93       	push	r26
     cb0:	bf 93       	push	r27
     cb2:	ef 93       	push	r30
     cb4:	ff 93       	push	r31
	if (tc_tcc0_ccc_callback) {
     cb6:	e0 91 92 20 	lds	r30, 0x2092
     cba:	f0 91 93 20 	lds	r31, 0x2093
     cbe:	30 97       	sbiw	r30, 0x00	; 0
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <__vector_18+0x42>
		tc_tcc0_ccc_callback();
     cc2:	19 95       	eicall
	}
}
     cc4:	ff 91       	pop	r31
     cc6:	ef 91       	pop	r30
     cc8:	bf 91       	pop	r27
     cca:	af 91       	pop	r26
     ccc:	9f 91       	pop	r25
     cce:	8f 91       	pop	r24
     cd0:	7f 91       	pop	r23
     cd2:	6f 91       	pop	r22
     cd4:	5f 91       	pop	r21
     cd6:	4f 91       	pop	r20
     cd8:	3f 91       	pop	r19
     cda:	2f 91       	pop	r18
     cdc:	0f 90       	pop	r0
     cde:	0b be       	out	0x3b, r0	; 59
     ce0:	0f 90       	pop	r0
     ce2:	09 be       	out	0x39, r0	; 57
     ce4:	0f 90       	pop	r0
     ce6:	08 be       	out	0x38, r0	; 56
     ce8:	0f 90       	pop	r0
     cea:	0f be       	out	0x3f, r0	; 63
     cec:	0f 90       	pop	r0
     cee:	1f 90       	pop	r1
     cf0:	18 95       	reti

00000cf2 <__vector_19>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureD and
 * call the callback function.
 */
ISR(TCC0_CCD_vect)
{
     cf2:	1f 92       	push	r1
     cf4:	0f 92       	push	r0
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	0f 92       	push	r0
     cfa:	11 24       	eor	r1, r1
     cfc:	08 b6       	in	r0, 0x38	; 56
     cfe:	0f 92       	push	r0
     d00:	18 be       	out	0x38, r1	; 56
     d02:	09 b6       	in	r0, 0x39	; 57
     d04:	0f 92       	push	r0
     d06:	19 be       	out	0x39, r1	; 57
     d08:	0b b6       	in	r0, 0x3b	; 59
     d0a:	0f 92       	push	r0
     d0c:	1b be       	out	0x3b, r1	; 59
     d0e:	2f 93       	push	r18
     d10:	3f 93       	push	r19
     d12:	4f 93       	push	r20
     d14:	5f 93       	push	r21
     d16:	6f 93       	push	r22
     d18:	7f 93       	push	r23
     d1a:	8f 93       	push	r24
     d1c:	9f 93       	push	r25
     d1e:	af 93       	push	r26
     d20:	bf 93       	push	r27
     d22:	ef 93       	push	r30
     d24:	ff 93       	push	r31
	if (tc_tcc0_ccd_callback) {
     d26:	e0 91 90 20 	lds	r30, 0x2090
     d2a:	f0 91 91 20 	lds	r31, 0x2091
     d2e:	30 97       	sbiw	r30, 0x00	; 0
     d30:	09 f0       	breq	.+2      	; 0xd34 <__vector_19+0x42>
		tc_tcc0_ccd_callback();
     d32:	19 95       	eicall
	}
}
     d34:	ff 91       	pop	r31
     d36:	ef 91       	pop	r30
     d38:	bf 91       	pop	r27
     d3a:	af 91       	pop	r26
     d3c:	9f 91       	pop	r25
     d3e:	8f 91       	pop	r24
     d40:	7f 91       	pop	r23
     d42:	6f 91       	pop	r22
     d44:	5f 91       	pop	r21
     d46:	4f 91       	pop	r20
     d48:	3f 91       	pop	r19
     d4a:	2f 91       	pop	r18
     d4c:	0f 90       	pop	r0
     d4e:	0b be       	out	0x3b, r0	; 59
     d50:	0f 90       	pop	r0
     d52:	09 be       	out	0x39, r0	; 57
     d54:	0f 90       	pop	r0
     d56:	08 be       	out	0x38, r0	; 56
     d58:	0f 90       	pop	r0
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	0f 90       	pop	r0
     d5e:	1f 90       	pop	r1
     d60:	18 95       	reti

00000d62 <__vector_20>:
 *
 * This function will handle interrupt on Timer Counter C1 overflow and
 * call the callback function.
 */
ISR(TCC1_OVF_vect)
{
     d62:	1f 92       	push	r1
     d64:	0f 92       	push	r0
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	0f 92       	push	r0
     d6a:	11 24       	eor	r1, r1
     d6c:	08 b6       	in	r0, 0x38	; 56
     d6e:	0f 92       	push	r0
     d70:	18 be       	out	0x38, r1	; 56
     d72:	09 b6       	in	r0, 0x39	; 57
     d74:	0f 92       	push	r0
     d76:	19 be       	out	0x39, r1	; 57
     d78:	0b b6       	in	r0, 0x3b	; 59
     d7a:	0f 92       	push	r0
     d7c:	1b be       	out	0x3b, r1	; 59
     d7e:	2f 93       	push	r18
     d80:	3f 93       	push	r19
     d82:	4f 93       	push	r20
     d84:	5f 93       	push	r21
     d86:	6f 93       	push	r22
     d88:	7f 93       	push	r23
     d8a:	8f 93       	push	r24
     d8c:	9f 93       	push	r25
     d8e:	af 93       	push	r26
     d90:	bf 93       	push	r27
     d92:	ef 93       	push	r30
     d94:	ff 93       	push	r31
	if (tc_tcc1_ovf_callback) {
     d96:	e0 91 8e 20 	lds	r30, 0x208E
     d9a:	f0 91 8f 20 	lds	r31, 0x208F
     d9e:	30 97       	sbiw	r30, 0x00	; 0
     da0:	09 f0       	breq	.+2      	; 0xda4 <__vector_20+0x42>
		tc_tcc1_ovf_callback();
     da2:	19 95       	eicall
	}
}
     da4:	ff 91       	pop	r31
     da6:	ef 91       	pop	r30
     da8:	bf 91       	pop	r27
     daa:	af 91       	pop	r26
     dac:	9f 91       	pop	r25
     dae:	8f 91       	pop	r24
     db0:	7f 91       	pop	r23
     db2:	6f 91       	pop	r22
     db4:	5f 91       	pop	r21
     db6:	4f 91       	pop	r20
     db8:	3f 91       	pop	r19
     dba:	2f 91       	pop	r18
     dbc:	0f 90       	pop	r0
     dbe:	0b be       	out	0x3b, r0	; 59
     dc0:	0f 90       	pop	r0
     dc2:	09 be       	out	0x39, r0	; 57
     dc4:	0f 90       	pop	r0
     dc6:	08 be       	out	0x38, r0	; 56
     dc8:	0f 90       	pop	r0
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	0f 90       	pop	r0
     dce:	1f 90       	pop	r1
     dd0:	18 95       	reti

00000dd2 <__vector_21>:
 *
 * This function will handle interrupt on Timer Counter C1 error and
 * call the callback function.
 */
ISR(TCC1_ERR_vect)
{
     dd2:	1f 92       	push	r1
     dd4:	0f 92       	push	r0
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	0f 92       	push	r0
     dda:	11 24       	eor	r1, r1
     ddc:	08 b6       	in	r0, 0x38	; 56
     dde:	0f 92       	push	r0
     de0:	18 be       	out	0x38, r1	; 56
     de2:	09 b6       	in	r0, 0x39	; 57
     de4:	0f 92       	push	r0
     de6:	19 be       	out	0x39, r1	; 57
     de8:	0b b6       	in	r0, 0x3b	; 59
     dea:	0f 92       	push	r0
     dec:	1b be       	out	0x3b, r1	; 59
     dee:	2f 93       	push	r18
     df0:	3f 93       	push	r19
     df2:	4f 93       	push	r20
     df4:	5f 93       	push	r21
     df6:	6f 93       	push	r22
     df8:	7f 93       	push	r23
     dfa:	8f 93       	push	r24
     dfc:	9f 93       	push	r25
     dfe:	af 93       	push	r26
     e00:	bf 93       	push	r27
     e02:	ef 93       	push	r30
     e04:	ff 93       	push	r31
	if (tc_tcc1_err_callback) {
     e06:	e0 91 8c 20 	lds	r30, 0x208C
     e0a:	f0 91 8d 20 	lds	r31, 0x208D
     e0e:	30 97       	sbiw	r30, 0x00	; 0
     e10:	09 f0       	breq	.+2      	; 0xe14 <__vector_21+0x42>
		tc_tcc1_err_callback();
     e12:	19 95       	eicall
	}
}
     e14:	ff 91       	pop	r31
     e16:	ef 91       	pop	r30
     e18:	bf 91       	pop	r27
     e1a:	af 91       	pop	r26
     e1c:	9f 91       	pop	r25
     e1e:	8f 91       	pop	r24
     e20:	7f 91       	pop	r23
     e22:	6f 91       	pop	r22
     e24:	5f 91       	pop	r21
     e26:	4f 91       	pop	r20
     e28:	3f 91       	pop	r19
     e2a:	2f 91       	pop	r18
     e2c:	0f 90       	pop	r0
     e2e:	0b be       	out	0x3b, r0	; 59
     e30:	0f 90       	pop	r0
     e32:	09 be       	out	0x39, r0	; 57
     e34:	0f 90       	pop	r0
     e36:	08 be       	out	0x38, r0	; 56
     e38:	0f 90       	pop	r0
     e3a:	0f be       	out	0x3f, r0	; 63
     e3c:	0f 90       	pop	r0
     e3e:	1f 90       	pop	r1
     e40:	18 95       	reti

00000e42 <__vector_22>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC1_CCA_vect)
{
     e42:	1f 92       	push	r1
     e44:	0f 92       	push	r0
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	0f 92       	push	r0
     e4a:	11 24       	eor	r1, r1
     e4c:	08 b6       	in	r0, 0x38	; 56
     e4e:	0f 92       	push	r0
     e50:	18 be       	out	0x38, r1	; 56
     e52:	09 b6       	in	r0, 0x39	; 57
     e54:	0f 92       	push	r0
     e56:	19 be       	out	0x39, r1	; 57
     e58:	0b b6       	in	r0, 0x3b	; 59
     e5a:	0f 92       	push	r0
     e5c:	1b be       	out	0x3b, r1	; 59
     e5e:	2f 93       	push	r18
     e60:	3f 93       	push	r19
     e62:	4f 93       	push	r20
     e64:	5f 93       	push	r21
     e66:	6f 93       	push	r22
     e68:	7f 93       	push	r23
     e6a:	8f 93       	push	r24
     e6c:	9f 93       	push	r25
     e6e:	af 93       	push	r26
     e70:	bf 93       	push	r27
     e72:	ef 93       	push	r30
     e74:	ff 93       	push	r31
	if (tc_tcc1_cca_callback) {
     e76:	e0 91 8a 20 	lds	r30, 0x208A
     e7a:	f0 91 8b 20 	lds	r31, 0x208B
     e7e:	30 97       	sbiw	r30, 0x00	; 0
     e80:	09 f0       	breq	.+2      	; 0xe84 <__vector_22+0x42>
		tc_tcc1_cca_callback();
     e82:	19 95       	eicall
	}
}
     e84:	ff 91       	pop	r31
     e86:	ef 91       	pop	r30
     e88:	bf 91       	pop	r27
     e8a:	af 91       	pop	r26
     e8c:	9f 91       	pop	r25
     e8e:	8f 91       	pop	r24
     e90:	7f 91       	pop	r23
     e92:	6f 91       	pop	r22
     e94:	5f 91       	pop	r21
     e96:	4f 91       	pop	r20
     e98:	3f 91       	pop	r19
     e9a:	2f 91       	pop	r18
     e9c:	0f 90       	pop	r0
     e9e:	0b be       	out	0x3b, r0	; 59
     ea0:	0f 90       	pop	r0
     ea2:	09 be       	out	0x39, r0	; 57
     ea4:	0f 90       	pop	r0
     ea6:	08 be       	out	0x38, r0	; 56
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	0f 90       	pop	r0
     eae:	1f 90       	pop	r1
     eb0:	18 95       	reti

00000eb2 <__vector_23>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC1_CCB_vect)
{
     eb2:	1f 92       	push	r1
     eb4:	0f 92       	push	r0
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	0f 92       	push	r0
     eba:	11 24       	eor	r1, r1
     ebc:	08 b6       	in	r0, 0x38	; 56
     ebe:	0f 92       	push	r0
     ec0:	18 be       	out	0x38, r1	; 56
     ec2:	09 b6       	in	r0, 0x39	; 57
     ec4:	0f 92       	push	r0
     ec6:	19 be       	out	0x39, r1	; 57
     ec8:	0b b6       	in	r0, 0x3b	; 59
     eca:	0f 92       	push	r0
     ecc:	1b be       	out	0x3b, r1	; 59
     ece:	2f 93       	push	r18
     ed0:	3f 93       	push	r19
     ed2:	4f 93       	push	r20
     ed4:	5f 93       	push	r21
     ed6:	6f 93       	push	r22
     ed8:	7f 93       	push	r23
     eda:	8f 93       	push	r24
     edc:	9f 93       	push	r25
     ede:	af 93       	push	r26
     ee0:	bf 93       	push	r27
     ee2:	ef 93       	push	r30
     ee4:	ff 93       	push	r31
	if (tc_tcc1_ccb_callback) {
     ee6:	e0 91 88 20 	lds	r30, 0x2088
     eea:	f0 91 89 20 	lds	r31, 0x2089
     eee:	30 97       	sbiw	r30, 0x00	; 0
     ef0:	09 f0       	breq	.+2      	; 0xef4 <__vector_23+0x42>
		tc_tcc1_ccb_callback();
     ef2:	19 95       	eicall
	}
}
     ef4:	ff 91       	pop	r31
     ef6:	ef 91       	pop	r30
     ef8:	bf 91       	pop	r27
     efa:	af 91       	pop	r26
     efc:	9f 91       	pop	r25
     efe:	8f 91       	pop	r24
     f00:	7f 91       	pop	r23
     f02:	6f 91       	pop	r22
     f04:	5f 91       	pop	r21
     f06:	4f 91       	pop	r20
     f08:	3f 91       	pop	r19
     f0a:	2f 91       	pop	r18
     f0c:	0f 90       	pop	r0
     f0e:	0b be       	out	0x3b, r0	; 59
     f10:	0f 90       	pop	r0
     f12:	09 be       	out	0x39, r0	; 57
     f14:	0f 90       	pop	r0
     f16:	08 be       	out	0x38, r0	; 56
     f18:	0f 90       	pop	r0
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	0f 90       	pop	r0
     f1e:	1f 90       	pop	r1
     f20:	18 95       	reti

00000f22 <__vector_78>:
 *
 * This function will handle interrupt on Timer Counter D0 error and
 * call the callback function.
 */
ISR(TCD0_ERR_vect)
{
     f22:	1f 92       	push	r1
     f24:	0f 92       	push	r0
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	0f 92       	push	r0
     f2a:	11 24       	eor	r1, r1
     f2c:	08 b6       	in	r0, 0x38	; 56
     f2e:	0f 92       	push	r0
     f30:	18 be       	out	0x38, r1	; 56
     f32:	09 b6       	in	r0, 0x39	; 57
     f34:	0f 92       	push	r0
     f36:	19 be       	out	0x39, r1	; 57
     f38:	0b b6       	in	r0, 0x3b	; 59
     f3a:	0f 92       	push	r0
     f3c:	1b be       	out	0x3b, r1	; 59
     f3e:	2f 93       	push	r18
     f40:	3f 93       	push	r19
     f42:	4f 93       	push	r20
     f44:	5f 93       	push	r21
     f46:	6f 93       	push	r22
     f48:	7f 93       	push	r23
     f4a:	8f 93       	push	r24
     f4c:	9f 93       	push	r25
     f4e:	af 93       	push	r26
     f50:	bf 93       	push	r27
     f52:	ef 93       	push	r30
     f54:	ff 93       	push	r31
	if (tc_tcd0_err_callback) {
     f56:	e0 91 86 20 	lds	r30, 0x2086
     f5a:	f0 91 87 20 	lds	r31, 0x2087
     f5e:	30 97       	sbiw	r30, 0x00	; 0
     f60:	09 f0       	breq	.+2      	; 0xf64 <__vector_78+0x42>
		tc_tcd0_err_callback();
     f62:	19 95       	eicall
	}
}
     f64:	ff 91       	pop	r31
     f66:	ef 91       	pop	r30
     f68:	bf 91       	pop	r27
     f6a:	af 91       	pop	r26
     f6c:	9f 91       	pop	r25
     f6e:	8f 91       	pop	r24
     f70:	7f 91       	pop	r23
     f72:	6f 91       	pop	r22
     f74:	5f 91       	pop	r21
     f76:	4f 91       	pop	r20
     f78:	3f 91       	pop	r19
     f7a:	2f 91       	pop	r18
     f7c:	0f 90       	pop	r0
     f7e:	0b be       	out	0x3b, r0	; 59
     f80:	0f 90       	pop	r0
     f82:	09 be       	out	0x39, r0	; 57
     f84:	0f 90       	pop	r0
     f86:	08 be       	out	0x38, r0	; 56
     f88:	0f 90       	pop	r0
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	0f 90       	pop	r0
     f8e:	1f 90       	pop	r1
     f90:	18 95       	reti

00000f92 <__vector_79>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD0_CCA_vect)
{
     f92:	1f 92       	push	r1
     f94:	0f 92       	push	r0
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	0f 92       	push	r0
     f9a:	11 24       	eor	r1, r1
     f9c:	08 b6       	in	r0, 0x38	; 56
     f9e:	0f 92       	push	r0
     fa0:	18 be       	out	0x38, r1	; 56
     fa2:	09 b6       	in	r0, 0x39	; 57
     fa4:	0f 92       	push	r0
     fa6:	19 be       	out	0x39, r1	; 57
     fa8:	0b b6       	in	r0, 0x3b	; 59
     faa:	0f 92       	push	r0
     fac:	1b be       	out	0x3b, r1	; 59
     fae:	2f 93       	push	r18
     fb0:	3f 93       	push	r19
     fb2:	4f 93       	push	r20
     fb4:	5f 93       	push	r21
     fb6:	6f 93       	push	r22
     fb8:	7f 93       	push	r23
     fba:	8f 93       	push	r24
     fbc:	9f 93       	push	r25
     fbe:	af 93       	push	r26
     fc0:	bf 93       	push	r27
     fc2:	ef 93       	push	r30
     fc4:	ff 93       	push	r31
	if (tc_tcd0_cca_callback) {
     fc6:	e0 91 84 20 	lds	r30, 0x2084
     fca:	f0 91 85 20 	lds	r31, 0x2085
     fce:	30 97       	sbiw	r30, 0x00	; 0
     fd0:	09 f0       	breq	.+2      	; 0xfd4 <__vector_79+0x42>
		tc_tcd0_cca_callback();
     fd2:	19 95       	eicall
	}
}
     fd4:	ff 91       	pop	r31
     fd6:	ef 91       	pop	r30
     fd8:	bf 91       	pop	r27
     fda:	af 91       	pop	r26
     fdc:	9f 91       	pop	r25
     fde:	8f 91       	pop	r24
     fe0:	7f 91       	pop	r23
     fe2:	6f 91       	pop	r22
     fe4:	5f 91       	pop	r21
     fe6:	4f 91       	pop	r20
     fe8:	3f 91       	pop	r19
     fea:	2f 91       	pop	r18
     fec:	0f 90       	pop	r0
     fee:	0b be       	out	0x3b, r0	; 59
     ff0:	0f 90       	pop	r0
     ff2:	09 be       	out	0x39, r0	; 57
     ff4:	0f 90       	pop	r0
     ff6:	08 be       	out	0x38, r0	; 56
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 90       	pop	r0
     ffe:	1f 90       	pop	r1
    1000:	18 95       	reti

00001002 <__vector_80>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD0_CCB_vect)
{
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	08 b6       	in	r0, 0x38	; 56
    100e:	0f 92       	push	r0
    1010:	18 be       	out	0x38, r1	; 56
    1012:	09 b6       	in	r0, 0x39	; 57
    1014:	0f 92       	push	r0
    1016:	19 be       	out	0x39, r1	; 57
    1018:	0b b6       	in	r0, 0x3b	; 59
    101a:	0f 92       	push	r0
    101c:	1b be       	out	0x3b, r1	; 59
    101e:	2f 93       	push	r18
    1020:	3f 93       	push	r19
    1022:	4f 93       	push	r20
    1024:	5f 93       	push	r21
    1026:	6f 93       	push	r22
    1028:	7f 93       	push	r23
    102a:	8f 93       	push	r24
    102c:	9f 93       	push	r25
    102e:	af 93       	push	r26
    1030:	bf 93       	push	r27
    1032:	ef 93       	push	r30
    1034:	ff 93       	push	r31
	if (tc_tcd0_ccb_callback) {
    1036:	e0 91 82 20 	lds	r30, 0x2082
    103a:	f0 91 83 20 	lds	r31, 0x2083
    103e:	30 97       	sbiw	r30, 0x00	; 0
    1040:	09 f0       	breq	.+2      	; 0x1044 <__vector_80+0x42>
		tc_tcd0_ccb_callback();
    1042:	19 95       	eicall
	}
}
    1044:	ff 91       	pop	r31
    1046:	ef 91       	pop	r30
    1048:	bf 91       	pop	r27
    104a:	af 91       	pop	r26
    104c:	9f 91       	pop	r25
    104e:	8f 91       	pop	r24
    1050:	7f 91       	pop	r23
    1052:	6f 91       	pop	r22
    1054:	5f 91       	pop	r21
    1056:	4f 91       	pop	r20
    1058:	3f 91       	pop	r19
    105a:	2f 91       	pop	r18
    105c:	0f 90       	pop	r0
    105e:	0b be       	out	0x3b, r0	; 59
    1060:	0f 90       	pop	r0
    1062:	09 be       	out	0x39, r0	; 57
    1064:	0f 90       	pop	r0
    1066:	08 be       	out	0x38, r0	; 56
    1068:	0f 90       	pop	r0
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	0f 90       	pop	r0
    106e:	1f 90       	pop	r1
    1070:	18 95       	reti

00001072 <__vector_81>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCD0_CCC_vect)
{
    1072:	1f 92       	push	r1
    1074:	0f 92       	push	r0
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	0f 92       	push	r0
    107a:	11 24       	eor	r1, r1
    107c:	08 b6       	in	r0, 0x38	; 56
    107e:	0f 92       	push	r0
    1080:	18 be       	out	0x38, r1	; 56
    1082:	09 b6       	in	r0, 0x39	; 57
    1084:	0f 92       	push	r0
    1086:	19 be       	out	0x39, r1	; 57
    1088:	0b b6       	in	r0, 0x3b	; 59
    108a:	0f 92       	push	r0
    108c:	1b be       	out	0x3b, r1	; 59
    108e:	2f 93       	push	r18
    1090:	3f 93       	push	r19
    1092:	4f 93       	push	r20
    1094:	5f 93       	push	r21
    1096:	6f 93       	push	r22
    1098:	7f 93       	push	r23
    109a:	8f 93       	push	r24
    109c:	9f 93       	push	r25
    109e:	af 93       	push	r26
    10a0:	bf 93       	push	r27
    10a2:	ef 93       	push	r30
    10a4:	ff 93       	push	r31
	if (tc_tcd0_ccc_callback) {
    10a6:	e0 91 80 20 	lds	r30, 0x2080
    10aa:	f0 91 81 20 	lds	r31, 0x2081
    10ae:	30 97       	sbiw	r30, 0x00	; 0
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <__vector_81+0x42>
		tc_tcd0_ccc_callback();
    10b2:	19 95       	eicall
	}
}
    10b4:	ff 91       	pop	r31
    10b6:	ef 91       	pop	r30
    10b8:	bf 91       	pop	r27
    10ba:	af 91       	pop	r26
    10bc:	9f 91       	pop	r25
    10be:	8f 91       	pop	r24
    10c0:	7f 91       	pop	r23
    10c2:	6f 91       	pop	r22
    10c4:	5f 91       	pop	r21
    10c6:	4f 91       	pop	r20
    10c8:	3f 91       	pop	r19
    10ca:	2f 91       	pop	r18
    10cc:	0f 90       	pop	r0
    10ce:	0b be       	out	0x3b, r0	; 59
    10d0:	0f 90       	pop	r0
    10d2:	09 be       	out	0x39, r0	; 57
    10d4:	0f 90       	pop	r0
    10d6:	08 be       	out	0x38, r0	; 56
    10d8:	0f 90       	pop	r0
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	0f 90       	pop	r0
    10de:	1f 90       	pop	r1
    10e0:	18 95       	reti

000010e2 <__vector_82>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCD0_CCD_vect)
{
    10e2:	1f 92       	push	r1
    10e4:	0f 92       	push	r0
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	0f 92       	push	r0
    10ea:	11 24       	eor	r1, r1
    10ec:	08 b6       	in	r0, 0x38	; 56
    10ee:	0f 92       	push	r0
    10f0:	18 be       	out	0x38, r1	; 56
    10f2:	09 b6       	in	r0, 0x39	; 57
    10f4:	0f 92       	push	r0
    10f6:	19 be       	out	0x39, r1	; 57
    10f8:	0b b6       	in	r0, 0x3b	; 59
    10fa:	0f 92       	push	r0
    10fc:	1b be       	out	0x3b, r1	; 59
    10fe:	2f 93       	push	r18
    1100:	3f 93       	push	r19
    1102:	4f 93       	push	r20
    1104:	5f 93       	push	r21
    1106:	6f 93       	push	r22
    1108:	7f 93       	push	r23
    110a:	8f 93       	push	r24
    110c:	9f 93       	push	r25
    110e:	af 93       	push	r26
    1110:	bf 93       	push	r27
    1112:	ef 93       	push	r30
    1114:	ff 93       	push	r31
	if (tc_tcd0_ccd_callback) {
    1116:	e0 91 7e 20 	lds	r30, 0x207E
    111a:	f0 91 7f 20 	lds	r31, 0x207F
    111e:	30 97       	sbiw	r30, 0x00	; 0
    1120:	09 f0       	breq	.+2      	; 0x1124 <__vector_82+0x42>
		tc_tcd0_ccd_callback();
    1122:	19 95       	eicall
	}
}
    1124:	ff 91       	pop	r31
    1126:	ef 91       	pop	r30
    1128:	bf 91       	pop	r27
    112a:	af 91       	pop	r26
    112c:	9f 91       	pop	r25
    112e:	8f 91       	pop	r24
    1130:	7f 91       	pop	r23
    1132:	6f 91       	pop	r22
    1134:	5f 91       	pop	r21
    1136:	4f 91       	pop	r20
    1138:	3f 91       	pop	r19
    113a:	2f 91       	pop	r18
    113c:	0f 90       	pop	r0
    113e:	0b be       	out	0x3b, r0	; 59
    1140:	0f 90       	pop	r0
    1142:	09 be       	out	0x39, r0	; 57
    1144:	0f 90       	pop	r0
    1146:	08 be       	out	0x38, r0	; 56
    1148:	0f 90       	pop	r0
    114a:	0f be       	out	0x3f, r0	; 63
    114c:	0f 90       	pop	r0
    114e:	1f 90       	pop	r1
    1150:	18 95       	reti

00001152 <__vector_83>:
 *
 * This function will handle interrupt on Timer Counter D1 overflow and
 * call the callback function.
 */
ISR(TCD1_OVF_vect)
{
    1152:	1f 92       	push	r1
    1154:	0f 92       	push	r0
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	0f 92       	push	r0
    115a:	11 24       	eor	r1, r1
    115c:	08 b6       	in	r0, 0x38	; 56
    115e:	0f 92       	push	r0
    1160:	18 be       	out	0x38, r1	; 56
    1162:	09 b6       	in	r0, 0x39	; 57
    1164:	0f 92       	push	r0
    1166:	19 be       	out	0x39, r1	; 57
    1168:	0b b6       	in	r0, 0x3b	; 59
    116a:	0f 92       	push	r0
    116c:	1b be       	out	0x3b, r1	; 59
    116e:	2f 93       	push	r18
    1170:	3f 93       	push	r19
    1172:	4f 93       	push	r20
    1174:	5f 93       	push	r21
    1176:	6f 93       	push	r22
    1178:	7f 93       	push	r23
    117a:	8f 93       	push	r24
    117c:	9f 93       	push	r25
    117e:	af 93       	push	r26
    1180:	bf 93       	push	r27
    1182:	ef 93       	push	r30
    1184:	ff 93       	push	r31
	if (tc_tcd1_ovf_callback) {
    1186:	e0 91 7c 20 	lds	r30, 0x207C
    118a:	f0 91 7d 20 	lds	r31, 0x207D
    118e:	30 97       	sbiw	r30, 0x00	; 0
    1190:	09 f0       	breq	.+2      	; 0x1194 <__vector_83+0x42>
		tc_tcd1_ovf_callback();
    1192:	19 95       	eicall
	}
}
    1194:	ff 91       	pop	r31
    1196:	ef 91       	pop	r30
    1198:	bf 91       	pop	r27
    119a:	af 91       	pop	r26
    119c:	9f 91       	pop	r25
    119e:	8f 91       	pop	r24
    11a0:	7f 91       	pop	r23
    11a2:	6f 91       	pop	r22
    11a4:	5f 91       	pop	r21
    11a6:	4f 91       	pop	r20
    11a8:	3f 91       	pop	r19
    11aa:	2f 91       	pop	r18
    11ac:	0f 90       	pop	r0
    11ae:	0b be       	out	0x3b, r0	; 59
    11b0:	0f 90       	pop	r0
    11b2:	09 be       	out	0x39, r0	; 57
    11b4:	0f 90       	pop	r0
    11b6:	08 be       	out	0x38, r0	; 56
    11b8:	0f 90       	pop	r0
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	0f 90       	pop	r0
    11be:	1f 90       	pop	r1
    11c0:	18 95       	reti

000011c2 <__vector_84>:
 *
 * This function will handle interrupt on Timer Counter D1 error and
 * call the callback function.
 */
ISR(TCD1_ERR_vect)
{
    11c2:	1f 92       	push	r1
    11c4:	0f 92       	push	r0
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	0f 92       	push	r0
    11ca:	11 24       	eor	r1, r1
    11cc:	08 b6       	in	r0, 0x38	; 56
    11ce:	0f 92       	push	r0
    11d0:	18 be       	out	0x38, r1	; 56
    11d2:	09 b6       	in	r0, 0x39	; 57
    11d4:	0f 92       	push	r0
    11d6:	19 be       	out	0x39, r1	; 57
    11d8:	0b b6       	in	r0, 0x3b	; 59
    11da:	0f 92       	push	r0
    11dc:	1b be       	out	0x3b, r1	; 59
    11de:	2f 93       	push	r18
    11e0:	3f 93       	push	r19
    11e2:	4f 93       	push	r20
    11e4:	5f 93       	push	r21
    11e6:	6f 93       	push	r22
    11e8:	7f 93       	push	r23
    11ea:	8f 93       	push	r24
    11ec:	9f 93       	push	r25
    11ee:	af 93       	push	r26
    11f0:	bf 93       	push	r27
    11f2:	ef 93       	push	r30
    11f4:	ff 93       	push	r31
	if (tc_tcd1_err_callback) {
    11f6:	e0 91 7a 20 	lds	r30, 0x207A
    11fa:	f0 91 7b 20 	lds	r31, 0x207B
    11fe:	30 97       	sbiw	r30, 0x00	; 0
    1200:	09 f0       	breq	.+2      	; 0x1204 <__vector_84+0x42>
		tc_tcd1_err_callback();
    1202:	19 95       	eicall
	}
}
    1204:	ff 91       	pop	r31
    1206:	ef 91       	pop	r30
    1208:	bf 91       	pop	r27
    120a:	af 91       	pop	r26
    120c:	9f 91       	pop	r25
    120e:	8f 91       	pop	r24
    1210:	7f 91       	pop	r23
    1212:	6f 91       	pop	r22
    1214:	5f 91       	pop	r21
    1216:	4f 91       	pop	r20
    1218:	3f 91       	pop	r19
    121a:	2f 91       	pop	r18
    121c:	0f 90       	pop	r0
    121e:	0b be       	out	0x3b, r0	; 59
    1220:	0f 90       	pop	r0
    1222:	09 be       	out	0x39, r0	; 57
    1224:	0f 90       	pop	r0
    1226:	08 be       	out	0x38, r0	; 56
    1228:	0f 90       	pop	r0
    122a:	0f be       	out	0x3f, r0	; 63
    122c:	0f 90       	pop	r0
    122e:	1f 90       	pop	r1
    1230:	18 95       	reti

00001232 <__vector_85>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD1_CCA_vect)
{
    1232:	1f 92       	push	r1
    1234:	0f 92       	push	r0
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	0f 92       	push	r0
    123a:	11 24       	eor	r1, r1
    123c:	08 b6       	in	r0, 0x38	; 56
    123e:	0f 92       	push	r0
    1240:	18 be       	out	0x38, r1	; 56
    1242:	09 b6       	in	r0, 0x39	; 57
    1244:	0f 92       	push	r0
    1246:	19 be       	out	0x39, r1	; 57
    1248:	0b b6       	in	r0, 0x3b	; 59
    124a:	0f 92       	push	r0
    124c:	1b be       	out	0x3b, r1	; 59
    124e:	2f 93       	push	r18
    1250:	3f 93       	push	r19
    1252:	4f 93       	push	r20
    1254:	5f 93       	push	r21
    1256:	6f 93       	push	r22
    1258:	7f 93       	push	r23
    125a:	8f 93       	push	r24
    125c:	9f 93       	push	r25
    125e:	af 93       	push	r26
    1260:	bf 93       	push	r27
    1262:	ef 93       	push	r30
    1264:	ff 93       	push	r31
	if (tc_tcd1_cca_callback) {
    1266:	e0 91 78 20 	lds	r30, 0x2078
    126a:	f0 91 79 20 	lds	r31, 0x2079
    126e:	30 97       	sbiw	r30, 0x00	; 0
    1270:	09 f0       	breq	.+2      	; 0x1274 <__vector_85+0x42>
		tc_tcd1_cca_callback();
    1272:	19 95       	eicall
	}
}
    1274:	ff 91       	pop	r31
    1276:	ef 91       	pop	r30
    1278:	bf 91       	pop	r27
    127a:	af 91       	pop	r26
    127c:	9f 91       	pop	r25
    127e:	8f 91       	pop	r24
    1280:	7f 91       	pop	r23
    1282:	6f 91       	pop	r22
    1284:	5f 91       	pop	r21
    1286:	4f 91       	pop	r20
    1288:	3f 91       	pop	r19
    128a:	2f 91       	pop	r18
    128c:	0f 90       	pop	r0
    128e:	0b be       	out	0x3b, r0	; 59
    1290:	0f 90       	pop	r0
    1292:	09 be       	out	0x39, r0	; 57
    1294:	0f 90       	pop	r0
    1296:	08 be       	out	0x38, r0	; 56
    1298:	0f 90       	pop	r0
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	0f 90       	pop	r0
    129e:	1f 90       	pop	r1
    12a0:	18 95       	reti

000012a2 <__vector_86>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD1_CCB_vect)
{
    12a2:	1f 92       	push	r1
    12a4:	0f 92       	push	r0
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	0f 92       	push	r0
    12aa:	11 24       	eor	r1, r1
    12ac:	08 b6       	in	r0, 0x38	; 56
    12ae:	0f 92       	push	r0
    12b0:	18 be       	out	0x38, r1	; 56
    12b2:	09 b6       	in	r0, 0x39	; 57
    12b4:	0f 92       	push	r0
    12b6:	19 be       	out	0x39, r1	; 57
    12b8:	0b b6       	in	r0, 0x3b	; 59
    12ba:	0f 92       	push	r0
    12bc:	1b be       	out	0x3b, r1	; 59
    12be:	2f 93       	push	r18
    12c0:	3f 93       	push	r19
    12c2:	4f 93       	push	r20
    12c4:	5f 93       	push	r21
    12c6:	6f 93       	push	r22
    12c8:	7f 93       	push	r23
    12ca:	8f 93       	push	r24
    12cc:	9f 93       	push	r25
    12ce:	af 93       	push	r26
    12d0:	bf 93       	push	r27
    12d2:	ef 93       	push	r30
    12d4:	ff 93       	push	r31
	if (tc_tcd1_ccb_callback) {
    12d6:	e0 91 76 20 	lds	r30, 0x2076
    12da:	f0 91 77 20 	lds	r31, 0x2077
    12de:	30 97       	sbiw	r30, 0x00	; 0
    12e0:	09 f0       	breq	.+2      	; 0x12e4 <__vector_86+0x42>
		tc_tcd1_ccb_callback();
    12e2:	19 95       	eicall
	}
}
    12e4:	ff 91       	pop	r31
    12e6:	ef 91       	pop	r30
    12e8:	bf 91       	pop	r27
    12ea:	af 91       	pop	r26
    12ec:	9f 91       	pop	r25
    12ee:	8f 91       	pop	r24
    12f0:	7f 91       	pop	r23
    12f2:	6f 91       	pop	r22
    12f4:	5f 91       	pop	r21
    12f6:	4f 91       	pop	r20
    12f8:	3f 91       	pop	r19
    12fa:	2f 91       	pop	r18
    12fc:	0f 90       	pop	r0
    12fe:	0b be       	out	0x3b, r0	; 59
    1300:	0f 90       	pop	r0
    1302:	09 be       	out	0x39, r0	; 57
    1304:	0f 90       	pop	r0
    1306:	08 be       	out	0x38, r0	; 56
    1308:	0f 90       	pop	r0
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	0f 90       	pop	r0
    130e:	1f 90       	pop	r1
    1310:	18 95       	reti

00001312 <__vector_47>:
 *
 * This function will handle interrupt on Timer Counter E0 overflow and
 * call the callback function.
 */
ISR(TCE0_OVF_vect)
{
    1312:	1f 92       	push	r1
    1314:	0f 92       	push	r0
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	0f 92       	push	r0
    131a:	11 24       	eor	r1, r1
    131c:	08 b6       	in	r0, 0x38	; 56
    131e:	0f 92       	push	r0
    1320:	18 be       	out	0x38, r1	; 56
    1322:	09 b6       	in	r0, 0x39	; 57
    1324:	0f 92       	push	r0
    1326:	19 be       	out	0x39, r1	; 57
    1328:	0b b6       	in	r0, 0x3b	; 59
    132a:	0f 92       	push	r0
    132c:	1b be       	out	0x3b, r1	; 59
    132e:	2f 93       	push	r18
    1330:	3f 93       	push	r19
    1332:	4f 93       	push	r20
    1334:	5f 93       	push	r21
    1336:	6f 93       	push	r22
    1338:	7f 93       	push	r23
    133a:	8f 93       	push	r24
    133c:	9f 93       	push	r25
    133e:	af 93       	push	r26
    1340:	bf 93       	push	r27
    1342:	ef 93       	push	r30
    1344:	ff 93       	push	r31
	if (tc_tce0_ovf_callback) {
    1346:	e0 91 74 20 	lds	r30, 0x2074
    134a:	f0 91 75 20 	lds	r31, 0x2075
    134e:	30 97       	sbiw	r30, 0x00	; 0
    1350:	09 f0       	breq	.+2      	; 0x1354 <__vector_47+0x42>
		tc_tce0_ovf_callback();
    1352:	19 95       	eicall
	}
}
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	0f 90       	pop	r0
    136e:	0b be       	out	0x3b, r0	; 59
    1370:	0f 90       	pop	r0
    1372:	09 be       	out	0x39, r0	; 57
    1374:	0f 90       	pop	r0
    1376:	08 be       	out	0x38, r0	; 56
    1378:	0f 90       	pop	r0
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	0f 90       	pop	r0
    137e:	1f 90       	pop	r1
    1380:	18 95       	reti

00001382 <__vector_48>:
 *
 * This function will handle interrupt on Timer Counter E0 error and
 * call the callback function.
 */
ISR(TCE0_ERR_vect)
{
    1382:	1f 92       	push	r1
    1384:	0f 92       	push	r0
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	0f 92       	push	r0
    138a:	11 24       	eor	r1, r1
    138c:	08 b6       	in	r0, 0x38	; 56
    138e:	0f 92       	push	r0
    1390:	18 be       	out	0x38, r1	; 56
    1392:	09 b6       	in	r0, 0x39	; 57
    1394:	0f 92       	push	r0
    1396:	19 be       	out	0x39, r1	; 57
    1398:	0b b6       	in	r0, 0x3b	; 59
    139a:	0f 92       	push	r0
    139c:	1b be       	out	0x3b, r1	; 59
    139e:	2f 93       	push	r18
    13a0:	3f 93       	push	r19
    13a2:	4f 93       	push	r20
    13a4:	5f 93       	push	r21
    13a6:	6f 93       	push	r22
    13a8:	7f 93       	push	r23
    13aa:	8f 93       	push	r24
    13ac:	9f 93       	push	r25
    13ae:	af 93       	push	r26
    13b0:	bf 93       	push	r27
    13b2:	ef 93       	push	r30
    13b4:	ff 93       	push	r31
	if (tc_tce0_err_callback) {
    13b6:	e0 91 72 20 	lds	r30, 0x2072
    13ba:	f0 91 73 20 	lds	r31, 0x2073
    13be:	30 97       	sbiw	r30, 0x00	; 0
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <__vector_48+0x42>
		tc_tce0_err_callback();
    13c2:	19 95       	eicall
	}
}
    13c4:	ff 91       	pop	r31
    13c6:	ef 91       	pop	r30
    13c8:	bf 91       	pop	r27
    13ca:	af 91       	pop	r26
    13cc:	9f 91       	pop	r25
    13ce:	8f 91       	pop	r24
    13d0:	7f 91       	pop	r23
    13d2:	6f 91       	pop	r22
    13d4:	5f 91       	pop	r21
    13d6:	4f 91       	pop	r20
    13d8:	3f 91       	pop	r19
    13da:	2f 91       	pop	r18
    13dc:	0f 90       	pop	r0
    13de:	0b be       	out	0x3b, r0	; 59
    13e0:	0f 90       	pop	r0
    13e2:	09 be       	out	0x39, r0	; 57
    13e4:	0f 90       	pop	r0
    13e6:	08 be       	out	0x38, r0	; 56
    13e8:	0f 90       	pop	r0
    13ea:	0f be       	out	0x3f, r0	; 63
    13ec:	0f 90       	pop	r0
    13ee:	1f 90       	pop	r1
    13f0:	18 95       	reti

000013f2 <__vector_49>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE0_CCA_vect)
{
    13f2:	1f 92       	push	r1
    13f4:	0f 92       	push	r0
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	0f 92       	push	r0
    13fa:	11 24       	eor	r1, r1
    13fc:	08 b6       	in	r0, 0x38	; 56
    13fe:	0f 92       	push	r0
    1400:	18 be       	out	0x38, r1	; 56
    1402:	09 b6       	in	r0, 0x39	; 57
    1404:	0f 92       	push	r0
    1406:	19 be       	out	0x39, r1	; 57
    1408:	0b b6       	in	r0, 0x3b	; 59
    140a:	0f 92       	push	r0
    140c:	1b be       	out	0x3b, r1	; 59
    140e:	2f 93       	push	r18
    1410:	3f 93       	push	r19
    1412:	4f 93       	push	r20
    1414:	5f 93       	push	r21
    1416:	6f 93       	push	r22
    1418:	7f 93       	push	r23
    141a:	8f 93       	push	r24
    141c:	9f 93       	push	r25
    141e:	af 93       	push	r26
    1420:	bf 93       	push	r27
    1422:	ef 93       	push	r30
    1424:	ff 93       	push	r31
	if (tc_tce0_cca_callback) {
    1426:	e0 91 70 20 	lds	r30, 0x2070
    142a:	f0 91 71 20 	lds	r31, 0x2071
    142e:	30 97       	sbiw	r30, 0x00	; 0
    1430:	09 f0       	breq	.+2      	; 0x1434 <__vector_49+0x42>
		tc_tce0_cca_callback();
    1432:	19 95       	eicall
	}
}
    1434:	ff 91       	pop	r31
    1436:	ef 91       	pop	r30
    1438:	bf 91       	pop	r27
    143a:	af 91       	pop	r26
    143c:	9f 91       	pop	r25
    143e:	8f 91       	pop	r24
    1440:	7f 91       	pop	r23
    1442:	6f 91       	pop	r22
    1444:	5f 91       	pop	r21
    1446:	4f 91       	pop	r20
    1448:	3f 91       	pop	r19
    144a:	2f 91       	pop	r18
    144c:	0f 90       	pop	r0
    144e:	0b be       	out	0x3b, r0	; 59
    1450:	0f 90       	pop	r0
    1452:	09 be       	out	0x39, r0	; 57
    1454:	0f 90       	pop	r0
    1456:	08 be       	out	0x38, r0	; 56
    1458:	0f 90       	pop	r0
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	0f 90       	pop	r0
    145e:	1f 90       	pop	r1
    1460:	18 95       	reti

00001462 <__vector_50>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE0_CCB_vect)
{
    1462:	1f 92       	push	r1
    1464:	0f 92       	push	r0
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	0f 92       	push	r0
    146a:	11 24       	eor	r1, r1
    146c:	08 b6       	in	r0, 0x38	; 56
    146e:	0f 92       	push	r0
    1470:	18 be       	out	0x38, r1	; 56
    1472:	09 b6       	in	r0, 0x39	; 57
    1474:	0f 92       	push	r0
    1476:	19 be       	out	0x39, r1	; 57
    1478:	0b b6       	in	r0, 0x3b	; 59
    147a:	0f 92       	push	r0
    147c:	1b be       	out	0x3b, r1	; 59
    147e:	2f 93       	push	r18
    1480:	3f 93       	push	r19
    1482:	4f 93       	push	r20
    1484:	5f 93       	push	r21
    1486:	6f 93       	push	r22
    1488:	7f 93       	push	r23
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25
    148e:	af 93       	push	r26
    1490:	bf 93       	push	r27
    1492:	ef 93       	push	r30
    1494:	ff 93       	push	r31
	if (tc_tce0_ccb_callback) {
    1496:	e0 91 6e 20 	lds	r30, 0x206E
    149a:	f0 91 6f 20 	lds	r31, 0x206F
    149e:	30 97       	sbiw	r30, 0x00	; 0
    14a0:	09 f0       	breq	.+2      	; 0x14a4 <__vector_50+0x42>
		tc_tce0_ccb_callback();
    14a2:	19 95       	eicall
	}
}
    14a4:	ff 91       	pop	r31
    14a6:	ef 91       	pop	r30
    14a8:	bf 91       	pop	r27
    14aa:	af 91       	pop	r26
    14ac:	9f 91       	pop	r25
    14ae:	8f 91       	pop	r24
    14b0:	7f 91       	pop	r23
    14b2:	6f 91       	pop	r22
    14b4:	5f 91       	pop	r21
    14b6:	4f 91       	pop	r20
    14b8:	3f 91       	pop	r19
    14ba:	2f 91       	pop	r18
    14bc:	0f 90       	pop	r0
    14be:	0b be       	out	0x3b, r0	; 59
    14c0:	0f 90       	pop	r0
    14c2:	09 be       	out	0x39, r0	; 57
    14c4:	0f 90       	pop	r0
    14c6:	08 be       	out	0x38, r0	; 56
    14c8:	0f 90       	pop	r0
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	0f 90       	pop	r0
    14ce:	1f 90       	pop	r1
    14d0:	18 95       	reti

000014d2 <__vector_51>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCE0_CCC_vect)
{
    14d2:	1f 92       	push	r1
    14d4:	0f 92       	push	r0
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	0f 92       	push	r0
    14da:	11 24       	eor	r1, r1
    14dc:	08 b6       	in	r0, 0x38	; 56
    14de:	0f 92       	push	r0
    14e0:	18 be       	out	0x38, r1	; 56
    14e2:	09 b6       	in	r0, 0x39	; 57
    14e4:	0f 92       	push	r0
    14e6:	19 be       	out	0x39, r1	; 57
    14e8:	0b b6       	in	r0, 0x3b	; 59
    14ea:	0f 92       	push	r0
    14ec:	1b be       	out	0x3b, r1	; 59
    14ee:	2f 93       	push	r18
    14f0:	3f 93       	push	r19
    14f2:	4f 93       	push	r20
    14f4:	5f 93       	push	r21
    14f6:	6f 93       	push	r22
    14f8:	7f 93       	push	r23
    14fa:	8f 93       	push	r24
    14fc:	9f 93       	push	r25
    14fe:	af 93       	push	r26
    1500:	bf 93       	push	r27
    1502:	ef 93       	push	r30
    1504:	ff 93       	push	r31
	if (tc_tce0_ccc_callback) {
    1506:	e0 91 6c 20 	lds	r30, 0x206C
    150a:	f0 91 6d 20 	lds	r31, 0x206D
    150e:	30 97       	sbiw	r30, 0x00	; 0
    1510:	09 f0       	breq	.+2      	; 0x1514 <__vector_51+0x42>
		tc_tce0_ccc_callback();
    1512:	19 95       	eicall
	}
}
    1514:	ff 91       	pop	r31
    1516:	ef 91       	pop	r30
    1518:	bf 91       	pop	r27
    151a:	af 91       	pop	r26
    151c:	9f 91       	pop	r25
    151e:	8f 91       	pop	r24
    1520:	7f 91       	pop	r23
    1522:	6f 91       	pop	r22
    1524:	5f 91       	pop	r21
    1526:	4f 91       	pop	r20
    1528:	3f 91       	pop	r19
    152a:	2f 91       	pop	r18
    152c:	0f 90       	pop	r0
    152e:	0b be       	out	0x3b, r0	; 59
    1530:	0f 90       	pop	r0
    1532:	09 be       	out	0x39, r0	; 57
    1534:	0f 90       	pop	r0
    1536:	08 be       	out	0x38, r0	; 56
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_52>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCE0_CCD_vect)
{
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	08 b6       	in	r0, 0x38	; 56
    154e:	0f 92       	push	r0
    1550:	18 be       	out	0x38, r1	; 56
    1552:	09 b6       	in	r0, 0x39	; 57
    1554:	0f 92       	push	r0
    1556:	19 be       	out	0x39, r1	; 57
    1558:	0b b6       	in	r0, 0x3b	; 59
    155a:	0f 92       	push	r0
    155c:	1b be       	out	0x3b, r1	; 59
    155e:	2f 93       	push	r18
    1560:	3f 93       	push	r19
    1562:	4f 93       	push	r20
    1564:	5f 93       	push	r21
    1566:	6f 93       	push	r22
    1568:	7f 93       	push	r23
    156a:	8f 93       	push	r24
    156c:	9f 93       	push	r25
    156e:	af 93       	push	r26
    1570:	bf 93       	push	r27
    1572:	ef 93       	push	r30
    1574:	ff 93       	push	r31
	if (tc_tce0_ccd_callback) {
    1576:	e0 91 6a 20 	lds	r30, 0x206A
    157a:	f0 91 6b 20 	lds	r31, 0x206B
    157e:	30 97       	sbiw	r30, 0x00	; 0
    1580:	09 f0       	breq	.+2      	; 0x1584 <__vector_52+0x42>
		tc_tce0_ccd_callback();
    1582:	19 95       	eicall
	}
}
    1584:	ff 91       	pop	r31
    1586:	ef 91       	pop	r30
    1588:	bf 91       	pop	r27
    158a:	af 91       	pop	r26
    158c:	9f 91       	pop	r25
    158e:	8f 91       	pop	r24
    1590:	7f 91       	pop	r23
    1592:	6f 91       	pop	r22
    1594:	5f 91       	pop	r21
    1596:	4f 91       	pop	r20
    1598:	3f 91       	pop	r19
    159a:	2f 91       	pop	r18
    159c:	0f 90       	pop	r0
    159e:	0b be       	out	0x3b, r0	; 59
    15a0:	0f 90       	pop	r0
    15a2:	09 be       	out	0x39, r0	; 57
    15a4:	0f 90       	pop	r0
    15a6:	08 be       	out	0x38, r0	; 56
    15a8:	0f 90       	pop	r0
    15aa:	0f be       	out	0x3f, r0	; 63
    15ac:	0f 90       	pop	r0
    15ae:	1f 90       	pop	r1
    15b0:	18 95       	reti

000015b2 <__vector_53>:
 *
 * This function will handle interrupt on Timer Counter E1 overflow and
 * call the callback function.
 */
ISR(TCE1_OVF_vect)
{
    15b2:	1f 92       	push	r1
    15b4:	0f 92       	push	r0
    15b6:	0f b6       	in	r0, 0x3f	; 63
    15b8:	0f 92       	push	r0
    15ba:	11 24       	eor	r1, r1
    15bc:	08 b6       	in	r0, 0x38	; 56
    15be:	0f 92       	push	r0
    15c0:	18 be       	out	0x38, r1	; 56
    15c2:	09 b6       	in	r0, 0x39	; 57
    15c4:	0f 92       	push	r0
    15c6:	19 be       	out	0x39, r1	; 57
    15c8:	0b b6       	in	r0, 0x3b	; 59
    15ca:	0f 92       	push	r0
    15cc:	1b be       	out	0x3b, r1	; 59
    15ce:	2f 93       	push	r18
    15d0:	3f 93       	push	r19
    15d2:	4f 93       	push	r20
    15d4:	5f 93       	push	r21
    15d6:	6f 93       	push	r22
    15d8:	7f 93       	push	r23
    15da:	8f 93       	push	r24
    15dc:	9f 93       	push	r25
    15de:	af 93       	push	r26
    15e0:	bf 93       	push	r27
    15e2:	ef 93       	push	r30
    15e4:	ff 93       	push	r31
	if (tc_tce1_ovf_callback) {
    15e6:	e0 91 68 20 	lds	r30, 0x2068
    15ea:	f0 91 69 20 	lds	r31, 0x2069
    15ee:	30 97       	sbiw	r30, 0x00	; 0
    15f0:	09 f0       	breq	.+2      	; 0x15f4 <__vector_53+0x42>
		tc_tce1_ovf_callback();
    15f2:	19 95       	eicall
	}
}
    15f4:	ff 91       	pop	r31
    15f6:	ef 91       	pop	r30
    15f8:	bf 91       	pop	r27
    15fa:	af 91       	pop	r26
    15fc:	9f 91       	pop	r25
    15fe:	8f 91       	pop	r24
    1600:	7f 91       	pop	r23
    1602:	6f 91       	pop	r22
    1604:	5f 91       	pop	r21
    1606:	4f 91       	pop	r20
    1608:	3f 91       	pop	r19
    160a:	2f 91       	pop	r18
    160c:	0f 90       	pop	r0
    160e:	0b be       	out	0x3b, r0	; 59
    1610:	0f 90       	pop	r0
    1612:	09 be       	out	0x39, r0	; 57
    1614:	0f 90       	pop	r0
    1616:	08 be       	out	0x38, r0	; 56
    1618:	0f 90       	pop	r0
    161a:	0f be       	out	0x3f, r0	; 63
    161c:	0f 90       	pop	r0
    161e:	1f 90       	pop	r1
    1620:	18 95       	reti

00001622 <__vector_54>:
 *
 * This function will handle interrupt on Timer Counter E1 error and
 * call the callback function.
 */
ISR(TCE1_ERR_vect)
{
    1622:	1f 92       	push	r1
    1624:	0f 92       	push	r0
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	0f 92       	push	r0
    162a:	11 24       	eor	r1, r1
    162c:	08 b6       	in	r0, 0x38	; 56
    162e:	0f 92       	push	r0
    1630:	18 be       	out	0x38, r1	; 56
    1632:	09 b6       	in	r0, 0x39	; 57
    1634:	0f 92       	push	r0
    1636:	19 be       	out	0x39, r1	; 57
    1638:	0b b6       	in	r0, 0x3b	; 59
    163a:	0f 92       	push	r0
    163c:	1b be       	out	0x3b, r1	; 59
    163e:	2f 93       	push	r18
    1640:	3f 93       	push	r19
    1642:	4f 93       	push	r20
    1644:	5f 93       	push	r21
    1646:	6f 93       	push	r22
    1648:	7f 93       	push	r23
    164a:	8f 93       	push	r24
    164c:	9f 93       	push	r25
    164e:	af 93       	push	r26
    1650:	bf 93       	push	r27
    1652:	ef 93       	push	r30
    1654:	ff 93       	push	r31
	if (tc_tce1_err_callback) {
    1656:	e0 91 66 20 	lds	r30, 0x2066
    165a:	f0 91 67 20 	lds	r31, 0x2067
    165e:	30 97       	sbiw	r30, 0x00	; 0
    1660:	09 f0       	breq	.+2      	; 0x1664 <__vector_54+0x42>
		tc_tce1_err_callback();
    1662:	19 95       	eicall
	}
}
    1664:	ff 91       	pop	r31
    1666:	ef 91       	pop	r30
    1668:	bf 91       	pop	r27
    166a:	af 91       	pop	r26
    166c:	9f 91       	pop	r25
    166e:	8f 91       	pop	r24
    1670:	7f 91       	pop	r23
    1672:	6f 91       	pop	r22
    1674:	5f 91       	pop	r21
    1676:	4f 91       	pop	r20
    1678:	3f 91       	pop	r19
    167a:	2f 91       	pop	r18
    167c:	0f 90       	pop	r0
    167e:	0b be       	out	0x3b, r0	; 59
    1680:	0f 90       	pop	r0
    1682:	09 be       	out	0x39, r0	; 57
    1684:	0f 90       	pop	r0
    1686:	08 be       	out	0x38, r0	; 56
    1688:	0f 90       	pop	r0
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	0f 90       	pop	r0
    168e:	1f 90       	pop	r1
    1690:	18 95       	reti

00001692 <__vector_55>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE1_CCA_vect)
{
    1692:	1f 92       	push	r1
    1694:	0f 92       	push	r0
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	0f 92       	push	r0
    169a:	11 24       	eor	r1, r1
    169c:	08 b6       	in	r0, 0x38	; 56
    169e:	0f 92       	push	r0
    16a0:	18 be       	out	0x38, r1	; 56
    16a2:	09 b6       	in	r0, 0x39	; 57
    16a4:	0f 92       	push	r0
    16a6:	19 be       	out	0x39, r1	; 57
    16a8:	0b b6       	in	r0, 0x3b	; 59
    16aa:	0f 92       	push	r0
    16ac:	1b be       	out	0x3b, r1	; 59
    16ae:	2f 93       	push	r18
    16b0:	3f 93       	push	r19
    16b2:	4f 93       	push	r20
    16b4:	5f 93       	push	r21
    16b6:	6f 93       	push	r22
    16b8:	7f 93       	push	r23
    16ba:	8f 93       	push	r24
    16bc:	9f 93       	push	r25
    16be:	af 93       	push	r26
    16c0:	bf 93       	push	r27
    16c2:	ef 93       	push	r30
    16c4:	ff 93       	push	r31
	if (tc_tce1_cca_callback) {
    16c6:	e0 91 64 20 	lds	r30, 0x2064
    16ca:	f0 91 65 20 	lds	r31, 0x2065
    16ce:	30 97       	sbiw	r30, 0x00	; 0
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <__vector_55+0x42>
		tc_tce1_cca_callback();
    16d2:	19 95       	eicall
	}
}
    16d4:	ff 91       	pop	r31
    16d6:	ef 91       	pop	r30
    16d8:	bf 91       	pop	r27
    16da:	af 91       	pop	r26
    16dc:	9f 91       	pop	r25
    16de:	8f 91       	pop	r24
    16e0:	7f 91       	pop	r23
    16e2:	6f 91       	pop	r22
    16e4:	5f 91       	pop	r21
    16e6:	4f 91       	pop	r20
    16e8:	3f 91       	pop	r19
    16ea:	2f 91       	pop	r18
    16ec:	0f 90       	pop	r0
    16ee:	0b be       	out	0x3b, r0	; 59
    16f0:	0f 90       	pop	r0
    16f2:	09 be       	out	0x39, r0	; 57
    16f4:	0f 90       	pop	r0
    16f6:	08 be       	out	0x38, r0	; 56
    16f8:	0f 90       	pop	r0
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	0f 90       	pop	r0
    16fe:	1f 90       	pop	r1
    1700:	18 95       	reti

00001702 <__vector_56>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE1_CCB_vect)
{
    1702:	1f 92       	push	r1
    1704:	0f 92       	push	r0
    1706:	0f b6       	in	r0, 0x3f	; 63
    1708:	0f 92       	push	r0
    170a:	11 24       	eor	r1, r1
    170c:	08 b6       	in	r0, 0x38	; 56
    170e:	0f 92       	push	r0
    1710:	18 be       	out	0x38, r1	; 56
    1712:	09 b6       	in	r0, 0x39	; 57
    1714:	0f 92       	push	r0
    1716:	19 be       	out	0x39, r1	; 57
    1718:	0b b6       	in	r0, 0x3b	; 59
    171a:	0f 92       	push	r0
    171c:	1b be       	out	0x3b, r1	; 59
    171e:	2f 93       	push	r18
    1720:	3f 93       	push	r19
    1722:	4f 93       	push	r20
    1724:	5f 93       	push	r21
    1726:	6f 93       	push	r22
    1728:	7f 93       	push	r23
    172a:	8f 93       	push	r24
    172c:	9f 93       	push	r25
    172e:	af 93       	push	r26
    1730:	bf 93       	push	r27
    1732:	ef 93       	push	r30
    1734:	ff 93       	push	r31
	if (tc_tce1_ccb_callback) {
    1736:	e0 91 62 20 	lds	r30, 0x2062
    173a:	f0 91 63 20 	lds	r31, 0x2063
    173e:	30 97       	sbiw	r30, 0x00	; 0
    1740:	09 f0       	breq	.+2      	; 0x1744 <__vector_56+0x42>
		tc_tce1_ccb_callback();
    1742:	19 95       	eicall
	}
}
    1744:	ff 91       	pop	r31
    1746:	ef 91       	pop	r30
    1748:	bf 91       	pop	r27
    174a:	af 91       	pop	r26
    174c:	9f 91       	pop	r25
    174e:	8f 91       	pop	r24
    1750:	7f 91       	pop	r23
    1752:	6f 91       	pop	r22
    1754:	5f 91       	pop	r21
    1756:	4f 91       	pop	r20
    1758:	3f 91       	pop	r19
    175a:	2f 91       	pop	r18
    175c:	0f 90       	pop	r0
    175e:	0b be       	out	0x3b, r0	; 59
    1760:	0f 90       	pop	r0
    1762:	09 be       	out	0x39, r0	; 57
    1764:	0f 90       	pop	r0
    1766:	08 be       	out	0x38, r0	; 56
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	1f 90       	pop	r1
    1770:	18 95       	reti

00001772 <__vector_108>:
 *
 * This function will handle interrupt on Timer Counter F0 overflow and
 * call the callback function.
 */
ISR(TCF0_OVF_vect)
{
    1772:	1f 92       	push	r1
    1774:	0f 92       	push	r0
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	0f 92       	push	r0
    177a:	11 24       	eor	r1, r1
    177c:	08 b6       	in	r0, 0x38	; 56
    177e:	0f 92       	push	r0
    1780:	18 be       	out	0x38, r1	; 56
    1782:	09 b6       	in	r0, 0x39	; 57
    1784:	0f 92       	push	r0
    1786:	19 be       	out	0x39, r1	; 57
    1788:	0b b6       	in	r0, 0x3b	; 59
    178a:	0f 92       	push	r0
    178c:	1b be       	out	0x3b, r1	; 59
    178e:	2f 93       	push	r18
    1790:	3f 93       	push	r19
    1792:	4f 93       	push	r20
    1794:	5f 93       	push	r21
    1796:	6f 93       	push	r22
    1798:	7f 93       	push	r23
    179a:	8f 93       	push	r24
    179c:	9f 93       	push	r25
    179e:	af 93       	push	r26
    17a0:	bf 93       	push	r27
    17a2:	ef 93       	push	r30
    17a4:	ff 93       	push	r31
	if (tc_tcf0_ovf_callback) {
    17a6:	e0 91 60 20 	lds	r30, 0x2060
    17aa:	f0 91 61 20 	lds	r31, 0x2061
    17ae:	30 97       	sbiw	r30, 0x00	; 0
    17b0:	09 f0       	breq	.+2      	; 0x17b4 <__vector_108+0x42>
		tc_tcf0_ovf_callback();
    17b2:	19 95       	eicall
	}
}
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	bf 91       	pop	r27
    17ba:	af 91       	pop	r26
    17bc:	9f 91       	pop	r25
    17be:	8f 91       	pop	r24
    17c0:	7f 91       	pop	r23
    17c2:	6f 91       	pop	r22
    17c4:	5f 91       	pop	r21
    17c6:	4f 91       	pop	r20
    17c8:	3f 91       	pop	r19
    17ca:	2f 91       	pop	r18
    17cc:	0f 90       	pop	r0
    17ce:	0b be       	out	0x3b, r0	; 59
    17d0:	0f 90       	pop	r0
    17d2:	09 be       	out	0x39, r0	; 57
    17d4:	0f 90       	pop	r0
    17d6:	08 be       	out	0x38, r0	; 56
    17d8:	0f 90       	pop	r0
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	0f 90       	pop	r0
    17de:	1f 90       	pop	r1
    17e0:	18 95       	reti

000017e2 <__vector_109>:
 *
 * This function will handle interrupt on Timer Counter F0 error and
 * call the callback function.
 */
ISR(TCF0_ERR_vect)
{
    17e2:	1f 92       	push	r1
    17e4:	0f 92       	push	r0
    17e6:	0f b6       	in	r0, 0x3f	; 63
    17e8:	0f 92       	push	r0
    17ea:	11 24       	eor	r1, r1
    17ec:	08 b6       	in	r0, 0x38	; 56
    17ee:	0f 92       	push	r0
    17f0:	18 be       	out	0x38, r1	; 56
    17f2:	09 b6       	in	r0, 0x39	; 57
    17f4:	0f 92       	push	r0
    17f6:	19 be       	out	0x39, r1	; 57
    17f8:	0b b6       	in	r0, 0x3b	; 59
    17fa:	0f 92       	push	r0
    17fc:	1b be       	out	0x3b, r1	; 59
    17fe:	2f 93       	push	r18
    1800:	3f 93       	push	r19
    1802:	4f 93       	push	r20
    1804:	5f 93       	push	r21
    1806:	6f 93       	push	r22
    1808:	7f 93       	push	r23
    180a:	8f 93       	push	r24
    180c:	9f 93       	push	r25
    180e:	af 93       	push	r26
    1810:	bf 93       	push	r27
    1812:	ef 93       	push	r30
    1814:	ff 93       	push	r31
	if (tc_tcf0_err_callback) {
    1816:	e0 91 5e 20 	lds	r30, 0x205E
    181a:	f0 91 5f 20 	lds	r31, 0x205F
    181e:	30 97       	sbiw	r30, 0x00	; 0
    1820:	09 f0       	breq	.+2      	; 0x1824 <__vector_109+0x42>
		tc_tcf0_err_callback();
    1822:	19 95       	eicall
	}
}
    1824:	ff 91       	pop	r31
    1826:	ef 91       	pop	r30
    1828:	bf 91       	pop	r27
    182a:	af 91       	pop	r26
    182c:	9f 91       	pop	r25
    182e:	8f 91       	pop	r24
    1830:	7f 91       	pop	r23
    1832:	6f 91       	pop	r22
    1834:	5f 91       	pop	r21
    1836:	4f 91       	pop	r20
    1838:	3f 91       	pop	r19
    183a:	2f 91       	pop	r18
    183c:	0f 90       	pop	r0
    183e:	0b be       	out	0x3b, r0	; 59
    1840:	0f 90       	pop	r0
    1842:	09 be       	out	0x39, r0	; 57
    1844:	0f 90       	pop	r0
    1846:	08 be       	out	0x38, r0	; 56
    1848:	0f 90       	pop	r0
    184a:	0f be       	out	0x3f, r0	; 63
    184c:	0f 90       	pop	r0
    184e:	1f 90       	pop	r1
    1850:	18 95       	reti

00001852 <__vector_110>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF0_CCA_vect)
{
    1852:	1f 92       	push	r1
    1854:	0f 92       	push	r0
    1856:	0f b6       	in	r0, 0x3f	; 63
    1858:	0f 92       	push	r0
    185a:	11 24       	eor	r1, r1
    185c:	08 b6       	in	r0, 0x38	; 56
    185e:	0f 92       	push	r0
    1860:	18 be       	out	0x38, r1	; 56
    1862:	09 b6       	in	r0, 0x39	; 57
    1864:	0f 92       	push	r0
    1866:	19 be       	out	0x39, r1	; 57
    1868:	0b b6       	in	r0, 0x3b	; 59
    186a:	0f 92       	push	r0
    186c:	1b be       	out	0x3b, r1	; 59
    186e:	2f 93       	push	r18
    1870:	3f 93       	push	r19
    1872:	4f 93       	push	r20
    1874:	5f 93       	push	r21
    1876:	6f 93       	push	r22
    1878:	7f 93       	push	r23
    187a:	8f 93       	push	r24
    187c:	9f 93       	push	r25
    187e:	af 93       	push	r26
    1880:	bf 93       	push	r27
    1882:	ef 93       	push	r30
    1884:	ff 93       	push	r31
	if (tc_tcf0_cca_callback) {
    1886:	e0 91 5c 20 	lds	r30, 0x205C
    188a:	f0 91 5d 20 	lds	r31, 0x205D
    188e:	30 97       	sbiw	r30, 0x00	; 0
    1890:	09 f0       	breq	.+2      	; 0x1894 <__vector_110+0x42>
		tc_tcf0_cca_callback();
    1892:	19 95       	eicall
	}
}
    1894:	ff 91       	pop	r31
    1896:	ef 91       	pop	r30
    1898:	bf 91       	pop	r27
    189a:	af 91       	pop	r26
    189c:	9f 91       	pop	r25
    189e:	8f 91       	pop	r24
    18a0:	7f 91       	pop	r23
    18a2:	6f 91       	pop	r22
    18a4:	5f 91       	pop	r21
    18a6:	4f 91       	pop	r20
    18a8:	3f 91       	pop	r19
    18aa:	2f 91       	pop	r18
    18ac:	0f 90       	pop	r0
    18ae:	0b be       	out	0x3b, r0	; 59
    18b0:	0f 90       	pop	r0
    18b2:	09 be       	out	0x39, r0	; 57
    18b4:	0f 90       	pop	r0
    18b6:	08 be       	out	0x38, r0	; 56
    18b8:	0f 90       	pop	r0
    18ba:	0f be       	out	0x3f, r0	; 63
    18bc:	0f 90       	pop	r0
    18be:	1f 90       	pop	r1
    18c0:	18 95       	reti

000018c2 <__vector_111>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF0_CCB_vect)
{
    18c2:	1f 92       	push	r1
    18c4:	0f 92       	push	r0
    18c6:	0f b6       	in	r0, 0x3f	; 63
    18c8:	0f 92       	push	r0
    18ca:	11 24       	eor	r1, r1
    18cc:	08 b6       	in	r0, 0x38	; 56
    18ce:	0f 92       	push	r0
    18d0:	18 be       	out	0x38, r1	; 56
    18d2:	09 b6       	in	r0, 0x39	; 57
    18d4:	0f 92       	push	r0
    18d6:	19 be       	out	0x39, r1	; 57
    18d8:	0b b6       	in	r0, 0x3b	; 59
    18da:	0f 92       	push	r0
    18dc:	1b be       	out	0x3b, r1	; 59
    18de:	2f 93       	push	r18
    18e0:	3f 93       	push	r19
    18e2:	4f 93       	push	r20
    18e4:	5f 93       	push	r21
    18e6:	6f 93       	push	r22
    18e8:	7f 93       	push	r23
    18ea:	8f 93       	push	r24
    18ec:	9f 93       	push	r25
    18ee:	af 93       	push	r26
    18f0:	bf 93       	push	r27
    18f2:	ef 93       	push	r30
    18f4:	ff 93       	push	r31
	if (tc_tcf0_ccb_callback) {
    18f6:	e0 91 5a 20 	lds	r30, 0x205A
    18fa:	f0 91 5b 20 	lds	r31, 0x205B
    18fe:	30 97       	sbiw	r30, 0x00	; 0
    1900:	09 f0       	breq	.+2      	; 0x1904 <__vector_111+0x42>
		tc_tcf0_ccb_callback();
    1902:	19 95       	eicall
	}
}
    1904:	ff 91       	pop	r31
    1906:	ef 91       	pop	r30
    1908:	bf 91       	pop	r27
    190a:	af 91       	pop	r26
    190c:	9f 91       	pop	r25
    190e:	8f 91       	pop	r24
    1910:	7f 91       	pop	r23
    1912:	6f 91       	pop	r22
    1914:	5f 91       	pop	r21
    1916:	4f 91       	pop	r20
    1918:	3f 91       	pop	r19
    191a:	2f 91       	pop	r18
    191c:	0f 90       	pop	r0
    191e:	0b be       	out	0x3b, r0	; 59
    1920:	0f 90       	pop	r0
    1922:	09 be       	out	0x39, r0	; 57
    1924:	0f 90       	pop	r0
    1926:	08 be       	out	0x38, r0	; 56
    1928:	0f 90       	pop	r0
    192a:	0f be       	out	0x3f, r0	; 63
    192c:	0f 90       	pop	r0
    192e:	1f 90       	pop	r1
    1930:	18 95       	reti

00001932 <__vector_112>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCF0_CCC_vect)
{
    1932:	1f 92       	push	r1
    1934:	0f 92       	push	r0
    1936:	0f b6       	in	r0, 0x3f	; 63
    1938:	0f 92       	push	r0
    193a:	11 24       	eor	r1, r1
    193c:	08 b6       	in	r0, 0x38	; 56
    193e:	0f 92       	push	r0
    1940:	18 be       	out	0x38, r1	; 56
    1942:	09 b6       	in	r0, 0x39	; 57
    1944:	0f 92       	push	r0
    1946:	19 be       	out	0x39, r1	; 57
    1948:	0b b6       	in	r0, 0x3b	; 59
    194a:	0f 92       	push	r0
    194c:	1b be       	out	0x3b, r1	; 59
    194e:	2f 93       	push	r18
    1950:	3f 93       	push	r19
    1952:	4f 93       	push	r20
    1954:	5f 93       	push	r21
    1956:	6f 93       	push	r22
    1958:	7f 93       	push	r23
    195a:	8f 93       	push	r24
    195c:	9f 93       	push	r25
    195e:	af 93       	push	r26
    1960:	bf 93       	push	r27
    1962:	ef 93       	push	r30
    1964:	ff 93       	push	r31
	if (tc_tcf0_ccc_callback) {
    1966:	e0 91 58 20 	lds	r30, 0x2058
    196a:	f0 91 59 20 	lds	r31, 0x2059
    196e:	30 97       	sbiw	r30, 0x00	; 0
    1970:	09 f0       	breq	.+2      	; 0x1974 <__vector_112+0x42>
		tc_tcf0_ccc_callback();
    1972:	19 95       	eicall
	}
}
    1974:	ff 91       	pop	r31
    1976:	ef 91       	pop	r30
    1978:	bf 91       	pop	r27
    197a:	af 91       	pop	r26
    197c:	9f 91       	pop	r25
    197e:	8f 91       	pop	r24
    1980:	7f 91       	pop	r23
    1982:	6f 91       	pop	r22
    1984:	5f 91       	pop	r21
    1986:	4f 91       	pop	r20
    1988:	3f 91       	pop	r19
    198a:	2f 91       	pop	r18
    198c:	0f 90       	pop	r0
    198e:	0b be       	out	0x3b, r0	; 59
    1990:	0f 90       	pop	r0
    1992:	09 be       	out	0x39, r0	; 57
    1994:	0f 90       	pop	r0
    1996:	08 be       	out	0x38, r0	; 56
    1998:	0f 90       	pop	r0
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	0f 90       	pop	r0
    199e:	1f 90       	pop	r1
    19a0:	18 95       	reti

000019a2 <__vector_113>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCF0_CCD_vect)
{
    19a2:	1f 92       	push	r1
    19a4:	0f 92       	push	r0
    19a6:	0f b6       	in	r0, 0x3f	; 63
    19a8:	0f 92       	push	r0
    19aa:	11 24       	eor	r1, r1
    19ac:	08 b6       	in	r0, 0x38	; 56
    19ae:	0f 92       	push	r0
    19b0:	18 be       	out	0x38, r1	; 56
    19b2:	09 b6       	in	r0, 0x39	; 57
    19b4:	0f 92       	push	r0
    19b6:	19 be       	out	0x39, r1	; 57
    19b8:	0b b6       	in	r0, 0x3b	; 59
    19ba:	0f 92       	push	r0
    19bc:	1b be       	out	0x3b, r1	; 59
    19be:	2f 93       	push	r18
    19c0:	3f 93       	push	r19
    19c2:	4f 93       	push	r20
    19c4:	5f 93       	push	r21
    19c6:	6f 93       	push	r22
    19c8:	7f 93       	push	r23
    19ca:	8f 93       	push	r24
    19cc:	9f 93       	push	r25
    19ce:	af 93       	push	r26
    19d0:	bf 93       	push	r27
    19d2:	ef 93       	push	r30
    19d4:	ff 93       	push	r31
	if (tc_tcf0_ccd_callback) {
    19d6:	e0 91 56 20 	lds	r30, 0x2056
    19da:	f0 91 57 20 	lds	r31, 0x2057
    19de:	30 97       	sbiw	r30, 0x00	; 0
    19e0:	09 f0       	breq	.+2      	; 0x19e4 <__vector_113+0x42>
		tc_tcf0_ccd_callback();
    19e2:	19 95       	eicall
	}
}
    19e4:	ff 91       	pop	r31
    19e6:	ef 91       	pop	r30
    19e8:	bf 91       	pop	r27
    19ea:	af 91       	pop	r26
    19ec:	9f 91       	pop	r25
    19ee:	8f 91       	pop	r24
    19f0:	7f 91       	pop	r23
    19f2:	6f 91       	pop	r22
    19f4:	5f 91       	pop	r21
    19f6:	4f 91       	pop	r20
    19f8:	3f 91       	pop	r19
    19fa:	2f 91       	pop	r18
    19fc:	0f 90       	pop	r0
    19fe:	0b be       	out	0x3b, r0	; 59
    1a00:	0f 90       	pop	r0
    1a02:	09 be       	out	0x39, r0	; 57
    1a04:	0f 90       	pop	r0
    1a06:	08 be       	out	0x38, r0	; 56
    1a08:	0f 90       	pop	r0
    1a0a:	0f be       	out	0x3f, r0	; 63
    1a0c:	0f 90       	pop	r0
    1a0e:	1f 90       	pop	r1
    1a10:	18 95       	reti

00001a12 <__vector_114>:
 *
 * This function will handle interrupt on Timer Counter F1 overflow and
 * call the callback function.
 */
ISR(TCF1_OVF_vect)
{
    1a12:	1f 92       	push	r1
    1a14:	0f 92       	push	r0
    1a16:	0f b6       	in	r0, 0x3f	; 63
    1a18:	0f 92       	push	r0
    1a1a:	11 24       	eor	r1, r1
    1a1c:	08 b6       	in	r0, 0x38	; 56
    1a1e:	0f 92       	push	r0
    1a20:	18 be       	out	0x38, r1	; 56
    1a22:	09 b6       	in	r0, 0x39	; 57
    1a24:	0f 92       	push	r0
    1a26:	19 be       	out	0x39, r1	; 57
    1a28:	0b b6       	in	r0, 0x3b	; 59
    1a2a:	0f 92       	push	r0
    1a2c:	1b be       	out	0x3b, r1	; 59
    1a2e:	2f 93       	push	r18
    1a30:	3f 93       	push	r19
    1a32:	4f 93       	push	r20
    1a34:	5f 93       	push	r21
    1a36:	6f 93       	push	r22
    1a38:	7f 93       	push	r23
    1a3a:	8f 93       	push	r24
    1a3c:	9f 93       	push	r25
    1a3e:	af 93       	push	r26
    1a40:	bf 93       	push	r27
    1a42:	ef 93       	push	r30
    1a44:	ff 93       	push	r31
	if (tc_tcf1_ovf_callback) {
    1a46:	e0 91 54 20 	lds	r30, 0x2054
    1a4a:	f0 91 55 20 	lds	r31, 0x2055
    1a4e:	30 97       	sbiw	r30, 0x00	; 0
    1a50:	09 f0       	breq	.+2      	; 0x1a54 <__vector_114+0x42>
		tc_tcf1_ovf_callback();
    1a52:	19 95       	eicall
	}
}
    1a54:	ff 91       	pop	r31
    1a56:	ef 91       	pop	r30
    1a58:	bf 91       	pop	r27
    1a5a:	af 91       	pop	r26
    1a5c:	9f 91       	pop	r25
    1a5e:	8f 91       	pop	r24
    1a60:	7f 91       	pop	r23
    1a62:	6f 91       	pop	r22
    1a64:	5f 91       	pop	r21
    1a66:	4f 91       	pop	r20
    1a68:	3f 91       	pop	r19
    1a6a:	2f 91       	pop	r18
    1a6c:	0f 90       	pop	r0
    1a6e:	0b be       	out	0x3b, r0	; 59
    1a70:	0f 90       	pop	r0
    1a72:	09 be       	out	0x39, r0	; 57
    1a74:	0f 90       	pop	r0
    1a76:	08 be       	out	0x38, r0	; 56
    1a78:	0f 90       	pop	r0
    1a7a:	0f be       	out	0x3f, r0	; 63
    1a7c:	0f 90       	pop	r0
    1a7e:	1f 90       	pop	r1
    1a80:	18 95       	reti

00001a82 <__vector_115>:
 *
 * This function will handle interrupt on Timer Counter F1 error and
 * call the callback function.
 */
ISR(TCF1_ERR_vect)
{
    1a82:	1f 92       	push	r1
    1a84:	0f 92       	push	r0
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	0f 92       	push	r0
    1a8a:	11 24       	eor	r1, r1
    1a8c:	08 b6       	in	r0, 0x38	; 56
    1a8e:	0f 92       	push	r0
    1a90:	18 be       	out	0x38, r1	; 56
    1a92:	09 b6       	in	r0, 0x39	; 57
    1a94:	0f 92       	push	r0
    1a96:	19 be       	out	0x39, r1	; 57
    1a98:	0b b6       	in	r0, 0x3b	; 59
    1a9a:	0f 92       	push	r0
    1a9c:	1b be       	out	0x3b, r1	; 59
    1a9e:	2f 93       	push	r18
    1aa0:	3f 93       	push	r19
    1aa2:	4f 93       	push	r20
    1aa4:	5f 93       	push	r21
    1aa6:	6f 93       	push	r22
    1aa8:	7f 93       	push	r23
    1aaa:	8f 93       	push	r24
    1aac:	9f 93       	push	r25
    1aae:	af 93       	push	r26
    1ab0:	bf 93       	push	r27
    1ab2:	ef 93       	push	r30
    1ab4:	ff 93       	push	r31
	if (tc_tcf1_err_callback) {
    1ab6:	e0 91 52 20 	lds	r30, 0x2052
    1aba:	f0 91 53 20 	lds	r31, 0x2053
    1abe:	30 97       	sbiw	r30, 0x00	; 0
    1ac0:	09 f0       	breq	.+2      	; 0x1ac4 <__vector_115+0x42>
		tc_tcf1_err_callback();
    1ac2:	19 95       	eicall
	}
}
    1ac4:	ff 91       	pop	r31
    1ac6:	ef 91       	pop	r30
    1ac8:	bf 91       	pop	r27
    1aca:	af 91       	pop	r26
    1acc:	9f 91       	pop	r25
    1ace:	8f 91       	pop	r24
    1ad0:	7f 91       	pop	r23
    1ad2:	6f 91       	pop	r22
    1ad4:	5f 91       	pop	r21
    1ad6:	4f 91       	pop	r20
    1ad8:	3f 91       	pop	r19
    1ada:	2f 91       	pop	r18
    1adc:	0f 90       	pop	r0
    1ade:	0b be       	out	0x3b, r0	; 59
    1ae0:	0f 90       	pop	r0
    1ae2:	09 be       	out	0x39, r0	; 57
    1ae4:	0f 90       	pop	r0
    1ae6:	08 be       	out	0x38, r0	; 56
    1ae8:	0f 90       	pop	r0
    1aea:	0f be       	out	0x3f, r0	; 63
    1aec:	0f 90       	pop	r0
    1aee:	1f 90       	pop	r1
    1af0:	18 95       	reti

00001af2 <__vector_116>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF1_CCA_vect)
{
    1af2:	1f 92       	push	r1
    1af4:	0f 92       	push	r0
    1af6:	0f b6       	in	r0, 0x3f	; 63
    1af8:	0f 92       	push	r0
    1afa:	11 24       	eor	r1, r1
    1afc:	08 b6       	in	r0, 0x38	; 56
    1afe:	0f 92       	push	r0
    1b00:	18 be       	out	0x38, r1	; 56
    1b02:	09 b6       	in	r0, 0x39	; 57
    1b04:	0f 92       	push	r0
    1b06:	19 be       	out	0x39, r1	; 57
    1b08:	0b b6       	in	r0, 0x3b	; 59
    1b0a:	0f 92       	push	r0
    1b0c:	1b be       	out	0x3b, r1	; 59
    1b0e:	2f 93       	push	r18
    1b10:	3f 93       	push	r19
    1b12:	4f 93       	push	r20
    1b14:	5f 93       	push	r21
    1b16:	6f 93       	push	r22
    1b18:	7f 93       	push	r23
    1b1a:	8f 93       	push	r24
    1b1c:	9f 93       	push	r25
    1b1e:	af 93       	push	r26
    1b20:	bf 93       	push	r27
    1b22:	ef 93       	push	r30
    1b24:	ff 93       	push	r31
	if (tc_tcf1_cca_callback) {
    1b26:	e0 91 50 20 	lds	r30, 0x2050
    1b2a:	f0 91 51 20 	lds	r31, 0x2051
    1b2e:	30 97       	sbiw	r30, 0x00	; 0
    1b30:	09 f0       	breq	.+2      	; 0x1b34 <__vector_116+0x42>
		tc_tcf1_cca_callback();
    1b32:	19 95       	eicall
	}
}
    1b34:	ff 91       	pop	r31
    1b36:	ef 91       	pop	r30
    1b38:	bf 91       	pop	r27
    1b3a:	af 91       	pop	r26
    1b3c:	9f 91       	pop	r25
    1b3e:	8f 91       	pop	r24
    1b40:	7f 91       	pop	r23
    1b42:	6f 91       	pop	r22
    1b44:	5f 91       	pop	r21
    1b46:	4f 91       	pop	r20
    1b48:	3f 91       	pop	r19
    1b4a:	2f 91       	pop	r18
    1b4c:	0f 90       	pop	r0
    1b4e:	0b be       	out	0x3b, r0	; 59
    1b50:	0f 90       	pop	r0
    1b52:	09 be       	out	0x39, r0	; 57
    1b54:	0f 90       	pop	r0
    1b56:	08 be       	out	0x38, r0	; 56
    1b58:	0f 90       	pop	r0
    1b5a:	0f be       	out	0x3f, r0	; 63
    1b5c:	0f 90       	pop	r0
    1b5e:	1f 90       	pop	r1
    1b60:	18 95       	reti

00001b62 <__vector_117>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF1_CCB_vect)
{
    1b62:	1f 92       	push	r1
    1b64:	0f 92       	push	r0
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	0f 92       	push	r0
    1b6a:	11 24       	eor	r1, r1
    1b6c:	08 b6       	in	r0, 0x38	; 56
    1b6e:	0f 92       	push	r0
    1b70:	18 be       	out	0x38, r1	; 56
    1b72:	09 b6       	in	r0, 0x39	; 57
    1b74:	0f 92       	push	r0
    1b76:	19 be       	out	0x39, r1	; 57
    1b78:	0b b6       	in	r0, 0x3b	; 59
    1b7a:	0f 92       	push	r0
    1b7c:	1b be       	out	0x3b, r1	; 59
    1b7e:	2f 93       	push	r18
    1b80:	3f 93       	push	r19
    1b82:	4f 93       	push	r20
    1b84:	5f 93       	push	r21
    1b86:	6f 93       	push	r22
    1b88:	7f 93       	push	r23
    1b8a:	8f 93       	push	r24
    1b8c:	9f 93       	push	r25
    1b8e:	af 93       	push	r26
    1b90:	bf 93       	push	r27
    1b92:	ef 93       	push	r30
    1b94:	ff 93       	push	r31
	if (tc_tcf1_ccb_callback) {
    1b96:	e0 91 4e 20 	lds	r30, 0x204E
    1b9a:	f0 91 4f 20 	lds	r31, 0x204F
    1b9e:	30 97       	sbiw	r30, 0x00	; 0
    1ba0:	09 f0       	breq	.+2      	; 0x1ba4 <__vector_117+0x42>
		tc_tcf1_ccb_callback();
    1ba2:	19 95       	eicall
	}
}
    1ba4:	ff 91       	pop	r31
    1ba6:	ef 91       	pop	r30
    1ba8:	bf 91       	pop	r27
    1baa:	af 91       	pop	r26
    1bac:	9f 91       	pop	r25
    1bae:	8f 91       	pop	r24
    1bb0:	7f 91       	pop	r23
    1bb2:	6f 91       	pop	r22
    1bb4:	5f 91       	pop	r21
    1bb6:	4f 91       	pop	r20
    1bb8:	3f 91       	pop	r19
    1bba:	2f 91       	pop	r18
    1bbc:	0f 90       	pop	r0
    1bbe:	0b be       	out	0x3b, r0	; 59
    1bc0:	0f 90       	pop	r0
    1bc2:	09 be       	out	0x39, r0	; 57
    1bc4:	0f 90       	pop	r0
    1bc6:	08 be       	out	0x38, r0	; 56
    1bc8:	0f 90       	pop	r0
    1bca:	0f be       	out	0x3f, r0	; 63
    1bcc:	0f 90       	pop	r0
    1bce:	1f 90       	pop	r1
    1bd0:	18 95       	reti

00001bd2 <tc_enable>:
 *
 * \note
 * unmask TC clock (sysclk), but does not configure the TC clock source.
 */
void tc_enable(volatile void *tc)
{
    1bd2:	cf 93       	push	r28

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1bd4:	cf b7       	in	r28, 0x3f	; 63
	cpu_irq_disable();
    1bd6:	f8 94       	cli
	irqflags_t iflags = cpu_irq_save();

#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1bd8:	28 2f       	mov	r18, r24
    1bda:	39 2f       	mov	r19, r25
    1bdc:	21 15       	cp	r18, r1
    1bde:	88 e0       	ldi	r24, 0x08	; 8
    1be0:	38 07       	cpc	r19, r24
    1be2:	59 f4       	brne	.+22     	; 0x1bfa <tc_enable+0x28>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    1be4:	61 e0       	ldi	r22, 0x01	; 1
    1be6:	83 e0       	ldi	r24, 0x03	; 3
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1bee:	64 e0       	ldi	r22, 0x04	; 4
    1bf0:	83 e0       	ldi	r24, 0x03	; 3
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1bf8:	6a c0       	rjmp	.+212    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1bfa:	20 34       	cpi	r18, 0x40	; 64
    1bfc:	88 e0       	ldi	r24, 0x08	; 8
    1bfe:	38 07       	cpc	r19, r24
    1c00:	59 f4       	brne	.+22     	; 0x1c18 <tc_enable+0x46>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    1c02:	62 e0       	ldi	r22, 0x02	; 2
    1c04:	83 e0       	ldi	r24, 0x03	; 3
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1c0c:	64 e0       	ldi	r22, 0x04	; 4
    1c0e:	83 e0       	ldi	r24, 0x03	; 3
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c16:	5b c0       	rjmp	.+182    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1c18:	21 15       	cp	r18, r1
    1c1a:	89 e0       	ldi	r24, 0x09	; 9
    1c1c:	38 07       	cpc	r19, r24
    1c1e:	59 f4       	brne	.+22     	; 0x1c36 <tc_enable+0x64>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    1c20:	61 e0       	ldi	r22, 0x01	; 1
    1c22:	84 e0       	ldi	r24, 0x04	; 4
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c2a:	64 e0       	ldi	r22, 0x04	; 4
    1c2c:	84 e0       	ldi	r24, 0x04	; 4
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c34:	4c c0       	rjmp	.+152    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
    1c36:	20 34       	cpi	r18, 0x40	; 64
    1c38:	89 e0       	ldi	r24, 0x09	; 9
    1c3a:	38 07       	cpc	r19, r24
    1c3c:	59 f4       	brne	.+22     	; 0x1c54 <tc_enable+0x82>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    1c3e:	62 e0       	ldi	r22, 0x02	; 2
    1c40:	84 e0       	ldi	r24, 0x04	; 4
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c48:	64 e0       	ldi	r22, 0x04	; 4
    1c4a:	84 e0       	ldi	r24, 0x04	; 4
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c52:	3d c0       	rjmp	.+122    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    1c54:	21 15       	cp	r18, r1
    1c56:	8a e0       	ldi	r24, 0x0A	; 10
    1c58:	38 07       	cpc	r19, r24
    1c5a:	59 f4       	brne	.+22     	; 0x1c72 <tc_enable+0xa0>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    1c5c:	61 e0       	ldi	r22, 0x01	; 1
    1c5e:	85 e0       	ldi	r24, 0x05	; 5
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c66:	64 e0       	ldi	r22, 0x04	; 4
    1c68:	85 e0       	ldi	r24, 0x05	; 5
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c70:	2e c0       	rjmp	.+92     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCE1
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
    1c72:	20 34       	cpi	r18, 0x40	; 64
    1c74:	8a e0       	ldi	r24, 0x0A	; 10
    1c76:	38 07       	cpc	r19, r24
    1c78:	59 f4       	brne	.+22     	; 0x1c90 <tc_enable+0xbe>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    1c7a:	62 e0       	ldi	r22, 0x02	; 2
    1c7c:	85 e0       	ldi	r24, 0x05	; 5
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c84:	64 e0       	ldi	r22, 0x04	; 4
    1c86:	85 e0       	ldi	r24, 0x05	; 5
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c8e:	1f c0       	rjmp	.+62     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    1c90:	21 15       	cp	r18, r1
    1c92:	8b e0       	ldi	r24, 0x0B	; 11
    1c94:	38 07       	cpc	r19, r24
    1c96:	59 f4       	brne	.+22     	; 0x1cae <tc_enable+0xdc>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    1c98:	61 e0       	ldi	r22, 0x01	; 1
    1c9a:	86 e0       	ldi	r24, 0x06	; 6
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1ca2:	64 e0       	ldi	r22, 0x04	; 4
    1ca4:	86 e0       	ldi	r24, 0x06	; 6
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1cac:	10 c0       	rjmp	.+32     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCF1
	if ((uintptr_t) tc == (uintptr_t) & TCF1) {
    1cae:	20 34       	cpi	r18, 0x40	; 64
    1cb0:	3b 40       	sbci	r19, 0x0B	; 11
    1cb2:	59 f4       	brne	.+22     	; 0x1cca <tc_enable+0xf8>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    1cb4:	62 e0       	ldi	r22, 0x02	; 2
    1cb6:	86 e0       	ldi	r24, 0x06	; 6
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1cbe:	64 e0       	ldi	r22, 0x04	; 4
    1cc0:	86 e0       	ldi	r24, 0x06	; 6
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1cc8:	02 c0       	rjmp	.+4      	; 0x1cce <tc_enable+0xfc>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cca:	cf bf       	out	0x3f, r28	; 63
    1ccc:	09 c0       	rjmp	.+18     	; 0x1ce0 <tc_enable+0x10e>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1cce:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    1cd0:	f8 94       	cli
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    1cd2:	ed ea       	ldi	r30, 0xAD	; 173
    1cd4:	f0 e2       	ldi	r31, 0x20	; 32
    1cd6:	90 81       	ld	r25, Z
    1cd8:	9f 5f       	subi	r25, 0xFF	; 255
    1cda:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cdc:	8f bf       	out	0x3f, r24	; 63
    1cde:	cf bf       	out	0x3f, r28	; 63
		cpu_irq_restore(iflags);
		return;
	}
	sleepmgr_lock_mode(SLEEPMGR_IDLE);
	cpu_irq_restore(iflags);
}
    1ce0:	cf 91       	pop	r28
    1ce2:	08 95       	ret

00001ce4 <usart_putchar>:
	}
	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
    1ce4:	fc 01       	movw	r30, r24
    1ce6:	81 81       	ldd	r24, Z+1	; 0x01
    1ce8:	85 ff       	sbrs	r24, 5
    1cea:	fd cf       	rjmp	.-6      	; 0x1ce6 <usart_putchar+0x2>
    1cec:	60 83       	st	Z, r22
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	08 95       	ret

00001cf4 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
    1cf4:	4f 92       	push	r4
    1cf6:	5f 92       	push	r5
    1cf8:	6f 92       	push	r6
    1cfa:	7f 92       	push	r7
    1cfc:	8f 92       	push	r8
    1cfe:	9f 92       	push	r9
    1d00:	af 92       	push	r10
    1d02:	bf 92       	push	r11
    1d04:	cf 92       	push	r12
    1d06:	df 92       	push	r13
    1d08:	ef 92       	push	r14
    1d0a:	ff 92       	push	r15
    1d0c:	0f 93       	push	r16
    1d0e:	1f 93       	push	r17
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	ec 01       	movw	r28, r24
    1d16:	4a 01       	movw	r8, r20
    1d18:	5b 01       	movw	r10, r22
    1d1a:	28 01       	movw	r4, r16
    1d1c:	39 01       	movw	r6, r18

	/*
	 * Check if the hardware supports the given baud rate
	 */
	// 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN)
	max_rate = cpu_hz / 8;
    1d1e:	d9 01       	movw	r26, r18
    1d20:	c8 01       	movw	r24, r16
    1d22:	68 94       	set
    1d24:	12 f8       	bld	r1, 2
    1d26:	b6 95       	lsr	r27
    1d28:	a7 95       	ror	r26
    1d2a:	97 95       	ror	r25
    1d2c:	87 95       	ror	r24
    1d2e:	16 94       	lsr	r1
    1d30:	d1 f7       	brne	.-12     	; 0x1d26 <usart_set_baudrate+0x32>
	// 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1)
	min_rate = cpu_hz / 4194304;
    1d32:	b9 01       	movw	r22, r18
    1d34:	a8 01       	movw	r20, r16
    1d36:	03 2e       	mov	r0, r19
    1d38:	36 e1       	ldi	r19, 0x16	; 22
    1d3a:	76 95       	lsr	r23
    1d3c:	67 95       	ror	r22
    1d3e:	57 95       	ror	r21
    1d40:	47 95       	ror	r20
    1d42:	3a 95       	dec	r19
    1d44:	d1 f7       	brne	.-12     	; 0x1d3a <usart_set_baudrate+0x46>
    1d46:	30 2d       	mov	r19, r0

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d48:	2c 81       	ldd	r18, Y+4	; 0x04
    1d4a:	22 fd       	sbrc	r18, 2
    1d4c:	08 c0       	rjmp	.+16     	; 0x1d5e <usart_set_baudrate+0x6a>
		max_rate /= 2;
    1d4e:	b6 95       	lsr	r27
    1d50:	a7 95       	ror	r26
    1d52:	97 95       	ror	r25
    1d54:	87 95       	ror	r24
		min_rate /= 2;
    1d56:	76 95       	lsr	r23
    1d58:	67 95       	ror	r22
    1d5a:	57 95       	ror	r21
    1d5c:	47 95       	ror	r20
	}

	if ((baud > max_rate) || (baud < min_rate)) {
    1d5e:	88 15       	cp	r24, r8
    1d60:	99 05       	cpc	r25, r9
    1d62:	aa 05       	cpc	r26, r10
    1d64:	bb 05       	cpc	r27, r11
    1d66:	08 f4       	brcc	.+2      	; 0x1d6a <usart_set_baudrate+0x76>
    1d68:	a6 c0       	rjmp	.+332    	; 0x1eb6 <usart_set_baudrate+0x1c2>
    1d6a:	84 16       	cp	r8, r20
    1d6c:	95 06       	cpc	r9, r21
    1d6e:	a6 06       	cpc	r10, r22
    1d70:	b7 06       	cpc	r11, r23
    1d72:	08 f4       	brcc	.+2      	; 0x1d76 <usart_set_baudrate+0x82>
    1d74:	a2 c0       	rjmp	.+324    	; 0x1eba <usart_set_baudrate+0x1c6>
	}

	/*
	 * Check if double speed is enabled.
	 */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d76:	8c 81       	ldd	r24, Y+4	; 0x04
    1d78:	82 fd       	sbrc	r24, 2
    1d7a:	04 c0       	rjmp	.+8      	; 0x1d84 <usart_set_baudrate+0x90>
		baud *= 2;
    1d7c:	88 0c       	add	r8, r8
    1d7e:	99 1c       	adc	r9, r9
    1d80:	aa 1c       	adc	r10, r10
    1d82:	bb 1c       	adc	r11, r11

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
    1d84:	c3 01       	movw	r24, r6
    1d86:	b2 01       	movw	r22, r4
    1d88:	a5 01       	movw	r20, r10
    1d8a:	94 01       	movw	r18, r8
    1d8c:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
    1d90:	2f 3f       	cpi	r18, 0xFF	; 255
    1d92:	31 05       	cpc	r19, r1
    1d94:	41 05       	cpc	r20, r1
    1d96:	51 05       	cpc	r21, r1
    1d98:	08 f4       	brcc	.+2      	; 0x1d9c <usart_set_baudrate+0xa8>
    1d9a:	91 c0       	rjmp	.+290    	; 0x1ebe <usart_set_baudrate+0x1ca>
	}

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
    1d9c:	c1 2c       	mov	r12, r1
    1d9e:	d1 2c       	mov	r13, r1
    1da0:	76 01       	movw	r14, r12
    1da2:	ca 94       	dec	r12
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1da4:	19 ef       	ldi	r17, 0xF9	; 249
    1da6:	05 c0       	rjmp	.+10     	; 0x1db2 <usart_set_baudrate+0xbe>
		if (ratio < limit) {
    1da8:	2c 15       	cp	r18, r12
    1daa:	3d 05       	cpc	r19, r13
    1dac:	4e 05       	cpc	r20, r14
    1dae:	5f 05       	cpc	r21, r15
    1db0:	68 f0       	brcs	.+26     	; 0x1dcc <usart_set_baudrate+0xd8>
			break;
		}

		limit <<= 1;
    1db2:	cc 0c       	add	r12, r12
    1db4:	dd 1c       	adc	r13, r13
    1db6:	ee 1c       	adc	r14, r14
    1db8:	ff 1c       	adc	r15, r15

		if (exp < -3) {
    1dba:	1d 3f       	cpi	r17, 0xFD	; 253
    1dbc:	14 f4       	brge	.+4      	; 0x1dc2 <usart_set_baudrate+0xce>
			limit |= 1;
    1dbe:	68 94       	set
    1dc0:	c0 f8       	bld	r12, 0
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1dc2:	1f 5f       	subi	r17, 0xFF	; 255
    1dc4:	17 30       	cpi	r17, 0x07	; 7
    1dc6:	81 f7       	brne	.-32     	; 0x1da8 <usart_set_baudrate+0xb4>
    1dc8:	21 2f       	mov	r18, r17
    1dca:	50 c0       	rjmp	.+160    	; 0x1e6c <usart_set_baudrate+0x178>
    1dcc:	21 2f       	mov	r18, r17
	 * operation as it ensures that we never exceeed 2**32 at any point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
    1dce:	11 23       	and	r17, r17
    1dd0:	0c f0       	brlt	.+2      	; 0x1dd4 <usart_set_baudrate+0xe0>
    1dd2:	4c c0       	rjmp	.+152    	; 0x1e6c <usart_set_baudrate+0x178>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1dd4:	d5 01       	movw	r26, r10
    1dd6:	c4 01       	movw	r24, r8
    1dd8:	88 0f       	add	r24, r24
    1dda:	99 1f       	adc	r25, r25
    1ddc:	aa 1f       	adc	r26, r26
    1dde:	bb 1f       	adc	r27, r27
    1de0:	88 0f       	add	r24, r24
    1de2:	99 1f       	adc	r25, r25
    1de4:	aa 1f       	adc	r26, r26
    1de6:	bb 1f       	adc	r27, r27
    1de8:	88 0f       	add	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	aa 1f       	adc	r26, r26
    1dee:	bb 1f       	adc	r27, r27
    1df0:	48 1a       	sub	r4, r24
    1df2:	59 0a       	sbc	r5, r25
    1df4:	6a 0a       	sbc	r6, r26
    1df6:	7b 0a       	sbc	r7, r27
		 * If we end up with a left-shift after taking the final divide-by-8
		 * into account, do the shift before the divide. Otherwise, left-shift
		 * the denominator instead (effectively resulting in an overall right
		 * shift.)
		 */
		if (exp <= -3) {
    1df8:	1e 3f       	cpi	r17, 0xFE	; 254
    1dfa:	f4 f4       	brge	.+60     	; 0x1e38 <usart_set_baudrate+0x144>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
    1dfc:	6d ef       	ldi	r22, 0xFD	; 253
    1dfe:	7f ef       	ldi	r23, 0xFF	; 255
    1e00:	61 1b       	sub	r22, r17
    1e02:	71 09       	sbc	r23, r1
    1e04:	17 fd       	sbrc	r17, 7
    1e06:	73 95       	inc	r23
    1e08:	04 c0       	rjmp	.+8      	; 0x1e12 <usart_set_baudrate+0x11e>
    1e0a:	44 0c       	add	r4, r4
    1e0c:	55 1c       	adc	r5, r5
    1e0e:	66 1c       	adc	r6, r6
    1e10:	77 1c       	adc	r7, r7
    1e12:	6a 95       	dec	r22
    1e14:	d2 f7       	brpl	.-12     	; 0x1e0a <usart_set_baudrate+0x116>
    1e16:	d5 01       	movw	r26, r10
    1e18:	c4 01       	movw	r24, r8
    1e1a:	b6 95       	lsr	r27
    1e1c:	a7 95       	ror	r26
    1e1e:	97 95       	ror	r25
    1e20:	87 95       	ror	r24
    1e22:	bc 01       	movw	r22, r24
    1e24:	cd 01       	movw	r24, r26
    1e26:	64 0d       	add	r22, r4
    1e28:	75 1d       	adc	r23, r5
    1e2a:	86 1d       	adc	r24, r6
    1e2c:	97 1d       	adc	r25, r7
    1e2e:	a5 01       	movw	r20, r10
    1e30:	94 01       	movw	r18, r8
    1e32:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>
    1e36:	36 c0       	rjmp	.+108    	; 0x1ea4 <usart_set_baudrate+0x1b0>
		} else {
			baud <<= exp + 3;
    1e38:	23 e0       	ldi	r18, 0x03	; 3
    1e3a:	21 0f       	add	r18, r17
    1e3c:	d5 01       	movw	r26, r10
    1e3e:	c4 01       	movw	r24, r8
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <usart_set_baudrate+0x156>
    1e42:	88 0f       	add	r24, r24
    1e44:	99 1f       	adc	r25, r25
    1e46:	aa 1f       	adc	r26, r26
    1e48:	bb 1f       	adc	r27, r27
    1e4a:	2a 95       	dec	r18
    1e4c:	d2 f7       	brpl	.-12     	; 0x1e42 <usart_set_baudrate+0x14e>
    1e4e:	9c 01       	movw	r18, r24
    1e50:	ad 01       	movw	r20, r26
			div = (cpu_hz + baud / 2) / baud;
    1e52:	b6 95       	lsr	r27
    1e54:	a7 95       	ror	r26
    1e56:	97 95       	ror	r25
    1e58:	87 95       	ror	r24
    1e5a:	bc 01       	movw	r22, r24
    1e5c:	cd 01       	movw	r24, r26
    1e5e:	64 0d       	add	r22, r4
    1e60:	75 1d       	adc	r23, r5
    1e62:	86 1d       	adc	r24, r6
    1e64:	97 1d       	adc	r25, r7
    1e66:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>
    1e6a:	1c c0       	rjmp	.+56     	; 0x1ea4 <usart_set_baudrate+0x1b0>
	} else {
		/*
		 * We will always do a right shift in this case, but we need to shift
		 * three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
    1e6c:	2d 5f       	subi	r18, 0xFD	; 253
    1e6e:	d5 01       	movw	r26, r10
    1e70:	c4 01       	movw	r24, r8
    1e72:	04 c0       	rjmp	.+8      	; 0x1e7c <usart_set_baudrate+0x188>
    1e74:	88 0f       	add	r24, r24
    1e76:	99 1f       	adc	r25, r25
    1e78:	aa 1f       	adc	r26, r26
    1e7a:	bb 1f       	adc	r27, r27
    1e7c:	2a 95       	dec	r18
    1e7e:	d2 f7       	brpl	.-12     	; 0x1e74 <usart_set_baudrate+0x180>
    1e80:	9c 01       	movw	r18, r24
    1e82:	ad 01       	movw	r20, r26
		div = (cpu_hz + baud / 2) / baud - 1;
    1e84:	b6 95       	lsr	r27
    1e86:	a7 95       	ror	r26
    1e88:	97 95       	ror	r25
    1e8a:	87 95       	ror	r24
    1e8c:	bc 01       	movw	r22, r24
    1e8e:	cd 01       	movw	r24, r26
    1e90:	64 0d       	add	r22, r4
    1e92:	75 1d       	adc	r23, r5
    1e94:	86 1d       	adc	r24, r6
    1e96:	97 1d       	adc	r25, r7
    1e98:	0e 94 27 2b 	call	0x564e	; 0x564e <__udivmodsi4>
    1e9c:	21 50       	subi	r18, 0x01	; 1
    1e9e:	31 09       	sbc	r19, r1
    1ea0:	41 09       	sbc	r20, r1
    1ea2:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
    1ea4:	83 2f       	mov	r24, r19
    1ea6:	8f 70       	andi	r24, 0x0F	; 15
    1ea8:	12 95       	swap	r17
    1eaa:	10 7f       	andi	r17, 0xF0	; 240
    1eac:	18 2b       	or	r17, r24
    1eae:	1f 83       	std	Y+7, r17	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
    1eb0:	2e 83       	std	Y+6, r18	; 0x06

	return true;
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	18 c0       	rjmp	.+48     	; 0x1ee6 <usart_set_baudrate+0x1f2>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
    1eb6:	80 e0       	ldi	r24, 0x00	; 0
    1eb8:	16 c0       	rjmp	.+44     	; 0x1ee6 <usart_set_baudrate+0x1f2>
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	14 c0       	rjmp	.+40     	; 0x1ee6 <usart_set_baudrate+0x1f2>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1ebe:	d5 01       	movw	r26, r10
    1ec0:	c4 01       	movw	r24, r8
    1ec2:	88 0f       	add	r24, r24
    1ec4:	99 1f       	adc	r25, r25
    1ec6:	aa 1f       	adc	r26, r26
    1ec8:	bb 1f       	adc	r27, r27
    1eca:	88 0f       	add	r24, r24
    1ecc:	99 1f       	adc	r25, r25
    1ece:	aa 1f       	adc	r26, r26
    1ed0:	bb 1f       	adc	r27, r27
    1ed2:	88 0f       	add	r24, r24
    1ed4:	99 1f       	adc	r25, r25
    1ed6:	aa 1f       	adc	r26, r26
    1ed8:	bb 1f       	adc	r27, r27
    1eda:	48 1a       	sub	r4, r24
    1edc:	59 0a       	sbc	r5, r25
    1ede:	6a 0a       	sbc	r6, r26
    1ee0:	7b 0a       	sbc	r7, r27
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1ee2:	19 ef       	ldi	r17, 0xF9	; 249
    1ee4:	8b cf       	rjmp	.-234    	; 0x1dfc <usart_set_baudrate+0x108>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
    1ee6:	df 91       	pop	r29
    1ee8:	cf 91       	pop	r28
    1eea:	1f 91       	pop	r17
    1eec:	0f 91       	pop	r16
    1eee:	ff 90       	pop	r15
    1ef0:	ef 90       	pop	r14
    1ef2:	df 90       	pop	r13
    1ef4:	cf 90       	pop	r12
    1ef6:	bf 90       	pop	r11
    1ef8:	af 90       	pop	r10
    1efa:	9f 90       	pop	r9
    1efc:	8f 90       	pop	r8
    1efe:	7f 90       	pop	r7
    1f00:	6f 90       	pop	r6
    1f02:	5f 90       	pop	r5
    1f04:	4f 90       	pop	r4
    1f06:	08 95       	ret

00001f08 <wdt_reset_mcu>:
uint8_t temp;
	/*
	 * WDT enabled (minimum timeout period for max. security)
	 */
	temp = WDT_PER_8CLK_gc | (1 << WDT_ENABLE_bp) | (1 << WDT_CEN_bp);
	ccp_write_io((void *)&WDT.CTRL, temp);
    1f08:	63 e0       	ldi	r22, 0x03	; 3
    1f0a:	80 e8       	ldi	r24, 0x80	; 128
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 09 05 	call	0xa12	; 0xa12 <ccp_write_io>
/*! \brief Wait until WD settings are synchronized to the WD clock domain.
 *
 */
static inline void wdt_wait_while_busy(void)
{
	while ((WDT.STATUS & WDT_SYNCBUSY_bm) == WDT_SYNCBUSY_bm) {
    1f12:	e0 e8       	ldi	r30, 0x80	; 128
    1f14:	f0 e0       	ldi	r31, 0x00	; 0
    1f16:	82 81       	ldd	r24, Z+2	; 0x02
    1f18:	80 fd       	sbrc	r24, 0
    1f1a:	fd cf       	rjmp	.-6      	; 0x1f16 <wdt_reset_mcu+0xe>
	wdt_wait_while_busy();
	/*
	 * WDT enabled (maximum window period for max. security)
	 */
	temp = WDT_WPER_8KCLK_gc | (1 << WDT_WEN_bp) | (1 << WDT_WCEN_bp);
	ccp_write_io((void *)&WDT.WINCTRL, temp);
    1f1c:	6b e2       	ldi	r22, 0x2B	; 43
    1f1e:	81 e8       	ldi	r24, 0x81	; 129
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	0e 94 09 05 	call	0xa12	; 0xa12 <ccp_write_io>
    1f26:	e0 e8       	ldi	r30, 0x80	; 128
    1f28:	f0 e0       	ldi	r31, 0x00	; 0
    1f2a:	82 81       	ldd	r24, Z+2	; 0x02
    1f2c:	80 fd       	sbrc	r24, 0
    1f2e:	fd cf       	rjmp	.-6      	; 0x1f2a <wdt_reset_mcu+0x22>
	wdt_wait_while_busy();
	/*
	 * WDT Reset during window => WDT generates an Hard Reset.
	 */
	wdt_reset();
    1f30:	a8 95       	wdr
    1f32:	ff cf       	rjmp	.-2      	; 0x1f32 <wdt_reset_mcu+0x2a>

00001f34 <En_RC32M>:
//Motor_Param M0,M1,M2,M3;

void En_RC32M(void)
{
    // Start RC32M OSC
    OSC_CTRL |= OSC_RC32MEN_bm;
    1f34:	e0 e5       	ldi	r30, 0x50	; 80
    1f36:	f0 e0       	ldi	r31, 0x00	; 0
    1f38:	80 81       	ld	r24, Z
    1f3a:	82 60       	ori	r24, 0x02	; 2
    1f3c:	80 83       	st	Z, r24
    while(!(OSC_STATUS & OSC_RC32MRDY_bm));
    1f3e:	e1 e5       	ldi	r30, 0x51	; 81
    1f40:	f0 e0       	ldi	r31, 0x00	; 0
    1f42:	80 81       	ld	r24, Z
    1f44:	81 ff       	sbrs	r24, 1
    1f46:	fd cf       	rjmp	.-6      	; 0x1f42 <En_RC32M+0xe>

    // Select the system clock source: 32 MHz Internal RC Osc.
    CCP = CCP_IOREG_gc;
    1f48:	88 ed       	ldi	r24, 0xD8	; 216
    1f4a:	84 bf       	out	0x34, r24	; 52
    CLK_CTRL = CLK_SCLKSEL_RC32M_gc;
    1f4c:	81 e0       	ldi	r24, 0x01	; 1
    1f4e:	80 93 40 00 	sts	0x0040, r24

    // Disable the unused oscillators: 2 MHz, internal 32 kHz, external clock/crystal oscillator, PLL
    OSC_CTRL &= ~(OSC_RC2MEN_bm | OSC_RC32KEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
    1f52:	e0 e5       	ldi	r30, 0x50	; 80
    1f54:	f0 e0       	ldi	r31, 0x00	; 0
    1f56:	80 81       	ld	r24, Z
    1f58:	82 7e       	andi	r24, 0xE2	; 226
    1f5a:	80 83       	st	Z, r24
    1f5c:	08 95       	ret

00001f5e <PORT_init>:
};

void PORT_init(void)
{
	
	PORTB_DIRSET = KCK_Charge_PIN_bm;
    1f5e:	80 e4       	ldi	r24, 0x40	; 64
    1f60:	80 93 21 06 	sts	0x0621, r24
	PORTC_DIRSET = KCK_Chip_PIN_bm | KCK_DIR_PIN_bm | Buzzer_PIN_bm | PIN2_bm ;
    1f64:	87 e4       	ldi	r24, 0x47	; 71
    1f66:	80 93 41 06 	sts	0x0641, r24
	PORTC_PIN3CTRL=PORT_ISC_BOTHEDGES_gc;
    1f6a:	10 92 53 06 	sts	0x0653, r1
	PORTC_INTCTRL = PORT_INT0LVL_LO_gc;
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	80 93 49 06 	sts	0x0649, r24
	PORTC_INT0MASK = PIN3_bm;
    1f74:	98 e0       	ldi	r25, 0x08	; 8
    1f76:	90 93 4a 06 	sts	0x064A, r25
	
	PORTD_DIRSET = Gyro_SCL_PIN_bm | LED_White_PIN_bm | LED_Red_PIN_bm | LED_Green_PIN_bm;  //SDA TWI tuye pin ctrl tanzimat mikhad?!
    1f7a:	2e e2       	ldi	r18, 0x2E	; 46
    1f7c:	20 93 61 06 	sts	0x0661, r18
	//PORTD_PIN2CTRL = PORT_ISC_RISING_gc;  PORTD_PIN3CTRL= PORT_ISC_RISING_gc;  //KCK Sens1 , 2
	//PORTD_INTCTRL = PORT_INT0LVL_LO_gc;
	//PORTD_INT0MASK = KCK_Sens1_PIN_bm | KCK_Sens2_PIN_bm;
		
	
	PORTE_DIRSET = NRF24L01_L_CE_LINE | NRF24L01_L_CS_LINE | NRF24L01_L_MOSI_LINE | NRF24L01_L_SCK_LINE | PIN3_bm; // wireless module & programmer data & usart test
    1f80:	2a eb       	ldi	r18, 0xBA	; 186
    1f82:	20 93 81 06 	sts	0x0681, r18
	PORTE_PIN0CTRL |= PORT_ISC_FALLING_gc;
    1f86:	e0 e9       	ldi	r30, 0x90	; 144
    1f88:	f6 e0       	ldi	r31, 0x06	; 6
    1f8a:	20 81       	ld	r18, Z
    1f8c:	22 60       	ori	r18, 0x02	; 2
    1f8e:	20 83       	st	Z, r18
	PORTE_INTCTRL |= PORT_INT0LVL_LO_gc;
    1f90:	e9 e8       	ldi	r30, 0x89	; 137
    1f92:	f6 e0       	ldi	r31, 0x06	; 6
    1f94:	20 81       	ld	r18, Z
    1f96:	21 60       	ori	r18, 0x01	; 1
    1f98:	20 83       	st	Z, r18
	PORTE_INT0MASK |= PIN0_bm;
    1f9a:	ea e8       	ldi	r30, 0x8A	; 138
    1f9c:	f6 e0       	ldi	r31, 0x06	; 6
    1f9e:	20 81       	ld	r18, Z
    1fa0:	21 60       	ori	r18, 0x01	; 1
    1fa2:	20 83       	st	Z, r18
	//PORTF_PIN4CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN5CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN6CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_INTCTRL |= PORT_INT0LVL_LO_gc;
	//PORTF_INT0MASK = Menu_Cancel_PIN_bm | Menu_PIN3_bm | Menu_PIN2_bm | Menu_PIN1_bm | Menu_PIN0_bm;
	PORTF_INT0MASK = Menu_Cancel_PIN_bm;
    1fa4:	20 e1       	ldi	r18, 0x10	; 16
    1fa6:	20 93 aa 06 	sts	0x06AA, r18
   
   PORTF_DIRSET = PIN3_bm;
    1faa:	90 93 a1 06 	sts	0x06A1, r25
   PORTF_OUTSET = PIN3_bm;
    1fae:	90 93 a5 06 	sts	0x06A5, r25
   
   PORTK_DIR = 0xFF;//SegL
    1fb2:	2f ef       	ldi	r18, 0xFF	; 255
    1fb4:	20 93 20 07 	sts	0x0720, r18
   PORTJ_DIR = 0xFF;//SegR
    1fb8:	20 93 00 07 	sts	0x0700, r18
   
   PORTK_PIN0CTRL = PORT_ISC_RISING_gc;
    1fbc:	80 93 30 07 	sts	0x0730, r24
   PORTK_INTCTRL = PORT_INT0LVL_LO_gc;
    1fc0:	80 93 29 07 	sts	0x0729, r24
   PORTK_INT0MASK = Menu_Set_PIN_bm;
    1fc4:	20 e8       	ldi	r18, 0x80	; 128
    1fc6:	20 93 2a 07 	sts	0x072A, r18
   
   PORTQ_PIN0CTRL = PORT_ISC_BOTHEDGES_gc;
    1fca:	10 92 d0 07 	sts	0x07D0, r1
   PORTQ_PIN3CTRL = PORT_ISC_BOTHEDGES_gc;
    1fce:	10 92 d3 07 	sts	0x07D3, r1
   PORTQ_INTCTRL  = PORT_INT0LVL_LO_gc|PORT_INT1LVL_LO_gc;
    1fd2:	25 e0       	ldi	r18, 0x05	; 5
    1fd4:	20 93 c9 07 	sts	0x07C9, r18
   PORTQ_INT0MASK = PIN0_bm;
    1fd8:	80 93 ca 07 	sts	0x07CA, r24
   PORTQ_INT1MASK = PIN3_bm;
    1fdc:	90 93 cb 07 	sts	0x07CB, r25
   
   PORTH_PIN5CTRL = PORT_ISC_RISING_gc;
    1fe0:	80 93 f5 06 	sts	0x06F5, r24
   PORTH_INTCTRL  = PORT_INT0LVL_LO_gc;
    1fe4:	80 93 e9 06 	sts	0x06E9, r24
   PORTH_INT0MASK = PIN5_bm;
    1fe8:	80 e2       	ldi	r24, 0x20	; 32
    1fea:	80 93 ea 06 	sts	0x06EA, r24
    1fee:	08 95       	ret

00001ff0 <TimerC0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    1ff0:	e0 e0       	ldi	r30, 0x00	; 0
    1ff2:	f8 e0       	ldi	r31, 0x08	; 8
    1ff4:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    1ff6:	80 7f       	andi	r24, 0xF0	; 240
    1ff8:	86 60       	ori	r24, 0x06	; 6
    1ffa:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    1ffc:	81 81       	ldd	r24, Z+1	; 0x01
    1ffe:	88 7f       	andi	r24, 0xF8	; 248
    2000:	83 60       	ori	r24, 0x03	; 3
    2002:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2004:	8f ef       	ldi	r24, 0xFF	; 255
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	86 a3       	std	Z+38, r24	; 0x26
    200a:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    200c:	80 85       	ldd	r24, Z+8	; 0x08
    200e:	8e 6f       	ori	r24, 0xFE	; 254
    2010:	80 87       	std	Z+8, r24	; 0x08
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
    2012:	81 81       	ldd	r24, Z+1	; 0x01
    2014:	80 61       	ori	r24, 0x10	; 16
    2016:	81 83       	std	Z+1, r24	; 0x01
    2018:	81 81       	ldd	r24, Z+1	; 0x01
    201a:	80 62       	ori	r24, 0x20	; 32
    201c:	81 83       	std	Z+1, r24	; 0x01
	tc_set_wgm(&TCC0,TC_WG_SS);
	tc_write_period(&TCC0,0x00FF);
	tc_set_direction(&TCC0,TC_UP);
	tc_enable_cc_channels(&TCC0,TC_CCAEN);
	tc_enable_cc_channels(&TCC0,TC_CCBEN);
	tc_enable(&TCC0);
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	98 e0       	ldi	r25, 0x08	; 8
    2022:	d7 cd       	rjmp	.-1106   	; 0x1bd2 <tc_enable>
    2024:	08 95       	ret

00002026 <TimerD0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    2026:	e0 e0       	ldi	r30, 0x00	; 0
    2028:	f9 e0       	ldi	r31, 0x09	; 9
    202a:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    202c:	80 7f       	andi	r24, 0xF0	; 240
    202e:	86 60       	ori	r24, 0x06	; 6
    2030:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    2032:	81 81       	ldd	r24, Z+1	; 0x01
    2034:	88 7f       	andi	r24, 0xF8	; 248
    2036:	81 83       	std	Z+1, r24	; 0x01
 * \note  Configures OVFINTLVL in INTCTRLA
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
    2038:	86 81       	ldd	r24, Z+6	; 0x06
    203a:	8c 7f       	andi	r24, 0xFC	; 252
    203c:	86 83       	std	Z+6, r24	; 0x06
	((TC0_t *)tc)->INTCTRLA =
			((TC0_t *)tc)->INTCTRLA | (level << TC0_OVFINTLVL_gp);
    203e:	86 81       	ldd	r24, Z+6	; 0x06
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
	((TC0_t *)tc)->INTCTRLA =
    2040:	82 60       	ori	r24, 0x02	; 2
    2042:	86 83       	std	Z+6, r24	; 0x06
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2044:	8d e7       	ldi	r24, 0x7D	; 125
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	86 a3       	std	Z+38, r24	; 0x26
    204a:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    204c:	80 85       	ldd	r24, Z+8	; 0x08
    204e:	8e 6f       	ori	r24, 0xFE	; 254
    2050:	80 87       	std	Z+8, r24	; 0x08
	tc_write_clock_source(&TCD0,TC_CLKSEL_DIV256_gc);
	tc_set_wgm(&TCD0,TC_WG_NORMAL);
	tc_set_overflow_interrupt_level(&TCD0,TC_INT_LVL_MED);
	tc_write_period(&TCD0,TIMERD0_PER);
	tc_set_direction(&TCD0,TC_UP);
	tc_enable(&TCD0);
    2052:	80 e0       	ldi	r24, 0x00	; 0
    2054:	99 e0       	ldi	r25, 0x09	; 9
    2056:	bd cd       	rjmp	.-1158   	; 0x1bd2 <tc_enable>
    2058:	08 95       	ret

0000205a <SPI_Init>:
};

void SPI_Init(void)
{
    205a:	0f 93       	push	r16
    205c:	1f 93       	push	r17
	 spi_xmega_set_baud_div(&NRF24L01_L_SPI,8000000UL,F_CPU);
    205e:	00 e0       	ldi	r16, 0x00	; 0
    2060:	18 e4       	ldi	r17, 0x48	; 72
    2062:	28 ee       	ldi	r18, 0xE8	; 232
    2064:	31 e0       	ldi	r19, 0x01	; 1
    2066:	40 e0       	ldi	r20, 0x00	; 0
    2068:	52 e1       	ldi	r21, 0x12	; 18
    206a:	6a e7       	ldi	r22, 0x7A	; 122
    206c:	70 e0       	ldi	r23, 0x00	; 0
    206e:	80 ec       	ldi	r24, 0xC0	; 192
    2070:	9a e0       	ldi	r25, 0x0A	; 10
    2072:	0e 94 19 05 	call	0xa32	; 0xa32 <spi_xmega_set_baud_div>
 *
 * \warning This may cause data loss if used on a slave SPI.
 */
static inline void spi_enable_master_mode(SPI_t *spi)
{
	spi->CTRL |= SPI_MASTER_bm;
    2076:	e0 ec       	ldi	r30, 0xC0	; 192
    2078:	fa e0       	ldi	r31, 0x0A	; 10
    207a:	80 81       	ld	r24, Z
    207c:	80 61       	ori	r24, 0x10	; 16
    207e:	80 83       	st	Z, r24
 *
 * \param spi Base address of the SPI instance.
 */
static inline void spi_enable(SPI_t *spi)
{
	spi->CTRL |= SPI_ENABLE_bm;
    2080:	80 81       	ld	r24, Z
    2082:	80 64       	ori	r24, 0x40	; 64
    2084:	80 83       	st	Z, r24
	 spi_enable_master_mode(&NRF24L01_L_SPI);
	 spi_enable(&NRF24L01_L_SPI);
}
    2086:	1f 91       	pop	r17
    2088:	0f 91       	pop	r16
    208a:	08 95       	ret

0000208c <USARTE0_init>:

#define USARTE0_conf USARTE0
#define USARTE0_BUADRATE 19200
void USARTE0_init(void)
{
    208c:	0f 93       	push	r16
    208e:	1f 93       	push	r17
    2090:	cf 93       	push	r28
    2092:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2094:	c0 ea       	ldi	r28, 0xA0	; 160
    2096:	da e0       	ldi	r29, 0x0A	; 10
    2098:	8d 81       	ldd	r24, Y+5	; 0x05
    209a:	8f 73       	andi	r24, 0x3F	; 63
    209c:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    209e:	83 e0       	ldi	r24, 0x03	; 3
    20a0:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20a2:	8b 81       	ldd	r24, Y+3	; 0x03
    20a4:	8f 7c       	andi	r24, 0xCF	; 207
    20a6:	80 62       	ori	r24, 0x20	; 32
    20a8:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTE0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTE0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTE0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTE0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTE0_conf,USARTE0_BUADRATE,F_CPU);
    20aa:	00 e0       	ldi	r16, 0x00	; 0
    20ac:	18 e4       	ldi	r17, 0x48	; 72
    20ae:	28 ee       	ldi	r18, 0xE8	; 232
    20b0:	31 e0       	ldi	r19, 0x01	; 1
    20b2:	40 e0       	ldi	r20, 0x00	; 0
    20b4:	5b e4       	ldi	r21, 0x4B	; 75
    20b6:	60 e0       	ldi	r22, 0x00	; 0
    20b8:	70 e0       	ldi	r23, 0x00	; 0
    20ba:	80 ea       	ldi	r24, 0xA0	; 160
    20bc:	9a e0       	ldi	r25, 0x0A	; 10
    20be:	1a de       	rcall	.-972    	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    20c0:	8c 81       	ldd	r24, Y+4	; 0x04
    20c2:	88 60       	ori	r24, 0x08	; 8
    20c4:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTE0_conf);
	//usart_rx_enable(&USARTE0_conf);
}
    20c6:	df 91       	pop	r29
    20c8:	cf 91       	pop	r28
    20ca:	1f 91       	pop	r17
    20cc:	0f 91       	pop	r16
    20ce:	08 95       	ret

000020d0 <USARTF0_init>:


#define USARTF0_conf USARTF0
#define USARTF0_BUADRATE 9600
void USARTF0_init(void)
{
    20d0:	0f 93       	push	r16
    20d2:	1f 93       	push	r17
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    20d8:	c0 ea       	ldi	r28, 0xA0	; 160
    20da:	db e0       	ldi	r29, 0x0B	; 11
    20dc:	8d 81       	ldd	r24, Y+5	; 0x05
    20de:	8f 73       	andi	r24, 0x3F	; 63
    20e0:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    20e2:	83 e0       	ldi	r24, 0x03	; 3
    20e4:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20e6:	8b 81       	ldd	r24, Y+3	; 0x03
    20e8:	8f 7c       	andi	r24, 0xCF	; 207
    20ea:	80 62       	ori	r24, 0x20	; 32
    20ec:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTF0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTF0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF0_conf,USARTF0_BUADRATE,F_CPU);
    20ee:	00 e0       	ldi	r16, 0x00	; 0
    20f0:	18 e4       	ldi	r17, 0x48	; 72
    20f2:	28 ee       	ldi	r18, 0xE8	; 232
    20f4:	31 e0       	ldi	r19, 0x01	; 1
    20f6:	40 e8       	ldi	r20, 0x80	; 128
    20f8:	55 e2       	ldi	r21, 0x25	; 37
    20fa:	60 e0       	ldi	r22, 0x00	; 0
    20fc:	70 e0       	ldi	r23, 0x00	; 0
    20fe:	80 ea       	ldi	r24, 0xA0	; 160
    2100:	9b e0       	ldi	r25, 0x0B	; 11
    2102:	f8 dd       	rcall	.-1040   	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2104:	8c 81       	ldd	r24, Y+4	; 0x04
    2106:	88 60       	ori	r24, 0x08	; 8
    2108:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
    210a:	8c 81       	ldd	r24, Y+4	; 0x04
    210c:	80 61       	ori	r24, 0x10	; 16
    210e:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF0_conf);
	usart_rx_enable(&USARTF0_conf);
}
    2110:	df 91       	pop	r29
    2112:	cf 91       	pop	r28
    2114:	1f 91       	pop	r17
    2116:	0f 91       	pop	r16
    2118:	08 95       	ret

0000211a <USARTF1_init>:

#define USARTF1_conf USARTF1
#define USARTF1_BUADRATE 9600
void USARTF1_init(void)
{
    211a:	0f 93       	push	r16
    211c:	1f 93       	push	r17
    211e:	cf 93       	push	r28
    2120:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2122:	c0 eb       	ldi	r28, 0xB0	; 176
    2124:	db e0       	ldi	r29, 0x0B	; 11
    2126:	8d 81       	ldd	r24, Y+5	; 0x05
    2128:	8f 73       	andi	r24, 0x3F	; 63
    212a:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    212c:	83 e0       	ldi	r24, 0x03	; 3
    212e:	8d 83       	std	Y+5, r24	; 0x05
	usart_set_mode(&USARTF1_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF1_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	//usart_set_rx_interrupt_level(&USARTF1_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF1_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF1_conf,USARTF1_BUADRATE,F_CPU);
    2130:	00 e0       	ldi	r16, 0x00	; 0
    2132:	18 e4       	ldi	r17, 0x48	; 72
    2134:	28 ee       	ldi	r18, 0xE8	; 232
    2136:	31 e0       	ldi	r19, 0x01	; 1
    2138:	40 e8       	ldi	r20, 0x80	; 128
    213a:	55 e2       	ldi	r21, 0x25	; 37
    213c:	60 e0       	ldi	r22, 0x00	; 0
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	80 eb       	ldi	r24, 0xB0	; 176
    2142:	9b e0       	ldi	r25, 0x0B	; 11
    2144:	d7 dd       	rcall	.-1106   	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2146:	8c 81       	ldd	r24, Y+4	; 0x04
    2148:	88 60       	ori	r24, 0x08	; 8
    214a:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF1_conf);
	//usart_rx_enable(&USARTF1_conf);
}
    214c:	df 91       	pop	r29
    214e:	cf 91       	pop	r28
    2150:	1f 91       	pop	r17
    2152:	0f 91       	pop	r16
    2154:	08 95       	ret

00002156 <ADCA_init>:

//KCK_CAP_VFB   -----> B7
#define CONFIG_ADC_INTLVL ADC_CH_INTLVL_LO_gc
void ADCA_init(void)
{
    2156:	cf 93       	push	r28
    2158:	df 93       	push	r29
    215a:	cd b7       	in	r28, 0x3d	; 61
    215c:	de b7       	in	r29, 0x3e	; 62
    215e:	2a 97       	sbiw	r28, 0x0a	; 10
    2160:	cd bf       	out	0x3d, r28	; 61
    2162:	de bf       	out	0x3e, r29	; 62
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
    2164:	61 e2       	ldi	r22, 0x21	; 33
    2166:	70 e0       	ldi	r23, 0x00	; 0
    2168:	82 e0       	ldi	r24, 0x02	; 2
    216a:	0e 94 0f 05 	call	0xa1e	; 0xa1e <nvm_read_byte>
    216e:	60 e2       	ldi	r22, 0x20	; 32
    2170:	70 e0       	ldi	r23, 0x00	; 0
    2172:	82 e0       	ldi	r24, 0x02	; 2
    2174:	0e 94 0f 05 	call	0xa1e	; 0xa1e <nvm_read_byte>
static inline void adc_set_conversion_parameters(struct adc_config *conf,
		enum adc_sign sign, enum adc_resolution res,
		enum adc_reference ref)
{
	// Preserve all but conversion and resolution config.
	conf->ctrlb &= ~(ADC_CONMODE_bm | ADC_RESOLUTION_gm);
    2178:	8a 81       	ldd	r24, Y+2	; 0x02
    217a:	89 7e       	andi	r24, 0xE9	; 233
	conf->ctrlb |= (uint8_t)res | (uint8_t)sign;

	conf->refctrl &= ~ADC_REFSEL_gm;
    217c:	9b 81       	ldd	r25, Y+3	; 0x03
    217e:	9f 7c       	andi	r25, 0xCF	; 207
	conf->refctrl |= ref;
    2180:	90 62       	ori	r25, 0x20	; 32
    2182:	9b 83       	std	Y+3, r25	; 0x03
		psc = ADC_PRESCALER_DIV256_gc;
	} else {
		psc = ADC_PRESCALER_DIV512_gc;
	}

	conf->prescaler = psc;
    2184:	92 e0       	ldi	r25, 0x02	; 2
    2186:	9d 83       	std	Y+5, r25	; 0x05
				(nr_of_ch << ADC_EVACT_gp);
		break;

#if XMEGA_A || XMEGA_AU
	case ADC_TRIG_FREERUN_SWEEP:
		conf->ctrlb |= ADC_FREERUN_bm;
    2188:	88 60       	ori	r24, 0x08	; 8
    218a:	8a 83       	std	Y+2, r24	; 0x02
		conf->evctrl = (nr_of_ch - 1) << ADC_SWEEP_gp;
    218c:	1c 82       	std	Y+4, r1	; 0x04
    adc_get_calibration_data(ADC_CAL_ADCA);
    adc_set_conversion_parameters(&adca_conf,ADC_SIGN_OFF,ADC_RES_12,ADC_REF_AREFA);
    adc_set_clock_rate(&adca_conf,125000UL);
    adc_set_conversion_trigger(&adca_conf,ADC_TRIG_FREERUN_SWEEP,1,0);
   // adc_set_config_compare_value(adcb_conf,KCK_MAX_CHARGE_AMP);
    adc_write_configuration(&ADCA,&adca_conf);
    218e:	be 01       	movw	r22, r28
    2190:	6f 5f       	subi	r22, 0xFF	; 255
    2192:	7f 4f       	sbci	r23, 0xFF	; 255
    2194:	80 e0       	ldi	r24, 0x00	; 0
    2196:	92 e0       	ldi	r25, 0x02	; 2
    2198:	0e 94 57 04 	call	0x8ae	; 0x8ae <adc_write_configuration>
    //
    ///* Configure ADC channel 0:
    //* - Input: ADCB4
    //* - interrupts disable
    //*/
    adcch_read_configuration(&ADCA,1, &adca_ch_conf);
    219c:	ae 01       	movw	r20, r28
    219e:	48 5f       	subi	r20, 0xF8	; 248
    21a0:	5f 4f       	sbci	r21, 0xFF	; 255
    21a2:	61 e0       	ldi	r22, 0x01	; 1
    21a4:	80 e0       	ldi	r24, 0x00	; 0
    21a6:	92 e0       	ldi	r25, 0x02	; 2
    21a8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <adcch_read_configuration>

	// Configure for single-ended measurement.
	if (neg == ADCCH_NEG_NONE) {
		Assert(gain == 1);

		ch_conf->ctrl = ADC_CH_INPUTMODE_SINGLEENDED_gc;
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	88 87       	std	Y+8, r24	; 0x08
		ch_conf->muxctrl = pos << ADC_CH_MUXPOS_gp;
    21b0:	88 e1       	ldi	r24, 0x18	; 24
    21b2:	89 87       	std	Y+9, r24	; 0x09
    adcch_set_input(&adca_ch_conf,ADCCH_POS_PIN3,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    adcch_write_configuration(&ADCA,1,&adca_ch_conf);
    21b4:	ae 01       	movw	r20, r28
    21b6:	48 5f       	subi	r20, 0xF8	; 248
    21b8:	5f 4f       	sbci	r21, 0xFF	; 255
    21ba:	61 e0       	ldi	r22, 0x01	; 1
    21bc:	80 e0       	ldi	r24, 0x00	; 0
    21be:	92 e0       	ldi	r25, 0x02	; 2
    21c0:	0e 94 a8 04 	call	0x950	; 0x950 <adcch_write_configuration>
    //adcch_set_input(&adcb_ch_conf,ADCCH_POS_PIN7,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    //adcch_set_interrupt_mode(&adcb_ch_conf,ADCCH_MODE_ABOVE);
    //adcch_enable_interrupt(&adcb_ch_conf);
    //adcch_write_configuration(&ADCB,3,&adcb_ch_conf);
    //
    adc_enable(&ADCA);
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	92 e0       	ldi	r25, 0x02	; 2
    21c8:	0e 94 40 04 	call	0x880	; 0x880 <adc_enable>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    21cc:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    21ce:	f8 94       	cli
 * \note The ADC must be enabled for this function to have any effect.
 */
static inline void adc_start_conversion(ADC_t *adc, uint8_t ch_mask)
{
	irqflags_t flags = cpu_irq_save();
	adc->CTRLA |= ch_mask << ADC_CH0START_bp;
    21d0:	e0 e0       	ldi	r30, 0x00	; 0
    21d2:	f2 e0       	ldi	r31, 0x02	; 2
    21d4:	90 81       	ld	r25, Z
    21d6:	94 60       	ori	r25, 0x04	; 4
    21d8:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    21da:	8f bf       	out	0x3f, r24	; 63
    adc_start_conversion(&ADCA,ADC_CH0);
    //adc_start_conversion(&ADCB,ADC_CH1);
    //adc_start_conversion(&ADCB,ADC_CH2);
    ////adc_start_conversion(&ADCB,ADC_CH3);
}
    21dc:	2a 96       	adiw	r28, 0x0a	; 10
    21de:	cd bf       	out	0x3d, r28	; 61
    21e0:	de bf       	out	0x3e, r29	; 62
    21e2:	df 91       	pop	r29
    21e4:	cf 91       	pop	r28
    21e6:	08 95       	ret

000021e8 <main>:
        break;
    };

}
void get_MS(char rx)
{
    21e8:	cf 93       	push	r28
    21ea:	df 93       	push	r29
    21ec:	cd b7       	in	r28, 0x3d	; 61
    21ee:	de b7       	in	r29, 0x3e	; 62
    21f0:	c6 5f       	subi	r28, 0xF6	; 246
    21f2:	d1 09       	sbc	r29, r1
    21f4:	cd bf       	out	0x3d, r28	; 61
    21f6:	de bf       	out	0x3e, r29	; 62
    21f8:	9d de       	rcall	.-710    	; 0x1f34 <En_RC32M>
    21fa:	e2 ea       	ldi	r30, 0xA2	; 162
    21fc:	f0 e0       	ldi	r31, 0x00	; 0
    21fe:	80 81       	ld	r24, Z
    2200:	87 60       	ori	r24, 0x07	; 7
    2202:	80 83       	st	Z, r24
    2204:	ac de       	rcall	.-680    	; 0x1f5e <PORT_init>
    2206:	0f df       	rcall	.-482    	; 0x2026 <TimerD0_init>
    2208:	f3 de       	rcall	.-538    	; 0x1ff0 <TimerC0_init>
    220a:	62 df       	rcall	.-316    	; 0x20d0 <USARTF0_init>
    220c:	86 df       	rcall	.-244    	; 0x211a <USARTF1_init>
    220e:	3e df       	rcall	.-388    	; 0x208c <USARTE0_init>
    2210:	a2 df       	rcall	.-188    	; 0x2156 <ADCA_init>
    2212:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCDInit>
    2216:	78 94       	sei
    2218:	88 eb       	ldi	r24, 0xB8	; 184
    221a:	9b e0       	ldi	r25, 0x0B	; 11
    221c:	a0 e0       	ldi	r26, 0x00	; 0
    221e:	b0 e0       	ldi	r27, 0x00	; 0
    2220:	80 93 34 20 	sts	0x2034, r24
    2224:	90 93 35 20 	sts	0x2035, r25
    2228:	a0 93 36 20 	sts	0x2036, r26
    222c:	b0 93 37 20 	sts	0x2037, r27
    2230:	24 ef       	ldi	r18, 0xF4	; 244
    2232:	31 e0       	ldi	r19, 0x01	; 1
    2234:	20 93 cb 23 	sts	0x23CB, r18
    2238:	30 93 cc 23 	sts	0x23CC, r19
    223c:	80 93 38 20 	sts	0x2038, r24
    2240:	90 93 39 20 	sts	0x2039, r25
    2244:	a0 93 3a 20 	sts	0x203A, r26
    2248:	b0 93 3b 20 	sts	0x203B, r27
    224c:	84 e6       	ldi	r24, 0x64	; 100
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	80 93 e7 21 	sts	0x21E7, r24
    2254:	90 93 e8 21 	sts	0x21E8, r25
    2258:	88 ee       	ldi	r24, 0xE8	; 232
    225a:	93 e0       	ldi	r25, 0x03	; 3
    225c:	a0 e0       	ldi	r26, 0x00	; 0
    225e:	b0 e0       	ldi	r27, 0x00	; 0
    2260:	80 93 30 20 	sts	0x2030, r24
    2264:	90 93 31 20 	sts	0x2031, r25
    2268:	a0 93 32 20 	sts	0x2032, r26
    226c:	b0 93 33 20 	sts	0x2033, r27
    2270:	88 ec       	ldi	r24, 0xC8	; 200
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	80 93 f9 23 	sts	0x23F9, r24
    2278:	90 93 fa 23 	sts	0x23FA, r25
    227c:	80 ed       	ldi	r24, 0xD0	; 208
    227e:	97 e0       	ldi	r25, 0x07	; 7
    2280:	a0 e0       	ldi	r26, 0x00	; 0
    2282:	b0 e0       	ldi	r27, 0x00	; 0
    2284:	80 93 2c 20 	sts	0x202C, r24
    2288:	90 93 2d 20 	sts	0x202D, r25
    228c:	a0 93 2e 20 	sts	0x202E, r26
    2290:	b0 93 2f 20 	sts	0x202F, r27
    2294:	86 e9       	ldi	r24, 0x96	; 150
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	80 93 2f 22 	sts	0x222F, r24
    229c:	90 93 30 22 	sts	0x2230, r25
    22a0:	e8 e0       	ldi	r30, 0x08	; 8
    22a2:	f6 e0       	ldi	r31, 0x06	; 6
    22a4:	90 81       	ld	r25, Z
    22a6:	30 81       	ld	r19, Z
    22a8:	80 81       	ld	r24, Z
    22aa:	40 81       	ld	r20, Z
    22ac:	e3 e0       	ldi	r30, 0x03	; 3
    22ae:	f0 e2       	ldi	r31, 0x20	; 32
    22b0:	88 1f       	adc	r24, r24
    22b2:	88 27       	eor	r24, r24
    22b4:	88 1f       	adc	r24, r24
    22b6:	28 2f       	mov	r18, r24
    22b8:	22 0f       	add	r18, r18
    22ba:	22 0f       	add	r18, r18
    22bc:	96 fb       	bst	r25, 6
    22be:	88 27       	eor	r24, r24
    22c0:	80 f9       	bld	r24, 0
    22c2:	28 2b       	or	r18, r24
    22c4:	34 fb       	bst	r19, 4
    22c6:	88 24       	eor	r8, r8
    22c8:	80 f8       	bld	r8, 0
    22ca:	91 2c       	mov	r9, r1
    22cc:	c4 01       	movw	r24, r8
    22ce:	88 0f       	add	r24, r24
    22d0:	99 1f       	adc	r25, r25
    22d2:	28 2b       	or	r18, r24
    22d4:	45 fb       	bst	r20, 5
    22d6:	00 27       	eor	r16, r16
    22d8:	00 f9       	bld	r16, 0
    22da:	10 e0       	ldi	r17, 0x00	; 0
    22dc:	c8 01       	movw	r24, r16
    22de:	88 0f       	add	r24, r24
    22e0:	99 1f       	adc	r25, r25
    22e2:	88 0f       	add	r24, r24
    22e4:	99 1f       	adc	r25, r25
    22e6:	88 0f       	add	r24, r24
    22e8:	99 1f       	adc	r25, r25
    22ea:	82 2b       	or	r24, r18
    22ec:	90 81       	ld	r25, Z
    22ee:	89 0f       	add	r24, r25
    22f0:	80 83       	st	Z, r24
    22f2:	82 e0       	ldi	r24, 0x02	; 2
    22f4:	e0 e8       	ldi	r30, 0x80	; 128
    22f6:	f6 e0       	ldi	r31, 0x06	; 6
    22f8:	86 83       	std	Z+6, r24	; 0x06
    22fa:	af de       	rcall	.-674    	; 0x205a <SPI_Init>
    22fc:	2a e6       	ldi	r18, 0x6A	; 106
    22fe:	2a 95       	dec	r18
    2300:	f1 f7       	brne	.-4      	; 0x22fe <main+0x116>
    2302:	00 c0       	rjmp	.+0      	; 0x2304 <main+0x11c>
    2304:	3f ef       	ldi	r19, 0xFF	; 255
    2306:	53 ec       	ldi	r21, 0xC3	; 195
    2308:	69 e0       	ldi	r22, 0x09	; 9
    230a:	31 50       	subi	r19, 0x01	; 1
    230c:	50 40       	sbci	r21, 0x00	; 0
    230e:	60 40       	sbci	r22, 0x00	; 0
    2310:	e1 f7       	brne	.-8      	; 0x230a <main+0x122>
    2312:	00 c0       	rjmp	.+0      	; 0x2314 <main+0x12c>
    2314:	00 00       	nop
    2316:	0e 94 44 2a 	call	0x5488	; 0x5488 <NRF24L01_L_Clear_Interrupts>
    231a:	0e 94 0b 2b 	call	0x5616	; 0x5616 <NRF24L01_L_Flush_TX>
    231e:	0e 94 19 2b 	call	0x5632	; 0x5632 <NRF24L01_L_Flush_RX>
    2322:	82 e0       	ldi	r24, 0x02	; 2
    2324:	e0 e8       	ldi	r30, 0x80	; 128
    2326:	f6 e0       	ldi	r31, 0x06	; 6
    2328:	86 83       	std	Z+6, r24	; 0x06
    232a:	e8 e0       	ldi	r30, 0x08	; 8
    232c:	f6 e0       	ldi	r31, 0x06	; 6
    232e:	20 81       	ld	r18, Z
    2330:	30 81       	ld	r19, Z
    2332:	80 81       	ld	r24, Z
    2334:	40 81       	ld	r20, Z
    2336:	88 1f       	adc	r24, r24
    2338:	88 27       	eor	r24, r24
    233a:	88 1f       	adc	r24, r24
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	88 0f       	add	r24, r24
    2340:	99 1f       	adc	r25, r25
    2342:	88 0f       	add	r24, r24
    2344:	99 1f       	adc	r25, r25
    2346:	26 fb       	bst	r18, 6
    2348:	ee 24       	eor	r14, r14
    234a:	e0 f8       	bld	r14, 0
    234c:	f1 2c       	mov	r15, r1
    234e:	e8 2a       	or	r14, r24
    2350:	f9 2a       	or	r15, r25
    2352:	34 fb       	bst	r19, 4
    2354:	cc 24       	eor	r12, r12
    2356:	c0 f8       	bld	r12, 0
    2358:	d1 2c       	mov	r13, r1
    235a:	c6 01       	movw	r24, r12
    235c:	88 0f       	add	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	e8 2a       	or	r14, r24
    2362:	f9 2a       	or	r15, r25
    2364:	45 fb       	bst	r20, 5
    2366:	aa 24       	eor	r10, r10
    2368:	a0 f8       	bld	r10, 0
    236a:	b1 2c       	mov	r11, r1
    236c:	c5 01       	movw	r24, r10
    236e:	88 0f       	add	r24, r24
    2370:	99 1f       	adc	r25, r25
    2372:	88 0f       	add	r24, r24
    2374:	99 1f       	adc	r25, r25
    2376:	88 0f       	add	r24, r24
    2378:	99 1f       	adc	r25, r25
    237a:	8e 29       	or	r24, r14
    237c:	9f 29       	or	r25, r15
    237e:	03 97       	sbiw	r24, 0x03	; 3
    2380:	84 f4       	brge	.+32     	; 0x23a2 <main+0x1ba>
    2382:	0f 2e       	mov	r0, r31
    2384:	f6 e0       	ldi	r31, 0x06	; 6
    2386:	cf 2e       	mov	r12, r31
    2388:	f0 2d       	mov	r31, r0
    238a:	68 94       	set
    238c:	ee 24       	eor	r14, r14
    238e:	e5 f8       	bld	r14, 5
    2390:	05 e0       	ldi	r16, 0x05	; 5
    2392:	23 e0       	ldi	r18, 0x03	; 3
    2394:	30 e2       	ldi	r19, 0x20	; 32
    2396:	48 e0       	ldi	r20, 0x08	; 8
    2398:	62 e3       	ldi	r22, 0x32	; 50
    239a:	80 e0       	ldi	r24, 0x00	; 0
    239c:	0e 94 cb 2a 	call	0x5596	; 0x5596 <NRF24L01_L_Init_milad>
    23a0:	0f c0       	rjmp	.+30     	; 0x23c0 <main+0x1d8>
    23a2:	0f 2e       	mov	r0, r31
    23a4:	f6 e0       	ldi	r31, 0x06	; 6
    23a6:	cf 2e       	mov	r12, r31
    23a8:	f0 2d       	mov	r31, r0
    23aa:	68 94       	set
    23ac:	ee 24       	eor	r14, r14
    23ae:	e5 f8       	bld	r14, 5
    23b0:	05 e0       	ldi	r16, 0x05	; 5
    23b2:	23 e0       	ldi	r18, 0x03	; 3
    23b4:	30 e2       	ldi	r19, 0x20	; 32
    23b6:	48 e0       	ldi	r20, 0x08	; 8
    23b8:	61 e0       	ldi	r22, 0x01	; 1
    23ba:	80 e0       	ldi	r24, 0x00	; 0
    23bc:	0e 94 cb 2a 	call	0x5596	; 0x5596 <NRF24L01_L_Init_milad>
    23c0:	61 e0       	ldi	r22, 0x01	; 1
    23c2:	8c e3       	ldi	r24, 0x3C	; 60
    23c4:	0e 94 1b 2a 	call	0x5436	; 0x5436 <NRF24L01_L_WriteReg>
    23c8:	66 e0       	ldi	r22, 0x06	; 6
    23ca:	8d e3       	ldi	r24, 0x3D	; 61
    23cc:	0e 94 1b 2a 	call	0x5436	; 0x5436 <NRF24L01_L_WriteReg>
    23d0:	82 e0       	ldi	r24, 0x02	; 2
    23d2:	e0 e8       	ldi	r30, 0x80	; 128
    23d4:	f6 e0       	ldi	r31, 0x06	; 6
    23d6:	85 83       	std	Z+5, r24	; 0x05
    23d8:	8f e0       	ldi	r24, 0x0F	; 15
    23da:	94 e0       	ldi	r25, 0x04	; 4
    23dc:	01 97       	sbiw	r24, 0x01	; 1
    23de:	f1 f7       	brne	.-4      	; 0x23dc <main+0x1f4>
    23e0:	00 c0       	rjmp	.+0      	; 0x23e2 <main+0x1fa>
    23e2:	00 00       	nop
    23e4:	0f 2e       	mov	r0, r31
    23e6:	f9 ea       	ldi	r31, 0xA9	; 169
    23e8:	2f 2e       	mov	r2, r31
    23ea:	f3 e2       	ldi	r31, 0x23	; 35
    23ec:	3f 2e       	mov	r3, r31
    23ee:	f0 2d       	mov	r31, r0
    23f0:	a8 95       	wdr
    23f2:	80 91 9e 20 	lds	r24, 0x209E
    23f6:	88 23       	and	r24, r24
    23f8:	11 f4       	brne	.+4      	; 0x23fe <main+0x216>
    23fa:	0c 94 75 22 	jmp	0x44ea	; 0x44ea <__stack+0x4eb>
    23fe:	a9 e7       	ldi	r26, 0x79	; 121
    2400:	b3 e2       	ldi	r27, 0x23	; 35
    2402:	ed 90       	ld	r14, X+
    2404:	fc 90       	ld	r15, X
    2406:	eb e7       	ldi	r30, 0x7B	; 123
    2408:	f3 e2       	ldi	r31, 0x23	; 35
    240a:	e0 82       	st	Z, r14
    240c:	f1 82       	std	Z+1, r15	; 0x01
    240e:	a7 e7       	ldi	r26, 0x77	; 119
    2410:	b3 e2       	ldi	r27, 0x23	; 35
    2412:	8d 91       	ld	r24, X+
    2414:	9c 91       	ld	r25, X
    2416:	bf e0       	ldi	r27, 0x0F	; 15
    2418:	b8 9f       	mul	r27, r24
    241a:	80 01       	movw	r16, r0
    241c:	b9 9f       	mul	r27, r25
    241e:	10 0d       	add	r17, r0
    2420:	11 24       	eor	r1, r1
    2422:	e7 e7       	ldi	r30, 0x77	; 119
    2424:	f3 e2       	ldi	r31, 0x23	; 35
    2426:	10 82       	st	Z, r1
    2428:	11 82       	std	Z+1, r1	; 0x01
    242a:	b7 01       	movw	r22, r14
    242c:	88 27       	eor	r24, r24
    242e:	77 fd       	sbrc	r23, 7
    2430:	80 95       	com	r24
    2432:	98 2f       	mov	r25, r24
    2434:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2438:	4b 01       	movw	r8, r22
    243a:	5c 01       	movw	r10, r24
    243c:	b8 01       	movw	r22, r16
    243e:	6e 19       	sub	r22, r14
    2440:	7f 09       	sbc	r23, r15
    2442:	88 27       	eor	r24, r24
    2444:	77 fd       	sbrc	r23, 7
    2446:	80 95       	com	r24
    2448:	98 2f       	mov	r25, r24
    244a:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    244e:	2e ea       	ldi	r18, 0xAE	; 174
    2450:	37 e4       	ldi	r19, 0x47	; 71
    2452:	41 ee       	ldi	r20, 0xE1	; 225
    2454:	5d e3       	ldi	r21, 0x3D	; 61
    2456:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    245a:	9b 01       	movw	r18, r22
    245c:	ac 01       	movw	r20, r24
    245e:	c5 01       	movw	r24, r10
    2460:	b4 01       	movw	r22, r8
    2462:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2466:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    246a:	6b 01       	movw	r12, r22
    246c:	7c 01       	movw	r14, r24
    246e:	a9 e7       	ldi	r26, 0x79	; 121
    2470:	b3 e2       	ldi	r27, 0x23	; 35
    2472:	6d 93       	st	X+, r22
    2474:	7c 93       	st	X, r23
    2476:	ee ef       	ldi	r30, 0xFE	; 254
    2478:	f3 e2       	ldi	r31, 0x23	; 35
    247a:	00 81       	ld	r16, Z
    247c:	11 81       	ldd	r17, Z+1	; 0x01
    247e:	a0 e0       	ldi	r26, 0x00	; 0
    2480:	b4 e2       	ldi	r27, 0x24	; 36
    2482:	0d 93       	st	X+, r16
    2484:	1c 93       	st	X, r17
    2486:	ec ef       	ldi	r30, 0xFC	; 252
    2488:	f3 e2       	ldi	r31, 0x23	; 35
    248a:	80 81       	ld	r24, Z
    248c:	91 81       	ldd	r25, Z+1	; 0x01
    248e:	ff e0       	ldi	r31, 0x0F	; 15
    2490:	f8 9f       	mul	r31, r24
    2492:	50 01       	movw	r10, r0
    2494:	f9 9f       	mul	r31, r25
    2496:	b0 0c       	add	r11, r0
    2498:	11 24       	eor	r1, r1
    249a:	ac ef       	ldi	r26, 0xFC	; 252
    249c:	b3 e2       	ldi	r27, 0x23	; 35
    249e:	1d 92       	st	X+, r1
    24a0:	1c 92       	st	X, r1
    24a2:	b8 01       	movw	r22, r16
    24a4:	88 27       	eor	r24, r24
    24a6:	77 fd       	sbrc	r23, 7
    24a8:	80 95       	com	r24
    24aa:	98 2f       	mov	r25, r24
    24ac:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    24b0:	2b 01       	movw	r4, r22
    24b2:	3c 01       	movw	r6, r24
    24b4:	b5 01       	movw	r22, r10
    24b6:	60 1b       	sub	r22, r16
    24b8:	71 0b       	sbc	r23, r17
    24ba:	88 27       	eor	r24, r24
    24bc:	77 fd       	sbrc	r23, 7
    24be:	80 95       	com	r24
    24c0:	98 2f       	mov	r25, r24
    24c2:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    24c6:	2e ea       	ldi	r18, 0xAE	; 174
    24c8:	37 e4       	ldi	r19, 0x47	; 71
    24ca:	41 ee       	ldi	r20, 0xE1	; 225
    24cc:	5d e3       	ldi	r21, 0x3D	; 61
    24ce:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    24d2:	9b 01       	movw	r18, r22
    24d4:	ac 01       	movw	r20, r24
    24d6:	c3 01       	movw	r24, r6
    24d8:	b2 01       	movw	r22, r4
    24da:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    24de:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    24e2:	6d 83       	std	Y+5, r22	; 0x05
    24e4:	7e 83       	std	Y+6, r23	; 0x06
    24e6:	8f 83       	std	Y+7, r24	; 0x07
    24e8:	98 87       	std	Y+8, r25	; 0x08
    24ea:	ee ef       	ldi	r30, 0xFE	; 254
    24ec:	f3 e2       	ldi	r31, 0x23	; 35
    24ee:	60 83       	st	Z, r22
    24f0:	71 83       	std	Z+1, r23	; 0x01
    24f2:	a2 e1       	ldi	r26, 0x12	; 18
    24f4:	b4 e2       	ldi	r27, 0x24	; 36
    24f6:	0d 91       	ld	r16, X+
    24f8:	1c 91       	ld	r17, X
    24fa:	e4 e1       	ldi	r30, 0x14	; 20
    24fc:	f4 e2       	ldi	r31, 0x24	; 36
    24fe:	00 83       	st	Z, r16
    2500:	11 83       	std	Z+1, r17	; 0x01
    2502:	a0 e1       	ldi	r26, 0x10	; 16
    2504:	b4 e2       	ldi	r27, 0x24	; 36
    2506:	8d 91       	ld	r24, X+
    2508:	9c 91       	ld	r25, X
    250a:	bf e0       	ldi	r27, 0x0F	; 15
    250c:	b8 9f       	mul	r27, r24
    250e:	30 01       	movw	r6, r0
    2510:	b9 9f       	mul	r27, r25
    2512:	70 0c       	add	r7, r0
    2514:	11 24       	eor	r1, r1
    2516:	e0 e1       	ldi	r30, 0x10	; 16
    2518:	f4 e2       	ldi	r31, 0x24	; 36
    251a:	10 82       	st	Z, r1
    251c:	11 82       	std	Z+1, r1	; 0x01
    251e:	b8 01       	movw	r22, r16
    2520:	88 27       	eor	r24, r24
    2522:	77 fd       	sbrc	r23, 7
    2524:	80 95       	com	r24
    2526:	98 2f       	mov	r25, r24
    2528:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    252c:	4b 01       	movw	r8, r22
    252e:	5c 01       	movw	r10, r24
    2530:	b3 01       	movw	r22, r6
    2532:	60 1b       	sub	r22, r16
    2534:	71 0b       	sbc	r23, r17
    2536:	88 27       	eor	r24, r24
    2538:	77 fd       	sbrc	r23, 7
    253a:	80 95       	com	r24
    253c:	98 2f       	mov	r25, r24
    253e:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2542:	2e ea       	ldi	r18, 0xAE	; 174
    2544:	37 e4       	ldi	r19, 0x47	; 71
    2546:	41 ee       	ldi	r20, 0xE1	; 225
    2548:	5d e3       	ldi	r21, 0x3D	; 61
    254a:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    254e:	9b 01       	movw	r18, r22
    2550:	ac 01       	movw	r20, r24
    2552:	c5 01       	movw	r24, r10
    2554:	b4 01       	movw	r22, r8
    2556:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    255a:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    255e:	69 8b       	std	Y+17, r22	; 0x11
    2560:	7a 8b       	std	Y+18, r23	; 0x12
    2562:	8b 8b       	std	Y+19, r24	; 0x13
    2564:	9c 8b       	std	Y+20, r25	; 0x14
    2566:	a2 e1       	ldi	r26, 0x12	; 18
    2568:	b4 e2       	ldi	r27, 0x24	; 36
    256a:	6d 93       	st	X+, r22
    256c:	7c 93       	st	X, r23
    256e:	eb ea       	ldi	r30, 0xAB	; 171
    2570:	f3 e2       	ldi	r31, 0x23	; 35
    2572:	00 81       	ld	r16, Z
    2574:	11 81       	ldd	r17, Z+1	; 0x01
    2576:	ad ea       	ldi	r26, 0xAD	; 173
    2578:	b3 e2       	ldi	r27, 0x23	; 35
    257a:	0d 93       	st	X+, r16
    257c:	1c 93       	st	X, r17
    257e:	f1 01       	movw	r30, r2
    2580:	80 81       	ld	r24, Z
    2582:	91 81       	ldd	r25, Z+1	; 0x01
    2584:	ff e0       	ldi	r31, 0x0F	; 15
    2586:	f8 9f       	mul	r31, r24
    2588:	30 01       	movw	r6, r0
    258a:	f9 9f       	mul	r31, r25
    258c:	70 0c       	add	r7, r0
    258e:	11 24       	eor	r1, r1
    2590:	d1 01       	movw	r26, r2
    2592:	1d 92       	st	X+, r1
    2594:	1c 92       	st	X, r1
    2596:	b8 01       	movw	r22, r16
    2598:	88 27       	eor	r24, r24
    259a:	77 fd       	sbrc	r23, 7
    259c:	80 95       	com	r24
    259e:	98 2f       	mov	r25, r24
    25a0:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    25a4:	4b 01       	movw	r8, r22
    25a6:	5c 01       	movw	r10, r24
    25a8:	b3 01       	movw	r22, r6
    25aa:	60 1b       	sub	r22, r16
    25ac:	71 0b       	sbc	r23, r17
    25ae:	88 27       	eor	r24, r24
    25b0:	77 fd       	sbrc	r23, 7
    25b2:	80 95       	com	r24
    25b4:	98 2f       	mov	r25, r24
    25b6:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    25ba:	2e ea       	ldi	r18, 0xAE	; 174
    25bc:	37 e4       	ldi	r19, 0x47	; 71
    25be:	41 ee       	ldi	r20, 0xE1	; 225
    25c0:	5d e3       	ldi	r21, 0x3D	; 61
    25c2:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    25c6:	9b 01       	movw	r18, r22
    25c8:	ac 01       	movw	r20, r24
    25ca:	c5 01       	movw	r24, r10
    25cc:	b4 01       	movw	r22, r8
    25ce:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    25d2:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    25d6:	6d 8b       	std	Y+21, r22	; 0x15
    25d8:	7e 8b       	std	Y+22, r23	; 0x16
    25da:	8f 8b       	std	Y+23, r24	; 0x17
    25dc:	98 8f       	std	Y+24, r25	; 0x18
    25de:	eb ea       	ldi	r30, 0xAB	; 171
    25e0:	f3 e2       	ldi	r31, 0x23	; 35
    25e2:	60 83       	st	Z, r22
    25e4:	71 83       	std	Z+1, r23	; 0x01
    25e6:	a8 e0       	ldi	r26, 0x08	; 8
    25e8:	b6 e0       	ldi	r27, 0x06	; 6
    25ea:	9c 91       	ld	r25, X
    25ec:	8c 91       	ld	r24, X
    25ee:	2c 91       	ld	r18, X
    25f0:	4c 91       	ld	r20, X
    25f2:	22 1f       	adc	r18, r18
    25f4:	22 27       	eor	r18, r18
    25f6:	22 1f       	adc	r18, r18
    25f8:	30 e0       	ldi	r19, 0x00	; 0
    25fa:	22 0f       	add	r18, r18
    25fc:	33 1f       	adc	r19, r19
    25fe:	22 0f       	add	r18, r18
    2600:	33 1f       	adc	r19, r19
    2602:	96 fb       	bst	r25, 6
    2604:	99 27       	eor	r25, r25
    2606:	90 f9       	bld	r25, 0
    2608:	99 8f       	std	Y+25, r25	; 0x19
    260a:	1a 8e       	std	Y+26, r1	; 0x1a
    260c:	e9 8d       	ldd	r30, Y+25	; 0x19
    260e:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2610:	2e 2b       	or	r18, r30
    2612:	3f 2b       	or	r19, r31
    2614:	82 95       	swap	r24
    2616:	81 70       	andi	r24, 0x01	; 1
    2618:	8b 8f       	std	Y+27, r24	; 0x1b
    261a:	1c 8e       	std	Y+28, r1	; 0x1c
    261c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    261e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2620:	88 0f       	add	r24, r24
    2622:	99 1f       	adc	r25, r25
    2624:	28 2b       	or	r18, r24
    2626:	39 2b       	or	r19, r25
    2628:	45 fb       	bst	r20, 5
    262a:	44 27       	eor	r20, r20
    262c:	40 f9       	bld	r20, 0
    262e:	4d 8f       	std	Y+29, r20	; 0x1d
    2630:	1e 8e       	std	Y+30, r1	; 0x1e
    2632:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2634:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2636:	88 0f       	add	r24, r24
    2638:	99 1f       	adc	r25, r25
    263a:	88 0f       	add	r24, r24
    263c:	99 1f       	adc	r25, r25
    263e:	88 0f       	add	r24, r24
    2640:	99 1f       	adc	r25, r25
    2642:	28 2b       	or	r18, r24
    2644:	39 2b       	or	r19, r25
    2646:	17 e1       	ldi	r17, 0x17	; 23
    2648:	12 9f       	mul	r17, r18
    264a:	c0 01       	movw	r24, r0
    264c:	13 9f       	mul	r17, r19
    264e:	90 0d       	add	r25, r0
    2650:	11 24       	eor	r1, r1
    2652:	fc 01       	movw	r30, r24
    2654:	ec 54       	subi	r30, 0x4C	; 76
    2656:	ff 4d       	sbci	r31, 0xDF	; 223
    2658:	64 89       	ldd	r22, Z+20	; 0x14
    265a:	70 e0       	ldi	r23, 0x00	; 0
    265c:	80 e0       	ldi	r24, 0x00	; 0
    265e:	90 e0       	ldi	r25, 0x00	; 0
    2660:	0e 94 47 2c 	call	0x588e	; 0x588e <__floatunsisf>
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	48 ec       	ldi	r20, 0xC8	; 200
    266a:	52 e4       	ldi	r21, 0x42	; 66
    266c:	0e 94 ae 2b 	call	0x575c	; 0x575c <__divsf3>
    2670:	69 83       	std	Y+1, r22	; 0x01
    2672:	7a 83       	std	Y+2, r23	; 0x02
    2674:	8b 83       	std	Y+3, r24	; 0x03
    2676:	9c 83       	std	Y+4, r25	; 0x04
    2678:	60 93 22 24 	sts	0x2422, r22
    267c:	70 93 23 24 	sts	0x2423, r23
    2680:	80 93 24 24 	sts	0x2424, r24
    2684:	90 93 25 24 	sts	0x2425, r25
    2688:	a8 e0       	ldi	r26, 0x08	; 8
    268a:	b6 e0       	ldi	r27, 0x06	; 6
    268c:	9c 91       	ld	r25, X
    268e:	8c 91       	ld	r24, X
    2690:	2c 91       	ld	r18, X
    2692:	4c 91       	ld	r20, X
    2694:	22 1f       	adc	r18, r18
    2696:	22 27       	eor	r18, r18
    2698:	22 1f       	adc	r18, r18
    269a:	30 e0       	ldi	r19, 0x00	; 0
    269c:	22 0f       	add	r18, r18
    269e:	33 1f       	adc	r19, r19
    26a0:	22 0f       	add	r18, r18
    26a2:	33 1f       	adc	r19, r19
    26a4:	96 fb       	bst	r25, 6
    26a6:	99 27       	eor	r25, r25
    26a8:	90 f9       	bld	r25, 0
    26aa:	9f 8f       	std	Y+31, r25	; 0x1f
    26ac:	18 a2       	std	Y+32, r1	; 0x20
    26ae:	ef 8d       	ldd	r30, Y+31	; 0x1f
    26b0:	f8 a1       	ldd	r31, Y+32	; 0x20
    26b2:	2e 2b       	or	r18, r30
    26b4:	3f 2b       	or	r19, r31
    26b6:	82 95       	swap	r24
    26b8:	81 70       	andi	r24, 0x01	; 1
    26ba:	89 a3       	std	Y+33, r24	; 0x21
    26bc:	1a a2       	std	Y+34, r1	; 0x22
    26be:	89 a1       	ldd	r24, Y+33	; 0x21
    26c0:	9a a1       	ldd	r25, Y+34	; 0x22
    26c2:	88 0f       	add	r24, r24
    26c4:	99 1f       	adc	r25, r25
    26c6:	28 2b       	or	r18, r24
    26c8:	39 2b       	or	r19, r25
    26ca:	45 fb       	bst	r20, 5
    26cc:	44 27       	eor	r20, r20
    26ce:	40 f9       	bld	r20, 0
    26d0:	4b a3       	std	Y+35, r20	; 0x23
    26d2:	1c a2       	std	Y+36, r1	; 0x24
    26d4:	8b a1       	ldd	r24, Y+35	; 0x23
    26d6:	9c a1       	ldd	r25, Y+36	; 0x24
    26d8:	88 0f       	add	r24, r24
    26da:	99 1f       	adc	r25, r25
    26dc:	88 0f       	add	r24, r24
    26de:	99 1f       	adc	r25, r25
    26e0:	88 0f       	add	r24, r24
    26e2:	99 1f       	adc	r25, r25
    26e4:	28 2b       	or	r18, r24
    26e6:	39 2b       	or	r19, r25
    26e8:	12 9f       	mul	r17, r18
    26ea:	c0 01       	movw	r24, r0
    26ec:	13 9f       	mul	r17, r19
    26ee:	90 0d       	add	r25, r0
    26f0:	11 24       	eor	r1, r1
    26f2:	fc 01       	movw	r30, r24
    26f4:	ec 54       	subi	r30, 0x4C	; 76
    26f6:	ff 4d       	sbci	r31, 0xDF	; 223
    26f8:	65 89       	ldd	r22, Z+21	; 0x15
    26fa:	70 e0       	ldi	r23, 0x00	; 0
    26fc:	80 e0       	ldi	r24, 0x00	; 0
    26fe:	90 e0       	ldi	r25, 0x00	; 0
    2700:	0e 94 47 2c 	call	0x588e	; 0x588e <__floatunsisf>
    2704:	20 e0       	ldi	r18, 0x00	; 0
    2706:	30 e0       	ldi	r19, 0x00	; 0
    2708:	48 ec       	ldi	r20, 0xC8	; 200
    270a:	52 e4       	ldi	r21, 0x42	; 66
    270c:	0e 94 ae 2b 	call	0x575c	; 0x575c <__divsf3>
    2710:	69 87       	std	Y+9, r22	; 0x09
    2712:	7a 87       	std	Y+10, r23	; 0x0a
    2714:	8b 87       	std	Y+11, r24	; 0x0b
    2716:	9c 87       	std	Y+12, r25	; 0x0c
    2718:	60 93 ba 23 	sts	0x23BA, r22
    271c:	70 93 bb 23 	sts	0x23BB, r23
    2720:	80 93 bc 23 	sts	0x23BC, r24
    2724:	90 93 bd 23 	sts	0x23BD, r25
    2728:	a8 e0       	ldi	r26, 0x08	; 8
    272a:	b6 e0       	ldi	r27, 0x06	; 6
    272c:	9c 91       	ld	r25, X
    272e:	8c 91       	ld	r24, X
    2730:	2c 91       	ld	r18, X
    2732:	4c 91       	ld	r20, X
    2734:	22 1f       	adc	r18, r18
    2736:	22 27       	eor	r18, r18
    2738:	22 1f       	adc	r18, r18
    273a:	30 e0       	ldi	r19, 0x00	; 0
    273c:	22 0f       	add	r18, r18
    273e:	33 1f       	adc	r19, r19
    2740:	22 0f       	add	r18, r18
    2742:	33 1f       	adc	r19, r19
    2744:	96 fb       	bst	r25, 6
    2746:	99 27       	eor	r25, r25
    2748:	90 f9       	bld	r25, 0
    274a:	9d a3       	std	Y+37, r25	; 0x25
    274c:	1e a2       	std	Y+38, r1	; 0x26
    274e:	ed a1       	ldd	r30, Y+37	; 0x25
    2750:	fe a1       	ldd	r31, Y+38	; 0x26
    2752:	2e 2b       	or	r18, r30
    2754:	3f 2b       	or	r19, r31
    2756:	82 95       	swap	r24
    2758:	81 70       	andi	r24, 0x01	; 1
    275a:	8f a3       	std	Y+39, r24	; 0x27
    275c:	18 a6       	std	Y+40, r1	; 0x28
    275e:	8f a1       	ldd	r24, Y+39	; 0x27
    2760:	98 a5       	ldd	r25, Y+40	; 0x28
    2762:	88 0f       	add	r24, r24
    2764:	99 1f       	adc	r25, r25
    2766:	28 2b       	or	r18, r24
    2768:	39 2b       	or	r19, r25
    276a:	45 fb       	bst	r20, 5
    276c:	44 27       	eor	r20, r20
    276e:	40 f9       	bld	r20, 0
    2770:	49 a7       	std	Y+41, r20	; 0x29
    2772:	1a a6       	std	Y+42, r1	; 0x2a
    2774:	89 a5       	ldd	r24, Y+41	; 0x29
    2776:	9a a5       	ldd	r25, Y+42	; 0x2a
    2778:	88 0f       	add	r24, r24
    277a:	99 1f       	adc	r25, r25
    277c:	88 0f       	add	r24, r24
    277e:	99 1f       	adc	r25, r25
    2780:	88 0f       	add	r24, r24
    2782:	99 1f       	adc	r25, r25
    2784:	28 2b       	or	r18, r24
    2786:	39 2b       	or	r19, r25
    2788:	12 9f       	mul	r17, r18
    278a:	c0 01       	movw	r24, r0
    278c:	13 9f       	mul	r17, r19
    278e:	90 0d       	add	r25, r0
    2790:	11 24       	eor	r1, r1
    2792:	fc 01       	movw	r30, r24
    2794:	ec 54       	subi	r30, 0x4C	; 76
    2796:	ff 4d       	sbci	r31, 0xDF	; 223
    2798:	66 89       	ldd	r22, Z+22	; 0x16
    279a:	70 e0       	ldi	r23, 0x00	; 0
    279c:	80 e0       	ldi	r24, 0x00	; 0
    279e:	90 e0       	ldi	r25, 0x00	; 0
    27a0:	0e 94 47 2c 	call	0x588e	; 0x588e <__floatunsisf>
    27a4:	20 e0       	ldi	r18, 0x00	; 0
    27a6:	30 e0       	ldi	r19, 0x00	; 0
    27a8:	48 ec       	ldi	r20, 0xC8	; 200
    27aa:	52 e4       	ldi	r21, 0x42	; 66
    27ac:	0e 94 ae 2b 	call	0x575c	; 0x575c <__divsf3>
    27b0:	6d 87       	std	Y+13, r22	; 0x0d
    27b2:	7e 87       	std	Y+14, r23	; 0x0e
    27b4:	8f 87       	std	Y+15, r24	; 0x0f
    27b6:	98 8b       	std	Y+16, r25	; 0x10
    27b8:	60 93 ca 21 	sts	0x21CA, r22
    27bc:	70 93 cb 21 	sts	0x21CB, r23
    27c0:	80 93 cc 21 	sts	0x21CC, r24
    27c4:	90 93 cd 21 	sts	0x21CD, r25
    27c8:	10 92 9e 20 	sts	0x209E, r1
    27cc:	a8 e0       	ldi	r26, 0x08	; 8
    27ce:	b6 e0       	ldi	r27, 0x06	; 6
    27d0:	6c 91       	ld	r22, X
    27d2:	5c 91       	ld	r21, X
    27d4:	7c 91       	ld	r23, X
    27d6:	4c 91       	ld	r20, X
    27d8:	9c 91       	ld	r25, X
    27da:	8c 91       	ld	r24, X
    27dc:	2c 91       	ld	r18, X
    27de:	ec 91       	ld	r30, X
    27e0:	22 1f       	adc	r18, r18
    27e2:	22 27       	eor	r18, r18
    27e4:	22 1f       	adc	r18, r18
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	22 0f       	add	r18, r18
    27ea:	33 1f       	adc	r19, r19
    27ec:	22 0f       	add	r18, r18
    27ee:	33 1f       	adc	r19, r19
    27f0:	96 fb       	bst	r25, 6
    27f2:	99 27       	eor	r25, r25
    27f4:	90 f9       	bld	r25, 0
    27f6:	9b a7       	std	Y+43, r25	; 0x2b
    27f8:	1c a6       	std	Y+44, r1	; 0x2c
    27fa:	ab a5       	ldd	r26, Y+43	; 0x2b
    27fc:	bc a5       	ldd	r27, Y+44	; 0x2c
    27fe:	2a 2b       	or	r18, r26
    2800:	3b 2b       	or	r19, r27
    2802:	82 95       	swap	r24
    2804:	81 70       	andi	r24, 0x01	; 1
    2806:	8d a7       	std	Y+45, r24	; 0x2d
    2808:	1e a6       	std	Y+46, r1	; 0x2e
    280a:	8d a5       	ldd	r24, Y+45	; 0x2d
    280c:	9e a5       	ldd	r25, Y+46	; 0x2e
    280e:	88 0f       	add	r24, r24
    2810:	99 1f       	adc	r25, r25
    2812:	28 2b       	or	r18, r24
    2814:	39 2b       	or	r19, r25
    2816:	e5 fb       	bst	r30, 5
    2818:	ee 27       	eor	r30, r30
    281a:	e0 f9       	bld	r30, 0
    281c:	ef a7       	std	Y+47, r30	; 0x2f
    281e:	18 aa       	std	Y+48, r1	; 0x30
    2820:	8f a5       	ldd	r24, Y+47	; 0x2f
    2822:	98 a9       	ldd	r25, Y+48	; 0x30
    2824:	88 0f       	add	r24, r24
    2826:	99 1f       	adc	r25, r25
    2828:	88 0f       	add	r24, r24
    282a:	99 1f       	adc	r25, r25
    282c:	88 0f       	add	r24, r24
    282e:	99 1f       	adc	r25, r25
    2830:	28 2b       	or	r18, r24
    2832:	39 2b       	or	r19, r25
    2834:	12 9f       	mul	r17, r18
    2836:	c0 01       	movw	r24, r0
    2838:	13 9f       	mul	r17, r19
    283a:	90 0d       	add	r25, r0
    283c:	11 24       	eor	r1, r1
    283e:	fc 01       	movw	r30, r24
    2840:	ec 54       	subi	r30, 0x4C	; 76
    2842:	ff 4d       	sbci	r31, 0xDF	; 223
    2844:	b1 81       	ldd	r27, Z+1	; 0x01
    2846:	ba ab       	std	Y+50, r27	; 0x32
    2848:	19 aa       	std	Y+49, r1	; 0x31
    284a:	77 1f       	adc	r23, r23
    284c:	77 27       	eor	r23, r23
    284e:	77 1f       	adc	r23, r23
    2850:	87 2f       	mov	r24, r23
    2852:	90 e0       	ldi	r25, 0x00	; 0
    2854:	88 0f       	add	r24, r24
    2856:	99 1f       	adc	r25, r25
    2858:	88 0f       	add	r24, r24
    285a:	99 1f       	adc	r25, r25
    285c:	66 fb       	bst	r22, 6
    285e:	66 27       	eor	r22, r22
    2860:	60 f9       	bld	r22, 0
    2862:	6b ab       	std	Y+51, r22	; 0x33
    2864:	1c aa       	std	Y+52, r1	; 0x34
    2866:	eb a9       	ldd	r30, Y+51	; 0x33
    2868:	fc a9       	ldd	r31, Y+52	; 0x34
    286a:	8e 2b       	or	r24, r30
    286c:	9f 2b       	or	r25, r31
    286e:	52 95       	swap	r21
    2870:	51 70       	andi	r21, 0x01	; 1
    2872:	5d ab       	std	Y+53, r21	; 0x35
    2874:	1e aa       	std	Y+54, r1	; 0x36
    2876:	2d a9       	ldd	r18, Y+53	; 0x35
    2878:	3e a9       	ldd	r19, Y+54	; 0x36
    287a:	22 0f       	add	r18, r18
    287c:	33 1f       	adc	r19, r19
    287e:	82 2b       	or	r24, r18
    2880:	93 2b       	or	r25, r19
    2882:	45 fb       	bst	r20, 5
    2884:	44 27       	eor	r20, r20
    2886:	40 f9       	bld	r20, 0
    2888:	4f ab       	std	Y+55, r20	; 0x37
    288a:	18 ae       	std	Y+56, r1	; 0x38
    288c:	2f a9       	ldd	r18, Y+55	; 0x37
    288e:	38 ad       	ldd	r19, Y+56	; 0x38
    2890:	22 0f       	add	r18, r18
    2892:	33 1f       	adc	r19, r19
    2894:	22 0f       	add	r18, r18
    2896:	33 1f       	adc	r19, r19
    2898:	22 0f       	add	r18, r18
    289a:	33 1f       	adc	r19, r19
    289c:	82 2b       	or	r24, r18
    289e:	93 2b       	or	r25, r19
    28a0:	18 9f       	mul	r17, r24
    28a2:	a0 01       	movw	r20, r0
    28a4:	19 9f       	mul	r17, r25
    28a6:	50 0d       	add	r21, r0
    28a8:	11 24       	eor	r1, r1
    28aa:	fa 01       	movw	r30, r20
    28ac:	ec 54       	subi	r30, 0x4C	; 76
    28ae:	ff 4d       	sbci	r31, 0xDF	; 223
    28b0:	23 81       	ldd	r18, Z+3	; 0x03
    28b2:	34 81       	ldd	r19, Z+4	; 0x04
    28b4:	69 a9       	ldd	r22, Y+49	; 0x31
    28b6:	7a a9       	ldd	r23, Y+50	; 0x32
    28b8:	26 2b       	or	r18, r22
    28ba:	37 2b       	or	r19, r23
    28bc:	48 e2       	ldi	r20, 0x28	; 40
    28be:	42 9f       	mul	r20, r18
    28c0:	c0 01       	movw	r24, r0
    28c2:	43 9f       	mul	r20, r19
    28c4:	90 0d       	add	r25, r0
    28c6:	11 24       	eor	r1, r1
    28c8:	5c 01       	movw	r10, r24
    28ca:	ac 18       	sub	r10, r12
    28cc:	bd 08       	sbc	r11, r13
    28ce:	80 91 7d 23 	lds	r24, 0x237D
    28d2:	90 91 7e 23 	lds	r25, 0x237E
    28d6:	d5 01       	movw	r26, r10
    28d8:	a8 1b       	sub	r26, r24
    28da:	b9 0b       	sbc	r27, r25
    28dc:	9d 01       	movw	r18, r26
    28de:	22 0f       	add	r18, r18
    28e0:	33 1f       	adc	r19, r19
    28e2:	8d 01       	movw	r16, r26
    28e4:	00 0f       	add	r16, r16
    28e6:	11 1f       	adc	r17, r17
    28e8:	00 0f       	add	r16, r16
    28ea:	11 1f       	adc	r17, r17
    28ec:	00 0f       	add	r16, r16
    28ee:	11 1f       	adc	r17, r17
    28f0:	02 0f       	add	r16, r18
    28f2:	13 1f       	adc	r17, r19
    28f4:	c8 01       	movw	r24, r16
    28f6:	c1 96       	adiw	r24, 0x31	; 49
    28f8:	83 36       	cpi	r24, 0x63	; 99
    28fa:	91 05       	cpc	r25, r1
    28fc:	48 f0       	brcs	.+18     	; 0x2910 <main+0x728>
    28fe:	01 36       	cpi	r16, 0x61	; 97
    2900:	b9 e0       	ldi	r27, 0x09	; 9
    2902:	1b 07       	cpc	r17, r27
    2904:	44 f4       	brge	.+16     	; 0x2916 <main+0x72e>
    2906:	00 3a       	cpi	r16, 0xA0	; 160
    2908:	e6 ef       	ldi	r30, 0xF6	; 246
    290a:	1e 07       	cpc	r17, r30
    290c:	3c f0       	brlt	.+14     	; 0x291c <main+0x734>
    290e:	08 c0       	rjmp	.+16     	; 0x2920 <main+0x738>
    2910:	00 e0       	ldi	r16, 0x00	; 0
    2912:	10 e0       	ldi	r17, 0x00	; 0
    2914:	05 c0       	rjmp	.+10     	; 0x2920 <main+0x738>
    2916:	00 e0       	ldi	r16, 0x00	; 0
    2918:	10 e0       	ldi	r17, 0x00	; 0
    291a:	02 c0       	rjmp	.+4      	; 0x2920 <main+0x738>
    291c:	00 e0       	ldi	r16, 0x00	; 0
    291e:	10 e0       	ldi	r17, 0x00	; 0
    2920:	b5 01       	movw	r22, r10
    2922:	88 27       	eor	r24, r24
    2924:	77 fd       	sbrc	r23, 7
    2926:	80 95       	com	r24
    2928:	98 2f       	mov	r25, r24
    292a:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    292e:	6b 01       	movw	r12, r22
    2930:	7c 01       	movw	r14, r24
    2932:	9b 01       	movw	r18, r22
    2934:	ac 01       	movw	r20, r24
    2936:	69 81       	ldd	r22, Y+1	; 0x01
    2938:	7a 81       	ldd	r23, Y+2	; 0x02
    293a:	8b 81       	ldd	r24, Y+3	; 0x03
    293c:	9c 81       	ldd	r25, Y+4	; 0x04
    293e:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2942:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2946:	c3 51       	subi	r28, 0x13	; 19
    2948:	df 4f       	sbci	r29, 0xFF	; 255
    294a:	68 83       	st	Y, r22
    294c:	79 83       	std	Y+1, r23	; 0x01
    294e:	8a 83       	std	Y+2, r24	; 0x02
    2950:	9b 83       	std	Y+3, r25	; 0x03
    2952:	cd 5e       	subi	r28, 0xED	; 237
    2954:	d0 40       	sbci	r29, 0x00	; 0
    2956:	60 91 81 23 	lds	r22, 0x2381
    295a:	70 91 82 23 	lds	r23, 0x2382
    295e:	88 27       	eor	r24, r24
    2960:	77 fd       	sbrc	r23, 7
    2962:	80 95       	com	r24
    2964:	98 2f       	mov	r25, r24
    2966:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    296a:	2b 01       	movw	r4, r22
    296c:	3c 01       	movw	r6, r24
    296e:	a7 01       	movw	r20, r14
    2970:	96 01       	movw	r18, r12
    2972:	69 85       	ldd	r22, Y+9	; 0x09
    2974:	7a 85       	ldd	r23, Y+10	; 0x0a
    2976:	8b 85       	ldd	r24, Y+11	; 0x0b
    2978:	9c 85       	ldd	r25, Y+12	; 0x0c
    297a:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    297e:	2a e0       	ldi	r18, 0x0A	; 10
    2980:	37 ed       	ldi	r19, 0xD7	; 215
    2982:	43 ea       	ldi	r20, 0xA3	; 163
    2984:	5c e3       	ldi	r21, 0x3C	; 60
    2986:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    298a:	9b 01       	movw	r18, r22
    298c:	ac 01       	movw	r20, r24
    298e:	c3 01       	movw	r24, r6
    2990:	b2 01       	movw	r22, r4
    2992:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2996:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    299a:	60 93 81 23 	sts	0x2381, r22
    299e:	70 93 82 23 	sts	0x2382, r23
    29a2:	69 37       	cpi	r22, 0x79	; 121
    29a4:	71 05       	cpc	r23, r1
    29a6:	3c f0       	brlt	.+14     	; 0x29b6 <main+0x7ce>
    29a8:	88 e7       	ldi	r24, 0x78	; 120
    29aa:	90 e0       	ldi	r25, 0x00	; 0
    29ac:	80 93 81 23 	sts	0x2381, r24
    29b0:	90 93 82 23 	sts	0x2382, r25
    29b4:	0a c0       	rjmp	.+20     	; 0x29ca <main+0x7e2>
    29b6:	60 35       	cpi	r22, 0x50	; 80
    29b8:	fb ef       	ldi	r31, 0xFB	; 251
    29ba:	7f 07       	cpc	r23, r31
    29bc:	34 f4       	brge	.+12     	; 0x29ca <main+0x7e2>
    29be:	88 e8       	ldi	r24, 0x88	; 136
    29c0:	9f ef       	ldi	r25, 0xFF	; 255
    29c2:	80 93 81 23 	sts	0x2381, r24
    29c6:	90 93 82 23 	sts	0x2382, r25
    29ca:	c3 51       	subi	r28, 0x13	; 19
    29cc:	df 4f       	sbci	r29, 0xFF	; 255
    29ce:	88 81       	ld	r24, Y
    29d0:	99 81       	ldd	r25, Y+1	; 0x01
    29d2:	cd 5e       	subi	r28, 0xED	; 237
    29d4:	d0 40       	sbci	r29, 0x00	; 0
    29d6:	80 38       	cpi	r24, 0x80	; 128
    29d8:	91 05       	cpc	r25, r1
    29da:	14 f0       	brlt	.+4      	; 0x29e0 <main+0x7f8>
    29dc:	8f e7       	ldi	r24, 0x7F	; 127
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	bc 01       	movw	r22, r24
    29e2:	81 38       	cpi	r24, 0x81	; 129
    29e4:	2f ef       	ldi	r18, 0xFF	; 255
    29e6:	92 07       	cpc	r25, r18
    29e8:	14 f4       	brge	.+4      	; 0x29ee <main+0x806>
    29ea:	61 e8       	ldi	r22, 0x81	; 129
    29ec:	7f ef       	ldi	r23, 0xFF	; 255
    29ee:	80 90 81 23 	lds	r8, 0x2381
    29f2:	90 90 82 23 	lds	r9, 0x2382
    29f6:	68 0d       	add	r22, r8
    29f8:	79 1d       	adc	r23, r9
    29fa:	88 27       	eor	r24, r24
    29fc:	77 fd       	sbrc	r23, 7
    29fe:	80 95       	com	r24
    2a00:	98 2f       	mov	r25, r24
    2a02:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2a06:	6b 01       	movw	r12, r22
    2a08:	7c 01       	movw	r14, r24
    2a0a:	b8 01       	movw	r22, r16
    2a0c:	88 27       	eor	r24, r24
    2a0e:	77 fd       	sbrc	r23, 7
    2a10:	80 95       	com	r24
    2a12:	98 2f       	mov	r25, r24
    2a14:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2a18:	9b 01       	movw	r18, r22
    2a1a:	ac 01       	movw	r20, r24
    2a1c:	6d 85       	ldd	r22, Y+13	; 0x0d
    2a1e:	7e 85       	ldd	r23, Y+14	; 0x0e
    2a20:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a22:	98 89       	ldd	r25, Y+16	; 0x10
    2a24:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2a28:	9b 01       	movw	r18, r22
    2a2a:	ac 01       	movw	r20, r24
    2a2c:	c7 01       	movw	r24, r14
    2a2e:	b6 01       	movw	r22, r12
    2a30:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2a34:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2a38:	60 38       	cpi	r22, 0x80	; 128
    2a3a:	71 05       	cpc	r23, r1
    2a3c:	14 f0       	brlt	.+4      	; 0x2a42 <main+0x85a>
    2a3e:	6f e7       	ldi	r22, 0x7F	; 127
    2a40:	70 e0       	ldi	r23, 0x00	; 0
    2a42:	a0 92 7d 23 	sts	0x237D, r10
    2a46:	b0 92 7e 23 	sts	0x237E, r11
    2a4a:	00 93 7f 23 	sts	0x237F, r16
    2a4e:	10 93 80 23 	sts	0x2380, r17
    2a52:	cb 01       	movw	r24, r22
    2a54:	61 38       	cpi	r22, 0x81	; 129
    2a56:	3f ef       	ldi	r19, 0xFF	; 255
    2a58:	73 07       	cpc	r23, r19
    2a5a:	14 f4       	brge	.+4      	; 0x2a60 <main+0x878>
    2a5c:	81 e8       	ldi	r24, 0x81	; 129
    2a5e:	9f ef       	ldi	r25, 0xFF	; 255
    2a60:	80 93 85 23 	sts	0x2385, r24
    2a64:	a8 e0       	ldi	r26, 0x08	; 8
    2a66:	b6 e0       	ldi	r27, 0x06	; 6
    2a68:	6c 91       	ld	r22, X
    2a6a:	5c 91       	ld	r21, X
    2a6c:	7c 91       	ld	r23, X
    2a6e:	4c 91       	ld	r20, X
    2a70:	9c 91       	ld	r25, X
    2a72:	8c 91       	ld	r24, X
    2a74:	2c 91       	ld	r18, X
    2a76:	ec 91       	ld	r30, X
    2a78:	22 1f       	adc	r18, r18
    2a7a:	22 27       	eor	r18, r18
    2a7c:	22 1f       	adc	r18, r18
    2a7e:	30 e0       	ldi	r19, 0x00	; 0
    2a80:	22 0f       	add	r18, r18
    2a82:	33 1f       	adc	r19, r19
    2a84:	22 0f       	add	r18, r18
    2a86:	33 1f       	adc	r19, r19
    2a88:	96 fb       	bst	r25, 6
    2a8a:	99 27       	eor	r25, r25
    2a8c:	90 f9       	bld	r25, 0
    2a8e:	99 af       	std	Y+57, r25	; 0x39
    2a90:	1a ae       	std	Y+58, r1	; 0x3a
    2a92:	a9 ad       	ldd	r26, Y+57	; 0x39
    2a94:	ba ad       	ldd	r27, Y+58	; 0x3a
    2a96:	2a 2b       	or	r18, r26
    2a98:	3b 2b       	or	r19, r27
    2a9a:	82 95       	swap	r24
    2a9c:	81 70       	andi	r24, 0x01	; 1
    2a9e:	8b af       	std	Y+59, r24	; 0x3b
    2aa0:	1c ae       	std	Y+60, r1	; 0x3c
    2aa2:	8b ad       	ldd	r24, Y+59	; 0x3b
    2aa4:	9c ad       	ldd	r25, Y+60	; 0x3c
    2aa6:	88 0f       	add	r24, r24
    2aa8:	99 1f       	adc	r25, r25
    2aaa:	28 2b       	or	r18, r24
    2aac:	39 2b       	or	r19, r25
    2aae:	e5 fb       	bst	r30, 5
    2ab0:	ee 27       	eor	r30, r30
    2ab2:	e0 f9       	bld	r30, 0
    2ab4:	ed af       	std	Y+61, r30	; 0x3d
    2ab6:	1e ae       	std	Y+62, r1	; 0x3e
    2ab8:	8d ad       	ldd	r24, Y+61	; 0x3d
    2aba:	9e ad       	ldd	r25, Y+62	; 0x3e
    2abc:	88 0f       	add	r24, r24
    2abe:	99 1f       	adc	r25, r25
    2ac0:	88 0f       	add	r24, r24
    2ac2:	99 1f       	adc	r25, r25
    2ac4:	88 0f       	add	r24, r24
    2ac6:	99 1f       	adc	r25, r25
    2ac8:	28 2b       	or	r18, r24
    2aca:	39 2b       	or	r19, r25
    2acc:	f7 e1       	ldi	r31, 0x17	; 23
    2ace:	f2 9f       	mul	r31, r18
    2ad0:	c0 01       	movw	r24, r0
    2ad2:	f3 9f       	mul	r31, r19
    2ad4:	90 0d       	add	r25, r0
    2ad6:	11 24       	eor	r1, r1
    2ad8:	dc 01       	movw	r26, r24
    2ada:	ac 54       	subi	r26, 0x4C	; 76
    2adc:	bf 4d       	sbci	r27, 0xDF	; 223
    2ade:	15 96       	adiw	r26, 0x05	; 5
    2ae0:	ec 91       	ld	r30, X
    2ae2:	21 96       	adiw	r28, 0x01	; 1
    2ae4:	ef af       	std	Y+63, r30	; 0x3f
    2ae6:	21 97       	sbiw	r28, 0x01	; 1
    2ae8:	1f ae       	std	Y+63, r1	; 0x3f
    2aea:	77 1f       	adc	r23, r23
    2aec:	77 27       	eor	r23, r23
    2aee:	77 1f       	adc	r23, r23
    2af0:	87 2f       	mov	r24, r23
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	88 0f       	add	r24, r24
    2af6:	99 1f       	adc	r25, r25
    2af8:	88 0f       	add	r24, r24
    2afa:	99 1f       	adc	r25, r25
    2afc:	66 fb       	bst	r22, 6
    2afe:	66 27       	eor	r22, r22
    2b00:	60 f9       	bld	r22, 0
    2b02:	22 96       	adiw	r28, 0x02	; 2
    2b04:	6f af       	std	Y+63, r22	; 0x3f
    2b06:	22 97       	sbiw	r28, 0x02	; 2
    2b08:	23 96       	adiw	r28, 0x03	; 3
    2b0a:	1f ae       	std	Y+63, r1	; 0x3f
    2b0c:	23 97       	sbiw	r28, 0x03	; 3
    2b0e:	23 96       	adiw	r28, 0x03	; 3
    2b10:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b12:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b14:	23 97       	sbiw	r28, 0x03	; 3
    2b16:	82 2b       	or	r24, r18
    2b18:	93 2b       	or	r25, r19
    2b1a:	52 95       	swap	r21
    2b1c:	51 70       	andi	r21, 0x01	; 1
    2b1e:	24 96       	adiw	r28, 0x04	; 4
    2b20:	5f af       	std	Y+63, r21	; 0x3f
    2b22:	24 97       	sbiw	r28, 0x04	; 4
    2b24:	25 96       	adiw	r28, 0x05	; 5
    2b26:	1f ae       	std	Y+63, r1	; 0x3f
    2b28:	25 97       	sbiw	r28, 0x05	; 5
    2b2a:	25 96       	adiw	r28, 0x05	; 5
    2b2c:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b2e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b30:	25 97       	sbiw	r28, 0x05	; 5
    2b32:	22 0f       	add	r18, r18
    2b34:	33 1f       	adc	r19, r19
    2b36:	82 2b       	or	r24, r18
    2b38:	93 2b       	or	r25, r19
    2b3a:	45 fb       	bst	r20, 5
    2b3c:	44 27       	eor	r20, r20
    2b3e:	40 f9       	bld	r20, 0
    2b40:	26 96       	adiw	r28, 0x06	; 6
    2b42:	4f af       	std	Y+63, r20	; 0x3f
    2b44:	26 97       	sbiw	r28, 0x06	; 6
    2b46:	27 96       	adiw	r28, 0x07	; 7
    2b48:	1f ae       	std	Y+63, r1	; 0x3f
    2b4a:	27 97       	sbiw	r28, 0x07	; 7
    2b4c:	27 96       	adiw	r28, 0x07	; 7
    2b4e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b50:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b52:	27 97       	sbiw	r28, 0x07	; 7
    2b54:	22 0f       	add	r18, r18
    2b56:	33 1f       	adc	r19, r19
    2b58:	22 0f       	add	r18, r18
    2b5a:	33 1f       	adc	r19, r19
    2b5c:	22 0f       	add	r18, r18
    2b5e:	33 1f       	adc	r19, r19
    2b60:	82 2b       	or	r24, r18
    2b62:	93 2b       	or	r25, r19
    2b64:	f8 9f       	mul	r31, r24
    2b66:	a0 01       	movw	r20, r0
    2b68:	f9 9f       	mul	r31, r25
    2b6a:	50 0d       	add	r21, r0
    2b6c:	11 24       	eor	r1, r1
    2b6e:	fa 01       	movw	r30, r20
    2b70:	ec 54       	subi	r30, 0x4C	; 76
    2b72:	ff 4d       	sbci	r31, 0xDF	; 223
    2b74:	27 81       	ldd	r18, Z+7	; 0x07
    2b76:	30 85       	ldd	r19, Z+8	; 0x08
    2b78:	21 96       	adiw	r28, 0x01	; 1
    2b7a:	6e ad       	ldd	r22, Y+62	; 0x3e
    2b7c:	7f ad       	ldd	r23, Y+63	; 0x3f
    2b7e:	21 97       	sbiw	r28, 0x01	; 1
    2b80:	26 2b       	or	r18, r22
    2b82:	37 2b       	or	r19, r23
    2b84:	48 e2       	ldi	r20, 0x28	; 40
    2b86:	42 9f       	mul	r20, r18
    2b88:	c0 01       	movw	r24, r0
    2b8a:	43 9f       	mul	r20, r19
    2b8c:	90 0d       	add	r25, r0
    2b8e:	11 24       	eor	r1, r1
    2b90:	5c 01       	movw	r10, r24
    2b92:	ad 81       	ldd	r26, Y+5	; 0x05
    2b94:	be 81       	ldd	r27, Y+6	; 0x06
    2b96:	aa 1a       	sub	r10, r26
    2b98:	bb 0a       	sbc	r11, r27
    2b9a:	80 91 02 24 	lds	r24, 0x2402
    2b9e:	90 91 03 24 	lds	r25, 0x2403
    2ba2:	f5 01       	movw	r30, r10
    2ba4:	e8 1b       	sub	r30, r24
    2ba6:	f9 0b       	sbc	r31, r25
    2ba8:	9f 01       	movw	r18, r30
    2baa:	22 0f       	add	r18, r18
    2bac:	33 1f       	adc	r19, r19
    2bae:	8f 01       	movw	r16, r30
    2bb0:	00 0f       	add	r16, r16
    2bb2:	11 1f       	adc	r17, r17
    2bb4:	00 0f       	add	r16, r16
    2bb6:	11 1f       	adc	r17, r17
    2bb8:	00 0f       	add	r16, r16
    2bba:	11 1f       	adc	r17, r17
    2bbc:	02 0f       	add	r16, r18
    2bbe:	13 1f       	adc	r17, r19
    2bc0:	c8 01       	movw	r24, r16
    2bc2:	c1 96       	adiw	r24, 0x31	; 49
    2bc4:	83 36       	cpi	r24, 0x63	; 99
    2bc6:	91 05       	cpc	r25, r1
    2bc8:	48 f0       	brcs	.+18     	; 0x2bdc <main+0x9f4>
    2bca:	01 36       	cpi	r16, 0x61	; 97
    2bcc:	f9 e0       	ldi	r31, 0x09	; 9
    2bce:	1f 07       	cpc	r17, r31
    2bd0:	44 f4       	brge	.+16     	; 0x2be2 <main+0x9fa>
    2bd2:	00 3a       	cpi	r16, 0xA0	; 160
    2bd4:	26 ef       	ldi	r18, 0xF6	; 246
    2bd6:	12 07       	cpc	r17, r18
    2bd8:	3c f0       	brlt	.+14     	; 0x2be8 <main+0xa00>
    2bda:	08 c0       	rjmp	.+16     	; 0x2bec <main+0xa04>
    2bdc:	00 e0       	ldi	r16, 0x00	; 0
    2bde:	10 e0       	ldi	r17, 0x00	; 0
    2be0:	05 c0       	rjmp	.+10     	; 0x2bec <main+0xa04>
    2be2:	00 e0       	ldi	r16, 0x00	; 0
    2be4:	10 e0       	ldi	r17, 0x00	; 0
    2be6:	02 c0       	rjmp	.+4      	; 0x2bec <main+0xa04>
    2be8:	00 e0       	ldi	r16, 0x00	; 0
    2bea:	10 e0       	ldi	r17, 0x00	; 0
    2bec:	b5 01       	movw	r22, r10
    2bee:	88 27       	eor	r24, r24
    2bf0:	77 fd       	sbrc	r23, 7
    2bf2:	80 95       	com	r24
    2bf4:	98 2f       	mov	r25, r24
    2bf6:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2bfa:	6b 01       	movw	r12, r22
    2bfc:	7c 01       	movw	r14, r24
    2bfe:	9b 01       	movw	r18, r22
    2c00:	ac 01       	movw	r20, r24
    2c02:	69 81       	ldd	r22, Y+1	; 0x01
    2c04:	7a 81       	ldd	r23, Y+2	; 0x02
    2c06:	8b 81       	ldd	r24, Y+3	; 0x03
    2c08:	9c 81       	ldd	r25, Y+4	; 0x04
    2c0a:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2c0e:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2c12:	6d 83       	std	Y+5, r22	; 0x05
    2c14:	7e 83       	std	Y+6, r23	; 0x06
    2c16:	8f 83       	std	Y+7, r24	; 0x07
    2c18:	98 87       	std	Y+8, r25	; 0x08
    2c1a:	60 91 06 24 	lds	r22, 0x2406
    2c1e:	70 91 07 24 	lds	r23, 0x2407
    2c22:	88 27       	eor	r24, r24
    2c24:	77 fd       	sbrc	r23, 7
    2c26:	80 95       	com	r24
    2c28:	98 2f       	mov	r25, r24
    2c2a:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2c2e:	2b 01       	movw	r4, r22
    2c30:	3c 01       	movw	r6, r24
    2c32:	a7 01       	movw	r20, r14
    2c34:	96 01       	movw	r18, r12
    2c36:	69 85       	ldd	r22, Y+9	; 0x09
    2c38:	7a 85       	ldd	r23, Y+10	; 0x0a
    2c3a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2c3c:	9c 85       	ldd	r25, Y+12	; 0x0c
    2c3e:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2c42:	2a e0       	ldi	r18, 0x0A	; 10
    2c44:	37 ed       	ldi	r19, 0xD7	; 215
    2c46:	43 ea       	ldi	r20, 0xA3	; 163
    2c48:	5c e3       	ldi	r21, 0x3C	; 60
    2c4a:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2c4e:	9b 01       	movw	r18, r22
    2c50:	ac 01       	movw	r20, r24
    2c52:	c3 01       	movw	r24, r6
    2c54:	b2 01       	movw	r22, r4
    2c56:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2c5a:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2c5e:	60 93 06 24 	sts	0x2406, r22
    2c62:	70 93 07 24 	sts	0x2407, r23
    2c66:	69 37       	cpi	r22, 0x79	; 121
    2c68:	71 05       	cpc	r23, r1
    2c6a:	3c f0       	brlt	.+14     	; 0x2c7a <main+0xa92>
    2c6c:	88 e7       	ldi	r24, 0x78	; 120
    2c6e:	90 e0       	ldi	r25, 0x00	; 0
    2c70:	80 93 06 24 	sts	0x2406, r24
    2c74:	90 93 07 24 	sts	0x2407, r25
    2c78:	0a c0       	rjmp	.+20     	; 0x2c8e <main+0xaa6>
    2c7a:	60 35       	cpi	r22, 0x50	; 80
    2c7c:	5b ef       	ldi	r21, 0xFB	; 251
    2c7e:	75 07       	cpc	r23, r21
    2c80:	34 f4       	brge	.+12     	; 0x2c8e <main+0xaa6>
    2c82:	88 e8       	ldi	r24, 0x88	; 136
    2c84:	9f ef       	ldi	r25, 0xFF	; 255
    2c86:	80 93 06 24 	sts	0x2406, r24
    2c8a:	90 93 07 24 	sts	0x2407, r25
    2c8e:	8d 81       	ldd	r24, Y+5	; 0x05
    2c90:	9e 81       	ldd	r25, Y+6	; 0x06
    2c92:	80 38       	cpi	r24, 0x80	; 128
    2c94:	91 05       	cpc	r25, r1
    2c96:	14 f0       	brlt	.+4      	; 0x2c9c <main+0xab4>
    2c98:	8f e7       	ldi	r24, 0x7F	; 127
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
    2c9c:	bc 01       	movw	r22, r24
    2c9e:	61 38       	cpi	r22, 0x81	; 129
    2ca0:	8f ef       	ldi	r24, 0xFF	; 255
    2ca2:	78 07       	cpc	r23, r24
    2ca4:	14 f4       	brge	.+4      	; 0x2caa <main+0xac2>
    2ca6:	61 e8       	ldi	r22, 0x81	; 129
    2ca8:	7f ef       	ldi	r23, 0xFF	; 255
    2caa:	80 90 06 24 	lds	r8, 0x2406
    2cae:	90 90 07 24 	lds	r9, 0x2407
    2cb2:	68 0d       	add	r22, r8
    2cb4:	79 1d       	adc	r23, r9
    2cb6:	88 27       	eor	r24, r24
    2cb8:	77 fd       	sbrc	r23, 7
    2cba:	80 95       	com	r24
    2cbc:	98 2f       	mov	r25, r24
    2cbe:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2cc2:	6b 01       	movw	r12, r22
    2cc4:	7c 01       	movw	r14, r24
    2cc6:	b8 01       	movw	r22, r16
    2cc8:	88 27       	eor	r24, r24
    2cca:	77 fd       	sbrc	r23, 7
    2ccc:	80 95       	com	r24
    2cce:	98 2f       	mov	r25, r24
    2cd0:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2cd4:	9b 01       	movw	r18, r22
    2cd6:	ac 01       	movw	r20, r24
    2cd8:	6d 85       	ldd	r22, Y+13	; 0x0d
    2cda:	7e 85       	ldd	r23, Y+14	; 0x0e
    2cdc:	8f 85       	ldd	r24, Y+15	; 0x0f
    2cde:	98 89       	ldd	r25, Y+16	; 0x10
    2ce0:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2ce4:	9b 01       	movw	r18, r22
    2ce6:	ac 01       	movw	r20, r24
    2ce8:	c7 01       	movw	r24, r14
    2cea:	b6 01       	movw	r22, r12
    2cec:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2cf0:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2cf4:	60 38       	cpi	r22, 0x80	; 128
    2cf6:	71 05       	cpc	r23, r1
    2cf8:	14 f0       	brlt	.+4      	; 0x2cfe <main+0xb16>
    2cfa:	6f e7       	ldi	r22, 0x7F	; 127
    2cfc:	70 e0       	ldi	r23, 0x00	; 0
    2cfe:	a0 92 02 24 	sts	0x2402, r10
    2d02:	b0 92 03 24 	sts	0x2403, r11
    2d06:	00 93 04 24 	sts	0x2404, r16
    2d0a:	10 93 05 24 	sts	0x2405, r17
    2d0e:	cb 01       	movw	r24, r22
    2d10:	61 38       	cpi	r22, 0x81	; 129
    2d12:	af ef       	ldi	r26, 0xFF	; 255
    2d14:	7a 07       	cpc	r23, r26
    2d16:	14 f4       	brge	.+4      	; 0x2d1c <main+0xb34>
    2d18:	81 e8       	ldi	r24, 0x81	; 129
    2d1a:	9f ef       	ldi	r25, 0xFF	; 255
    2d1c:	80 93 0a 24 	sts	0x240A, r24
    2d20:	e8 e0       	ldi	r30, 0x08	; 8
    2d22:	f6 e0       	ldi	r31, 0x06	; 6
    2d24:	60 81       	ld	r22, Z
    2d26:	50 81       	ld	r21, Z
    2d28:	70 81       	ld	r23, Z
    2d2a:	40 81       	ld	r20, Z
    2d2c:	90 81       	ld	r25, Z
    2d2e:	80 81       	ld	r24, Z
    2d30:	20 81       	ld	r18, Z
    2d32:	e0 81       	ld	r30, Z
    2d34:	22 1f       	adc	r18, r18
    2d36:	22 27       	eor	r18, r18
    2d38:	22 1f       	adc	r18, r18
    2d3a:	30 e0       	ldi	r19, 0x00	; 0
    2d3c:	22 0f       	add	r18, r18
    2d3e:	33 1f       	adc	r19, r19
    2d40:	22 0f       	add	r18, r18
    2d42:	33 1f       	adc	r19, r19
    2d44:	96 fb       	bst	r25, 6
    2d46:	99 27       	eor	r25, r25
    2d48:	90 f9       	bld	r25, 0
    2d4a:	28 96       	adiw	r28, 0x08	; 8
    2d4c:	9f af       	std	Y+63, r25	; 0x3f
    2d4e:	28 97       	sbiw	r28, 0x08	; 8
    2d50:	29 96       	adiw	r28, 0x09	; 9
    2d52:	1f ae       	std	Y+63, r1	; 0x3f
    2d54:	29 97       	sbiw	r28, 0x09	; 9
    2d56:	29 96       	adiw	r28, 0x09	; 9
    2d58:	ae ad       	ldd	r26, Y+62	; 0x3e
    2d5a:	bf ad       	ldd	r27, Y+63	; 0x3f
    2d5c:	29 97       	sbiw	r28, 0x09	; 9
    2d5e:	2a 2b       	or	r18, r26
    2d60:	3b 2b       	or	r19, r27
    2d62:	82 95       	swap	r24
    2d64:	81 70       	andi	r24, 0x01	; 1
    2d66:	2a 96       	adiw	r28, 0x0a	; 10
    2d68:	8f af       	std	Y+63, r24	; 0x3f
    2d6a:	2a 97       	sbiw	r28, 0x0a	; 10
    2d6c:	2b 96       	adiw	r28, 0x0b	; 11
    2d6e:	1f ae       	std	Y+63, r1	; 0x3f
    2d70:	2b 97       	sbiw	r28, 0x0b	; 11
    2d72:	2b 96       	adiw	r28, 0x0b	; 11
    2d74:	8e ad       	ldd	r24, Y+62	; 0x3e
    2d76:	9f ad       	ldd	r25, Y+63	; 0x3f
    2d78:	2b 97       	sbiw	r28, 0x0b	; 11
    2d7a:	88 0f       	add	r24, r24
    2d7c:	99 1f       	adc	r25, r25
    2d7e:	28 2b       	or	r18, r24
    2d80:	39 2b       	or	r19, r25
    2d82:	e5 fb       	bst	r30, 5
    2d84:	ee 27       	eor	r30, r30
    2d86:	e0 f9       	bld	r30, 0
    2d88:	2c 96       	adiw	r28, 0x0c	; 12
    2d8a:	ef af       	std	Y+63, r30	; 0x3f
    2d8c:	2c 97       	sbiw	r28, 0x0c	; 12
    2d8e:	2d 96       	adiw	r28, 0x0d	; 13
    2d90:	1f ae       	std	Y+63, r1	; 0x3f
    2d92:	2d 97       	sbiw	r28, 0x0d	; 13
    2d94:	2d 96       	adiw	r28, 0x0d	; 13
    2d96:	8e ad       	ldd	r24, Y+62	; 0x3e
    2d98:	9f ad       	ldd	r25, Y+63	; 0x3f
    2d9a:	2d 97       	sbiw	r28, 0x0d	; 13
    2d9c:	88 0f       	add	r24, r24
    2d9e:	99 1f       	adc	r25, r25
    2da0:	88 0f       	add	r24, r24
    2da2:	99 1f       	adc	r25, r25
    2da4:	88 0f       	add	r24, r24
    2da6:	99 1f       	adc	r25, r25
    2da8:	28 2b       	or	r18, r24
    2daa:	39 2b       	or	r19, r25
    2dac:	f7 e1       	ldi	r31, 0x17	; 23
    2dae:	f2 9f       	mul	r31, r18
    2db0:	c0 01       	movw	r24, r0
    2db2:	f3 9f       	mul	r31, r19
    2db4:	90 0d       	add	r25, r0
    2db6:	11 24       	eor	r1, r1
    2db8:	dc 01       	movw	r26, r24
    2dba:	ac 54       	subi	r26, 0x4C	; 76
    2dbc:	bf 4d       	sbci	r27, 0xDF	; 223
    2dbe:	19 96       	adiw	r26, 0x09	; 9
    2dc0:	ec 91       	ld	r30, X
    2dc2:	2f 96       	adiw	r28, 0x0f	; 15
    2dc4:	ef af       	std	Y+63, r30	; 0x3f
    2dc6:	2f 97       	sbiw	r28, 0x0f	; 15
    2dc8:	2e 96       	adiw	r28, 0x0e	; 14
    2dca:	1f ae       	std	Y+63, r1	; 0x3f
    2dcc:	2e 97       	sbiw	r28, 0x0e	; 14
    2dce:	77 1f       	adc	r23, r23
    2dd0:	77 27       	eor	r23, r23
    2dd2:	77 1f       	adc	r23, r23
    2dd4:	87 2f       	mov	r24, r23
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	88 0f       	add	r24, r24
    2dda:	99 1f       	adc	r25, r25
    2ddc:	88 0f       	add	r24, r24
    2dde:	99 1f       	adc	r25, r25
    2de0:	66 fb       	bst	r22, 6
    2de2:	66 27       	eor	r22, r22
    2de4:	60 f9       	bld	r22, 0
    2de6:	60 96       	adiw	r28, 0x10	; 16
    2de8:	6f af       	std	Y+63, r22	; 0x3f
    2dea:	60 97       	sbiw	r28, 0x10	; 16
    2dec:	61 96       	adiw	r28, 0x11	; 17
    2dee:	1f ae       	std	Y+63, r1	; 0x3f
    2df0:	61 97       	sbiw	r28, 0x11	; 17
    2df2:	61 96       	adiw	r28, 0x11	; 17
    2df4:	2e ad       	ldd	r18, Y+62	; 0x3e
    2df6:	3f ad       	ldd	r19, Y+63	; 0x3f
    2df8:	61 97       	sbiw	r28, 0x11	; 17
    2dfa:	82 2b       	or	r24, r18
    2dfc:	93 2b       	or	r25, r19
    2dfe:	52 95       	swap	r21
    2e00:	51 70       	andi	r21, 0x01	; 1
    2e02:	62 96       	adiw	r28, 0x12	; 18
    2e04:	5f af       	std	Y+63, r21	; 0x3f
    2e06:	62 97       	sbiw	r28, 0x12	; 18
    2e08:	63 96       	adiw	r28, 0x13	; 19
    2e0a:	1f ae       	std	Y+63, r1	; 0x3f
    2e0c:	63 97       	sbiw	r28, 0x13	; 19
    2e0e:	63 96       	adiw	r28, 0x13	; 19
    2e10:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e12:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e14:	63 97       	sbiw	r28, 0x13	; 19
    2e16:	22 0f       	add	r18, r18
    2e18:	33 1f       	adc	r19, r19
    2e1a:	82 2b       	or	r24, r18
    2e1c:	93 2b       	or	r25, r19
    2e1e:	45 fb       	bst	r20, 5
    2e20:	44 27       	eor	r20, r20
    2e22:	40 f9       	bld	r20, 0
    2e24:	64 96       	adiw	r28, 0x14	; 20
    2e26:	4f af       	std	Y+63, r20	; 0x3f
    2e28:	64 97       	sbiw	r28, 0x14	; 20
    2e2a:	65 96       	adiw	r28, 0x15	; 21
    2e2c:	1f ae       	std	Y+63, r1	; 0x3f
    2e2e:	65 97       	sbiw	r28, 0x15	; 21
    2e30:	65 96       	adiw	r28, 0x15	; 21
    2e32:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e34:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e36:	65 97       	sbiw	r28, 0x15	; 21
    2e38:	22 0f       	add	r18, r18
    2e3a:	33 1f       	adc	r19, r19
    2e3c:	22 0f       	add	r18, r18
    2e3e:	33 1f       	adc	r19, r19
    2e40:	22 0f       	add	r18, r18
    2e42:	33 1f       	adc	r19, r19
    2e44:	82 2b       	or	r24, r18
    2e46:	93 2b       	or	r25, r19
    2e48:	f8 9f       	mul	r31, r24
    2e4a:	a0 01       	movw	r20, r0
    2e4c:	f9 9f       	mul	r31, r25
    2e4e:	50 0d       	add	r21, r0
    2e50:	11 24       	eor	r1, r1
    2e52:	fa 01       	movw	r30, r20
    2e54:	ec 54       	subi	r30, 0x4C	; 76
    2e56:	ff 4d       	sbci	r31, 0xDF	; 223
    2e58:	23 85       	ldd	r18, Z+11	; 0x0b
    2e5a:	34 85       	ldd	r19, Z+12	; 0x0c
    2e5c:	2f 96       	adiw	r28, 0x0f	; 15
    2e5e:	6e ad       	ldd	r22, Y+62	; 0x3e
    2e60:	7f ad       	ldd	r23, Y+63	; 0x3f
    2e62:	2f 97       	sbiw	r28, 0x0f	; 15
    2e64:	26 2b       	or	r18, r22
    2e66:	37 2b       	or	r19, r23
    2e68:	48 e2       	ldi	r20, 0x28	; 40
    2e6a:	42 9f       	mul	r20, r18
    2e6c:	c0 01       	movw	r24, r0
    2e6e:	43 9f       	mul	r20, r19
    2e70:	90 0d       	add	r25, r0
    2e72:	11 24       	eor	r1, r1
    2e74:	5c 01       	movw	r10, r24
    2e76:	a9 89       	ldd	r26, Y+17	; 0x11
    2e78:	ba 89       	ldd	r27, Y+18	; 0x12
    2e7a:	aa 1a       	sub	r10, r26
    2e7c:	bb 0a       	sbc	r11, r27
    2e7e:	80 91 16 24 	lds	r24, 0x2416
    2e82:	90 91 17 24 	lds	r25, 0x2417
    2e86:	f5 01       	movw	r30, r10
    2e88:	e8 1b       	sub	r30, r24
    2e8a:	f9 0b       	sbc	r31, r25
    2e8c:	9f 01       	movw	r18, r30
    2e8e:	22 0f       	add	r18, r18
    2e90:	33 1f       	adc	r19, r19
    2e92:	8f 01       	movw	r16, r30
    2e94:	00 0f       	add	r16, r16
    2e96:	11 1f       	adc	r17, r17
    2e98:	00 0f       	add	r16, r16
    2e9a:	11 1f       	adc	r17, r17
    2e9c:	00 0f       	add	r16, r16
    2e9e:	11 1f       	adc	r17, r17
    2ea0:	02 0f       	add	r16, r18
    2ea2:	13 1f       	adc	r17, r19
    2ea4:	c8 01       	movw	r24, r16
    2ea6:	c1 96       	adiw	r24, 0x31	; 49
    2ea8:	83 36       	cpi	r24, 0x63	; 99
    2eaa:	91 05       	cpc	r25, r1
    2eac:	48 f0       	brcs	.+18     	; 0x2ec0 <main+0xcd8>
    2eae:	01 36       	cpi	r16, 0x61	; 97
    2eb0:	f9 e0       	ldi	r31, 0x09	; 9
    2eb2:	1f 07       	cpc	r17, r31
    2eb4:	44 f4       	brge	.+16     	; 0x2ec6 <main+0xcde>
    2eb6:	00 3a       	cpi	r16, 0xA0	; 160
    2eb8:	26 ef       	ldi	r18, 0xF6	; 246
    2eba:	12 07       	cpc	r17, r18
    2ebc:	3c f0       	brlt	.+14     	; 0x2ecc <main+0xce4>
    2ebe:	08 c0       	rjmp	.+16     	; 0x2ed0 <main+0xce8>
    2ec0:	00 e0       	ldi	r16, 0x00	; 0
    2ec2:	10 e0       	ldi	r17, 0x00	; 0
    2ec4:	05 c0       	rjmp	.+10     	; 0x2ed0 <main+0xce8>
    2ec6:	00 e0       	ldi	r16, 0x00	; 0
    2ec8:	10 e0       	ldi	r17, 0x00	; 0
    2eca:	02 c0       	rjmp	.+4      	; 0x2ed0 <main+0xce8>
    2ecc:	00 e0       	ldi	r16, 0x00	; 0
    2ece:	10 e0       	ldi	r17, 0x00	; 0
    2ed0:	b5 01       	movw	r22, r10
    2ed2:	88 27       	eor	r24, r24
    2ed4:	77 fd       	sbrc	r23, 7
    2ed6:	80 95       	com	r24
    2ed8:	98 2f       	mov	r25, r24
    2eda:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2ede:	6b 01       	movw	r12, r22
    2ee0:	7c 01       	movw	r14, r24
    2ee2:	9b 01       	movw	r18, r22
    2ee4:	ac 01       	movw	r20, r24
    2ee6:	69 81       	ldd	r22, Y+1	; 0x01
    2ee8:	7a 81       	ldd	r23, Y+2	; 0x02
    2eea:	8b 81       	ldd	r24, Y+3	; 0x03
    2eec:	9c 81       	ldd	r25, Y+4	; 0x04
    2eee:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2ef2:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2ef6:	6d 83       	std	Y+5, r22	; 0x05
    2ef8:	7e 83       	std	Y+6, r23	; 0x06
    2efa:	8f 83       	std	Y+7, r24	; 0x07
    2efc:	98 87       	std	Y+8, r25	; 0x08
    2efe:	60 91 1a 24 	lds	r22, 0x241A
    2f02:	70 91 1b 24 	lds	r23, 0x241B
    2f06:	88 27       	eor	r24, r24
    2f08:	77 fd       	sbrc	r23, 7
    2f0a:	80 95       	com	r24
    2f0c:	98 2f       	mov	r25, r24
    2f0e:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2f12:	2b 01       	movw	r4, r22
    2f14:	3c 01       	movw	r6, r24
    2f16:	a7 01       	movw	r20, r14
    2f18:	96 01       	movw	r18, r12
    2f1a:	69 85       	ldd	r22, Y+9	; 0x09
    2f1c:	7a 85       	ldd	r23, Y+10	; 0x0a
    2f1e:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f20:	9c 85       	ldd	r25, Y+12	; 0x0c
    2f22:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2f26:	2a e0       	ldi	r18, 0x0A	; 10
    2f28:	37 ed       	ldi	r19, 0xD7	; 215
    2f2a:	43 ea       	ldi	r20, 0xA3	; 163
    2f2c:	5c e3       	ldi	r21, 0x3C	; 60
    2f2e:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2f32:	9b 01       	movw	r18, r22
    2f34:	ac 01       	movw	r20, r24
    2f36:	c3 01       	movw	r24, r6
    2f38:	b2 01       	movw	r22, r4
    2f3a:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2f3e:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2f42:	60 93 1a 24 	sts	0x241A, r22
    2f46:	70 93 1b 24 	sts	0x241B, r23
    2f4a:	69 37       	cpi	r22, 0x79	; 121
    2f4c:	71 05       	cpc	r23, r1
    2f4e:	3c f0       	brlt	.+14     	; 0x2f5e <main+0xd76>
    2f50:	88 e7       	ldi	r24, 0x78	; 120
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	80 93 1a 24 	sts	0x241A, r24
    2f58:	90 93 1b 24 	sts	0x241B, r25
    2f5c:	0a c0       	rjmp	.+20     	; 0x2f72 <main+0xd8a>
    2f5e:	60 35       	cpi	r22, 0x50	; 80
    2f60:	5b ef       	ldi	r21, 0xFB	; 251
    2f62:	75 07       	cpc	r23, r21
    2f64:	34 f4       	brge	.+12     	; 0x2f72 <main+0xd8a>
    2f66:	88 e8       	ldi	r24, 0x88	; 136
    2f68:	9f ef       	ldi	r25, 0xFF	; 255
    2f6a:	80 93 1a 24 	sts	0x241A, r24
    2f6e:	90 93 1b 24 	sts	0x241B, r25
    2f72:	8d 81       	ldd	r24, Y+5	; 0x05
    2f74:	9e 81       	ldd	r25, Y+6	; 0x06
    2f76:	80 38       	cpi	r24, 0x80	; 128
    2f78:	91 05       	cpc	r25, r1
    2f7a:	14 f0       	brlt	.+4      	; 0x2f80 <main+0xd98>
    2f7c:	8f e7       	ldi	r24, 0x7F	; 127
    2f7e:	90 e0       	ldi	r25, 0x00	; 0
    2f80:	bc 01       	movw	r22, r24
    2f82:	61 38       	cpi	r22, 0x81	; 129
    2f84:	8f ef       	ldi	r24, 0xFF	; 255
    2f86:	78 07       	cpc	r23, r24
    2f88:	14 f4       	brge	.+4      	; 0x2f8e <main+0xda6>
    2f8a:	61 e8       	ldi	r22, 0x81	; 129
    2f8c:	7f ef       	ldi	r23, 0xFF	; 255
    2f8e:	80 90 1a 24 	lds	r8, 0x241A
    2f92:	90 90 1b 24 	lds	r9, 0x241B
    2f96:	68 0d       	add	r22, r8
    2f98:	79 1d       	adc	r23, r9
    2f9a:	88 27       	eor	r24, r24
    2f9c:	77 fd       	sbrc	r23, 7
    2f9e:	80 95       	com	r24
    2fa0:	98 2f       	mov	r25, r24
    2fa2:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2fa6:	6b 01       	movw	r12, r22
    2fa8:	7c 01       	movw	r14, r24
    2faa:	b8 01       	movw	r22, r16
    2fac:	88 27       	eor	r24, r24
    2fae:	77 fd       	sbrc	r23, 7
    2fb0:	80 95       	com	r24
    2fb2:	98 2f       	mov	r25, r24
    2fb4:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    2fb8:	9b 01       	movw	r18, r22
    2fba:	ac 01       	movw	r20, r24
    2fbc:	6d 85       	ldd	r22, Y+13	; 0x0d
    2fbe:	7e 85       	ldd	r23, Y+14	; 0x0e
    2fc0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2fc2:	98 89       	ldd	r25, Y+16	; 0x10
    2fc4:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    2fc8:	9b 01       	movw	r18, r22
    2fca:	ac 01       	movw	r20, r24
    2fcc:	c7 01       	movw	r24, r14
    2fce:	b6 01       	movw	r22, r12
    2fd0:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    2fd4:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    2fd8:	60 38       	cpi	r22, 0x80	; 128
    2fda:	71 05       	cpc	r23, r1
    2fdc:	14 f0       	brlt	.+4      	; 0x2fe2 <main+0xdfa>
    2fde:	6f e7       	ldi	r22, 0x7F	; 127
    2fe0:	70 e0       	ldi	r23, 0x00	; 0
    2fe2:	a0 92 16 24 	sts	0x2416, r10
    2fe6:	b0 92 17 24 	sts	0x2417, r11
    2fea:	00 93 18 24 	sts	0x2418, r16
    2fee:	10 93 19 24 	sts	0x2419, r17
    2ff2:	cb 01       	movw	r24, r22
    2ff4:	61 38       	cpi	r22, 0x81	; 129
    2ff6:	af ef       	ldi	r26, 0xFF	; 255
    2ff8:	7a 07       	cpc	r23, r26
    2ffa:	14 f4       	brge	.+4      	; 0x3000 <main+0xe18>
    2ffc:	81 e8       	ldi	r24, 0x81	; 129
    2ffe:	9f ef       	ldi	r25, 0xFF	; 255
    3000:	80 93 1e 24 	sts	0x241E, r24
    3004:	e8 e0       	ldi	r30, 0x08	; 8
    3006:	f6 e0       	ldi	r31, 0x06	; 6
    3008:	60 81       	ld	r22, Z
    300a:	50 81       	ld	r21, Z
    300c:	70 81       	ld	r23, Z
    300e:	40 81       	ld	r20, Z
    3010:	90 81       	ld	r25, Z
    3012:	80 81       	ld	r24, Z
    3014:	20 81       	ld	r18, Z
    3016:	e0 81       	ld	r30, Z
    3018:	22 1f       	adc	r18, r18
    301a:	22 27       	eor	r18, r18
    301c:	22 1f       	adc	r18, r18
    301e:	30 e0       	ldi	r19, 0x00	; 0
    3020:	22 0f       	add	r18, r18
    3022:	33 1f       	adc	r19, r19
    3024:	22 0f       	add	r18, r18
    3026:	33 1f       	adc	r19, r19
    3028:	96 fb       	bst	r25, 6
    302a:	99 27       	eor	r25, r25
    302c:	90 f9       	bld	r25, 0
    302e:	66 96       	adiw	r28, 0x16	; 22
    3030:	9f af       	std	Y+63, r25	; 0x3f
    3032:	66 97       	sbiw	r28, 0x16	; 22
    3034:	67 96       	adiw	r28, 0x17	; 23
    3036:	1f ae       	std	Y+63, r1	; 0x3f
    3038:	67 97       	sbiw	r28, 0x17	; 23
    303a:	67 96       	adiw	r28, 0x17	; 23
    303c:	ae ad       	ldd	r26, Y+62	; 0x3e
    303e:	bf ad       	ldd	r27, Y+63	; 0x3f
    3040:	67 97       	sbiw	r28, 0x17	; 23
    3042:	2a 2b       	or	r18, r26
    3044:	3b 2b       	or	r19, r27
    3046:	82 95       	swap	r24
    3048:	81 70       	andi	r24, 0x01	; 1
    304a:	68 96       	adiw	r28, 0x18	; 24
    304c:	8f af       	std	Y+63, r24	; 0x3f
    304e:	68 97       	sbiw	r28, 0x18	; 24
    3050:	69 96       	adiw	r28, 0x19	; 25
    3052:	1f ae       	std	Y+63, r1	; 0x3f
    3054:	69 97       	sbiw	r28, 0x19	; 25
    3056:	69 96       	adiw	r28, 0x19	; 25
    3058:	8e ad       	ldd	r24, Y+62	; 0x3e
    305a:	9f ad       	ldd	r25, Y+63	; 0x3f
    305c:	69 97       	sbiw	r28, 0x19	; 25
    305e:	88 0f       	add	r24, r24
    3060:	99 1f       	adc	r25, r25
    3062:	28 2b       	or	r18, r24
    3064:	39 2b       	or	r19, r25
    3066:	e5 fb       	bst	r30, 5
    3068:	ee 27       	eor	r30, r30
    306a:	e0 f9       	bld	r30, 0
    306c:	6a 96       	adiw	r28, 0x1a	; 26
    306e:	ef af       	std	Y+63, r30	; 0x3f
    3070:	6a 97       	sbiw	r28, 0x1a	; 26
    3072:	6b 96       	adiw	r28, 0x1b	; 27
    3074:	1f ae       	std	Y+63, r1	; 0x3f
    3076:	6b 97       	sbiw	r28, 0x1b	; 27
    3078:	6b 96       	adiw	r28, 0x1b	; 27
    307a:	8e ad       	ldd	r24, Y+62	; 0x3e
    307c:	9f ad       	ldd	r25, Y+63	; 0x3f
    307e:	6b 97       	sbiw	r28, 0x1b	; 27
    3080:	88 0f       	add	r24, r24
    3082:	99 1f       	adc	r25, r25
    3084:	88 0f       	add	r24, r24
    3086:	99 1f       	adc	r25, r25
    3088:	88 0f       	add	r24, r24
    308a:	99 1f       	adc	r25, r25
    308c:	28 2b       	or	r18, r24
    308e:	39 2b       	or	r19, r25
    3090:	f7 e1       	ldi	r31, 0x17	; 23
    3092:	f2 9f       	mul	r31, r18
    3094:	c0 01       	movw	r24, r0
    3096:	f3 9f       	mul	r31, r19
    3098:	90 0d       	add	r25, r0
    309a:	11 24       	eor	r1, r1
    309c:	dc 01       	movw	r26, r24
    309e:	ac 54       	subi	r26, 0x4C	; 76
    30a0:	bf 4d       	sbci	r27, 0xDF	; 223
    30a2:	1d 96       	adiw	r26, 0x0d	; 13
    30a4:	ec 91       	ld	r30, X
    30a6:	6d 96       	adiw	r28, 0x1d	; 29
    30a8:	ef af       	std	Y+63, r30	; 0x3f
    30aa:	6d 97       	sbiw	r28, 0x1d	; 29
    30ac:	6c 96       	adiw	r28, 0x1c	; 28
    30ae:	1f ae       	std	Y+63, r1	; 0x3f
    30b0:	6c 97       	sbiw	r28, 0x1c	; 28
    30b2:	77 1f       	adc	r23, r23
    30b4:	77 27       	eor	r23, r23
    30b6:	77 1f       	adc	r23, r23
    30b8:	87 2f       	mov	r24, r23
    30ba:	90 e0       	ldi	r25, 0x00	; 0
    30bc:	88 0f       	add	r24, r24
    30be:	99 1f       	adc	r25, r25
    30c0:	88 0f       	add	r24, r24
    30c2:	99 1f       	adc	r25, r25
    30c4:	66 fb       	bst	r22, 6
    30c6:	66 27       	eor	r22, r22
    30c8:	60 f9       	bld	r22, 0
    30ca:	6e 96       	adiw	r28, 0x1e	; 30
    30cc:	6f af       	std	Y+63, r22	; 0x3f
    30ce:	6e 97       	sbiw	r28, 0x1e	; 30
    30d0:	6f 96       	adiw	r28, 0x1f	; 31
    30d2:	1f ae       	std	Y+63, r1	; 0x3f
    30d4:	6f 97       	sbiw	r28, 0x1f	; 31
    30d6:	6f 96       	adiw	r28, 0x1f	; 31
    30d8:	2e ad       	ldd	r18, Y+62	; 0x3e
    30da:	3f ad       	ldd	r19, Y+63	; 0x3f
    30dc:	6f 97       	sbiw	r28, 0x1f	; 31
    30de:	82 2b       	or	r24, r18
    30e0:	93 2b       	or	r25, r19
    30e2:	52 95       	swap	r21
    30e4:	51 70       	andi	r21, 0x01	; 1
    30e6:	a0 96       	adiw	r28, 0x20	; 32
    30e8:	5f af       	std	Y+63, r21	; 0x3f
    30ea:	a0 97       	sbiw	r28, 0x20	; 32
    30ec:	a1 96       	adiw	r28, 0x21	; 33
    30ee:	1f ae       	std	Y+63, r1	; 0x3f
    30f0:	a1 97       	sbiw	r28, 0x21	; 33
    30f2:	a1 96       	adiw	r28, 0x21	; 33
    30f4:	2e ad       	ldd	r18, Y+62	; 0x3e
    30f6:	3f ad       	ldd	r19, Y+63	; 0x3f
    30f8:	a1 97       	sbiw	r28, 0x21	; 33
    30fa:	22 0f       	add	r18, r18
    30fc:	33 1f       	adc	r19, r19
    30fe:	82 2b       	or	r24, r18
    3100:	93 2b       	or	r25, r19
    3102:	45 fb       	bst	r20, 5
    3104:	44 27       	eor	r20, r20
    3106:	40 f9       	bld	r20, 0
    3108:	a2 96       	adiw	r28, 0x22	; 34
    310a:	4f af       	std	Y+63, r20	; 0x3f
    310c:	a2 97       	sbiw	r28, 0x22	; 34
    310e:	a3 96       	adiw	r28, 0x23	; 35
    3110:	1f ae       	std	Y+63, r1	; 0x3f
    3112:	a3 97       	sbiw	r28, 0x23	; 35
    3114:	a3 96       	adiw	r28, 0x23	; 35
    3116:	2e ad       	ldd	r18, Y+62	; 0x3e
    3118:	3f ad       	ldd	r19, Y+63	; 0x3f
    311a:	a3 97       	sbiw	r28, 0x23	; 35
    311c:	22 0f       	add	r18, r18
    311e:	33 1f       	adc	r19, r19
    3120:	22 0f       	add	r18, r18
    3122:	33 1f       	adc	r19, r19
    3124:	22 0f       	add	r18, r18
    3126:	33 1f       	adc	r19, r19
    3128:	82 2b       	or	r24, r18
    312a:	93 2b       	or	r25, r19
    312c:	f8 9f       	mul	r31, r24
    312e:	a0 01       	movw	r20, r0
    3130:	f9 9f       	mul	r31, r25
    3132:	50 0d       	add	r21, r0
    3134:	11 24       	eor	r1, r1
    3136:	fa 01       	movw	r30, r20
    3138:	ec 54       	subi	r30, 0x4C	; 76
    313a:	ff 4d       	sbci	r31, 0xDF	; 223
    313c:	27 85       	ldd	r18, Z+15	; 0x0f
    313e:	30 89       	ldd	r19, Z+16	; 0x10
    3140:	6d 96       	adiw	r28, 0x1d	; 29
    3142:	6e ad       	ldd	r22, Y+62	; 0x3e
    3144:	7f ad       	ldd	r23, Y+63	; 0x3f
    3146:	6d 97       	sbiw	r28, 0x1d	; 29
    3148:	26 2b       	or	r18, r22
    314a:	37 2b       	or	r19, r23
    314c:	48 e2       	ldi	r20, 0x28	; 40
    314e:	42 9f       	mul	r20, r18
    3150:	c0 01       	movw	r24, r0
    3152:	43 9f       	mul	r20, r19
    3154:	90 0d       	add	r25, r0
    3156:	11 24       	eor	r1, r1
    3158:	5c 01       	movw	r10, r24
    315a:	ad 89       	ldd	r26, Y+21	; 0x15
    315c:	be 89       	ldd	r27, Y+22	; 0x16
    315e:	aa 1a       	sub	r10, r26
    3160:	bb 0a       	sbc	r11, r27
    3162:	f1 01       	movw	r30, r2
    3164:	86 81       	ldd	r24, Z+6	; 0x06
    3166:	97 81       	ldd	r25, Z+7	; 0x07
    3168:	95 01       	movw	r18, r10
    316a:	28 1b       	sub	r18, r24
    316c:	39 0b       	sbc	r19, r25
    316e:	c9 01       	movw	r24, r18
    3170:	22 0f       	add	r18, r18
    3172:	33 1f       	adc	r19, r19
    3174:	8c 01       	movw	r16, r24
    3176:	00 0f       	add	r16, r16
    3178:	11 1f       	adc	r17, r17
    317a:	00 0f       	add	r16, r16
    317c:	11 1f       	adc	r17, r17
    317e:	00 0f       	add	r16, r16
    3180:	11 1f       	adc	r17, r17
    3182:	02 0f       	add	r16, r18
    3184:	13 1f       	adc	r17, r19
    3186:	c8 01       	movw	r24, r16
    3188:	c1 96       	adiw	r24, 0x31	; 49
    318a:	83 36       	cpi	r24, 0x63	; 99
    318c:	91 05       	cpc	r25, r1
    318e:	48 f0       	brcs	.+18     	; 0x31a2 <main+0xfba>
    3190:	01 36       	cpi	r16, 0x61	; 97
    3192:	39 e0       	ldi	r19, 0x09	; 9
    3194:	13 07       	cpc	r17, r19
    3196:	44 f4       	brge	.+16     	; 0x31a8 <main+0xfc0>
    3198:	00 3a       	cpi	r16, 0xA0	; 160
    319a:	56 ef       	ldi	r21, 0xF6	; 246
    319c:	15 07       	cpc	r17, r21
    319e:	3c f0       	brlt	.+14     	; 0x31ae <main+0xfc6>
    31a0:	08 c0       	rjmp	.+16     	; 0x31b2 <main+0xfca>
    31a2:	00 e0       	ldi	r16, 0x00	; 0
    31a4:	10 e0       	ldi	r17, 0x00	; 0
    31a6:	05 c0       	rjmp	.+10     	; 0x31b2 <main+0xfca>
    31a8:	00 e0       	ldi	r16, 0x00	; 0
    31aa:	10 e0       	ldi	r17, 0x00	; 0
    31ac:	02 c0       	rjmp	.+4      	; 0x31b2 <main+0xfca>
    31ae:	00 e0       	ldi	r16, 0x00	; 0
    31b0:	10 e0       	ldi	r17, 0x00	; 0
    31b2:	b5 01       	movw	r22, r10
    31b4:	88 27       	eor	r24, r24
    31b6:	77 fd       	sbrc	r23, 7
    31b8:	80 95       	com	r24
    31ba:	98 2f       	mov	r25, r24
    31bc:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    31c0:	6b 01       	movw	r12, r22
    31c2:	7c 01       	movw	r14, r24
    31c4:	9b 01       	movw	r18, r22
    31c6:	ac 01       	movw	r20, r24
    31c8:	69 81       	ldd	r22, Y+1	; 0x01
    31ca:	7a 81       	ldd	r23, Y+2	; 0x02
    31cc:	8b 81       	ldd	r24, Y+3	; 0x03
    31ce:	9c 81       	ldd	r25, Y+4	; 0x04
    31d0:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    31d4:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    31d8:	69 83       	std	Y+1, r22	; 0x01
    31da:	7a 83       	std	Y+2, r23	; 0x02
    31dc:	8b 83       	std	Y+3, r24	; 0x03
    31de:	9c 83       	std	Y+4, r25	; 0x04
    31e0:	d1 01       	movw	r26, r2
    31e2:	1a 96       	adiw	r26, 0x0a	; 10
    31e4:	6d 91       	ld	r22, X+
    31e6:	7c 91       	ld	r23, X
    31e8:	1b 97       	sbiw	r26, 0x0b	; 11
    31ea:	88 27       	eor	r24, r24
    31ec:	77 fd       	sbrc	r23, 7
    31ee:	80 95       	com	r24
    31f0:	98 2f       	mov	r25, r24
    31f2:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    31f6:	2b 01       	movw	r4, r22
    31f8:	3c 01       	movw	r6, r24
    31fa:	a7 01       	movw	r20, r14
    31fc:	96 01       	movw	r18, r12
    31fe:	69 85       	ldd	r22, Y+9	; 0x09
    3200:	7a 85       	ldd	r23, Y+10	; 0x0a
    3202:	8b 85       	ldd	r24, Y+11	; 0x0b
    3204:	9c 85       	ldd	r25, Y+12	; 0x0c
    3206:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    320a:	2a e0       	ldi	r18, 0x0A	; 10
    320c:	37 ed       	ldi	r19, 0xD7	; 215
    320e:	43 ea       	ldi	r20, 0xA3	; 163
    3210:	5c e3       	ldi	r21, 0x3C	; 60
    3212:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    3216:	9b 01       	movw	r18, r22
    3218:	ac 01       	movw	r20, r24
    321a:	c3 01       	movw	r24, r6
    321c:	b2 01       	movw	r22, r4
    321e:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    3222:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    3226:	f1 01       	movw	r30, r2
    3228:	62 87       	std	Z+10, r22	; 0x0a
    322a:	73 87       	std	Z+11, r23	; 0x0b
    322c:	69 37       	cpi	r22, 0x79	; 121
    322e:	71 05       	cpc	r23, r1
    3230:	2c f0       	brlt	.+10     	; 0x323c <main+0x1054>
    3232:	88 e7       	ldi	r24, 0x78	; 120
    3234:	90 e0       	ldi	r25, 0x00	; 0
    3236:	82 87       	std	Z+10, r24	; 0x0a
    3238:	93 87       	std	Z+11, r25	; 0x0b
    323a:	0b c0       	rjmp	.+22     	; 0x3252 <main+0x106a>
    323c:	60 35       	cpi	r22, 0x50	; 80
    323e:	fb ef       	ldi	r31, 0xFB	; 251
    3240:	7f 07       	cpc	r23, r31
    3242:	3c f4       	brge	.+14     	; 0x3252 <main+0x106a>
    3244:	88 e8       	ldi	r24, 0x88	; 136
    3246:	9f ef       	ldi	r25, 0xFF	; 255
    3248:	d1 01       	movw	r26, r2
    324a:	1a 96       	adiw	r26, 0x0a	; 10
    324c:	8d 93       	st	X+, r24
    324e:	9c 93       	st	X, r25
    3250:	1b 97       	sbiw	r26, 0x0b	; 11
    3252:	89 81       	ldd	r24, Y+1	; 0x01
    3254:	9a 81       	ldd	r25, Y+2	; 0x02
    3256:	80 38       	cpi	r24, 0x80	; 128
    3258:	91 05       	cpc	r25, r1
    325a:	14 f0       	brlt	.+4      	; 0x3260 <main+0x1078>
    325c:	8f e7       	ldi	r24, 0x7F	; 127
    325e:	90 e0       	ldi	r25, 0x00	; 0
    3260:	bc 01       	movw	r22, r24
    3262:	81 38       	cpi	r24, 0x81	; 129
    3264:	bf ef       	ldi	r27, 0xFF	; 255
    3266:	9b 07       	cpc	r25, r27
    3268:	14 f4       	brge	.+4      	; 0x326e <main+0x1086>
    326a:	61 e8       	ldi	r22, 0x81	; 129
    326c:	7f ef       	ldi	r23, 0xFF	; 255
    326e:	f1 01       	movw	r30, r2
    3270:	82 84       	ldd	r8, Z+10	; 0x0a
    3272:	93 84       	ldd	r9, Z+11	; 0x0b
    3274:	68 0d       	add	r22, r8
    3276:	79 1d       	adc	r23, r9
    3278:	88 27       	eor	r24, r24
    327a:	77 fd       	sbrc	r23, 7
    327c:	80 95       	com	r24
    327e:	98 2f       	mov	r25, r24
    3280:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    3284:	6b 01       	movw	r12, r22
    3286:	7c 01       	movw	r14, r24
    3288:	b8 01       	movw	r22, r16
    328a:	88 27       	eor	r24, r24
    328c:	77 fd       	sbrc	r23, 7
    328e:	80 95       	com	r24
    3290:	98 2f       	mov	r25, r24
    3292:	0e 94 49 2c 	call	0x5892	; 0x5892 <__floatsisf>
    3296:	9b 01       	movw	r18, r22
    3298:	ac 01       	movw	r20, r24
    329a:	6d 85       	ldd	r22, Y+13	; 0x0d
    329c:	7e 85       	ldd	r23, Y+14	; 0x0e
    329e:	8f 85       	ldd	r24, Y+15	; 0x0f
    32a0:	98 89       	ldd	r25, Y+16	; 0x10
    32a2:	0e 94 d5 2c 	call	0x59aa	; 0x59aa <__mulsf3>
    32a6:	9b 01       	movw	r18, r22
    32a8:	ac 01       	movw	r20, r24
    32aa:	c7 01       	movw	r24, r14
    32ac:	b6 01       	movw	r22, r12
    32ae:	0e 94 4a 2b 	call	0x5694	; 0x5694 <__addsf3>
    32b2:	0e 94 16 2c 	call	0x582c	; 0x582c <__fixsfsi>
    32b6:	60 38       	cpi	r22, 0x80	; 128
    32b8:	71 05       	cpc	r23, r1
    32ba:	14 f0       	brlt	.+4      	; 0x32c0 <main+0x10d8>
    32bc:	6f e7       	ldi	r22, 0x7F	; 127
    32be:	70 e0       	ldi	r23, 0x00	; 0
    32c0:	d1 01       	movw	r26, r2
    32c2:	16 96       	adiw	r26, 0x06	; 6
    32c4:	ad 92       	st	X+, r10
    32c6:	bc 92       	st	X, r11
    32c8:	17 97       	sbiw	r26, 0x07	; 7
    32ca:	18 96       	adiw	r26, 0x08	; 8
    32cc:	0d 93       	st	X+, r16
    32ce:	1c 93       	st	X, r17
    32d0:	19 97       	sbiw	r26, 0x09	; 9
    32d2:	cb 01       	movw	r24, r22
    32d4:	61 38       	cpi	r22, 0x81	; 129
    32d6:	bf ef       	ldi	r27, 0xFF	; 255
    32d8:	7b 07       	cpc	r23, r27
    32da:	14 f4       	brge	.+4      	; 0x32e0 <main+0x10f8>
    32dc:	81 e8       	ldi	r24, 0x81	; 129
    32de:	9f ef       	ldi	r25, 0xFF	; 255
    32e0:	80 93 b7 23 	sts	0x23B7, r24
    32e4:	6a e2       	ldi	r22, 0x2A	; 42
    32e6:	80 ea       	ldi	r24, 0xA0	; 160
    32e8:	9b e0       	ldi	r25, 0x0B	; 11
    32ea:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    32ee:	6e e7       	ldi	r22, 0x7E	; 126
    32f0:	80 ea       	ldi	r24, 0xA0	; 160
    32f2:	9b e0       	ldi	r25, 0x0B	; 11
    32f4:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    32f8:	60 91 85 23 	lds	r22, 0x2385
    32fc:	80 ea       	ldi	r24, 0xA0	; 160
    32fe:	9b e0       	ldi	r25, 0x0B	; 11
    3300:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3304:	60 91 0a 24 	lds	r22, 0x240A
    3308:	80 ea       	ldi	r24, 0xA0	; 160
    330a:	9b e0       	ldi	r25, 0x0B	; 11
    330c:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3310:	60 91 1e 24 	lds	r22, 0x241E
    3314:	80 ea       	ldi	r24, 0xA0	; 160
    3316:	9b e0       	ldi	r25, 0x0B	; 11
    3318:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    331c:	60 91 b7 23 	lds	r22, 0x23B7
    3320:	80 ea       	ldi	r24, 0xA0	; 160
    3322:	9b e0       	ldi	r25, 0x0B	; 11
    3324:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3328:	63 e2       	ldi	r22, 0x23	; 35
    332a:	80 ea       	ldi	r24, 0xA0	; 160
    332c:	9b e0       	ldi	r25, 0x0B	; 11
    332e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3332:	2f b7       	in	r18, 0x3f	; 63
    3334:	f8 94       	cli
    3336:	e0 e0       	ldi	r30, 0x00	; 0
    3338:	f2 e0       	ldi	r31, 0x02	; 2
    333a:	84 a1       	ldd	r24, Z+36	; 0x24
    333c:	95 a1       	ldd	r25, Z+37	; 0x25
    333e:	2f bf       	out	0x3f, r18	; 63
    3340:	80 93 a7 20 	sts	0x20A7, r24
    3344:	90 93 a8 20 	sts	0x20A8, r25
    3348:	89 3d       	cpi	r24, 0xD9	; 217
    334a:	94 40       	sbci	r25, 0x04	; 4
    334c:	3c f4       	brge	.+14     	; 0x335c <main+0x1174>
    334e:	e0 e4       	ldi	r30, 0x40	; 64
    3350:	f6 e0       	ldi	r31, 0x06	; 6
    3352:	80 e4       	ldi	r24, 0x40	; 64
    3354:	85 83       	std	Z+5, r24	; 0x05
    3356:	84 e0       	ldi	r24, 0x04	; 4
    3358:	85 83       	std	Z+5, r24	; 0x05
    335a:	06 c0       	rjmp	.+12     	; 0x3368 <main+0x1180>
    335c:	e0 e4       	ldi	r30, 0x40	; 64
    335e:	f6 e0       	ldi	r31, 0x06	; 6
    3360:	80 e4       	ldi	r24, 0x40	; 64
    3362:	86 83       	std	Z+6, r24	; 0x06
    3364:	84 e0       	ldi	r24, 0x04	; 4
    3366:	86 83       	std	Z+6, r24	; 0x06
    3368:	60 e0       	ldi	r22, 0x00	; 0
    336a:	80 e0       	ldi	r24, 0x00	; 0
    336c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    3370:	a8 e0       	ldi	r26, 0x08	; 8
    3372:	b6 e0       	ldi	r27, 0x06	; 6
    3374:	6c 91       	ld	r22, X
    3376:	5c 91       	ld	r21, X
    3378:	7c 91       	ld	r23, X
    337a:	4c 91       	ld	r20, X
    337c:	1c 91       	ld	r17, X
    337e:	fc 91       	ld	r31, X
    3380:	8c 91       	ld	r24, X
    3382:	ec 91       	ld	r30, X
    3384:	90 91 85 23 	lds	r25, 0x2385
    3388:	29 2f       	mov	r18, r25
    338a:	33 27       	eor	r19, r19
    338c:	27 fd       	sbrc	r18, 7
    338e:	30 95       	com	r19
    3390:	3f 93       	push	r19
    3392:	9f 93       	push	r25
    3394:	88 1f       	adc	r24, r24
    3396:	88 27       	eor	r24, r24
    3398:	88 1f       	adc	r24, r24
    339a:	90 e0       	ldi	r25, 0x00	; 0
    339c:	88 0f       	add	r24, r24
    339e:	99 1f       	adc	r25, r25
    33a0:	88 0f       	add	r24, r24
    33a2:	99 1f       	adc	r25, r25
    33a4:	16 fb       	bst	r17, 6
    33a6:	11 27       	eor	r17, r17
    33a8:	10 f9       	bld	r17, 0
    33aa:	a4 96       	adiw	r28, 0x24	; 36
    33ac:	1f af       	std	Y+63, r17	; 0x3f
    33ae:	a4 97       	sbiw	r28, 0x24	; 36
    33b0:	a5 96       	adiw	r28, 0x25	; 37
    33b2:	1f ae       	std	Y+63, r1	; 0x3f
    33b4:	a5 97       	sbiw	r28, 0x25	; 37
    33b6:	a5 96       	adiw	r28, 0x25	; 37
    33b8:	2e ad       	ldd	r18, Y+62	; 0x3e
    33ba:	3f ad       	ldd	r19, Y+63	; 0x3f
    33bc:	a5 97       	sbiw	r28, 0x25	; 37
    33be:	82 2b       	or	r24, r18
    33c0:	93 2b       	or	r25, r19
    33c2:	f2 95       	swap	r31
    33c4:	f1 70       	andi	r31, 0x01	; 1
    33c6:	a6 96       	adiw	r28, 0x26	; 38
    33c8:	ff af       	std	Y+63, r31	; 0x3f
    33ca:	a6 97       	sbiw	r28, 0x26	; 38
    33cc:	a7 96       	adiw	r28, 0x27	; 39
    33ce:	1f ae       	std	Y+63, r1	; 0x3f
    33d0:	a7 97       	sbiw	r28, 0x27	; 39
    33d2:	a7 96       	adiw	r28, 0x27	; 39
    33d4:	2e ad       	ldd	r18, Y+62	; 0x3e
    33d6:	3f ad       	ldd	r19, Y+63	; 0x3f
    33d8:	a7 97       	sbiw	r28, 0x27	; 39
    33da:	22 0f       	add	r18, r18
    33dc:	33 1f       	adc	r19, r19
    33de:	82 2b       	or	r24, r18
    33e0:	93 2b       	or	r25, r19
    33e2:	e5 fb       	bst	r30, 5
    33e4:	ee 27       	eor	r30, r30
    33e6:	e0 f9       	bld	r30, 0
    33e8:	a8 96       	adiw	r28, 0x28	; 40
    33ea:	ef af       	std	Y+63, r30	; 0x3f
    33ec:	a8 97       	sbiw	r28, 0x28	; 40
    33ee:	a9 96       	adiw	r28, 0x29	; 41
    33f0:	1f ae       	std	Y+63, r1	; 0x3f
    33f2:	a9 97       	sbiw	r28, 0x29	; 41
    33f4:	a9 96       	adiw	r28, 0x29	; 41
    33f6:	2e ad       	ldd	r18, Y+62	; 0x3e
    33f8:	3f ad       	ldd	r19, Y+63	; 0x3f
    33fa:	a9 97       	sbiw	r28, 0x29	; 41
    33fc:	22 0f       	add	r18, r18
    33fe:	33 1f       	adc	r19, r19
    3400:	22 0f       	add	r18, r18
    3402:	33 1f       	adc	r19, r19
    3404:	22 0f       	add	r18, r18
    3406:	33 1f       	adc	r19, r19
    3408:	82 2b       	or	r24, r18
    340a:	93 2b       	or	r25, r19
    340c:	0f 2e       	mov	r0, r31
    340e:	f7 e1       	ldi	r31, 0x17	; 23
    3410:	ff 2e       	mov	r15, r31
    3412:	f0 2d       	mov	r31, r0
    3414:	f8 9e       	mul	r15, r24
    3416:	f0 01       	movw	r30, r0
    3418:	f9 9e       	mul	r15, r25
    341a:	f0 0d       	add	r31, r0
    341c:	11 24       	eor	r1, r1
    341e:	ec 54       	subi	r30, 0x4C	; 76
    3420:	ff 4d       	sbci	r31, 0xDF	; 223
    3422:	31 81       	ldd	r19, Z+1	; 0x01
    3424:	ab 96       	adiw	r28, 0x2b	; 43
    3426:	3f af       	std	Y+63, r19	; 0x3f
    3428:	ab 97       	sbiw	r28, 0x2b	; 43
    342a:	aa 96       	adiw	r28, 0x2a	; 42
    342c:	1f ae       	std	Y+63, r1	; 0x3f
    342e:	aa 97       	sbiw	r28, 0x2a	; 42
    3430:	77 1f       	adc	r23, r23
    3432:	77 27       	eor	r23, r23
    3434:	77 1f       	adc	r23, r23
    3436:	27 2f       	mov	r18, r23
    3438:	30 e0       	ldi	r19, 0x00	; 0
    343a:	22 0f       	add	r18, r18
    343c:	33 1f       	adc	r19, r19
    343e:	22 0f       	add	r18, r18
    3440:	33 1f       	adc	r19, r19
    3442:	66 fb       	bst	r22, 6
    3444:	66 27       	eor	r22, r22
    3446:	60 f9       	bld	r22, 0
    3448:	ac 96       	adiw	r28, 0x2c	; 44
    344a:	6f af       	std	Y+63, r22	; 0x3f
    344c:	ac 97       	sbiw	r28, 0x2c	; 44
    344e:	ad 96       	adiw	r28, 0x2d	; 45
    3450:	1f ae       	std	Y+63, r1	; 0x3f
    3452:	ad 97       	sbiw	r28, 0x2d	; 45
    3454:	ad 96       	adiw	r28, 0x2d	; 45
    3456:	6e ad       	ldd	r22, Y+62	; 0x3e
    3458:	7f ad       	ldd	r23, Y+63	; 0x3f
    345a:	ad 97       	sbiw	r28, 0x2d	; 45
    345c:	26 2b       	or	r18, r22
    345e:	37 2b       	or	r19, r23
    3460:	52 95       	swap	r21
    3462:	51 70       	andi	r21, 0x01	; 1
    3464:	ae 96       	adiw	r28, 0x2e	; 46
    3466:	5f af       	std	Y+63, r21	; 0x3f
    3468:	ae 97       	sbiw	r28, 0x2e	; 46
    346a:	af 96       	adiw	r28, 0x2f	; 47
    346c:	1f ae       	std	Y+63, r1	; 0x3f
    346e:	af 97       	sbiw	r28, 0x2f	; 47
    3470:	af 96       	adiw	r28, 0x2f	; 47
    3472:	8e ad       	ldd	r24, Y+62	; 0x3e
    3474:	9f ad       	ldd	r25, Y+63	; 0x3f
    3476:	af 97       	sbiw	r28, 0x2f	; 47
    3478:	88 0f       	add	r24, r24
    347a:	99 1f       	adc	r25, r25
    347c:	82 2b       	or	r24, r18
    347e:	93 2b       	or	r25, r19
    3480:	45 fb       	bst	r20, 5
    3482:	44 27       	eor	r20, r20
    3484:	40 f9       	bld	r20, 0
    3486:	e0 96       	adiw	r28, 0x30	; 48
    3488:	4f af       	std	Y+63, r20	; 0x3f
    348a:	e0 97       	sbiw	r28, 0x30	; 48
    348c:	e1 96       	adiw	r28, 0x31	; 49
    348e:	1f ae       	std	Y+63, r1	; 0x3f
    3490:	e1 97       	sbiw	r28, 0x31	; 49
    3492:	e1 96       	adiw	r28, 0x31	; 49
    3494:	2e ad       	ldd	r18, Y+62	; 0x3e
    3496:	3f ad       	ldd	r19, Y+63	; 0x3f
    3498:	e1 97       	sbiw	r28, 0x31	; 49
    349a:	22 0f       	add	r18, r18
    349c:	33 1f       	adc	r19, r19
    349e:	22 0f       	add	r18, r18
    34a0:	33 1f       	adc	r19, r19
    34a2:	22 0f       	add	r18, r18
    34a4:	33 1f       	adc	r19, r19
    34a6:	82 2b       	or	r24, r18
    34a8:	93 2b       	or	r25, r19
    34aa:	f8 9e       	mul	r15, r24
    34ac:	a0 01       	movw	r20, r0
    34ae:	f9 9e       	mul	r15, r25
    34b0:	50 0d       	add	r21, r0
    34b2:	11 24       	eor	r1, r1
    34b4:	fa 01       	movw	r30, r20
    34b6:	ec 54       	subi	r30, 0x4C	; 76
    34b8:	ff 4d       	sbci	r31, 0xDF	; 223
    34ba:	83 81       	ldd	r24, Z+3	; 0x03
    34bc:	94 81       	ldd	r25, Z+4	; 0x04
    34be:	ab 96       	adiw	r28, 0x2b	; 43
    34c0:	ae ad       	ldd	r26, Y+62	; 0x3e
    34c2:	bf ad       	ldd	r27, Y+63	; 0x3f
    34c4:	ab 97       	sbiw	r28, 0x2b	; 43
    34c6:	8a 2b       	or	r24, r26
    34c8:	9b 2b       	or	r25, r27
    34ca:	9f 93       	push	r25
    34cc:	8f 93       	push	r24
    34ce:	8c e3       	ldi	r24, 0x3C	; 60
    34d0:	90 e2       	ldi	r25, 0x20	; 32
    34d2:	9f 93       	push	r25
    34d4:	8f 93       	push	r24
    34d6:	0f ec       	ldi	r16, 0xCF	; 207
    34d8:	13 e2       	ldi	r17, 0x23	; 35
    34da:	1f 93       	push	r17
    34dc:	0f 93       	push	r16
    34de:	0e 94 38 2d 	call	0x5a70	; 0x5a70 <sprintf>
    34e2:	c8 01       	movw	r24, r16
    34e4:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    34e8:	61 e0       	ldi	r22, 0x01	; 1
    34ea:	80 e0       	ldi	r24, 0x00	; 0
    34ec:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    34f0:	80 91 7a 23 	lds	r24, 0x237A
    34f4:	8f 93       	push	r24
    34f6:	e9 e7       	ldi	r30, 0x79	; 121
    34f8:	f3 e2       	ldi	r31, 0x23	; 35
    34fa:	80 81       	ld	r24, Z
    34fc:	8f 93       	push	r24
    34fe:	84 e4       	ldi	r24, 0x44	; 68
    3500:	90 e2       	ldi	r25, 0x20	; 32
    3502:	9f 93       	push	r25
    3504:	8f 93       	push	r24
    3506:	1f 93       	push	r17
    3508:	0f 93       	push	r16
    350a:	0e 94 38 2d 	call	0x5a70	; 0x5a70 <sprintf>
    350e:	c8 01       	movw	r24, r16
    3510:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    3514:	a8 e0       	ldi	r26, 0x08	; 8
    3516:	b6 e0       	ldi	r27, 0x06	; 6
    3518:	9c 91       	ld	r25, X
    351a:	8c 91       	ld	r24, X
    351c:	2c 91       	ld	r18, X
    351e:	4c 91       	ld	r20, X
    3520:	22 1f       	adc	r18, r18
    3522:	22 27       	eor	r18, r18
    3524:	22 1f       	adc	r18, r18
    3526:	30 e0       	ldi	r19, 0x00	; 0
    3528:	22 0f       	add	r18, r18
    352a:	33 1f       	adc	r19, r19
    352c:	22 0f       	add	r18, r18
    352e:	33 1f       	adc	r19, r19
    3530:	96 fb       	bst	r25, 6
    3532:	99 27       	eor	r25, r25
    3534:	90 f9       	bld	r25, 0
    3536:	e2 96       	adiw	r28, 0x32	; 50
    3538:	9f af       	std	Y+63, r25	; 0x3f
    353a:	e2 97       	sbiw	r28, 0x32	; 50
    353c:	e3 96       	adiw	r28, 0x33	; 51
    353e:	1f ae       	std	Y+63, r1	; 0x3f
    3540:	e3 97       	sbiw	r28, 0x33	; 51
    3542:	e3 96       	adiw	r28, 0x33	; 51
    3544:	ee ad       	ldd	r30, Y+62	; 0x3e
    3546:	ff ad       	ldd	r31, Y+63	; 0x3f
    3548:	e3 97       	sbiw	r28, 0x33	; 51
    354a:	2e 2b       	or	r18, r30
    354c:	3f 2b       	or	r19, r31
    354e:	82 95       	swap	r24
    3550:	81 70       	andi	r24, 0x01	; 1
    3552:	e4 96       	adiw	r28, 0x34	; 52
    3554:	8f af       	std	Y+63, r24	; 0x3f
    3556:	e4 97       	sbiw	r28, 0x34	; 52
    3558:	e5 96       	adiw	r28, 0x35	; 53
    355a:	1f ae       	std	Y+63, r1	; 0x3f
    355c:	e5 97       	sbiw	r28, 0x35	; 53
    355e:	e5 96       	adiw	r28, 0x35	; 53
    3560:	8e ad       	ldd	r24, Y+62	; 0x3e
    3562:	9f ad       	ldd	r25, Y+63	; 0x3f
    3564:	e5 97       	sbiw	r28, 0x35	; 53
    3566:	88 0f       	add	r24, r24
    3568:	99 1f       	adc	r25, r25
    356a:	28 2b       	or	r18, r24
    356c:	39 2b       	or	r19, r25
    356e:	45 fb       	bst	r20, 5
    3570:	44 27       	eor	r20, r20
    3572:	40 f9       	bld	r20, 0
    3574:	e6 96       	adiw	r28, 0x36	; 54
    3576:	4f af       	std	Y+63, r20	; 0x3f
    3578:	e6 97       	sbiw	r28, 0x36	; 54
    357a:	e7 96       	adiw	r28, 0x37	; 55
    357c:	1f ae       	std	Y+63, r1	; 0x3f
    357e:	e7 97       	sbiw	r28, 0x37	; 55
    3580:	e7 96       	adiw	r28, 0x37	; 55
    3582:	8e ad       	ldd	r24, Y+62	; 0x3e
    3584:	9f ad       	ldd	r25, Y+63	; 0x3f
    3586:	e7 97       	sbiw	r28, 0x37	; 55
    3588:	88 0f       	add	r24, r24
    358a:	99 1f       	adc	r25, r25
    358c:	88 0f       	add	r24, r24
    358e:	99 1f       	adc	r25, r25
    3590:	88 0f       	add	r24, r24
    3592:	99 1f       	adc	r25, r25
    3594:	28 2b       	or	r18, r24
    3596:	39 2b       	or	r19, r25
    3598:	f2 9e       	mul	r15, r18
    359a:	c0 01       	movw	r24, r0
    359c:	f3 9e       	mul	r15, r19
    359e:	90 0d       	add	r25, r0
    35a0:	11 24       	eor	r1, r1
    35a2:	fc 01       	movw	r30, r24
    35a4:	ec 54       	subi	r30, 0x4C	; 76
    35a6:	ff 4d       	sbci	r31, 0xDF	; 223
    35a8:	cd bf       	out	0x3d, r28	; 61
    35aa:	de bf       	out	0x3e, r29	; 62
    35ac:	81 89       	ldd	r24, Z+17	; 0x11
    35ae:	88 23       	and	r24, r24
    35b0:	09 f4       	brne	.+2      	; 0x35b4 <main+0x13cc>
    35b2:	60 c0       	rjmp	.+192    	; 0x3674 <main+0x148c>
    35b4:	3c 91       	ld	r19, X
    35b6:	2c 91       	ld	r18, X
    35b8:	8c 91       	ld	r24, X
    35ba:	4c 91       	ld	r20, X
    35bc:	88 1f       	adc	r24, r24
    35be:	88 27       	eor	r24, r24
    35c0:	88 1f       	adc	r24, r24
    35c2:	90 e0       	ldi	r25, 0x00	; 0
    35c4:	88 0f       	add	r24, r24
    35c6:	99 1f       	adc	r25, r25
    35c8:	88 0f       	add	r24, r24
    35ca:	99 1f       	adc	r25, r25
    35cc:	36 fb       	bst	r19, 6
    35ce:	33 27       	eor	r19, r19
    35d0:	30 f9       	bld	r19, 0
    35d2:	cf 50       	subi	r28, 0x0F	; 15
    35d4:	df 4f       	sbci	r29, 0xFF	; 255
    35d6:	38 83       	st	Y, r19
    35d8:	c1 5f       	subi	r28, 0xF1	; 241
    35da:	d0 40       	sbci	r29, 0x00	; 0
    35dc:	ce 50       	subi	r28, 0x0E	; 14
    35de:	df 4f       	sbci	r29, 0xFF	; 255
    35e0:	18 82       	st	Y, r1
    35e2:	c2 5f       	subi	r28, 0xF2	; 242
    35e4:	d0 40       	sbci	r29, 0x00	; 0
    35e6:	cf 50       	subi	r28, 0x0F	; 15
    35e8:	df 4f       	sbci	r29, 0xFF	; 255
    35ea:	68 81       	ld	r22, Y
    35ec:	79 81       	ldd	r23, Y+1	; 0x01
    35ee:	c1 5f       	subi	r28, 0xF1	; 241
    35f0:	d0 40       	sbci	r29, 0x00	; 0
    35f2:	86 2b       	or	r24, r22
    35f4:	97 2b       	or	r25, r23
    35f6:	22 95       	swap	r18
    35f8:	21 70       	andi	r18, 0x01	; 1
    35fa:	cd 50       	subi	r28, 0x0D	; 13
    35fc:	df 4f       	sbci	r29, 0xFF	; 255
    35fe:	28 83       	st	Y, r18
    3600:	c3 5f       	subi	r28, 0xF3	; 243
    3602:	d0 40       	sbci	r29, 0x00	; 0
    3604:	cc 50       	subi	r28, 0x0C	; 12
    3606:	df 4f       	sbci	r29, 0xFF	; 255
    3608:	18 82       	st	Y, r1
    360a:	c4 5f       	subi	r28, 0xF4	; 244
    360c:	d0 40       	sbci	r29, 0x00	; 0
    360e:	cd 50       	subi	r28, 0x0D	; 13
    3610:	df 4f       	sbci	r29, 0xFF	; 255
    3612:	28 81       	ld	r18, Y
    3614:	39 81       	ldd	r19, Y+1	; 0x01
    3616:	c3 5f       	subi	r28, 0xF3	; 243
    3618:	d0 40       	sbci	r29, 0x00	; 0
    361a:	22 0f       	add	r18, r18
    361c:	33 1f       	adc	r19, r19
    361e:	82 2b       	or	r24, r18
    3620:	93 2b       	or	r25, r19
    3622:	45 fb       	bst	r20, 5
    3624:	44 27       	eor	r20, r20
    3626:	40 f9       	bld	r20, 0
    3628:	cb 50       	subi	r28, 0x0B	; 11
    362a:	df 4f       	sbci	r29, 0xFF	; 255
    362c:	48 83       	st	Y, r20
    362e:	c5 5f       	subi	r28, 0xF5	; 245
    3630:	d0 40       	sbci	r29, 0x00	; 0
    3632:	ca 50       	subi	r28, 0x0A	; 10
    3634:	df 4f       	sbci	r29, 0xFF	; 255
    3636:	18 82       	st	Y, r1
    3638:	c6 5f       	subi	r28, 0xF6	; 246
    363a:	d0 40       	sbci	r29, 0x00	; 0
    363c:	cb 50       	subi	r28, 0x0B	; 11
    363e:	df 4f       	sbci	r29, 0xFF	; 255
    3640:	28 81       	ld	r18, Y
    3642:	39 81       	ldd	r19, Y+1	; 0x01
    3644:	c5 5f       	subi	r28, 0xF5	; 245
    3646:	d0 40       	sbci	r29, 0x00	; 0
    3648:	22 0f       	add	r18, r18
    364a:	33 1f       	adc	r19, r19
    364c:	22 0f       	add	r18, r18
    364e:	33 1f       	adc	r19, r19
    3650:	22 0f       	add	r18, r18
    3652:	33 1f       	adc	r19, r19
    3654:	82 2b       	or	r24, r18
    3656:	93 2b       	or	r25, r19
    3658:	27 e1       	ldi	r18, 0x17	; 23
    365a:	28 9f       	mul	r18, r24
    365c:	f0 01       	movw	r30, r0
    365e:	29 9f       	mul	r18, r25
    3660:	f0 0d       	add	r31, r0
    3662:	11 24       	eor	r1, r1
    3664:	ec 54       	subi	r30, 0x4C	; 76
    3666:	ff 4d       	sbci	r31, 0xDF	; 223
    3668:	81 89       	ldd	r24, Z+17	; 0x11
    366a:	90 e0       	ldi	r25, 0x00	; 0
    366c:	80 93 a5 20 	sts	0x20A5, r24
    3670:	90 93 a6 20 	sts	0x20A6, r25
    3674:	a8 e0       	ldi	r26, 0x08	; 8
    3676:	b6 e0       	ldi	r27, 0x06	; 6
    3678:	3c 91       	ld	r19, X
    367a:	2c 91       	ld	r18, X
    367c:	8c 91       	ld	r24, X
    367e:	4c 91       	ld	r20, X
    3680:	88 1f       	adc	r24, r24
    3682:	88 27       	eor	r24, r24
    3684:	88 1f       	adc	r24, r24
    3686:	90 e0       	ldi	r25, 0x00	; 0
    3688:	88 0f       	add	r24, r24
    368a:	99 1f       	adc	r25, r25
    368c:	88 0f       	add	r24, r24
    368e:	99 1f       	adc	r25, r25
    3690:	36 fb       	bst	r19, 6
    3692:	33 27       	eor	r19, r19
    3694:	30 f9       	bld	r19, 0
    3696:	e8 96       	adiw	r28, 0x38	; 56
    3698:	3f af       	std	Y+63, r19	; 0x3f
    369a:	e8 97       	sbiw	r28, 0x38	; 56
    369c:	e9 96       	adiw	r28, 0x39	; 57
    369e:	1f ae       	std	Y+63, r1	; 0x3f
    36a0:	e9 97       	sbiw	r28, 0x39	; 57
    36a2:	e9 96       	adiw	r28, 0x39	; 57
    36a4:	ee ad       	ldd	r30, Y+62	; 0x3e
    36a6:	ff ad       	ldd	r31, Y+63	; 0x3f
    36a8:	e9 97       	sbiw	r28, 0x39	; 57
    36aa:	8e 2b       	or	r24, r30
    36ac:	9f 2b       	or	r25, r31
    36ae:	22 95       	swap	r18
    36b0:	21 70       	andi	r18, 0x01	; 1
    36b2:	ea 96       	adiw	r28, 0x3a	; 58
    36b4:	2f af       	std	Y+63, r18	; 0x3f
    36b6:	ea 97       	sbiw	r28, 0x3a	; 58
    36b8:	eb 96       	adiw	r28, 0x3b	; 59
    36ba:	1f ae       	std	Y+63, r1	; 0x3f
    36bc:	eb 97       	sbiw	r28, 0x3b	; 59
    36be:	eb 96       	adiw	r28, 0x3b	; 59
    36c0:	2e ad       	ldd	r18, Y+62	; 0x3e
    36c2:	3f ad       	ldd	r19, Y+63	; 0x3f
    36c4:	eb 97       	sbiw	r28, 0x3b	; 59
    36c6:	22 0f       	add	r18, r18
    36c8:	33 1f       	adc	r19, r19
    36ca:	82 2b       	or	r24, r18
    36cc:	93 2b       	or	r25, r19
    36ce:	45 fb       	bst	r20, 5
    36d0:	44 27       	eor	r20, r20
    36d2:	40 f9       	bld	r20, 0
    36d4:	ec 96       	adiw	r28, 0x3c	; 60
    36d6:	4f af       	std	Y+63, r20	; 0x3f
    36d8:	ec 97       	sbiw	r28, 0x3c	; 60
    36da:	ed 96       	adiw	r28, 0x3d	; 61
    36dc:	1f ae       	std	Y+63, r1	; 0x3f
    36de:	ed 97       	sbiw	r28, 0x3d	; 61
    36e0:	ed 96       	adiw	r28, 0x3d	; 61
    36e2:	2e ad       	ldd	r18, Y+62	; 0x3e
    36e4:	3f ad       	ldd	r19, Y+63	; 0x3f
    36e6:	ed 97       	sbiw	r28, 0x3d	; 61
    36e8:	22 0f       	add	r18, r18
    36ea:	33 1f       	adc	r19, r19
    36ec:	22 0f       	add	r18, r18
    36ee:	33 1f       	adc	r19, r19
    36f0:	22 0f       	add	r18, r18
    36f2:	33 1f       	adc	r19, r19
    36f4:	82 2b       	or	r24, r18
    36f6:	93 2b       	or	r25, r19
    36f8:	27 e1       	ldi	r18, 0x17	; 23
    36fa:	28 9f       	mul	r18, r24
    36fc:	f0 01       	movw	r30, r0
    36fe:	29 9f       	mul	r18, r25
    3700:	f0 0d       	add	r31, r0
    3702:	11 24       	eor	r1, r1
    3704:	ec 54       	subi	r30, 0x4C	; 76
    3706:	ff 4d       	sbci	r31, 0xDF	; 223
    3708:	82 89       	ldd	r24, Z+18	; 0x12
    370a:	88 23       	and	r24, r24
    370c:	19 f0       	breq	.+6      	; 0x3714 <main+0x152c>
    370e:	e0 e6       	ldi	r30, 0x60	; 96
    3710:	f6 e0       	ldi	r31, 0x06	; 6
    3712:	80 85       	ldd	r24, Z+8	; 0x08
    3714:	e0 e0       	ldi	r30, 0x00	; 0
    3716:	f6 e0       	ldi	r31, 0x06	; 6
    3718:	80 85       	ldd	r24, Z+8	; 0x08
    371a:	82 ff       	sbrs	r24, 2
    371c:	18 c0       	rjmp	.+48     	; 0x374e <main+0x1566>
    371e:	e0 e2       	ldi	r30, 0x20	; 32
    3720:	f6 e0       	ldi	r31, 0x06	; 6
    3722:	84 81       	ldd	r24, Z+4	; 0x04
    3724:	80 64       	ori	r24, 0x40	; 64
    3726:	84 83       	std	Z+4, r24	; 0x04
    3728:	84 e6       	ldi	r24, 0x64	; 100
    372a:	90 e0       	ldi	r25, 0x00	; 0
    372c:	80 93 2a 08 	sts	0x082A, r24
    3730:	90 93 2b 08 	sts	0x082B, r25
    3734:	ff ef       	ldi	r31, 0xFF	; 255
    3736:	23 ec       	ldi	r18, 0xC3	; 195
    3738:	39 e0       	ldi	r19, 0x09	; 9
    373a:	f1 50       	subi	r31, 0x01	; 1
    373c:	20 40       	sbci	r18, 0x00	; 0
    373e:	30 40       	sbci	r19, 0x00	; 0
    3740:	e1 f7       	brne	.-8      	; 0x373a <main+0x1552>
    3742:	00 c0       	rjmp	.+0      	; 0x3744 <main+0x155c>
    3744:	00 00       	nop
    3746:	10 92 2a 08 	sts	0x082A, r1
    374a:	10 92 2b 08 	sts	0x082B, r1
    374e:	a8 e0       	ldi	r26, 0x08	; 8
    3750:	b6 e0       	ldi	r27, 0x06	; 6
    3752:	7c 91       	ld	r23, X
    3754:	5c 91       	ld	r21, X
    3756:	bc 91       	ld	r27, X
    3758:	e8 e0       	ldi	r30, 0x08	; 8
    375a:	f6 e0       	ldi	r31, 0x06	; 6
    375c:	40 81       	ld	r20, Z
    375e:	30 81       	ld	r19, Z
    3760:	20 81       	ld	r18, Z
    3762:	80 81       	ld	r24, Z
    3764:	60 81       	ld	r22, Z
    3766:	88 1f       	adc	r24, r24
    3768:	88 27       	eor	r24, r24
    376a:	88 1f       	adc	r24, r24
    376c:	90 e0       	ldi	r25, 0x00	; 0
    376e:	88 0f       	add	r24, r24
    3770:	99 1f       	adc	r25, r25
    3772:	88 0f       	add	r24, r24
    3774:	99 1f       	adc	r25, r25
    3776:	36 fb       	bst	r19, 6
    3778:	33 27       	eor	r19, r19
    377a:	30 f9       	bld	r19, 0
    377c:	ee 96       	adiw	r28, 0x3e	; 62
    377e:	3f af       	std	Y+63, r19	; 0x3f
    3780:	ee 97       	sbiw	r28, 0x3e	; 62
    3782:	ef 96       	adiw	r28, 0x3f	; 63
    3784:	1f ae       	std	Y+63, r1	; 0x3f
    3786:	ef 97       	sbiw	r28, 0x3f	; 63
    3788:	ef 96       	adiw	r28, 0x3f	; 63
    378a:	ee ad       	ldd	r30, Y+62	; 0x3e
    378c:	ff ad       	ldd	r31, Y+63	; 0x3f
    378e:	ef 97       	sbiw	r28, 0x3f	; 63
    3790:	8e 2b       	or	r24, r30
    3792:	9f 2b       	or	r25, r31
    3794:	22 95       	swap	r18
    3796:	21 70       	andi	r18, 0x01	; 1
    3798:	c1 58       	subi	r28, 0x81	; 129
    379a:	df 4f       	sbci	r29, 0xFF	; 255
    379c:	28 83       	st	Y, r18
    379e:	cf 57       	subi	r28, 0x7F	; 127
    37a0:	d0 40       	sbci	r29, 0x00	; 0
    37a2:	c0 58       	subi	r28, 0x80	; 128
    37a4:	df 4f       	sbci	r29, 0xFF	; 255
    37a6:	18 82       	st	Y, r1
    37a8:	c0 58       	subi	r28, 0x80	; 128
    37aa:	d0 40       	sbci	r29, 0x00	; 0
    37ac:	c1 58       	subi	r28, 0x81	; 129
    37ae:	df 4f       	sbci	r29, 0xFF	; 255
    37b0:	28 81       	ld	r18, Y
    37b2:	39 81       	ldd	r19, Y+1	; 0x01
    37b4:	cf 57       	subi	r28, 0x7F	; 127
    37b6:	d0 40       	sbci	r29, 0x00	; 0
    37b8:	22 0f       	add	r18, r18
    37ba:	33 1f       	adc	r19, r19
    37bc:	82 2b       	or	r24, r18
    37be:	93 2b       	or	r25, r19
    37c0:	65 fb       	bst	r22, 5
    37c2:	66 27       	eor	r22, r22
    37c4:	60 f9       	bld	r22, 0
    37c6:	cf 57       	subi	r28, 0x7F	; 127
    37c8:	df 4f       	sbci	r29, 0xFF	; 255
    37ca:	68 83       	st	Y, r22
    37cc:	c1 58       	subi	r28, 0x81	; 129
    37ce:	d0 40       	sbci	r29, 0x00	; 0
    37d0:	ce 57       	subi	r28, 0x7E	; 126
    37d2:	df 4f       	sbci	r29, 0xFF	; 255
    37d4:	18 82       	st	Y, r1
    37d6:	c2 58       	subi	r28, 0x82	; 130
    37d8:	d0 40       	sbci	r29, 0x00	; 0
    37da:	cf 57       	subi	r28, 0x7F	; 127
    37dc:	df 4f       	sbci	r29, 0xFF	; 255
    37de:	28 81       	ld	r18, Y
    37e0:	39 81       	ldd	r19, Y+1	; 0x01
    37e2:	c1 58       	subi	r28, 0x81	; 129
    37e4:	d0 40       	sbci	r29, 0x00	; 0
    37e6:	22 0f       	add	r18, r18
    37e8:	33 1f       	adc	r19, r19
    37ea:	22 0f       	add	r18, r18
    37ec:	33 1f       	adc	r19, r19
    37ee:	22 0f       	add	r18, r18
    37f0:	33 1f       	adc	r19, r19
    37f2:	82 2b       	or	r24, r18
    37f4:	93 2b       	or	r25, r19
    37f6:	67 e1       	ldi	r22, 0x17	; 23
    37f8:	68 9f       	mul	r22, r24
    37fa:	f0 01       	movw	r30, r0
    37fc:	69 9f       	mul	r22, r25
    37fe:	f0 0d       	add	r31, r0
    3800:	11 24       	eor	r1, r1
    3802:	ec 54       	subi	r30, 0x4C	; 76
    3804:	ff 4d       	sbci	r31, 0xDF	; 223
    3806:	21 81       	ldd	r18, Z+1	; 0x01
    3808:	cc 57       	subi	r28, 0x7C	; 124
    380a:	df 4f       	sbci	r29, 0xFF	; 255
    380c:	28 83       	st	Y, r18
    380e:	c4 58       	subi	r28, 0x84	; 132
    3810:	d0 40       	sbci	r29, 0x00	; 0
    3812:	cd 57       	subi	r28, 0x7D	; 125
    3814:	df 4f       	sbci	r29, 0xFF	; 255
    3816:	18 82       	st	Y, r1
    3818:	c3 58       	subi	r28, 0x83	; 131
    381a:	d0 40       	sbci	r29, 0x00	; 0
    381c:	ab 2f       	mov	r26, r27
    381e:	aa 1f       	adc	r26, r26
    3820:	aa 27       	eor	r26, r26
    3822:	aa 1f       	adc	r26, r26
    3824:	b0 e0       	ldi	r27, 0x00	; 0
    3826:	aa 0f       	add	r26, r26
    3828:	bb 1f       	adc	r27, r27
    382a:	aa 0f       	add	r26, r26
    382c:	bb 1f       	adc	r27, r27
    382e:	76 fb       	bst	r23, 6
    3830:	77 27       	eor	r23, r23
    3832:	70 f9       	bld	r23, 0
    3834:	cb 57       	subi	r28, 0x7B	; 123
    3836:	df 4f       	sbci	r29, 0xFF	; 255
    3838:	78 83       	st	Y, r23
    383a:	c5 58       	subi	r28, 0x85	; 133
    383c:	d0 40       	sbci	r29, 0x00	; 0
    383e:	ca 57       	subi	r28, 0x7A	; 122
    3840:	df 4f       	sbci	r29, 0xFF	; 255
    3842:	18 82       	st	Y, r1
    3844:	c6 58       	subi	r28, 0x86	; 134
    3846:	d0 40       	sbci	r29, 0x00	; 0
    3848:	cb 57       	subi	r28, 0x7B	; 123
    384a:	df 4f       	sbci	r29, 0xFF	; 255
    384c:	88 81       	ld	r24, Y
    384e:	99 81       	ldd	r25, Y+1	; 0x01
    3850:	c5 58       	subi	r28, 0x85	; 133
    3852:	d0 40       	sbci	r29, 0x00	; 0
    3854:	a8 2b       	or	r26, r24
    3856:	b9 2b       	or	r27, r25
    3858:	52 95       	swap	r21
    385a:	51 70       	andi	r21, 0x01	; 1
    385c:	c9 57       	subi	r28, 0x79	; 121
    385e:	df 4f       	sbci	r29, 0xFF	; 255
    3860:	58 83       	st	Y, r21
    3862:	c7 58       	subi	r28, 0x87	; 135
    3864:	d0 40       	sbci	r29, 0x00	; 0
    3866:	c8 57       	subi	r28, 0x78	; 120
    3868:	df 4f       	sbci	r29, 0xFF	; 255
    386a:	18 82       	st	Y, r1
    386c:	c8 58       	subi	r28, 0x88	; 136
    386e:	d0 40       	sbci	r29, 0x00	; 0
    3870:	c9 57       	subi	r28, 0x79	; 121
    3872:	df 4f       	sbci	r29, 0xFF	; 255
    3874:	88 81       	ld	r24, Y
    3876:	99 81       	ldd	r25, Y+1	; 0x01
    3878:	c7 58       	subi	r28, 0x87	; 135
    387a:	d0 40       	sbci	r29, 0x00	; 0
    387c:	88 0f       	add	r24, r24
    387e:	99 1f       	adc	r25, r25
    3880:	8a 2b       	or	r24, r26
    3882:	9b 2b       	or	r25, r27
    3884:	45 fb       	bst	r20, 5
    3886:	44 27       	eor	r20, r20
    3888:	40 f9       	bld	r20, 0
    388a:	c7 57       	subi	r28, 0x77	; 119
    388c:	df 4f       	sbci	r29, 0xFF	; 255
    388e:	48 83       	st	Y, r20
    3890:	c9 58       	subi	r28, 0x89	; 137
    3892:	d0 40       	sbci	r29, 0x00	; 0
    3894:	c6 57       	subi	r28, 0x76	; 118
    3896:	df 4f       	sbci	r29, 0xFF	; 255
    3898:	18 82       	st	Y, r1
    389a:	ca 58       	subi	r28, 0x8A	; 138
    389c:	d0 40       	sbci	r29, 0x00	; 0
    389e:	c7 57       	subi	r28, 0x77	; 119
    38a0:	df 4f       	sbci	r29, 0xFF	; 255
    38a2:	a8 81       	ld	r26, Y
    38a4:	b9 81       	ldd	r27, Y+1	; 0x01
    38a6:	c9 58       	subi	r28, 0x89	; 137
    38a8:	d0 40       	sbci	r29, 0x00	; 0
    38aa:	aa 0f       	add	r26, r26
    38ac:	bb 1f       	adc	r27, r27
    38ae:	aa 0f       	add	r26, r26
    38b0:	bb 1f       	adc	r27, r27
    38b2:	aa 0f       	add	r26, r26
    38b4:	bb 1f       	adc	r27, r27
    38b6:	8a 2b       	or	r24, r26
    38b8:	9b 2b       	or	r25, r27
    38ba:	68 9f       	mul	r22, r24
    38bc:	90 01       	movw	r18, r0
    38be:	69 9f       	mul	r22, r25
    38c0:	30 0d       	add	r19, r0
    38c2:	11 24       	eor	r1, r1
    38c4:	f9 01       	movw	r30, r18
    38c6:	ec 54       	subi	r30, 0x4C	; 76
    38c8:	ff 4d       	sbci	r31, 0xDF	; 223
    38ca:	83 81       	ldd	r24, Z+3	; 0x03
    38cc:	94 81       	ldd	r25, Z+4	; 0x04
    38ce:	cd 57       	subi	r28, 0x7D	; 125
    38d0:	df 4f       	sbci	r29, 0xFF	; 255
    38d2:	a8 81       	ld	r26, Y
    38d4:	b9 81       	ldd	r27, Y+1	; 0x01
    38d6:	c3 58       	subi	r28, 0x83	; 131
    38d8:	d0 40       	sbci	r29, 0x00	; 0
    38da:	8a 2b       	or	r24, r26
    38dc:	9b 2b       	or	r25, r27
    38de:	78 e2       	ldi	r23, 0x28	; 40
    38e0:	87 9f       	mul	r24, r23
    38e2:	80 2d       	mov	r24, r0
    38e4:	11 24       	eor	r1, r1
    38e6:	80 93 87 23 	sts	0x2387, r24
    38ea:	e8 e0       	ldi	r30, 0x08	; 8
    38ec:	f6 e0       	ldi	r31, 0x06	; 6
    38ee:	10 81       	ld	r17, Z
    38f0:	f0 81       	ld	r31, Z
    38f2:	a8 e0       	ldi	r26, 0x08	; 8
    38f4:	b6 e0       	ldi	r27, 0x06	; 6
    38f6:	8c 91       	ld	r24, X
    38f8:	ec 91       	ld	r30, X
    38fa:	3c 91       	ld	r19, X
    38fc:	2c 91       	ld	r18, X
    38fe:	4c 91       	ld	r20, X
    3900:	9c 91       	ld	r25, X
    3902:	44 1f       	adc	r20, r20
    3904:	44 27       	eor	r20, r20
    3906:	44 1f       	adc	r20, r20
    3908:	50 e0       	ldi	r21, 0x00	; 0
    390a:	44 0f       	add	r20, r20
    390c:	55 1f       	adc	r21, r21
    390e:	44 0f       	add	r20, r20
    3910:	55 1f       	adc	r21, r21
    3912:	36 fb       	bst	r19, 6
    3914:	33 27       	eor	r19, r19
    3916:	30 f9       	bld	r19, 0
    3918:	c5 57       	subi	r28, 0x75	; 117
    391a:	df 4f       	sbci	r29, 0xFF	; 255
    391c:	38 83       	st	Y, r19
    391e:	cb 58       	subi	r28, 0x8B	; 139
    3920:	d0 40       	sbci	r29, 0x00	; 0
    3922:	c4 57       	subi	r28, 0x74	; 116
    3924:	df 4f       	sbci	r29, 0xFF	; 255
    3926:	18 82       	st	Y, r1
    3928:	cc 58       	subi	r28, 0x8C	; 140
    392a:	d0 40       	sbci	r29, 0x00	; 0
    392c:	c5 57       	subi	r28, 0x75	; 117
    392e:	df 4f       	sbci	r29, 0xFF	; 255
    3930:	a8 81       	ld	r26, Y
    3932:	b9 81       	ldd	r27, Y+1	; 0x01
    3934:	cb 58       	subi	r28, 0x8B	; 139
    3936:	d0 40       	sbci	r29, 0x00	; 0
    3938:	4a 2b       	or	r20, r26
    393a:	5b 2b       	or	r21, r27
    393c:	22 95       	swap	r18
    393e:	21 70       	andi	r18, 0x01	; 1
    3940:	c3 57       	subi	r28, 0x73	; 115
    3942:	df 4f       	sbci	r29, 0xFF	; 255
    3944:	28 83       	st	Y, r18
    3946:	cd 58       	subi	r28, 0x8D	; 141
    3948:	d0 40       	sbci	r29, 0x00	; 0
    394a:	c2 57       	subi	r28, 0x72	; 114
    394c:	df 4f       	sbci	r29, 0xFF	; 255
    394e:	18 82       	st	Y, r1
    3950:	ce 58       	subi	r28, 0x8E	; 142
    3952:	d0 40       	sbci	r29, 0x00	; 0
    3954:	c3 57       	subi	r28, 0x73	; 115
    3956:	df 4f       	sbci	r29, 0xFF	; 255
    3958:	28 81       	ld	r18, Y
    395a:	39 81       	ldd	r19, Y+1	; 0x01
    395c:	cd 58       	subi	r28, 0x8D	; 141
    395e:	d0 40       	sbci	r29, 0x00	; 0
    3960:	22 0f       	add	r18, r18
    3962:	33 1f       	adc	r19, r19
    3964:	42 2b       	or	r20, r18
    3966:	53 2b       	or	r21, r19
    3968:	95 fb       	bst	r25, 5
    396a:	99 27       	eor	r25, r25
    396c:	90 f9       	bld	r25, 0
    396e:	c1 57       	subi	r28, 0x71	; 113
    3970:	df 4f       	sbci	r29, 0xFF	; 255
    3972:	98 83       	st	Y, r25
    3974:	cf 58       	subi	r28, 0x8F	; 143
    3976:	d0 40       	sbci	r29, 0x00	; 0
    3978:	c0 57       	subi	r28, 0x70	; 112
    397a:	df 4f       	sbci	r29, 0xFF	; 255
    397c:	18 82       	st	Y, r1
    397e:	c0 59       	subi	r28, 0x90	; 144
    3980:	d0 40       	sbci	r29, 0x00	; 0
    3982:	c1 57       	subi	r28, 0x71	; 113
    3984:	df 4f       	sbci	r29, 0xFF	; 255
    3986:	28 81       	ld	r18, Y
    3988:	39 81       	ldd	r19, Y+1	; 0x01
    398a:	cf 58       	subi	r28, 0x8F	; 143
    398c:	d0 40       	sbci	r29, 0x00	; 0
    398e:	22 0f       	add	r18, r18
    3990:	33 1f       	adc	r19, r19
    3992:	22 0f       	add	r18, r18
    3994:	33 1f       	adc	r19, r19
    3996:	22 0f       	add	r18, r18
    3998:	33 1f       	adc	r19, r19
    399a:	42 2b       	or	r20, r18
    399c:	53 2b       	or	r21, r19
    399e:	64 9f       	mul	r22, r20
    39a0:	90 01       	movw	r18, r0
    39a2:	65 9f       	mul	r22, r21
    39a4:	30 0d       	add	r19, r0
    39a6:	11 24       	eor	r1, r1
    39a8:	2c 54       	subi	r18, 0x4C	; 76
    39aa:	3f 4d       	sbci	r19, 0xDF	; 223
    39ac:	d9 01       	movw	r26, r18
    39ae:	11 96       	adiw	r26, 0x01	; 1
    39b0:	bc 91       	ld	r27, X
    39b2:	ce 56       	subi	r28, 0x6E	; 110
    39b4:	df 4f       	sbci	r29, 0xFF	; 255
    39b6:	b8 83       	st	Y, r27
    39b8:	c2 59       	subi	r28, 0x92	; 146
    39ba:	d0 40       	sbci	r29, 0x00	; 0
    39bc:	cf 56       	subi	r28, 0x6F	; 111
    39be:	df 4f       	sbci	r29, 0xFF	; 255
    39c0:	18 82       	st	Y, r1
    39c2:	c1 59       	subi	r28, 0x91	; 145
    39c4:	d0 40       	sbci	r29, 0x00	; 0
    39c6:	88 1f       	adc	r24, r24
    39c8:	88 27       	eor	r24, r24
    39ca:	88 1f       	adc	r24, r24
    39cc:	90 e0       	ldi	r25, 0x00	; 0
    39ce:	88 0f       	add	r24, r24
    39d0:	99 1f       	adc	r25, r25
    39d2:	88 0f       	add	r24, r24
    39d4:	99 1f       	adc	r25, r25
    39d6:	16 fb       	bst	r17, 6
    39d8:	11 27       	eor	r17, r17
    39da:	10 f9       	bld	r17, 0
    39dc:	cd 56       	subi	r28, 0x6D	; 109
    39de:	df 4f       	sbci	r29, 0xFF	; 255
    39e0:	18 83       	st	Y, r17
    39e2:	c3 59       	subi	r28, 0x93	; 147
    39e4:	d0 40       	sbci	r29, 0x00	; 0
    39e6:	cc 56       	subi	r28, 0x6C	; 108
    39e8:	df 4f       	sbci	r29, 0xFF	; 255
    39ea:	18 82       	st	Y, r1
    39ec:	c4 59       	subi	r28, 0x94	; 148
    39ee:	d0 40       	sbci	r29, 0x00	; 0
    39f0:	cd 56       	subi	r28, 0x6D	; 109
    39f2:	df 4f       	sbci	r29, 0xFF	; 255
    39f4:	28 81       	ld	r18, Y
    39f6:	39 81       	ldd	r19, Y+1	; 0x01
    39f8:	c3 59       	subi	r28, 0x93	; 147
    39fa:	d0 40       	sbci	r29, 0x00	; 0
    39fc:	82 2b       	or	r24, r18
    39fe:	93 2b       	or	r25, r19
    3a00:	f2 95       	swap	r31
    3a02:	f1 70       	andi	r31, 0x01	; 1
    3a04:	cb 56       	subi	r28, 0x6B	; 107
    3a06:	df 4f       	sbci	r29, 0xFF	; 255
    3a08:	f8 83       	st	Y, r31
    3a0a:	c5 59       	subi	r28, 0x95	; 149
    3a0c:	d0 40       	sbci	r29, 0x00	; 0
    3a0e:	ca 56       	subi	r28, 0x6A	; 106
    3a10:	df 4f       	sbci	r29, 0xFF	; 255
    3a12:	18 82       	st	Y, r1
    3a14:	c6 59       	subi	r28, 0x96	; 150
    3a16:	d0 40       	sbci	r29, 0x00	; 0
    3a18:	cb 56       	subi	r28, 0x6B	; 107
    3a1a:	df 4f       	sbci	r29, 0xFF	; 255
    3a1c:	28 81       	ld	r18, Y
    3a1e:	39 81       	ldd	r19, Y+1	; 0x01
    3a20:	c5 59       	subi	r28, 0x95	; 149
    3a22:	d0 40       	sbci	r29, 0x00	; 0
    3a24:	22 0f       	add	r18, r18
    3a26:	33 1f       	adc	r19, r19
    3a28:	82 2b       	or	r24, r18
    3a2a:	93 2b       	or	r25, r19
    3a2c:	e5 fb       	bst	r30, 5
    3a2e:	ee 27       	eor	r30, r30
    3a30:	e0 f9       	bld	r30, 0
    3a32:	c9 56       	subi	r28, 0x69	; 105
    3a34:	df 4f       	sbci	r29, 0xFF	; 255
    3a36:	e8 83       	st	Y, r30
    3a38:	c7 59       	subi	r28, 0x97	; 151
    3a3a:	d0 40       	sbci	r29, 0x00	; 0
    3a3c:	c8 56       	subi	r28, 0x68	; 104
    3a3e:	df 4f       	sbci	r29, 0xFF	; 255
    3a40:	18 82       	st	Y, r1
    3a42:	c8 59       	subi	r28, 0x98	; 152
    3a44:	d0 40       	sbci	r29, 0x00	; 0
    3a46:	c9 56       	subi	r28, 0x69	; 105
    3a48:	df 4f       	sbci	r29, 0xFF	; 255
    3a4a:	28 81       	ld	r18, Y
    3a4c:	39 81       	ldd	r19, Y+1	; 0x01
    3a4e:	c7 59       	subi	r28, 0x97	; 151
    3a50:	d0 40       	sbci	r29, 0x00	; 0
    3a52:	22 0f       	add	r18, r18
    3a54:	33 1f       	adc	r19, r19
    3a56:	22 0f       	add	r18, r18
    3a58:	33 1f       	adc	r19, r19
    3a5a:	22 0f       	add	r18, r18
    3a5c:	33 1f       	adc	r19, r19
    3a5e:	82 2b       	or	r24, r18
    3a60:	93 2b       	or	r25, r19
    3a62:	68 9f       	mul	r22, r24
    3a64:	90 01       	movw	r18, r0
    3a66:	69 9f       	mul	r22, r25
    3a68:	30 0d       	add	r19, r0
    3a6a:	11 24       	eor	r1, r1
    3a6c:	f9 01       	movw	r30, r18
    3a6e:	ec 54       	subi	r30, 0x4C	; 76
    3a70:	ff 4d       	sbci	r31, 0xDF	; 223
    3a72:	23 81       	ldd	r18, Z+3	; 0x03
    3a74:	34 81       	ldd	r19, Z+4	; 0x04
    3a76:	cf 56       	subi	r28, 0x6F	; 111
    3a78:	df 4f       	sbci	r29, 0xFF	; 255
    3a7a:	88 81       	ld	r24, Y
    3a7c:	99 81       	ldd	r25, Y+1	; 0x01
    3a7e:	c1 59       	subi	r28, 0x91	; 145
    3a80:	d0 40       	sbci	r29, 0x00	; 0
    3a82:	28 2b       	or	r18, r24
    3a84:	39 2b       	or	r19, r25
    3a86:	72 9f       	mul	r23, r18
    3a88:	c0 01       	movw	r24, r0
    3a8a:	73 9f       	mul	r23, r19
    3a8c:	90 0d       	add	r25, r0
    3a8e:	11 24       	eor	r1, r1
    3a90:	90 93 88 23 	sts	0x2388, r25
    3a94:	a8 e0       	ldi	r26, 0x08	; 8
    3a96:	b6 e0       	ldi	r27, 0x06	; 6
    3a98:	1c 91       	ld	r17, X
    3a9a:	fc 91       	ld	r31, X
    3a9c:	8c 91       	ld	r24, X
    3a9e:	ec 91       	ld	r30, X
    3aa0:	3c 91       	ld	r19, X
    3aa2:	2c 91       	ld	r18, X
    3aa4:	4c 91       	ld	r20, X
    3aa6:	9c 91       	ld	r25, X
    3aa8:	44 1f       	adc	r20, r20
    3aaa:	44 27       	eor	r20, r20
    3aac:	44 1f       	adc	r20, r20
    3aae:	50 e0       	ldi	r21, 0x00	; 0
    3ab0:	44 0f       	add	r20, r20
    3ab2:	55 1f       	adc	r21, r21
    3ab4:	44 0f       	add	r20, r20
    3ab6:	55 1f       	adc	r21, r21
    3ab8:	36 fb       	bst	r19, 6
    3aba:	33 27       	eor	r19, r19
    3abc:	30 f9       	bld	r19, 0
    3abe:	c7 56       	subi	r28, 0x67	; 103
    3ac0:	df 4f       	sbci	r29, 0xFF	; 255
    3ac2:	38 83       	st	Y, r19
    3ac4:	c9 59       	subi	r28, 0x99	; 153
    3ac6:	d0 40       	sbci	r29, 0x00	; 0
    3ac8:	c6 56       	subi	r28, 0x66	; 102
    3aca:	df 4f       	sbci	r29, 0xFF	; 255
    3acc:	18 82       	st	Y, r1
    3ace:	ca 59       	subi	r28, 0x9A	; 154
    3ad0:	d0 40       	sbci	r29, 0x00	; 0
    3ad2:	c7 56       	subi	r28, 0x67	; 103
    3ad4:	df 4f       	sbci	r29, 0xFF	; 255
    3ad6:	a8 81       	ld	r26, Y
    3ad8:	b9 81       	ldd	r27, Y+1	; 0x01
    3ada:	c9 59       	subi	r28, 0x99	; 153
    3adc:	d0 40       	sbci	r29, 0x00	; 0
    3ade:	4a 2b       	or	r20, r26
    3ae0:	5b 2b       	or	r21, r27
    3ae2:	22 95       	swap	r18
    3ae4:	21 70       	andi	r18, 0x01	; 1
    3ae6:	c5 56       	subi	r28, 0x65	; 101
    3ae8:	df 4f       	sbci	r29, 0xFF	; 255
    3aea:	28 83       	st	Y, r18
    3aec:	cb 59       	subi	r28, 0x9B	; 155
    3aee:	d0 40       	sbci	r29, 0x00	; 0
    3af0:	c4 56       	subi	r28, 0x64	; 100
    3af2:	df 4f       	sbci	r29, 0xFF	; 255
    3af4:	18 82       	st	Y, r1
    3af6:	cc 59       	subi	r28, 0x9C	; 156
    3af8:	d0 40       	sbci	r29, 0x00	; 0
    3afa:	c5 56       	subi	r28, 0x65	; 101
    3afc:	df 4f       	sbci	r29, 0xFF	; 255
    3afe:	28 81       	ld	r18, Y
    3b00:	39 81       	ldd	r19, Y+1	; 0x01
    3b02:	cb 59       	subi	r28, 0x9B	; 155
    3b04:	d0 40       	sbci	r29, 0x00	; 0
    3b06:	22 0f       	add	r18, r18
    3b08:	33 1f       	adc	r19, r19
    3b0a:	42 2b       	or	r20, r18
    3b0c:	53 2b       	or	r21, r19
    3b0e:	95 fb       	bst	r25, 5
    3b10:	99 27       	eor	r25, r25
    3b12:	90 f9       	bld	r25, 0
    3b14:	c3 56       	subi	r28, 0x63	; 99
    3b16:	df 4f       	sbci	r29, 0xFF	; 255
    3b18:	98 83       	st	Y, r25
    3b1a:	cd 59       	subi	r28, 0x9D	; 157
    3b1c:	d0 40       	sbci	r29, 0x00	; 0
    3b1e:	c2 56       	subi	r28, 0x62	; 98
    3b20:	df 4f       	sbci	r29, 0xFF	; 255
    3b22:	18 82       	st	Y, r1
    3b24:	ce 59       	subi	r28, 0x9E	; 158
    3b26:	d0 40       	sbci	r29, 0x00	; 0
    3b28:	c3 56       	subi	r28, 0x63	; 99
    3b2a:	df 4f       	sbci	r29, 0xFF	; 255
    3b2c:	28 81       	ld	r18, Y
    3b2e:	39 81       	ldd	r19, Y+1	; 0x01
    3b30:	cd 59       	subi	r28, 0x9D	; 157
    3b32:	d0 40       	sbci	r29, 0x00	; 0
    3b34:	22 0f       	add	r18, r18
    3b36:	33 1f       	adc	r19, r19
    3b38:	22 0f       	add	r18, r18
    3b3a:	33 1f       	adc	r19, r19
    3b3c:	22 0f       	add	r18, r18
    3b3e:	33 1f       	adc	r19, r19
    3b40:	42 2b       	or	r20, r18
    3b42:	53 2b       	or	r21, r19
    3b44:	64 9f       	mul	r22, r20
    3b46:	90 01       	movw	r18, r0
    3b48:	65 9f       	mul	r22, r21
    3b4a:	30 0d       	add	r19, r0
    3b4c:	11 24       	eor	r1, r1
    3b4e:	2c 54       	subi	r18, 0x4C	; 76
    3b50:	3f 4d       	sbci	r19, 0xDF	; 223
    3b52:	d9 01       	movw	r26, r18
    3b54:	15 96       	adiw	r26, 0x05	; 5
    3b56:	bc 91       	ld	r27, X
    3b58:	c0 56       	subi	r28, 0x60	; 96
    3b5a:	df 4f       	sbci	r29, 0xFF	; 255
    3b5c:	b8 83       	st	Y, r27
    3b5e:	c0 5a       	subi	r28, 0xA0	; 160
    3b60:	d0 40       	sbci	r29, 0x00	; 0
    3b62:	c1 56       	subi	r28, 0x61	; 97
    3b64:	df 4f       	sbci	r29, 0xFF	; 255
    3b66:	18 82       	st	Y, r1
    3b68:	cf 59       	subi	r28, 0x9F	; 159
    3b6a:	d0 40       	sbci	r29, 0x00	; 0
    3b6c:	88 1f       	adc	r24, r24
    3b6e:	88 27       	eor	r24, r24
    3b70:	88 1f       	adc	r24, r24
    3b72:	90 e0       	ldi	r25, 0x00	; 0
    3b74:	88 0f       	add	r24, r24
    3b76:	99 1f       	adc	r25, r25
    3b78:	88 0f       	add	r24, r24
    3b7a:	99 1f       	adc	r25, r25
    3b7c:	16 fb       	bst	r17, 6
    3b7e:	11 27       	eor	r17, r17
    3b80:	10 f9       	bld	r17, 0
    3b82:	cf 55       	subi	r28, 0x5F	; 95
    3b84:	df 4f       	sbci	r29, 0xFF	; 255
    3b86:	18 83       	st	Y, r17
    3b88:	c1 5a       	subi	r28, 0xA1	; 161
    3b8a:	d0 40       	sbci	r29, 0x00	; 0
    3b8c:	ce 55       	subi	r28, 0x5E	; 94
    3b8e:	df 4f       	sbci	r29, 0xFF	; 255
    3b90:	18 82       	st	Y, r1
    3b92:	c2 5a       	subi	r28, 0xA2	; 162
    3b94:	d0 40       	sbci	r29, 0x00	; 0
    3b96:	cf 55       	subi	r28, 0x5F	; 95
    3b98:	df 4f       	sbci	r29, 0xFF	; 255
    3b9a:	28 81       	ld	r18, Y
    3b9c:	39 81       	ldd	r19, Y+1	; 0x01
    3b9e:	c1 5a       	subi	r28, 0xA1	; 161
    3ba0:	d0 40       	sbci	r29, 0x00	; 0
    3ba2:	82 2b       	or	r24, r18
    3ba4:	93 2b       	or	r25, r19
    3ba6:	f2 95       	swap	r31
    3ba8:	f1 70       	andi	r31, 0x01	; 1
    3baa:	cd 55       	subi	r28, 0x5D	; 93
    3bac:	df 4f       	sbci	r29, 0xFF	; 255
    3bae:	f8 83       	st	Y, r31
    3bb0:	c3 5a       	subi	r28, 0xA3	; 163
    3bb2:	d0 40       	sbci	r29, 0x00	; 0
    3bb4:	cc 55       	subi	r28, 0x5C	; 92
    3bb6:	df 4f       	sbci	r29, 0xFF	; 255
    3bb8:	18 82       	st	Y, r1
    3bba:	c4 5a       	subi	r28, 0xA4	; 164
    3bbc:	d0 40       	sbci	r29, 0x00	; 0
    3bbe:	cd 55       	subi	r28, 0x5D	; 93
    3bc0:	df 4f       	sbci	r29, 0xFF	; 255
    3bc2:	28 81       	ld	r18, Y
    3bc4:	39 81       	ldd	r19, Y+1	; 0x01
    3bc6:	c3 5a       	subi	r28, 0xA3	; 163
    3bc8:	d0 40       	sbci	r29, 0x00	; 0
    3bca:	22 0f       	add	r18, r18
    3bcc:	33 1f       	adc	r19, r19
    3bce:	82 2b       	or	r24, r18
    3bd0:	93 2b       	or	r25, r19
    3bd2:	e5 fb       	bst	r30, 5
    3bd4:	ee 27       	eor	r30, r30
    3bd6:	e0 f9       	bld	r30, 0
    3bd8:	cb 55       	subi	r28, 0x5B	; 91
    3bda:	df 4f       	sbci	r29, 0xFF	; 255
    3bdc:	e8 83       	st	Y, r30
    3bde:	c5 5a       	subi	r28, 0xA5	; 165
    3be0:	d0 40       	sbci	r29, 0x00	; 0
    3be2:	ca 55       	subi	r28, 0x5A	; 90
    3be4:	df 4f       	sbci	r29, 0xFF	; 255
    3be6:	18 82       	st	Y, r1
    3be8:	c6 5a       	subi	r28, 0xA6	; 166
    3bea:	d0 40       	sbci	r29, 0x00	; 0
    3bec:	cb 55       	subi	r28, 0x5B	; 91
    3bee:	df 4f       	sbci	r29, 0xFF	; 255
    3bf0:	28 81       	ld	r18, Y
    3bf2:	39 81       	ldd	r19, Y+1	; 0x01
    3bf4:	c5 5a       	subi	r28, 0xA5	; 165
    3bf6:	d0 40       	sbci	r29, 0x00	; 0
    3bf8:	22 0f       	add	r18, r18
    3bfa:	33 1f       	adc	r19, r19
    3bfc:	22 0f       	add	r18, r18
    3bfe:	33 1f       	adc	r19, r19
    3c00:	22 0f       	add	r18, r18
    3c02:	33 1f       	adc	r19, r19
    3c04:	82 2b       	or	r24, r18
    3c06:	93 2b       	or	r25, r19
    3c08:	68 9f       	mul	r22, r24
    3c0a:	90 01       	movw	r18, r0
    3c0c:	69 9f       	mul	r22, r25
    3c0e:	30 0d       	add	r19, r0
    3c10:	11 24       	eor	r1, r1
    3c12:	f9 01       	movw	r30, r18
    3c14:	ec 54       	subi	r30, 0x4C	; 76
    3c16:	ff 4d       	sbci	r31, 0xDF	; 223
    3c18:	87 81       	ldd	r24, Z+7	; 0x07
    3c1a:	90 85       	ldd	r25, Z+8	; 0x08
    3c1c:	c1 56       	subi	r28, 0x61	; 97
    3c1e:	df 4f       	sbci	r29, 0xFF	; 255
    3c20:	a8 81       	ld	r26, Y
    3c22:	b9 81       	ldd	r27, Y+1	; 0x01
    3c24:	cf 59       	subi	r28, 0x9F	; 159
    3c26:	d0 40       	sbci	r29, 0x00	; 0
    3c28:	8a 2b       	or	r24, r26
    3c2a:	9b 2b       	or	r25, r27
    3c2c:	87 9f       	mul	r24, r23
    3c2e:	80 2d       	mov	r24, r0
    3c30:	11 24       	eor	r1, r1
    3c32:	80 93 89 23 	sts	0x2389, r24
    3c36:	e8 e0       	ldi	r30, 0x08	; 8
    3c38:	f6 e0       	ldi	r31, 0x06	; 6
    3c3a:	10 81       	ld	r17, Z
    3c3c:	f0 81       	ld	r31, Z
    3c3e:	a8 e0       	ldi	r26, 0x08	; 8
    3c40:	b6 e0       	ldi	r27, 0x06	; 6
    3c42:	8c 91       	ld	r24, X
    3c44:	ec 91       	ld	r30, X
    3c46:	3c 91       	ld	r19, X
    3c48:	2c 91       	ld	r18, X
    3c4a:	4c 91       	ld	r20, X
    3c4c:	9c 91       	ld	r25, X
    3c4e:	44 1f       	adc	r20, r20
    3c50:	44 27       	eor	r20, r20
    3c52:	44 1f       	adc	r20, r20
    3c54:	50 e0       	ldi	r21, 0x00	; 0
    3c56:	44 0f       	add	r20, r20
    3c58:	55 1f       	adc	r21, r21
    3c5a:	44 0f       	add	r20, r20
    3c5c:	55 1f       	adc	r21, r21
    3c5e:	36 fb       	bst	r19, 6
    3c60:	33 27       	eor	r19, r19
    3c62:	30 f9       	bld	r19, 0
    3c64:	c9 55       	subi	r28, 0x59	; 89
    3c66:	df 4f       	sbci	r29, 0xFF	; 255
    3c68:	38 83       	st	Y, r19
    3c6a:	c7 5a       	subi	r28, 0xA7	; 167
    3c6c:	d0 40       	sbci	r29, 0x00	; 0
    3c6e:	c8 55       	subi	r28, 0x58	; 88
    3c70:	df 4f       	sbci	r29, 0xFF	; 255
    3c72:	18 82       	st	Y, r1
    3c74:	c8 5a       	subi	r28, 0xA8	; 168
    3c76:	d0 40       	sbci	r29, 0x00	; 0
    3c78:	c9 55       	subi	r28, 0x59	; 89
    3c7a:	df 4f       	sbci	r29, 0xFF	; 255
    3c7c:	a8 81       	ld	r26, Y
    3c7e:	b9 81       	ldd	r27, Y+1	; 0x01
    3c80:	c7 5a       	subi	r28, 0xA7	; 167
    3c82:	d0 40       	sbci	r29, 0x00	; 0
    3c84:	4a 2b       	or	r20, r26
    3c86:	5b 2b       	or	r21, r27
    3c88:	22 95       	swap	r18
    3c8a:	21 70       	andi	r18, 0x01	; 1
    3c8c:	c7 55       	subi	r28, 0x57	; 87
    3c8e:	df 4f       	sbci	r29, 0xFF	; 255
    3c90:	28 83       	st	Y, r18
    3c92:	c9 5a       	subi	r28, 0xA9	; 169
    3c94:	d0 40       	sbci	r29, 0x00	; 0
    3c96:	c6 55       	subi	r28, 0x56	; 86
    3c98:	df 4f       	sbci	r29, 0xFF	; 255
    3c9a:	18 82       	st	Y, r1
    3c9c:	ca 5a       	subi	r28, 0xAA	; 170
    3c9e:	d0 40       	sbci	r29, 0x00	; 0
    3ca0:	c7 55       	subi	r28, 0x57	; 87
    3ca2:	df 4f       	sbci	r29, 0xFF	; 255
    3ca4:	28 81       	ld	r18, Y
    3ca6:	39 81       	ldd	r19, Y+1	; 0x01
    3ca8:	c9 5a       	subi	r28, 0xA9	; 169
    3caa:	d0 40       	sbci	r29, 0x00	; 0
    3cac:	22 0f       	add	r18, r18
    3cae:	33 1f       	adc	r19, r19
    3cb0:	42 2b       	or	r20, r18
    3cb2:	53 2b       	or	r21, r19
    3cb4:	95 fb       	bst	r25, 5
    3cb6:	99 27       	eor	r25, r25
    3cb8:	90 f9       	bld	r25, 0
    3cba:	c5 55       	subi	r28, 0x55	; 85
    3cbc:	df 4f       	sbci	r29, 0xFF	; 255
    3cbe:	98 83       	st	Y, r25
    3cc0:	cb 5a       	subi	r28, 0xAB	; 171
    3cc2:	d0 40       	sbci	r29, 0x00	; 0
    3cc4:	c4 55       	subi	r28, 0x54	; 84
    3cc6:	df 4f       	sbci	r29, 0xFF	; 255
    3cc8:	18 82       	st	Y, r1
    3cca:	cc 5a       	subi	r28, 0xAC	; 172
    3ccc:	d0 40       	sbci	r29, 0x00	; 0
    3cce:	c5 55       	subi	r28, 0x55	; 85
    3cd0:	df 4f       	sbci	r29, 0xFF	; 255
    3cd2:	28 81       	ld	r18, Y
    3cd4:	39 81       	ldd	r19, Y+1	; 0x01
    3cd6:	cb 5a       	subi	r28, 0xAB	; 171
    3cd8:	d0 40       	sbci	r29, 0x00	; 0
    3cda:	22 0f       	add	r18, r18
    3cdc:	33 1f       	adc	r19, r19
    3cde:	22 0f       	add	r18, r18
    3ce0:	33 1f       	adc	r19, r19
    3ce2:	22 0f       	add	r18, r18
    3ce4:	33 1f       	adc	r19, r19
    3ce6:	42 2b       	or	r20, r18
    3ce8:	53 2b       	or	r21, r19
    3cea:	64 9f       	mul	r22, r20
    3cec:	90 01       	movw	r18, r0
    3cee:	65 9f       	mul	r22, r21
    3cf0:	30 0d       	add	r19, r0
    3cf2:	11 24       	eor	r1, r1
    3cf4:	2c 54       	subi	r18, 0x4C	; 76
    3cf6:	3f 4d       	sbci	r19, 0xDF	; 223
    3cf8:	d9 01       	movw	r26, r18
    3cfa:	15 96       	adiw	r26, 0x05	; 5
    3cfc:	bc 91       	ld	r27, X
    3cfe:	c2 55       	subi	r28, 0x52	; 82
    3d00:	df 4f       	sbci	r29, 0xFF	; 255
    3d02:	b8 83       	st	Y, r27
    3d04:	ce 5a       	subi	r28, 0xAE	; 174
    3d06:	d0 40       	sbci	r29, 0x00	; 0
    3d08:	c3 55       	subi	r28, 0x53	; 83
    3d0a:	df 4f       	sbci	r29, 0xFF	; 255
    3d0c:	18 82       	st	Y, r1
    3d0e:	cd 5a       	subi	r28, 0xAD	; 173
    3d10:	d0 40       	sbci	r29, 0x00	; 0
    3d12:	88 1f       	adc	r24, r24
    3d14:	88 27       	eor	r24, r24
    3d16:	88 1f       	adc	r24, r24
    3d18:	90 e0       	ldi	r25, 0x00	; 0
    3d1a:	88 0f       	add	r24, r24
    3d1c:	99 1f       	adc	r25, r25
    3d1e:	88 0f       	add	r24, r24
    3d20:	99 1f       	adc	r25, r25
    3d22:	16 fb       	bst	r17, 6
    3d24:	11 27       	eor	r17, r17
    3d26:	10 f9       	bld	r17, 0
    3d28:	c1 55       	subi	r28, 0x51	; 81
    3d2a:	df 4f       	sbci	r29, 0xFF	; 255
    3d2c:	18 83       	st	Y, r17
    3d2e:	cf 5a       	subi	r28, 0xAF	; 175
    3d30:	d0 40       	sbci	r29, 0x00	; 0
    3d32:	c0 55       	subi	r28, 0x50	; 80
    3d34:	df 4f       	sbci	r29, 0xFF	; 255
    3d36:	18 82       	st	Y, r1
    3d38:	c0 5b       	subi	r28, 0xB0	; 176
    3d3a:	d0 40       	sbci	r29, 0x00	; 0
    3d3c:	c1 55       	subi	r28, 0x51	; 81
    3d3e:	df 4f       	sbci	r29, 0xFF	; 255
    3d40:	28 81       	ld	r18, Y
    3d42:	39 81       	ldd	r19, Y+1	; 0x01
    3d44:	cf 5a       	subi	r28, 0xAF	; 175
    3d46:	d0 40       	sbci	r29, 0x00	; 0
    3d48:	82 2b       	or	r24, r18
    3d4a:	93 2b       	or	r25, r19
    3d4c:	f2 95       	swap	r31
    3d4e:	f1 70       	andi	r31, 0x01	; 1
    3d50:	cf 54       	subi	r28, 0x4F	; 79
    3d52:	df 4f       	sbci	r29, 0xFF	; 255
    3d54:	f8 83       	st	Y, r31
    3d56:	c1 5b       	subi	r28, 0xB1	; 177
    3d58:	d0 40       	sbci	r29, 0x00	; 0
    3d5a:	ce 54       	subi	r28, 0x4E	; 78
    3d5c:	df 4f       	sbci	r29, 0xFF	; 255
    3d5e:	18 82       	st	Y, r1
    3d60:	c2 5b       	subi	r28, 0xB2	; 178
    3d62:	d0 40       	sbci	r29, 0x00	; 0
    3d64:	cf 54       	subi	r28, 0x4F	; 79
    3d66:	df 4f       	sbci	r29, 0xFF	; 255
    3d68:	28 81       	ld	r18, Y
    3d6a:	39 81       	ldd	r19, Y+1	; 0x01
    3d6c:	c1 5b       	subi	r28, 0xB1	; 177
    3d6e:	d0 40       	sbci	r29, 0x00	; 0
    3d70:	22 0f       	add	r18, r18
    3d72:	33 1f       	adc	r19, r19
    3d74:	82 2b       	or	r24, r18
    3d76:	93 2b       	or	r25, r19
    3d78:	e5 fb       	bst	r30, 5
    3d7a:	ee 27       	eor	r30, r30
    3d7c:	e0 f9       	bld	r30, 0
    3d7e:	cd 54       	subi	r28, 0x4D	; 77
    3d80:	df 4f       	sbci	r29, 0xFF	; 255
    3d82:	e8 83       	st	Y, r30
    3d84:	c3 5b       	subi	r28, 0xB3	; 179
    3d86:	d0 40       	sbci	r29, 0x00	; 0
    3d88:	cc 54       	subi	r28, 0x4C	; 76
    3d8a:	df 4f       	sbci	r29, 0xFF	; 255
    3d8c:	18 82       	st	Y, r1
    3d8e:	c4 5b       	subi	r28, 0xB4	; 180
    3d90:	d0 40       	sbci	r29, 0x00	; 0
    3d92:	cd 54       	subi	r28, 0x4D	; 77
    3d94:	df 4f       	sbci	r29, 0xFF	; 255
    3d96:	28 81       	ld	r18, Y
    3d98:	39 81       	ldd	r19, Y+1	; 0x01
    3d9a:	c3 5b       	subi	r28, 0xB3	; 179
    3d9c:	d0 40       	sbci	r29, 0x00	; 0
    3d9e:	22 0f       	add	r18, r18
    3da0:	33 1f       	adc	r19, r19
    3da2:	22 0f       	add	r18, r18
    3da4:	33 1f       	adc	r19, r19
    3da6:	22 0f       	add	r18, r18
    3da8:	33 1f       	adc	r19, r19
    3daa:	82 2b       	or	r24, r18
    3dac:	93 2b       	or	r25, r19
    3dae:	68 9f       	mul	r22, r24
    3db0:	90 01       	movw	r18, r0
    3db2:	69 9f       	mul	r22, r25
    3db4:	30 0d       	add	r19, r0
    3db6:	11 24       	eor	r1, r1
    3db8:	f9 01       	movw	r30, r18
    3dba:	ec 54       	subi	r30, 0x4C	; 76
    3dbc:	ff 4d       	sbci	r31, 0xDF	; 223
    3dbe:	27 81       	ldd	r18, Z+7	; 0x07
    3dc0:	30 85       	ldd	r19, Z+8	; 0x08
    3dc2:	c3 55       	subi	r28, 0x53	; 83
    3dc4:	df 4f       	sbci	r29, 0xFF	; 255
    3dc6:	88 81       	ld	r24, Y
    3dc8:	99 81       	ldd	r25, Y+1	; 0x01
    3dca:	cd 5a       	subi	r28, 0xAD	; 173
    3dcc:	d0 40       	sbci	r29, 0x00	; 0
    3dce:	28 2b       	or	r18, r24
    3dd0:	39 2b       	or	r19, r25
    3dd2:	72 9f       	mul	r23, r18
    3dd4:	c0 01       	movw	r24, r0
    3dd6:	73 9f       	mul	r23, r19
    3dd8:	90 0d       	add	r25, r0
    3dda:	11 24       	eor	r1, r1
    3ddc:	90 93 8a 23 	sts	0x238A, r25
    3de0:	a8 e0       	ldi	r26, 0x08	; 8
    3de2:	b6 e0       	ldi	r27, 0x06	; 6
    3de4:	1c 91       	ld	r17, X
    3de6:	fc 91       	ld	r31, X
    3de8:	8c 91       	ld	r24, X
    3dea:	ec 91       	ld	r30, X
    3dec:	3c 91       	ld	r19, X
    3dee:	2c 91       	ld	r18, X
    3df0:	4c 91       	ld	r20, X
    3df2:	9c 91       	ld	r25, X
    3df4:	44 1f       	adc	r20, r20
    3df6:	44 27       	eor	r20, r20
    3df8:	44 1f       	adc	r20, r20
    3dfa:	50 e0       	ldi	r21, 0x00	; 0
    3dfc:	44 0f       	add	r20, r20
    3dfe:	55 1f       	adc	r21, r21
    3e00:	44 0f       	add	r20, r20
    3e02:	55 1f       	adc	r21, r21
    3e04:	36 fb       	bst	r19, 6
    3e06:	33 27       	eor	r19, r19
    3e08:	30 f9       	bld	r19, 0
    3e0a:	cb 54       	subi	r28, 0x4B	; 75
    3e0c:	df 4f       	sbci	r29, 0xFF	; 255
    3e0e:	38 83       	st	Y, r19
    3e10:	c5 5b       	subi	r28, 0xB5	; 181
    3e12:	d0 40       	sbci	r29, 0x00	; 0
    3e14:	ca 54       	subi	r28, 0x4A	; 74
    3e16:	df 4f       	sbci	r29, 0xFF	; 255
    3e18:	18 82       	st	Y, r1
    3e1a:	c6 5b       	subi	r28, 0xB6	; 182
    3e1c:	d0 40       	sbci	r29, 0x00	; 0
    3e1e:	cb 54       	subi	r28, 0x4B	; 75
    3e20:	df 4f       	sbci	r29, 0xFF	; 255
    3e22:	a8 81       	ld	r26, Y
    3e24:	b9 81       	ldd	r27, Y+1	; 0x01
    3e26:	c5 5b       	subi	r28, 0xB5	; 181
    3e28:	d0 40       	sbci	r29, 0x00	; 0
    3e2a:	4a 2b       	or	r20, r26
    3e2c:	5b 2b       	or	r21, r27
    3e2e:	22 95       	swap	r18
    3e30:	21 70       	andi	r18, 0x01	; 1
    3e32:	c9 54       	subi	r28, 0x49	; 73
    3e34:	df 4f       	sbci	r29, 0xFF	; 255
    3e36:	28 83       	st	Y, r18
    3e38:	c7 5b       	subi	r28, 0xB7	; 183
    3e3a:	d0 40       	sbci	r29, 0x00	; 0
    3e3c:	c8 54       	subi	r28, 0x48	; 72
    3e3e:	df 4f       	sbci	r29, 0xFF	; 255
    3e40:	18 82       	st	Y, r1
    3e42:	c8 5b       	subi	r28, 0xB8	; 184
    3e44:	d0 40       	sbci	r29, 0x00	; 0
    3e46:	c9 54       	subi	r28, 0x49	; 73
    3e48:	df 4f       	sbci	r29, 0xFF	; 255
    3e4a:	28 81       	ld	r18, Y
    3e4c:	39 81       	ldd	r19, Y+1	; 0x01
    3e4e:	c7 5b       	subi	r28, 0xB7	; 183
    3e50:	d0 40       	sbci	r29, 0x00	; 0
    3e52:	22 0f       	add	r18, r18
    3e54:	33 1f       	adc	r19, r19
    3e56:	42 2b       	or	r20, r18
    3e58:	53 2b       	or	r21, r19
    3e5a:	95 fb       	bst	r25, 5
    3e5c:	99 27       	eor	r25, r25
    3e5e:	90 f9       	bld	r25, 0
    3e60:	c7 54       	subi	r28, 0x47	; 71
    3e62:	df 4f       	sbci	r29, 0xFF	; 255
    3e64:	98 83       	st	Y, r25
    3e66:	c9 5b       	subi	r28, 0xB9	; 185
    3e68:	d0 40       	sbci	r29, 0x00	; 0
    3e6a:	c6 54       	subi	r28, 0x46	; 70
    3e6c:	df 4f       	sbci	r29, 0xFF	; 255
    3e6e:	18 82       	st	Y, r1
    3e70:	ca 5b       	subi	r28, 0xBA	; 186
    3e72:	d0 40       	sbci	r29, 0x00	; 0
    3e74:	c7 54       	subi	r28, 0x47	; 71
    3e76:	df 4f       	sbci	r29, 0xFF	; 255
    3e78:	28 81       	ld	r18, Y
    3e7a:	39 81       	ldd	r19, Y+1	; 0x01
    3e7c:	c9 5b       	subi	r28, 0xB9	; 185
    3e7e:	d0 40       	sbci	r29, 0x00	; 0
    3e80:	22 0f       	add	r18, r18
    3e82:	33 1f       	adc	r19, r19
    3e84:	22 0f       	add	r18, r18
    3e86:	33 1f       	adc	r19, r19
    3e88:	22 0f       	add	r18, r18
    3e8a:	33 1f       	adc	r19, r19
    3e8c:	42 2b       	or	r20, r18
    3e8e:	53 2b       	or	r21, r19
    3e90:	64 9f       	mul	r22, r20
    3e92:	90 01       	movw	r18, r0
    3e94:	65 9f       	mul	r22, r21
    3e96:	30 0d       	add	r19, r0
    3e98:	11 24       	eor	r1, r1
    3e9a:	2c 54       	subi	r18, 0x4C	; 76
    3e9c:	3f 4d       	sbci	r19, 0xDF	; 223
    3e9e:	d9 01       	movw	r26, r18
    3ea0:	19 96       	adiw	r26, 0x09	; 9
    3ea2:	bc 91       	ld	r27, X
    3ea4:	c4 54       	subi	r28, 0x44	; 68
    3ea6:	df 4f       	sbci	r29, 0xFF	; 255
    3ea8:	b8 83       	st	Y, r27
    3eaa:	cc 5b       	subi	r28, 0xBC	; 188
    3eac:	d0 40       	sbci	r29, 0x00	; 0
    3eae:	c5 54       	subi	r28, 0x45	; 69
    3eb0:	df 4f       	sbci	r29, 0xFF	; 255
    3eb2:	18 82       	st	Y, r1
    3eb4:	cb 5b       	subi	r28, 0xBB	; 187
    3eb6:	d0 40       	sbci	r29, 0x00	; 0
    3eb8:	88 1f       	adc	r24, r24
    3eba:	88 27       	eor	r24, r24
    3ebc:	88 1f       	adc	r24, r24
    3ebe:	90 e0       	ldi	r25, 0x00	; 0
    3ec0:	88 0f       	add	r24, r24
    3ec2:	99 1f       	adc	r25, r25
    3ec4:	88 0f       	add	r24, r24
    3ec6:	99 1f       	adc	r25, r25
    3ec8:	16 fb       	bst	r17, 6
    3eca:	11 27       	eor	r17, r17
    3ecc:	10 f9       	bld	r17, 0
    3ece:	c3 54       	subi	r28, 0x43	; 67
    3ed0:	df 4f       	sbci	r29, 0xFF	; 255
    3ed2:	18 83       	st	Y, r17
    3ed4:	cd 5b       	subi	r28, 0xBD	; 189
    3ed6:	d0 40       	sbci	r29, 0x00	; 0
    3ed8:	c2 54       	subi	r28, 0x42	; 66
    3eda:	df 4f       	sbci	r29, 0xFF	; 255
    3edc:	18 82       	st	Y, r1
    3ede:	ce 5b       	subi	r28, 0xBE	; 190
    3ee0:	d0 40       	sbci	r29, 0x00	; 0
    3ee2:	c3 54       	subi	r28, 0x43	; 67
    3ee4:	df 4f       	sbci	r29, 0xFF	; 255
    3ee6:	28 81       	ld	r18, Y
    3ee8:	39 81       	ldd	r19, Y+1	; 0x01
    3eea:	cd 5b       	subi	r28, 0xBD	; 189
    3eec:	d0 40       	sbci	r29, 0x00	; 0
    3eee:	82 2b       	or	r24, r18
    3ef0:	93 2b       	or	r25, r19
    3ef2:	f2 95       	swap	r31
    3ef4:	f1 70       	andi	r31, 0x01	; 1
    3ef6:	c1 54       	subi	r28, 0x41	; 65
    3ef8:	df 4f       	sbci	r29, 0xFF	; 255
    3efa:	f8 83       	st	Y, r31
    3efc:	cf 5b       	subi	r28, 0xBF	; 191
    3efe:	d0 40       	sbci	r29, 0x00	; 0
    3f00:	c0 54       	subi	r28, 0x40	; 64
    3f02:	df 4f       	sbci	r29, 0xFF	; 255
    3f04:	18 82       	st	Y, r1
    3f06:	c0 5c       	subi	r28, 0xC0	; 192
    3f08:	d0 40       	sbci	r29, 0x00	; 0
    3f0a:	c1 54       	subi	r28, 0x41	; 65
    3f0c:	df 4f       	sbci	r29, 0xFF	; 255
    3f0e:	28 81       	ld	r18, Y
    3f10:	39 81       	ldd	r19, Y+1	; 0x01
    3f12:	cf 5b       	subi	r28, 0xBF	; 191
    3f14:	d0 40       	sbci	r29, 0x00	; 0
    3f16:	22 0f       	add	r18, r18
    3f18:	33 1f       	adc	r19, r19
    3f1a:	82 2b       	or	r24, r18
    3f1c:	93 2b       	or	r25, r19
    3f1e:	e5 fb       	bst	r30, 5
    3f20:	ee 27       	eor	r30, r30
    3f22:	e0 f9       	bld	r30, 0
    3f24:	cf 53       	subi	r28, 0x3F	; 63
    3f26:	df 4f       	sbci	r29, 0xFF	; 255
    3f28:	e8 83       	st	Y, r30
    3f2a:	c1 5c       	subi	r28, 0xC1	; 193
    3f2c:	d0 40       	sbci	r29, 0x00	; 0
    3f2e:	ce 53       	subi	r28, 0x3E	; 62
    3f30:	df 4f       	sbci	r29, 0xFF	; 255
    3f32:	18 82       	st	Y, r1
    3f34:	c2 5c       	subi	r28, 0xC2	; 194
    3f36:	d0 40       	sbci	r29, 0x00	; 0
    3f38:	cf 53       	subi	r28, 0x3F	; 63
    3f3a:	df 4f       	sbci	r29, 0xFF	; 255
    3f3c:	28 81       	ld	r18, Y
    3f3e:	39 81       	ldd	r19, Y+1	; 0x01
    3f40:	c1 5c       	subi	r28, 0xC1	; 193
    3f42:	d0 40       	sbci	r29, 0x00	; 0
    3f44:	22 0f       	add	r18, r18
    3f46:	33 1f       	adc	r19, r19
    3f48:	22 0f       	add	r18, r18
    3f4a:	33 1f       	adc	r19, r19
    3f4c:	22 0f       	add	r18, r18
    3f4e:	33 1f       	adc	r19, r19
    3f50:	82 2b       	or	r24, r18
    3f52:	93 2b       	or	r25, r19
    3f54:	68 9f       	mul	r22, r24
    3f56:	90 01       	movw	r18, r0
    3f58:	69 9f       	mul	r22, r25
    3f5a:	30 0d       	add	r19, r0
    3f5c:	11 24       	eor	r1, r1
    3f5e:	f9 01       	movw	r30, r18
    3f60:	ec 54       	subi	r30, 0x4C	; 76
    3f62:	ff 4d       	sbci	r31, 0xDF	; 223
    3f64:	83 85       	ldd	r24, Z+11	; 0x0b
    3f66:	94 85       	ldd	r25, Z+12	; 0x0c
    3f68:	c5 54       	subi	r28, 0x45	; 69
    3f6a:	df 4f       	sbci	r29, 0xFF	; 255
    3f6c:	a8 81       	ld	r26, Y
    3f6e:	b9 81       	ldd	r27, Y+1	; 0x01
    3f70:	cb 5b       	subi	r28, 0xBB	; 187
    3f72:	d0 40       	sbci	r29, 0x00	; 0
    3f74:	8a 2b       	or	r24, r26
    3f76:	9b 2b       	or	r25, r27
    3f78:	87 9f       	mul	r24, r23
    3f7a:	80 2d       	mov	r24, r0
    3f7c:	11 24       	eor	r1, r1
    3f7e:	80 93 8b 23 	sts	0x238B, r24
    3f82:	e8 e0       	ldi	r30, 0x08	; 8
    3f84:	f6 e0       	ldi	r31, 0x06	; 6
    3f86:	10 81       	ld	r17, Z
    3f88:	f0 81       	ld	r31, Z
    3f8a:	a8 e0       	ldi	r26, 0x08	; 8
    3f8c:	b6 e0       	ldi	r27, 0x06	; 6
    3f8e:	8c 91       	ld	r24, X
    3f90:	ec 91       	ld	r30, X
    3f92:	3c 91       	ld	r19, X
    3f94:	2c 91       	ld	r18, X
    3f96:	4c 91       	ld	r20, X
    3f98:	9c 91       	ld	r25, X
    3f9a:	44 1f       	adc	r20, r20
    3f9c:	44 27       	eor	r20, r20
    3f9e:	44 1f       	adc	r20, r20
    3fa0:	50 e0       	ldi	r21, 0x00	; 0
    3fa2:	44 0f       	add	r20, r20
    3fa4:	55 1f       	adc	r21, r21
    3fa6:	44 0f       	add	r20, r20
    3fa8:	55 1f       	adc	r21, r21
    3faa:	36 fb       	bst	r19, 6
    3fac:	33 27       	eor	r19, r19
    3fae:	30 f9       	bld	r19, 0
    3fb0:	cd 53       	subi	r28, 0x3D	; 61
    3fb2:	df 4f       	sbci	r29, 0xFF	; 255
    3fb4:	38 83       	st	Y, r19
    3fb6:	c3 5c       	subi	r28, 0xC3	; 195
    3fb8:	d0 40       	sbci	r29, 0x00	; 0
    3fba:	cc 53       	subi	r28, 0x3C	; 60
    3fbc:	df 4f       	sbci	r29, 0xFF	; 255
    3fbe:	18 82       	st	Y, r1
    3fc0:	c4 5c       	subi	r28, 0xC4	; 196
    3fc2:	d0 40       	sbci	r29, 0x00	; 0
    3fc4:	cd 53       	subi	r28, 0x3D	; 61
    3fc6:	df 4f       	sbci	r29, 0xFF	; 255
    3fc8:	a8 81       	ld	r26, Y
    3fca:	b9 81       	ldd	r27, Y+1	; 0x01
    3fcc:	c3 5c       	subi	r28, 0xC3	; 195
    3fce:	d0 40       	sbci	r29, 0x00	; 0
    3fd0:	4a 2b       	or	r20, r26
    3fd2:	5b 2b       	or	r21, r27
    3fd4:	22 95       	swap	r18
    3fd6:	21 70       	andi	r18, 0x01	; 1
    3fd8:	cb 53       	subi	r28, 0x3B	; 59
    3fda:	df 4f       	sbci	r29, 0xFF	; 255
    3fdc:	28 83       	st	Y, r18
    3fde:	c5 5c       	subi	r28, 0xC5	; 197
    3fe0:	d0 40       	sbci	r29, 0x00	; 0
    3fe2:	ca 53       	subi	r28, 0x3A	; 58
    3fe4:	df 4f       	sbci	r29, 0xFF	; 255
    3fe6:	18 82       	st	Y, r1
    3fe8:	c6 5c       	subi	r28, 0xC6	; 198
    3fea:	d0 40       	sbci	r29, 0x00	; 0
    3fec:	cb 53       	subi	r28, 0x3B	; 59
    3fee:	df 4f       	sbci	r29, 0xFF	; 255
    3ff0:	28 81       	ld	r18, Y
    3ff2:	39 81       	ldd	r19, Y+1	; 0x01
    3ff4:	c5 5c       	subi	r28, 0xC5	; 197
    3ff6:	d0 40       	sbci	r29, 0x00	; 0
    3ff8:	22 0f       	add	r18, r18
    3ffa:	33 1f       	adc	r19, r19
    3ffc:	42 2b       	or	r20, r18
    3ffe:	53 2b       	or	r21, r19
    4000:	95 fb       	bst	r25, 5
    4002:	99 27       	eor	r25, r25
    4004:	90 f9       	bld	r25, 0
    4006:	c9 53       	subi	r28, 0x39	; 57
    4008:	df 4f       	sbci	r29, 0xFF	; 255
    400a:	98 83       	st	Y, r25
    400c:	c7 5c       	subi	r28, 0xC7	; 199
    400e:	d0 40       	sbci	r29, 0x00	; 0
    4010:	c8 53       	subi	r28, 0x38	; 56
    4012:	df 4f       	sbci	r29, 0xFF	; 255
    4014:	18 82       	st	Y, r1
    4016:	c8 5c       	subi	r28, 0xC8	; 200
    4018:	d0 40       	sbci	r29, 0x00	; 0
    401a:	c9 53       	subi	r28, 0x39	; 57
    401c:	df 4f       	sbci	r29, 0xFF	; 255
    401e:	28 81       	ld	r18, Y
    4020:	39 81       	ldd	r19, Y+1	; 0x01
    4022:	c7 5c       	subi	r28, 0xC7	; 199
    4024:	d0 40       	sbci	r29, 0x00	; 0
    4026:	22 0f       	add	r18, r18
    4028:	33 1f       	adc	r19, r19
    402a:	22 0f       	add	r18, r18
    402c:	33 1f       	adc	r19, r19
    402e:	22 0f       	add	r18, r18
    4030:	33 1f       	adc	r19, r19
    4032:	42 2b       	or	r20, r18
    4034:	53 2b       	or	r21, r19
    4036:	64 9f       	mul	r22, r20
    4038:	90 01       	movw	r18, r0
    403a:	65 9f       	mul	r22, r21
    403c:	30 0d       	add	r19, r0
    403e:	11 24       	eor	r1, r1
    4040:	2c 54       	subi	r18, 0x4C	; 76
    4042:	3f 4d       	sbci	r19, 0xDF	; 223
    4044:	d9 01       	movw	r26, r18
    4046:	19 96       	adiw	r26, 0x09	; 9
    4048:	bc 91       	ld	r27, X
    404a:	c6 53       	subi	r28, 0x36	; 54
    404c:	df 4f       	sbci	r29, 0xFF	; 255
    404e:	b8 83       	st	Y, r27
    4050:	ca 5c       	subi	r28, 0xCA	; 202
    4052:	d0 40       	sbci	r29, 0x00	; 0
    4054:	c7 53       	subi	r28, 0x37	; 55
    4056:	df 4f       	sbci	r29, 0xFF	; 255
    4058:	18 82       	st	Y, r1
    405a:	c9 5c       	subi	r28, 0xC9	; 201
    405c:	d0 40       	sbci	r29, 0x00	; 0
    405e:	88 1f       	adc	r24, r24
    4060:	88 27       	eor	r24, r24
    4062:	88 1f       	adc	r24, r24
    4064:	90 e0       	ldi	r25, 0x00	; 0
    4066:	88 0f       	add	r24, r24
    4068:	99 1f       	adc	r25, r25
    406a:	88 0f       	add	r24, r24
    406c:	99 1f       	adc	r25, r25
    406e:	16 fb       	bst	r17, 6
    4070:	11 27       	eor	r17, r17
    4072:	10 f9       	bld	r17, 0
    4074:	c5 53       	subi	r28, 0x35	; 53
    4076:	df 4f       	sbci	r29, 0xFF	; 255
    4078:	18 83       	st	Y, r17
    407a:	cb 5c       	subi	r28, 0xCB	; 203
    407c:	d0 40       	sbci	r29, 0x00	; 0
    407e:	c4 53       	subi	r28, 0x34	; 52
    4080:	df 4f       	sbci	r29, 0xFF	; 255
    4082:	18 82       	st	Y, r1
    4084:	cc 5c       	subi	r28, 0xCC	; 204
    4086:	d0 40       	sbci	r29, 0x00	; 0
    4088:	c5 53       	subi	r28, 0x35	; 53
    408a:	df 4f       	sbci	r29, 0xFF	; 255
    408c:	28 81       	ld	r18, Y
    408e:	39 81       	ldd	r19, Y+1	; 0x01
    4090:	cb 5c       	subi	r28, 0xCB	; 203
    4092:	d0 40       	sbci	r29, 0x00	; 0
    4094:	82 2b       	or	r24, r18
    4096:	93 2b       	or	r25, r19
    4098:	f2 95       	swap	r31
    409a:	f1 70       	andi	r31, 0x01	; 1
    409c:	c3 53       	subi	r28, 0x33	; 51
    409e:	df 4f       	sbci	r29, 0xFF	; 255
    40a0:	f8 83       	st	Y, r31
    40a2:	cd 5c       	subi	r28, 0xCD	; 205
    40a4:	d0 40       	sbci	r29, 0x00	; 0
    40a6:	c2 53       	subi	r28, 0x32	; 50
    40a8:	df 4f       	sbci	r29, 0xFF	; 255
    40aa:	18 82       	st	Y, r1
    40ac:	ce 5c       	subi	r28, 0xCE	; 206
    40ae:	d0 40       	sbci	r29, 0x00	; 0
    40b0:	c3 53       	subi	r28, 0x33	; 51
    40b2:	df 4f       	sbci	r29, 0xFF	; 255
    40b4:	28 81       	ld	r18, Y
    40b6:	39 81       	ldd	r19, Y+1	; 0x01
    40b8:	cd 5c       	subi	r28, 0xCD	; 205
    40ba:	d0 40       	sbci	r29, 0x00	; 0
    40bc:	22 0f       	add	r18, r18
    40be:	33 1f       	adc	r19, r19
    40c0:	82 2b       	or	r24, r18
    40c2:	93 2b       	or	r25, r19
    40c4:	e5 fb       	bst	r30, 5
    40c6:	ee 27       	eor	r30, r30
    40c8:	e0 f9       	bld	r30, 0
    40ca:	c1 53       	subi	r28, 0x31	; 49
    40cc:	df 4f       	sbci	r29, 0xFF	; 255
    40ce:	e8 83       	st	Y, r30
    40d0:	cf 5c       	subi	r28, 0xCF	; 207
    40d2:	d0 40       	sbci	r29, 0x00	; 0
    40d4:	c0 53       	subi	r28, 0x30	; 48
    40d6:	df 4f       	sbci	r29, 0xFF	; 255
    40d8:	18 82       	st	Y, r1
    40da:	c0 5d       	subi	r28, 0xD0	; 208
    40dc:	d0 40       	sbci	r29, 0x00	; 0
    40de:	c1 53       	subi	r28, 0x31	; 49
    40e0:	df 4f       	sbci	r29, 0xFF	; 255
    40e2:	28 81       	ld	r18, Y
    40e4:	39 81       	ldd	r19, Y+1	; 0x01
    40e6:	cf 5c       	subi	r28, 0xCF	; 207
    40e8:	d0 40       	sbci	r29, 0x00	; 0
    40ea:	22 0f       	add	r18, r18
    40ec:	33 1f       	adc	r19, r19
    40ee:	22 0f       	add	r18, r18
    40f0:	33 1f       	adc	r19, r19
    40f2:	22 0f       	add	r18, r18
    40f4:	33 1f       	adc	r19, r19
    40f6:	82 2b       	or	r24, r18
    40f8:	93 2b       	or	r25, r19
    40fa:	68 9f       	mul	r22, r24
    40fc:	90 01       	movw	r18, r0
    40fe:	69 9f       	mul	r22, r25
    4100:	30 0d       	add	r19, r0
    4102:	11 24       	eor	r1, r1
    4104:	f9 01       	movw	r30, r18
    4106:	ec 54       	subi	r30, 0x4C	; 76
    4108:	ff 4d       	sbci	r31, 0xDF	; 223
    410a:	23 85       	ldd	r18, Z+11	; 0x0b
    410c:	34 85       	ldd	r19, Z+12	; 0x0c
    410e:	c7 53       	subi	r28, 0x37	; 55
    4110:	df 4f       	sbci	r29, 0xFF	; 255
    4112:	88 81       	ld	r24, Y
    4114:	99 81       	ldd	r25, Y+1	; 0x01
    4116:	c9 5c       	subi	r28, 0xC9	; 201
    4118:	d0 40       	sbci	r29, 0x00	; 0
    411a:	28 2b       	or	r18, r24
    411c:	39 2b       	or	r19, r25
    411e:	72 9f       	mul	r23, r18
    4120:	c0 01       	movw	r24, r0
    4122:	73 9f       	mul	r23, r19
    4124:	90 0d       	add	r25, r0
    4126:	11 24       	eor	r1, r1
    4128:	90 93 8c 23 	sts	0x238C, r25
    412c:	a8 e0       	ldi	r26, 0x08	; 8
    412e:	b6 e0       	ldi	r27, 0x06	; 6
    4130:	1c 91       	ld	r17, X
    4132:	fc 91       	ld	r31, X
    4134:	8c 91       	ld	r24, X
    4136:	ec 91       	ld	r30, X
    4138:	3c 91       	ld	r19, X
    413a:	2c 91       	ld	r18, X
    413c:	4c 91       	ld	r20, X
    413e:	9c 91       	ld	r25, X
    4140:	44 1f       	adc	r20, r20
    4142:	44 27       	eor	r20, r20
    4144:	44 1f       	adc	r20, r20
    4146:	50 e0       	ldi	r21, 0x00	; 0
    4148:	44 0f       	add	r20, r20
    414a:	55 1f       	adc	r21, r21
    414c:	44 0f       	add	r20, r20
    414e:	55 1f       	adc	r21, r21
    4150:	36 fb       	bst	r19, 6
    4152:	33 27       	eor	r19, r19
    4154:	30 f9       	bld	r19, 0
    4156:	cf 52       	subi	r28, 0x2F	; 47
    4158:	df 4f       	sbci	r29, 0xFF	; 255
    415a:	38 83       	st	Y, r19
    415c:	c1 5d       	subi	r28, 0xD1	; 209
    415e:	d0 40       	sbci	r29, 0x00	; 0
    4160:	ce 52       	subi	r28, 0x2E	; 46
    4162:	df 4f       	sbci	r29, 0xFF	; 255
    4164:	18 82       	st	Y, r1
    4166:	c2 5d       	subi	r28, 0xD2	; 210
    4168:	d0 40       	sbci	r29, 0x00	; 0
    416a:	cf 52       	subi	r28, 0x2F	; 47
    416c:	df 4f       	sbci	r29, 0xFF	; 255
    416e:	a8 81       	ld	r26, Y
    4170:	b9 81       	ldd	r27, Y+1	; 0x01
    4172:	c1 5d       	subi	r28, 0xD1	; 209
    4174:	d0 40       	sbci	r29, 0x00	; 0
    4176:	4a 2b       	or	r20, r26
    4178:	5b 2b       	or	r21, r27
    417a:	22 95       	swap	r18
    417c:	21 70       	andi	r18, 0x01	; 1
    417e:	cd 52       	subi	r28, 0x2D	; 45
    4180:	df 4f       	sbci	r29, 0xFF	; 255
    4182:	28 83       	st	Y, r18
    4184:	c3 5d       	subi	r28, 0xD3	; 211
    4186:	d0 40       	sbci	r29, 0x00	; 0
    4188:	cc 52       	subi	r28, 0x2C	; 44
    418a:	df 4f       	sbci	r29, 0xFF	; 255
    418c:	18 82       	st	Y, r1
    418e:	c4 5d       	subi	r28, 0xD4	; 212
    4190:	d0 40       	sbci	r29, 0x00	; 0
    4192:	cd 52       	subi	r28, 0x2D	; 45
    4194:	df 4f       	sbci	r29, 0xFF	; 255
    4196:	28 81       	ld	r18, Y
    4198:	39 81       	ldd	r19, Y+1	; 0x01
    419a:	c3 5d       	subi	r28, 0xD3	; 211
    419c:	d0 40       	sbci	r29, 0x00	; 0
    419e:	22 0f       	add	r18, r18
    41a0:	33 1f       	adc	r19, r19
    41a2:	42 2b       	or	r20, r18
    41a4:	53 2b       	or	r21, r19
    41a6:	95 fb       	bst	r25, 5
    41a8:	99 27       	eor	r25, r25
    41aa:	90 f9       	bld	r25, 0
    41ac:	cb 52       	subi	r28, 0x2B	; 43
    41ae:	df 4f       	sbci	r29, 0xFF	; 255
    41b0:	98 83       	st	Y, r25
    41b2:	c5 5d       	subi	r28, 0xD5	; 213
    41b4:	d0 40       	sbci	r29, 0x00	; 0
    41b6:	ca 52       	subi	r28, 0x2A	; 42
    41b8:	df 4f       	sbci	r29, 0xFF	; 255
    41ba:	18 82       	st	Y, r1
    41bc:	c6 5d       	subi	r28, 0xD6	; 214
    41be:	d0 40       	sbci	r29, 0x00	; 0
    41c0:	cb 52       	subi	r28, 0x2B	; 43
    41c2:	df 4f       	sbci	r29, 0xFF	; 255
    41c4:	28 81       	ld	r18, Y
    41c6:	39 81       	ldd	r19, Y+1	; 0x01
    41c8:	c5 5d       	subi	r28, 0xD5	; 213
    41ca:	d0 40       	sbci	r29, 0x00	; 0
    41cc:	22 0f       	add	r18, r18
    41ce:	33 1f       	adc	r19, r19
    41d0:	22 0f       	add	r18, r18
    41d2:	33 1f       	adc	r19, r19
    41d4:	22 0f       	add	r18, r18
    41d6:	33 1f       	adc	r19, r19
    41d8:	42 2b       	or	r20, r18
    41da:	53 2b       	or	r21, r19
    41dc:	64 9f       	mul	r22, r20
    41de:	90 01       	movw	r18, r0
    41e0:	65 9f       	mul	r22, r21
    41e2:	30 0d       	add	r19, r0
    41e4:	11 24       	eor	r1, r1
    41e6:	2c 54       	subi	r18, 0x4C	; 76
    41e8:	3f 4d       	sbci	r19, 0xDF	; 223
    41ea:	d9 01       	movw	r26, r18
    41ec:	1d 96       	adiw	r26, 0x0d	; 13
    41ee:	bc 91       	ld	r27, X
    41f0:	c8 52       	subi	r28, 0x28	; 40
    41f2:	df 4f       	sbci	r29, 0xFF	; 255
    41f4:	b8 83       	st	Y, r27
    41f6:	c8 5d       	subi	r28, 0xD8	; 216
    41f8:	d0 40       	sbci	r29, 0x00	; 0
    41fa:	c9 52       	subi	r28, 0x29	; 41
    41fc:	df 4f       	sbci	r29, 0xFF	; 255
    41fe:	18 82       	st	Y, r1
    4200:	c7 5d       	subi	r28, 0xD7	; 215
    4202:	d0 40       	sbci	r29, 0x00	; 0
    4204:	88 1f       	adc	r24, r24
    4206:	88 27       	eor	r24, r24
    4208:	88 1f       	adc	r24, r24
    420a:	90 e0       	ldi	r25, 0x00	; 0
    420c:	88 0f       	add	r24, r24
    420e:	99 1f       	adc	r25, r25
    4210:	88 0f       	add	r24, r24
    4212:	99 1f       	adc	r25, r25
    4214:	16 fb       	bst	r17, 6
    4216:	11 27       	eor	r17, r17
    4218:	10 f9       	bld	r17, 0
    421a:	c7 52       	subi	r28, 0x27	; 39
    421c:	df 4f       	sbci	r29, 0xFF	; 255
    421e:	18 83       	st	Y, r17
    4220:	c9 5d       	subi	r28, 0xD9	; 217
    4222:	d0 40       	sbci	r29, 0x00	; 0
    4224:	c6 52       	subi	r28, 0x26	; 38
    4226:	df 4f       	sbci	r29, 0xFF	; 255
    4228:	18 82       	st	Y, r1
    422a:	ca 5d       	subi	r28, 0xDA	; 218
    422c:	d0 40       	sbci	r29, 0x00	; 0
    422e:	c7 52       	subi	r28, 0x27	; 39
    4230:	df 4f       	sbci	r29, 0xFF	; 255
    4232:	28 81       	ld	r18, Y
    4234:	39 81       	ldd	r19, Y+1	; 0x01
    4236:	c9 5d       	subi	r28, 0xD9	; 217
    4238:	d0 40       	sbci	r29, 0x00	; 0
    423a:	82 2b       	or	r24, r18
    423c:	93 2b       	or	r25, r19
    423e:	f2 95       	swap	r31
    4240:	f1 70       	andi	r31, 0x01	; 1
    4242:	c5 52       	subi	r28, 0x25	; 37
    4244:	df 4f       	sbci	r29, 0xFF	; 255
    4246:	f8 83       	st	Y, r31
    4248:	cb 5d       	subi	r28, 0xDB	; 219
    424a:	d0 40       	sbci	r29, 0x00	; 0
    424c:	c4 52       	subi	r28, 0x24	; 36
    424e:	df 4f       	sbci	r29, 0xFF	; 255
    4250:	18 82       	st	Y, r1
    4252:	cc 5d       	subi	r28, 0xDC	; 220
    4254:	d0 40       	sbci	r29, 0x00	; 0
    4256:	c5 52       	subi	r28, 0x25	; 37
    4258:	df 4f       	sbci	r29, 0xFF	; 255
    425a:	28 81       	ld	r18, Y
    425c:	39 81       	ldd	r19, Y+1	; 0x01
    425e:	cb 5d       	subi	r28, 0xDB	; 219
    4260:	d0 40       	sbci	r29, 0x00	; 0
    4262:	22 0f       	add	r18, r18
    4264:	33 1f       	adc	r19, r19
    4266:	82 2b       	or	r24, r18
    4268:	93 2b       	or	r25, r19
    426a:	e5 fb       	bst	r30, 5
    426c:	ee 27       	eor	r30, r30
    426e:	e0 f9       	bld	r30, 0
    4270:	c3 52       	subi	r28, 0x23	; 35
    4272:	df 4f       	sbci	r29, 0xFF	; 255
    4274:	e8 83       	st	Y, r30
    4276:	cd 5d       	subi	r28, 0xDD	; 221
    4278:	d0 40       	sbci	r29, 0x00	; 0
    427a:	c2 52       	subi	r28, 0x22	; 34
    427c:	df 4f       	sbci	r29, 0xFF	; 255
    427e:	18 82       	st	Y, r1
    4280:	ce 5d       	subi	r28, 0xDE	; 222
    4282:	d0 40       	sbci	r29, 0x00	; 0
    4284:	c3 52       	subi	r28, 0x23	; 35
    4286:	df 4f       	sbci	r29, 0xFF	; 255
    4288:	28 81       	ld	r18, Y
    428a:	39 81       	ldd	r19, Y+1	; 0x01
    428c:	cd 5d       	subi	r28, 0xDD	; 221
    428e:	d0 40       	sbci	r29, 0x00	; 0
    4290:	22 0f       	add	r18, r18
    4292:	33 1f       	adc	r19, r19
    4294:	22 0f       	add	r18, r18
    4296:	33 1f       	adc	r19, r19
    4298:	22 0f       	add	r18, r18
    429a:	33 1f       	adc	r19, r19
    429c:	82 2b       	or	r24, r18
    429e:	93 2b       	or	r25, r19
    42a0:	68 9f       	mul	r22, r24
    42a2:	90 01       	movw	r18, r0
    42a4:	69 9f       	mul	r22, r25
    42a6:	30 0d       	add	r19, r0
    42a8:	11 24       	eor	r1, r1
    42aa:	f9 01       	movw	r30, r18
    42ac:	ec 54       	subi	r30, 0x4C	; 76
    42ae:	ff 4d       	sbci	r31, 0xDF	; 223
    42b0:	87 85       	ldd	r24, Z+15	; 0x0f
    42b2:	90 89       	ldd	r25, Z+16	; 0x10
    42b4:	c9 52       	subi	r28, 0x29	; 41
    42b6:	df 4f       	sbci	r29, 0xFF	; 255
    42b8:	a8 81       	ld	r26, Y
    42ba:	b9 81       	ldd	r27, Y+1	; 0x01
    42bc:	c7 5d       	subi	r28, 0xD7	; 215
    42be:	d0 40       	sbci	r29, 0x00	; 0
    42c0:	8a 2b       	or	r24, r26
    42c2:	9b 2b       	or	r25, r27
    42c4:	87 9f       	mul	r24, r23
    42c6:	80 2d       	mov	r24, r0
    42c8:	11 24       	eor	r1, r1
    42ca:	80 93 8d 23 	sts	0x238D, r24
    42ce:	e8 e0       	ldi	r30, 0x08	; 8
    42d0:	f6 e0       	ldi	r31, 0x06	; 6
    42d2:	10 81       	ld	r17, Z
    42d4:	f0 81       	ld	r31, Z
    42d6:	a8 e0       	ldi	r26, 0x08	; 8
    42d8:	b6 e0       	ldi	r27, 0x06	; 6
    42da:	8c 91       	ld	r24, X
    42dc:	ec 91       	ld	r30, X
    42de:	3c 91       	ld	r19, X
    42e0:	2c 91       	ld	r18, X
    42e2:	4c 91       	ld	r20, X
    42e4:	9c 91       	ld	r25, X
    42e6:	44 1f       	adc	r20, r20
    42e8:	44 27       	eor	r20, r20
    42ea:	44 1f       	adc	r20, r20
    42ec:	50 e0       	ldi	r21, 0x00	; 0
    42ee:	44 0f       	add	r20, r20
    42f0:	55 1f       	adc	r21, r21
    42f2:	44 0f       	add	r20, r20
    42f4:	55 1f       	adc	r21, r21
    42f6:	36 fb       	bst	r19, 6
    42f8:	33 27       	eor	r19, r19
    42fa:	30 f9       	bld	r19, 0
    42fc:	c1 52       	subi	r28, 0x21	; 33
    42fe:	df 4f       	sbci	r29, 0xFF	; 255
    4300:	38 83       	st	Y, r19
    4302:	cf 5d       	subi	r28, 0xDF	; 223
    4304:	d0 40       	sbci	r29, 0x00	; 0
    4306:	c0 52       	subi	r28, 0x20	; 32
    4308:	df 4f       	sbci	r29, 0xFF	; 255
    430a:	18 82       	st	Y, r1
    430c:	c0 5e       	subi	r28, 0xE0	; 224
    430e:	d0 40       	sbci	r29, 0x00	; 0
    4310:	c1 52       	subi	r28, 0x21	; 33
    4312:	df 4f       	sbci	r29, 0xFF	; 255
    4314:	a8 81       	ld	r26, Y
    4316:	b9 81       	ldd	r27, Y+1	; 0x01
    4318:	cf 5d       	subi	r28, 0xDF	; 223
    431a:	d0 40       	sbci	r29, 0x00	; 0
    431c:	4a 2b       	or	r20, r26
    431e:	5b 2b       	or	r21, r27
    4320:	22 95       	swap	r18
    4322:	21 70       	andi	r18, 0x01	; 1
    4324:	cf 51       	subi	r28, 0x1F	; 31
    4326:	df 4f       	sbci	r29, 0xFF	; 255
    4328:	28 83       	st	Y, r18
    432a:	c1 5e       	subi	r28, 0xE1	; 225
    432c:	d0 40       	sbci	r29, 0x00	; 0
    432e:	ce 51       	subi	r28, 0x1E	; 30
    4330:	df 4f       	sbci	r29, 0xFF	; 255
    4332:	18 82       	st	Y, r1
    4334:	c2 5e       	subi	r28, 0xE2	; 226
    4336:	d0 40       	sbci	r29, 0x00	; 0
    4338:	cf 51       	subi	r28, 0x1F	; 31
    433a:	df 4f       	sbci	r29, 0xFF	; 255
    433c:	28 81       	ld	r18, Y
    433e:	39 81       	ldd	r19, Y+1	; 0x01
    4340:	c1 5e       	subi	r28, 0xE1	; 225
    4342:	d0 40       	sbci	r29, 0x00	; 0
    4344:	22 0f       	add	r18, r18
    4346:	33 1f       	adc	r19, r19
    4348:	42 2b       	or	r20, r18
    434a:	53 2b       	or	r21, r19
    434c:	95 fb       	bst	r25, 5
    434e:	99 27       	eor	r25, r25
    4350:	90 f9       	bld	r25, 0
    4352:	cd 51       	subi	r28, 0x1D	; 29
    4354:	df 4f       	sbci	r29, 0xFF	; 255
    4356:	98 83       	st	Y, r25
    4358:	c3 5e       	subi	r28, 0xE3	; 227
    435a:	d0 40       	sbci	r29, 0x00	; 0
    435c:	cc 51       	subi	r28, 0x1C	; 28
    435e:	df 4f       	sbci	r29, 0xFF	; 255
    4360:	18 82       	st	Y, r1
    4362:	c4 5e       	subi	r28, 0xE4	; 228
    4364:	d0 40       	sbci	r29, 0x00	; 0
    4366:	cd 51       	subi	r28, 0x1D	; 29
    4368:	df 4f       	sbci	r29, 0xFF	; 255
    436a:	28 81       	ld	r18, Y
    436c:	39 81       	ldd	r19, Y+1	; 0x01
    436e:	c3 5e       	subi	r28, 0xE3	; 227
    4370:	d0 40       	sbci	r29, 0x00	; 0
    4372:	22 0f       	add	r18, r18
    4374:	33 1f       	adc	r19, r19
    4376:	22 0f       	add	r18, r18
    4378:	33 1f       	adc	r19, r19
    437a:	22 0f       	add	r18, r18
    437c:	33 1f       	adc	r19, r19
    437e:	42 2b       	or	r20, r18
    4380:	53 2b       	or	r21, r19
    4382:	64 9f       	mul	r22, r20
    4384:	90 01       	movw	r18, r0
    4386:	65 9f       	mul	r22, r21
    4388:	30 0d       	add	r19, r0
    438a:	11 24       	eor	r1, r1
    438c:	2c 54       	subi	r18, 0x4C	; 76
    438e:	3f 4d       	sbci	r19, 0xDF	; 223
    4390:	d9 01       	movw	r26, r18
    4392:	1d 96       	adiw	r26, 0x0d	; 13
    4394:	bc 91       	ld	r27, X
    4396:	ca 51       	subi	r28, 0x1A	; 26
    4398:	df 4f       	sbci	r29, 0xFF	; 255
    439a:	b8 83       	st	Y, r27
    439c:	c6 5e       	subi	r28, 0xE6	; 230
    439e:	d0 40       	sbci	r29, 0x00	; 0
    43a0:	cb 51       	subi	r28, 0x1B	; 27
    43a2:	df 4f       	sbci	r29, 0xFF	; 255
    43a4:	18 82       	st	Y, r1
    43a6:	c5 5e       	subi	r28, 0xE5	; 229
    43a8:	d0 40       	sbci	r29, 0x00	; 0
    43aa:	88 1f       	adc	r24, r24
    43ac:	88 27       	eor	r24, r24
    43ae:	88 1f       	adc	r24, r24
    43b0:	90 e0       	ldi	r25, 0x00	; 0
    43b2:	88 0f       	add	r24, r24
    43b4:	99 1f       	adc	r25, r25
    43b6:	88 0f       	add	r24, r24
    43b8:	99 1f       	adc	r25, r25
    43ba:	16 fb       	bst	r17, 6
    43bc:	11 27       	eor	r17, r17
    43be:	10 f9       	bld	r17, 0
    43c0:	c9 51       	subi	r28, 0x19	; 25
    43c2:	df 4f       	sbci	r29, 0xFF	; 255
    43c4:	18 83       	st	Y, r17
    43c6:	c7 5e       	subi	r28, 0xE7	; 231
    43c8:	d0 40       	sbci	r29, 0x00	; 0
    43ca:	c8 51       	subi	r28, 0x18	; 24
    43cc:	df 4f       	sbci	r29, 0xFF	; 255
    43ce:	18 82       	st	Y, r1
    43d0:	c8 5e       	subi	r28, 0xE8	; 232
    43d2:	d0 40       	sbci	r29, 0x00	; 0
    43d4:	c9 51       	subi	r28, 0x19	; 25
    43d6:	df 4f       	sbci	r29, 0xFF	; 255
    43d8:	28 81       	ld	r18, Y
    43da:	39 81       	ldd	r19, Y+1	; 0x01
    43dc:	c7 5e       	subi	r28, 0xE7	; 231
    43de:	d0 40       	sbci	r29, 0x00	; 0
    43e0:	82 2b       	or	r24, r18
    43e2:	93 2b       	or	r25, r19
    43e4:	f2 95       	swap	r31
    43e6:	f1 70       	andi	r31, 0x01	; 1
    43e8:	c7 51       	subi	r28, 0x17	; 23
    43ea:	df 4f       	sbci	r29, 0xFF	; 255
    43ec:	f8 83       	st	Y, r31
    43ee:	c9 5e       	subi	r28, 0xE9	; 233
    43f0:	d0 40       	sbci	r29, 0x00	; 0
    43f2:	c6 51       	subi	r28, 0x16	; 22
    43f4:	df 4f       	sbci	r29, 0xFF	; 255
    43f6:	18 82       	st	Y, r1
    43f8:	ca 5e       	subi	r28, 0xEA	; 234
    43fa:	d0 40       	sbci	r29, 0x00	; 0
    43fc:	c7 51       	subi	r28, 0x17	; 23
    43fe:	df 4f       	sbci	r29, 0xFF	; 255
    4400:	28 81       	ld	r18, Y
    4402:	39 81       	ldd	r19, Y+1	; 0x01
    4404:	c9 5e       	subi	r28, 0xE9	; 233
    4406:	d0 40       	sbci	r29, 0x00	; 0
    4408:	22 0f       	add	r18, r18
    440a:	33 1f       	adc	r19, r19
    440c:	82 2b       	or	r24, r18
    440e:	93 2b       	or	r25, r19
    4410:	e5 fb       	bst	r30, 5
    4412:	ee 27       	eor	r30, r30
    4414:	e0 f9       	bld	r30, 0
    4416:	c5 51       	subi	r28, 0x15	; 21
    4418:	df 4f       	sbci	r29, 0xFF	; 255
    441a:	e8 83       	st	Y, r30
    441c:	cb 5e       	subi	r28, 0xEB	; 235
    441e:	d0 40       	sbci	r29, 0x00	; 0
    4420:	c4 51       	subi	r28, 0x14	; 20
    4422:	df 4f       	sbci	r29, 0xFF	; 255
    4424:	18 82       	st	Y, r1
    4426:	cc 5e       	subi	r28, 0xEC	; 236
    4428:	d0 40       	sbci	r29, 0x00	; 0
    442a:	c5 51       	subi	r28, 0x15	; 21
    442c:	df 4f       	sbci	r29, 0xFF	; 255
    442e:	28 81       	ld	r18, Y
    4430:	39 81       	ldd	r19, Y+1	; 0x01
    4432:	cb 5e       	subi	r28, 0xEB	; 235
    4434:	d0 40       	sbci	r29, 0x00	; 0
    4436:	22 0f       	add	r18, r18
    4438:	33 1f       	adc	r19, r19
    443a:	22 0f       	add	r18, r18
    443c:	33 1f       	adc	r19, r19
    443e:	22 0f       	add	r18, r18
    4440:	33 1f       	adc	r19, r19
    4442:	82 2b       	or	r24, r18
    4444:	93 2b       	or	r25, r19
    4446:	68 9f       	mul	r22, r24
    4448:	90 01       	movw	r18, r0
    444a:	69 9f       	mul	r22, r25
    444c:	30 0d       	add	r19, r0
    444e:	11 24       	eor	r1, r1
    4450:	f9 01       	movw	r30, r18
    4452:	ec 54       	subi	r30, 0x4C	; 76
    4454:	ff 4d       	sbci	r31, 0xDF	; 223
    4456:	27 85       	ldd	r18, Z+15	; 0x0f
    4458:	30 89       	ldd	r19, Z+16	; 0x10
    445a:	cb 51       	subi	r28, 0x1B	; 27
    445c:	df 4f       	sbci	r29, 0xFF	; 255
    445e:	88 81       	ld	r24, Y
    4460:	99 81       	ldd	r25, Y+1	; 0x01
    4462:	c5 5e       	subi	r28, 0xE5	; 229
    4464:	d0 40       	sbci	r29, 0x00	; 0
    4466:	28 2b       	or	r18, r24
    4468:	39 2b       	or	r19, r25
    446a:	72 9f       	mul	r23, r18
    446c:	c0 01       	movw	r24, r0
    446e:	73 9f       	mul	r23, r19
    4470:	90 0d       	add	r25, r0
    4472:	11 24       	eor	r1, r1
    4474:	90 93 8e 23 	sts	0x238E, r25
    4478:	a9 e7       	ldi	r26, 0x79	; 121
    447a:	b3 e2       	ldi	r27, 0x23	; 35
    447c:	9c 91       	ld	r25, X
    447e:	80 91 7a 23 	lds	r24, 0x237A
    4482:	90 93 8f 23 	sts	0x238F, r25
    4486:	80 93 90 23 	sts	0x2390, r24
    448a:	ee ef       	ldi	r30, 0xFE	; 254
    448c:	f3 e2       	ldi	r31, 0x23	; 35
    448e:	90 81       	ld	r25, Z
    4490:	80 91 ff 23 	lds	r24, 0x23FF
    4494:	90 93 91 23 	sts	0x2391, r25
    4498:	80 93 92 23 	sts	0x2392, r24
    449c:	a2 e1       	ldi	r26, 0x12	; 18
    449e:	b4 e2       	ldi	r27, 0x24	; 36
    44a0:	9c 91       	ld	r25, X
    44a2:	80 91 13 24 	lds	r24, 0x2413
    44a6:	90 93 93 23 	sts	0x2393, r25
    44aa:	80 93 94 23 	sts	0x2394, r24
    44ae:	eb ea       	ldi	r30, 0xAB	; 171
    44b0:	f3 e2       	ldi	r31, 0x23	; 35
    44b2:	90 81       	ld	r25, Z
    44b4:	80 91 ac 23 	lds	r24, 0x23AC
    44b8:	90 93 95 23 	sts	0x2395, r25
    44bc:	80 93 96 23 	sts	0x2396, r24
    44c0:	80 91 a7 20 	lds	r24, 0x20A7
    44c4:	90 91 a8 20 	lds	r25, 0x20A8
    44c8:	95 95       	asr	r25
    44ca:	87 95       	ror	r24
    44cc:	95 95       	asr	r25
    44ce:	87 95       	ror	r24
    44d0:	95 95       	asr	r25
    44d2:	87 95       	ror	r24
    44d4:	95 95       	asr	r25
    44d6:	87 95       	ror	r24
    44d8:	80 93 97 23 	sts	0x2397, r24
    44dc:	60 e2       	ldi	r22, 0x20	; 32
    44de:	70 e0       	ldi	r23, 0x00	; 0
    44e0:	87 e8       	ldi	r24, 0x87	; 135
    44e2:	93 e2       	ldi	r25, 0x23	; 35
    44e4:	0e 94 06 2b 	call	0x560c	; 0x560c <NRF24L01_L_Write_TX_Buf>
    44e8:	81 d7       	rcall	.+3842   	; 0x53ec <NRF24L01_L_RF_TX>
    44ea:	fa e0       	ldi	r31, 0x0A	; 10
    44ec:	fa 95       	dec	r31
    44ee:	f1 f7       	brne	.-4      	; 0x44ec <__stack+0x4ed>
    44f0:	00 c0       	rjmp	.+0      	; 0x44f2 <__stack+0x4f3>
    44f2:	0c 94 f8 11 	jmp	0x23f0	; 0x23f0 <main+0x208>

000044f6 <__vector_43>:
    44f6:	1f 92       	push	r1
    44f8:	0f 92       	push	r0
    44fa:	0f b6       	in	r0, 0x3f	; 63
    44fc:	0f 92       	push	r0
    44fe:	11 24       	eor	r1, r1
    4500:	08 b6       	in	r0, 0x38	; 56
    4502:	0f 92       	push	r0
    4504:	18 be       	out	0x38, r1	; 56
    4506:	09 b6       	in	r0, 0x39	; 57
    4508:	0f 92       	push	r0
    450a:	19 be       	out	0x39, r1	; 57
    450c:	0a b6       	in	r0, 0x3a	; 58
    450e:	0f 92       	push	r0
    4510:	1a be       	out	0x3a, r1	; 58
    4512:	0b b6       	in	r0, 0x3b	; 59
    4514:	0f 92       	push	r0
    4516:	1b be       	out	0x3b, r1	; 59
    4518:	2f 92       	push	r2
    451a:	3f 92       	push	r3
    451c:	4f 92       	push	r4
    451e:	5f 92       	push	r5
    4520:	7f 92       	push	r7
    4522:	8f 92       	push	r8
    4524:	9f 92       	push	r9
    4526:	af 92       	push	r10
    4528:	bf 92       	push	r11
    452a:	cf 92       	push	r12
    452c:	df 92       	push	r13
    452e:	ef 92       	push	r14
    4530:	ff 92       	push	r15
    4532:	0f 93       	push	r16
    4534:	1f 93       	push	r17
    4536:	2f 93       	push	r18
    4538:	3f 93       	push	r19
    453a:	4f 93       	push	r20
    453c:	5f 93       	push	r21
    453e:	6f 93       	push	r22
    4540:	7f 93       	push	r23
    4542:	8f 93       	push	r24
    4544:	9f 93       	push	r25
    4546:	af 93       	push	r26
    4548:	bf 93       	push	r27
    454a:	ef 93       	push	r30
    454c:	ff 93       	push	r31
    454e:	cf 93       	push	r28
    4550:	df 93       	push	r29
    4552:	cd b7       	in	r28, 0x3d	; 61
    4554:	de b7       	in	r29, 0x3e	; 62
    4556:	c4 55       	subi	r28, 0x54	; 84
    4558:	d1 09       	sbc	r29, r1
    455a:	cd bf       	out	0x3d, r28	; 61
    455c:	de bf       	out	0x3e, r29	; 62
    455e:	60 e7       	ldi	r22, 0x70	; 112
    4560:	87 e2       	ldi	r24, 0x27	; 39
    4562:	69 d7       	rcall	.+3794   	; 0x5436 <NRF24L01_L_WriteReg>
    4564:	78 2e       	mov	r7, r24
    4566:	86 ff       	sbrs	r24, 6
    4568:	f6 c3       	rjmp	.+2028   	; 0x4d56 <__vector_43+0x860>
    456a:	88 e0       	ldi	r24, 0x08	; 8
    456c:	e0 e6       	ldi	r30, 0x60	; 96
    456e:	f6 e0       	ldi	r31, 0x06	; 6
    4570:	87 83       	std	Z+7, r24	; 0x07
    4572:	60 e2       	ldi	r22, 0x20	; 32
    4574:	70 e0       	ldi	r23, 0x00	; 0
    4576:	87 e4       	ldi	r24, 0x47	; 71
    4578:	93 e2       	ldi	r25, 0x23	; 35
    457a:	b2 d7       	rcall	.+3940   	; 0x54e0 <NRF24L01_L_Read_RX_Buf>
    457c:	0f 2e       	mov	r0, r31
    457e:	f7 e4       	ldi	r31, 0x47	; 71
    4580:	8f 2e       	mov	r8, r31
    4582:	f3 e2       	ldi	r31, 0x23	; 35
    4584:	9f 2e       	mov	r9, r31
    4586:	f0 2d       	mov	r31, r0
    4588:	d4 01       	movw	r26, r8
    458a:	6d 91       	ld	r22, X+
    458c:	4d 01       	movw	r8, r26
    458e:	80 ea       	ldi	r24, 0xA0	; 160
    4590:	9a e0       	ldi	r25, 0x0A	; 10
    4592:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    4596:	b7 e6       	ldi	r27, 0x67	; 103
    4598:	8b 16       	cp	r8, r27
    459a:	b3 e2       	ldi	r27, 0x23	; 35
    459c:	9b 06       	cpc	r9, r27
    459e:	a1 f7       	brne	.-24     	; 0x4588 <__vector_43+0x92>
    45a0:	40 91 47 23 	lds	r20, 0x2347
    45a4:	e8 e0       	ldi	r30, 0x08	; 8
    45a6:	f6 e0       	ldi	r31, 0x06	; 6
    45a8:	70 81       	ld	r23, Z
    45aa:	60 81       	ld	r22, Z
    45ac:	20 81       	ld	r18, Z
    45ae:	50 81       	ld	r21, Z
    45b0:	84 2f       	mov	r24, r20
    45b2:	90 e0       	ldi	r25, 0x00	; 0
    45b4:	22 1f       	adc	r18, r18
    45b6:	22 27       	eor	r18, r18
    45b8:	22 1f       	adc	r18, r18
    45ba:	30 e0       	ldi	r19, 0x00	; 0
    45bc:	22 0f       	add	r18, r18
    45be:	33 1f       	adc	r19, r19
    45c0:	22 0f       	add	r18, r18
    45c2:	33 1f       	adc	r19, r19
    45c4:	76 fb       	bst	r23, 6
    45c6:	cc 24       	eor	r12, r12
    45c8:	c0 f8       	bld	r12, 0
    45ca:	d1 2c       	mov	r13, r1
    45cc:	c2 2a       	or	r12, r18
    45ce:	d3 2a       	or	r13, r19
    45d0:	64 fb       	bst	r22, 4
    45d2:	ee 24       	eor	r14, r14
    45d4:	e0 f8       	bld	r14, 0
    45d6:	f1 2c       	mov	r15, r1
    45d8:	ee 0c       	add	r14, r14
    45da:	ff 1c       	adc	r15, r15
    45dc:	ce 28       	or	r12, r14
    45de:	df 28       	or	r13, r15
    45e0:	55 fb       	bst	r21, 5
    45e2:	00 27       	eor	r16, r16
    45e4:	00 f9       	bld	r16, 0
    45e6:	10 e0       	ldi	r17, 0x00	; 0
    45e8:	98 01       	movw	r18, r16
    45ea:	22 0f       	add	r18, r18
    45ec:	33 1f       	adc	r19, r19
    45ee:	22 0f       	add	r18, r18
    45f0:	33 1f       	adc	r19, r19
    45f2:	22 0f       	add	r18, r18
    45f4:	33 1f       	adc	r19, r19
    45f6:	86 01       	movw	r16, r12
    45f8:	02 2b       	or	r16, r18
    45fa:	13 2b       	or	r17, r19
    45fc:	80 17       	cp	r24, r16
    45fe:	91 07       	cpc	r25, r17
    4600:	09 f0       	breq	.+2      	; 0x4604 <__vector_43+0x10e>
    4602:	a9 c3       	rjmp	.+1874   	; 0x4d56 <__vector_43+0x860>
    4604:	10 92 a9 20 	sts	0x20A9, r1
    4608:	10 92 aa 20 	sts	0x20AA, r1
    460c:	50 81       	ld	r21, Z
    460e:	30 81       	ld	r19, Z
    4610:	80 81       	ld	r24, Z
    4612:	20 81       	ld	r18, Z
    4614:	88 1f       	adc	r24, r24
    4616:	88 27       	eor	r24, r24
    4618:	88 1f       	adc	r24, r24
    461a:	90 e0       	ldi	r25, 0x00	; 0
    461c:	88 0f       	add	r24, r24
    461e:	99 1f       	adc	r25, r25
    4620:	88 0f       	add	r24, r24
    4622:	99 1f       	adc	r25, r25
    4624:	56 fb       	bst	r21, 6
    4626:	aa 24       	eor	r10, r10
    4628:	a0 f8       	bld	r10, 0
    462a:	b1 2c       	mov	r11, r1
    462c:	a8 2a       	or	r10, r24
    462e:	b9 2a       	or	r11, r25
    4630:	32 95       	swap	r19
    4632:	31 70       	andi	r19, 0x01	; 1
    4634:	39 83       	std	Y+1, r19	; 0x01
    4636:	1a 82       	std	Y+2, r1	; 0x02
    4638:	89 81       	ldd	r24, Y+1	; 0x01
    463a:	9a 81       	ldd	r25, Y+2	; 0x02
    463c:	88 0f       	add	r24, r24
    463e:	99 1f       	adc	r25, r25
    4640:	a8 2a       	or	r10, r24
    4642:	b9 2a       	or	r11, r25
    4644:	25 fb       	bst	r18, 5
    4646:	44 24       	eor	r4, r4
    4648:	40 f8       	bld	r4, 0
    464a:	51 2c       	mov	r5, r1
    464c:	c2 01       	movw	r24, r4
    464e:	88 0f       	add	r24, r24
    4650:	99 1f       	adc	r25, r25
    4652:	88 0f       	add	r24, r24
    4654:	99 1f       	adc	r25, r25
    4656:	88 0f       	add	r24, r24
    4658:	99 1f       	adc	r25, r25
    465a:	25 01       	movw	r4, r10
    465c:	48 2a       	or	r4, r24
    465e:	59 2a       	or	r5, r25
    4660:	57 e1       	ldi	r21, 0x17	; 23
    4662:	54 9d       	mul	r21, r4
    4664:	d0 01       	movw	r26, r0
    4666:	55 9d       	mul	r21, r5
    4668:	b0 0d       	add	r27, r0
    466a:	11 24       	eor	r1, r1
    466c:	ac 54       	subi	r26, 0x4C	; 76
    466e:	bf 4d       	sbci	r27, 0xDF	; 223
    4670:	4c 93       	st	X, r20
    4672:	40 81       	ld	r20, Z
    4674:	30 81       	ld	r19, Z
    4676:	80 81       	ld	r24, Z
    4678:	20 81       	ld	r18, Z
    467a:	88 1f       	adc	r24, r24
    467c:	88 27       	eor	r24, r24
    467e:	88 1f       	adc	r24, r24
    4680:	90 e0       	ldi	r25, 0x00	; 0
    4682:	88 0f       	add	r24, r24
    4684:	99 1f       	adc	r25, r25
    4686:	88 0f       	add	r24, r24
    4688:	99 1f       	adc	r25, r25
    468a:	46 fb       	bst	r20, 6
    468c:	22 24       	eor	r2, r2
    468e:	20 f8       	bld	r2, 0
    4690:	31 2c       	mov	r3, r1
    4692:	28 2a       	or	r2, r24
    4694:	39 2a       	or	r3, r25
    4696:	32 95       	swap	r19
    4698:	31 70       	andi	r19, 0x01	; 1
    469a:	3b 83       	std	Y+3, r19	; 0x03
    469c:	1c 82       	std	Y+4, r1	; 0x04
    469e:	8b 81       	ldd	r24, Y+3	; 0x03
    46a0:	9c 81       	ldd	r25, Y+4	; 0x04
    46a2:	88 0f       	add	r24, r24
    46a4:	99 1f       	adc	r25, r25
    46a6:	28 2a       	or	r2, r24
    46a8:	39 2a       	or	r3, r25
    46aa:	25 fb       	bst	r18, 5
    46ac:	22 27       	eor	r18, r18
    46ae:	20 f9       	bld	r18, 0
    46b0:	2d 83       	std	Y+5, r18	; 0x05
    46b2:	1e 82       	std	Y+6, r1	; 0x06
    46b4:	8d 81       	ldd	r24, Y+5	; 0x05
    46b6:	9e 81       	ldd	r25, Y+6	; 0x06
    46b8:	88 0f       	add	r24, r24
    46ba:	99 1f       	adc	r25, r25
    46bc:	88 0f       	add	r24, r24
    46be:	99 1f       	adc	r25, r25
    46c0:	88 0f       	add	r24, r24
    46c2:	99 1f       	adc	r25, r25
    46c4:	28 2a       	or	r2, r24
    46c6:	39 2a       	or	r3, r25
    46c8:	52 9d       	mul	r21, r2
    46ca:	d0 01       	movw	r26, r0
    46cc:	53 9d       	mul	r21, r3
    46ce:	b0 0d       	add	r27, r0
    46d0:	11 24       	eor	r1, r1
    46d2:	ac 54       	subi	r26, 0x4C	; 76
    46d4:	bf 4d       	sbci	r27, 0xDF	; 223
    46d6:	80 91 48 23 	lds	r24, 0x2348
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	11 96       	adiw	r26, 0x01	; 1
    46de:	8d 93       	st	X+, r24
    46e0:	9c 93       	st	X, r25
    46e2:	12 97       	sbiw	r26, 0x02	; 2
    46e4:	30 81       	ld	r19, Z
    46e6:	20 81       	ld	r18, Z
    46e8:	80 81       	ld	r24, Z
    46ea:	40 81       	ld	r20, Z
    46ec:	88 1f       	adc	r24, r24
    46ee:	88 27       	eor	r24, r24
    46f0:	88 1f       	adc	r24, r24
    46f2:	90 e0       	ldi	r25, 0x00	; 0
    46f4:	88 0f       	add	r24, r24
    46f6:	99 1f       	adc	r25, r25
    46f8:	88 0f       	add	r24, r24
    46fa:	99 1f       	adc	r25, r25
    46fc:	36 fb       	bst	r19, 6
    46fe:	33 27       	eor	r19, r19
    4700:	30 f9       	bld	r19, 0
    4702:	3f 83       	std	Y+7, r19	; 0x07
    4704:	18 86       	std	Y+8, r1	; 0x08
    4706:	6f 81       	ldd	r22, Y+7	; 0x07
    4708:	78 85       	ldd	r23, Y+8	; 0x08
    470a:	86 2b       	or	r24, r22
    470c:	97 2b       	or	r25, r23
    470e:	22 95       	swap	r18
    4710:	21 70       	andi	r18, 0x01	; 1
    4712:	29 87       	std	Y+9, r18	; 0x09
    4714:	1a 86       	std	Y+10, r1	; 0x0a
    4716:	29 85       	ldd	r18, Y+9	; 0x09
    4718:	3a 85       	ldd	r19, Y+10	; 0x0a
    471a:	22 0f       	add	r18, r18
    471c:	33 1f       	adc	r19, r19
    471e:	82 2b       	or	r24, r18
    4720:	93 2b       	or	r25, r19
    4722:	45 fb       	bst	r20, 5
    4724:	44 27       	eor	r20, r20
    4726:	40 f9       	bld	r20, 0
    4728:	4b 87       	std	Y+11, r20	; 0x0b
    472a:	1c 86       	std	Y+12, r1	; 0x0c
    472c:	2b 85       	ldd	r18, Y+11	; 0x0b
    472e:	3c 85       	ldd	r19, Y+12	; 0x0c
    4730:	22 0f       	add	r18, r18
    4732:	33 1f       	adc	r19, r19
    4734:	22 0f       	add	r18, r18
    4736:	33 1f       	adc	r19, r19
    4738:	22 0f       	add	r18, r18
    473a:	33 1f       	adc	r19, r19
    473c:	82 2b       	or	r24, r18
    473e:	93 2b       	or	r25, r19
    4740:	58 9f       	mul	r21, r24
    4742:	d0 01       	movw	r26, r0
    4744:	59 9f       	mul	r21, r25
    4746:	b0 0d       	add	r27, r0
    4748:	11 24       	eor	r1, r1
    474a:	ac 54       	subi	r26, 0x4C	; 76
    474c:	bf 4d       	sbci	r27, 0xDF	; 223
    474e:	80 91 49 23 	lds	r24, 0x2349
    4752:	90 e0       	ldi	r25, 0x00	; 0
    4754:	13 96       	adiw	r26, 0x03	; 3
    4756:	8d 93       	st	X+, r24
    4758:	9c 93       	st	X, r25
    475a:	14 97       	sbiw	r26, 0x04	; 4
    475c:	30 81       	ld	r19, Z
    475e:	20 81       	ld	r18, Z
    4760:	80 81       	ld	r24, Z
    4762:	40 81       	ld	r20, Z
    4764:	88 1f       	adc	r24, r24
    4766:	88 27       	eor	r24, r24
    4768:	88 1f       	adc	r24, r24
    476a:	90 e0       	ldi	r25, 0x00	; 0
    476c:	88 0f       	add	r24, r24
    476e:	99 1f       	adc	r25, r25
    4770:	88 0f       	add	r24, r24
    4772:	99 1f       	adc	r25, r25
    4774:	36 fb       	bst	r19, 6
    4776:	33 27       	eor	r19, r19
    4778:	30 f9       	bld	r19, 0
    477a:	3d 87       	std	Y+13, r19	; 0x0d
    477c:	1e 86       	std	Y+14, r1	; 0x0e
    477e:	ad 85       	ldd	r26, Y+13	; 0x0d
    4780:	be 85       	ldd	r27, Y+14	; 0x0e
    4782:	8a 2b       	or	r24, r26
    4784:	9b 2b       	or	r25, r27
    4786:	22 95       	swap	r18
    4788:	21 70       	andi	r18, 0x01	; 1
    478a:	2f 87       	std	Y+15, r18	; 0x0f
    478c:	18 8a       	std	Y+16, r1	; 0x10
    478e:	2f 85       	ldd	r18, Y+15	; 0x0f
    4790:	38 89       	ldd	r19, Y+16	; 0x10
    4792:	22 0f       	add	r18, r18
    4794:	33 1f       	adc	r19, r19
    4796:	82 2b       	or	r24, r18
    4798:	93 2b       	or	r25, r19
    479a:	45 fb       	bst	r20, 5
    479c:	44 27       	eor	r20, r20
    479e:	40 f9       	bld	r20, 0
    47a0:	49 8b       	std	Y+17, r20	; 0x11
    47a2:	1a 8a       	std	Y+18, r1	; 0x12
    47a4:	29 89       	ldd	r18, Y+17	; 0x11
    47a6:	3a 89       	ldd	r19, Y+18	; 0x12
    47a8:	22 0f       	add	r18, r18
    47aa:	33 1f       	adc	r19, r19
    47ac:	22 0f       	add	r18, r18
    47ae:	33 1f       	adc	r19, r19
    47b0:	22 0f       	add	r18, r18
    47b2:	33 1f       	adc	r19, r19
    47b4:	82 2b       	or	r24, r18
    47b6:	93 2b       	or	r25, r19
    47b8:	58 9f       	mul	r21, r24
    47ba:	d0 01       	movw	r26, r0
    47bc:	59 9f       	mul	r21, r25
    47be:	b0 0d       	add	r27, r0
    47c0:	11 24       	eor	r1, r1
    47c2:	ac 54       	subi	r26, 0x4C	; 76
    47c4:	bf 4d       	sbci	r27, 0xDF	; 223
    47c6:	80 91 4a 23 	lds	r24, 0x234A
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	15 96       	adiw	r26, 0x05	; 5
    47ce:	8d 93       	st	X+, r24
    47d0:	9c 93       	st	X, r25
    47d2:	16 97       	sbiw	r26, 0x06	; 6
    47d4:	30 81       	ld	r19, Z
    47d6:	20 81       	ld	r18, Z
    47d8:	80 81       	ld	r24, Z
    47da:	40 81       	ld	r20, Z
    47dc:	88 1f       	adc	r24, r24
    47de:	88 27       	eor	r24, r24
    47e0:	88 1f       	adc	r24, r24
    47e2:	90 e0       	ldi	r25, 0x00	; 0
    47e4:	88 0f       	add	r24, r24
    47e6:	99 1f       	adc	r25, r25
    47e8:	88 0f       	add	r24, r24
    47ea:	99 1f       	adc	r25, r25
    47ec:	36 fb       	bst	r19, 6
    47ee:	33 27       	eor	r19, r19
    47f0:	30 f9       	bld	r19, 0
    47f2:	3b 8b       	std	Y+19, r19	; 0x13
    47f4:	1c 8a       	std	Y+20, r1	; 0x14
    47f6:	6b 89       	ldd	r22, Y+19	; 0x13
    47f8:	7c 89       	ldd	r23, Y+20	; 0x14
    47fa:	86 2b       	or	r24, r22
    47fc:	97 2b       	or	r25, r23
    47fe:	22 95       	swap	r18
    4800:	21 70       	andi	r18, 0x01	; 1
    4802:	2d 8b       	std	Y+21, r18	; 0x15
    4804:	1e 8a       	std	Y+22, r1	; 0x16
    4806:	2d 89       	ldd	r18, Y+21	; 0x15
    4808:	3e 89       	ldd	r19, Y+22	; 0x16
    480a:	22 0f       	add	r18, r18
    480c:	33 1f       	adc	r19, r19
    480e:	82 2b       	or	r24, r18
    4810:	93 2b       	or	r25, r19
    4812:	45 fb       	bst	r20, 5
    4814:	44 27       	eor	r20, r20
    4816:	40 f9       	bld	r20, 0
    4818:	4f 8b       	std	Y+23, r20	; 0x17
    481a:	18 8e       	std	Y+24, r1	; 0x18
    481c:	2f 89       	ldd	r18, Y+23	; 0x17
    481e:	38 8d       	ldd	r19, Y+24	; 0x18
    4820:	22 0f       	add	r18, r18
    4822:	33 1f       	adc	r19, r19
    4824:	22 0f       	add	r18, r18
    4826:	33 1f       	adc	r19, r19
    4828:	22 0f       	add	r18, r18
    482a:	33 1f       	adc	r19, r19
    482c:	82 2b       	or	r24, r18
    482e:	93 2b       	or	r25, r19
    4830:	58 9f       	mul	r21, r24
    4832:	d0 01       	movw	r26, r0
    4834:	59 9f       	mul	r21, r25
    4836:	b0 0d       	add	r27, r0
    4838:	11 24       	eor	r1, r1
    483a:	ac 54       	subi	r26, 0x4C	; 76
    483c:	bf 4d       	sbci	r27, 0xDF	; 223
    483e:	80 91 4b 23 	lds	r24, 0x234B
    4842:	90 e0       	ldi	r25, 0x00	; 0
    4844:	17 96       	adiw	r26, 0x07	; 7
    4846:	8d 93       	st	X+, r24
    4848:	9c 93       	st	X, r25
    484a:	18 97       	sbiw	r26, 0x08	; 8
    484c:	30 81       	ld	r19, Z
    484e:	20 81       	ld	r18, Z
    4850:	80 81       	ld	r24, Z
    4852:	40 81       	ld	r20, Z
    4854:	88 1f       	adc	r24, r24
    4856:	88 27       	eor	r24, r24
    4858:	88 1f       	adc	r24, r24
    485a:	90 e0       	ldi	r25, 0x00	; 0
    485c:	88 0f       	add	r24, r24
    485e:	99 1f       	adc	r25, r25
    4860:	88 0f       	add	r24, r24
    4862:	99 1f       	adc	r25, r25
    4864:	36 fb       	bst	r19, 6
    4866:	33 27       	eor	r19, r19
    4868:	30 f9       	bld	r19, 0
    486a:	39 8f       	std	Y+25, r19	; 0x19
    486c:	1a 8e       	std	Y+26, r1	; 0x1a
    486e:	a9 8d       	ldd	r26, Y+25	; 0x19
    4870:	ba 8d       	ldd	r27, Y+26	; 0x1a
    4872:	8a 2b       	or	r24, r26
    4874:	9b 2b       	or	r25, r27
    4876:	22 95       	swap	r18
    4878:	21 70       	andi	r18, 0x01	; 1
    487a:	2b 8f       	std	Y+27, r18	; 0x1b
    487c:	1c 8e       	std	Y+28, r1	; 0x1c
    487e:	2b 8d       	ldd	r18, Y+27	; 0x1b
    4880:	3c 8d       	ldd	r19, Y+28	; 0x1c
    4882:	22 0f       	add	r18, r18
    4884:	33 1f       	adc	r19, r19
    4886:	82 2b       	or	r24, r18
    4888:	93 2b       	or	r25, r19
    488a:	45 fb       	bst	r20, 5
    488c:	44 27       	eor	r20, r20
    488e:	40 f9       	bld	r20, 0
    4890:	4d 8f       	std	Y+29, r20	; 0x1d
    4892:	1e 8e       	std	Y+30, r1	; 0x1e
    4894:	2d 8d       	ldd	r18, Y+29	; 0x1d
    4896:	3e 8d       	ldd	r19, Y+30	; 0x1e
    4898:	22 0f       	add	r18, r18
    489a:	33 1f       	adc	r19, r19
    489c:	22 0f       	add	r18, r18
    489e:	33 1f       	adc	r19, r19
    48a0:	22 0f       	add	r18, r18
    48a2:	33 1f       	adc	r19, r19
    48a4:	82 2b       	or	r24, r18
    48a6:	93 2b       	or	r25, r19
    48a8:	58 9f       	mul	r21, r24
    48aa:	d0 01       	movw	r26, r0
    48ac:	59 9f       	mul	r21, r25
    48ae:	b0 0d       	add	r27, r0
    48b0:	11 24       	eor	r1, r1
    48b2:	ac 54       	subi	r26, 0x4C	; 76
    48b4:	bf 4d       	sbci	r27, 0xDF	; 223
    48b6:	80 91 4c 23 	lds	r24, 0x234C
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	19 96       	adiw	r26, 0x09	; 9
    48be:	8d 93       	st	X+, r24
    48c0:	9c 93       	st	X, r25
    48c2:	1a 97       	sbiw	r26, 0x0a	; 10
    48c4:	30 81       	ld	r19, Z
    48c6:	20 81       	ld	r18, Z
    48c8:	80 81       	ld	r24, Z
    48ca:	40 81       	ld	r20, Z
    48cc:	88 1f       	adc	r24, r24
    48ce:	88 27       	eor	r24, r24
    48d0:	88 1f       	adc	r24, r24
    48d2:	90 e0       	ldi	r25, 0x00	; 0
    48d4:	88 0f       	add	r24, r24
    48d6:	99 1f       	adc	r25, r25
    48d8:	88 0f       	add	r24, r24
    48da:	99 1f       	adc	r25, r25
    48dc:	36 fb       	bst	r19, 6
    48de:	33 27       	eor	r19, r19
    48e0:	30 f9       	bld	r19, 0
    48e2:	3f 8f       	std	Y+31, r19	; 0x1f
    48e4:	18 a2       	std	Y+32, r1	; 0x20
    48e6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    48e8:	78 a1       	ldd	r23, Y+32	; 0x20
    48ea:	86 2b       	or	r24, r22
    48ec:	97 2b       	or	r25, r23
    48ee:	22 95       	swap	r18
    48f0:	21 70       	andi	r18, 0x01	; 1
    48f2:	29 a3       	std	Y+33, r18	; 0x21
    48f4:	1a a2       	std	Y+34, r1	; 0x22
    48f6:	29 a1       	ldd	r18, Y+33	; 0x21
    48f8:	3a a1       	ldd	r19, Y+34	; 0x22
    48fa:	22 0f       	add	r18, r18
    48fc:	33 1f       	adc	r19, r19
    48fe:	82 2b       	or	r24, r18
    4900:	93 2b       	or	r25, r19
    4902:	45 fb       	bst	r20, 5
    4904:	44 27       	eor	r20, r20
    4906:	40 f9       	bld	r20, 0
    4908:	4b a3       	std	Y+35, r20	; 0x23
    490a:	1c a2       	std	Y+36, r1	; 0x24
    490c:	2b a1       	ldd	r18, Y+35	; 0x23
    490e:	3c a1       	ldd	r19, Y+36	; 0x24
    4910:	22 0f       	add	r18, r18
    4912:	33 1f       	adc	r19, r19
    4914:	22 0f       	add	r18, r18
    4916:	33 1f       	adc	r19, r19
    4918:	22 0f       	add	r18, r18
    491a:	33 1f       	adc	r19, r19
    491c:	82 2b       	or	r24, r18
    491e:	93 2b       	or	r25, r19
    4920:	58 9f       	mul	r21, r24
    4922:	d0 01       	movw	r26, r0
    4924:	59 9f       	mul	r21, r25
    4926:	b0 0d       	add	r27, r0
    4928:	11 24       	eor	r1, r1
    492a:	ac 54       	subi	r26, 0x4C	; 76
    492c:	bf 4d       	sbci	r27, 0xDF	; 223
    492e:	80 91 4d 23 	lds	r24, 0x234D
    4932:	90 e0       	ldi	r25, 0x00	; 0
    4934:	1b 96       	adiw	r26, 0x0b	; 11
    4936:	8d 93       	st	X+, r24
    4938:	9c 93       	st	X, r25
    493a:	1c 97       	sbiw	r26, 0x0c	; 12
    493c:	30 81       	ld	r19, Z
    493e:	20 81       	ld	r18, Z
    4940:	80 81       	ld	r24, Z
    4942:	40 81       	ld	r20, Z
    4944:	88 1f       	adc	r24, r24
    4946:	88 27       	eor	r24, r24
    4948:	88 1f       	adc	r24, r24
    494a:	90 e0       	ldi	r25, 0x00	; 0
    494c:	88 0f       	add	r24, r24
    494e:	99 1f       	adc	r25, r25
    4950:	88 0f       	add	r24, r24
    4952:	99 1f       	adc	r25, r25
    4954:	36 fb       	bst	r19, 6
    4956:	33 27       	eor	r19, r19
    4958:	30 f9       	bld	r19, 0
    495a:	3d a3       	std	Y+37, r19	; 0x25
    495c:	1e a2       	std	Y+38, r1	; 0x26
    495e:	ad a1       	ldd	r26, Y+37	; 0x25
    4960:	be a1       	ldd	r27, Y+38	; 0x26
    4962:	8a 2b       	or	r24, r26
    4964:	9b 2b       	or	r25, r27
    4966:	22 95       	swap	r18
    4968:	21 70       	andi	r18, 0x01	; 1
    496a:	2f a3       	std	Y+39, r18	; 0x27
    496c:	18 a6       	std	Y+40, r1	; 0x28
    496e:	2f a1       	ldd	r18, Y+39	; 0x27
    4970:	38 a5       	ldd	r19, Y+40	; 0x28
    4972:	22 0f       	add	r18, r18
    4974:	33 1f       	adc	r19, r19
    4976:	82 2b       	or	r24, r18
    4978:	93 2b       	or	r25, r19
    497a:	45 fb       	bst	r20, 5
    497c:	44 27       	eor	r20, r20
    497e:	40 f9       	bld	r20, 0
    4980:	49 a7       	std	Y+41, r20	; 0x29
    4982:	1a a6       	std	Y+42, r1	; 0x2a
    4984:	29 a5       	ldd	r18, Y+41	; 0x29
    4986:	3a a5       	ldd	r19, Y+42	; 0x2a
    4988:	22 0f       	add	r18, r18
    498a:	33 1f       	adc	r19, r19
    498c:	22 0f       	add	r18, r18
    498e:	33 1f       	adc	r19, r19
    4990:	22 0f       	add	r18, r18
    4992:	33 1f       	adc	r19, r19
    4994:	82 2b       	or	r24, r18
    4996:	93 2b       	or	r25, r19
    4998:	58 9f       	mul	r21, r24
    499a:	d0 01       	movw	r26, r0
    499c:	59 9f       	mul	r21, r25
    499e:	b0 0d       	add	r27, r0
    49a0:	11 24       	eor	r1, r1
    49a2:	ac 54       	subi	r26, 0x4C	; 76
    49a4:	bf 4d       	sbci	r27, 0xDF	; 223
    49a6:	80 91 4e 23 	lds	r24, 0x234E
    49aa:	90 e0       	ldi	r25, 0x00	; 0
    49ac:	1d 96       	adiw	r26, 0x0d	; 13
    49ae:	8d 93       	st	X+, r24
    49b0:	9c 93       	st	X, r25
    49b2:	1e 97       	sbiw	r26, 0x0e	; 14
    49b4:	30 81       	ld	r19, Z
    49b6:	20 81       	ld	r18, Z
    49b8:	80 81       	ld	r24, Z
    49ba:	40 81       	ld	r20, Z
    49bc:	88 1f       	adc	r24, r24
    49be:	88 27       	eor	r24, r24
    49c0:	88 1f       	adc	r24, r24
    49c2:	90 e0       	ldi	r25, 0x00	; 0
    49c4:	88 0f       	add	r24, r24
    49c6:	99 1f       	adc	r25, r25
    49c8:	88 0f       	add	r24, r24
    49ca:	99 1f       	adc	r25, r25
    49cc:	36 fb       	bst	r19, 6
    49ce:	33 27       	eor	r19, r19
    49d0:	30 f9       	bld	r19, 0
    49d2:	3b a7       	std	Y+43, r19	; 0x2b
    49d4:	1c a6       	std	Y+44, r1	; 0x2c
    49d6:	6b a5       	ldd	r22, Y+43	; 0x2b
    49d8:	7c a5       	ldd	r23, Y+44	; 0x2c
    49da:	86 2b       	or	r24, r22
    49dc:	97 2b       	or	r25, r23
    49de:	22 95       	swap	r18
    49e0:	21 70       	andi	r18, 0x01	; 1
    49e2:	2d a7       	std	Y+45, r18	; 0x2d
    49e4:	1e a6       	std	Y+46, r1	; 0x2e
    49e6:	2d a5       	ldd	r18, Y+45	; 0x2d
    49e8:	3e a5       	ldd	r19, Y+46	; 0x2e
    49ea:	22 0f       	add	r18, r18
    49ec:	33 1f       	adc	r19, r19
    49ee:	82 2b       	or	r24, r18
    49f0:	93 2b       	or	r25, r19
    49f2:	45 fb       	bst	r20, 5
    49f4:	44 27       	eor	r20, r20
    49f6:	40 f9       	bld	r20, 0
    49f8:	4f a7       	std	Y+47, r20	; 0x2f
    49fa:	18 aa       	std	Y+48, r1	; 0x30
    49fc:	2f a5       	ldd	r18, Y+47	; 0x2f
    49fe:	38 a9       	ldd	r19, Y+48	; 0x30
    4a00:	22 0f       	add	r18, r18
    4a02:	33 1f       	adc	r19, r19
    4a04:	22 0f       	add	r18, r18
    4a06:	33 1f       	adc	r19, r19
    4a08:	22 0f       	add	r18, r18
    4a0a:	33 1f       	adc	r19, r19
    4a0c:	82 2b       	or	r24, r18
    4a0e:	93 2b       	or	r25, r19
    4a10:	58 9f       	mul	r21, r24
    4a12:	d0 01       	movw	r26, r0
    4a14:	59 9f       	mul	r21, r25
    4a16:	b0 0d       	add	r27, r0
    4a18:	11 24       	eor	r1, r1
    4a1a:	ac 54       	subi	r26, 0x4C	; 76
    4a1c:	bf 4d       	sbci	r27, 0xDF	; 223
    4a1e:	80 91 4f 23 	lds	r24, 0x234F
    4a22:	90 e0       	ldi	r25, 0x00	; 0
    4a24:	1f 96       	adiw	r26, 0x0f	; 15
    4a26:	8d 93       	st	X+, r24
    4a28:	9c 93       	st	X, r25
    4a2a:	50 97       	sbiw	r26, 0x10	; 16
    4a2c:	30 81       	ld	r19, Z
    4a2e:	20 81       	ld	r18, Z
    4a30:	80 81       	ld	r24, Z
    4a32:	40 81       	ld	r20, Z
    4a34:	88 1f       	adc	r24, r24
    4a36:	88 27       	eor	r24, r24
    4a38:	88 1f       	adc	r24, r24
    4a3a:	90 e0       	ldi	r25, 0x00	; 0
    4a3c:	88 0f       	add	r24, r24
    4a3e:	99 1f       	adc	r25, r25
    4a40:	88 0f       	add	r24, r24
    4a42:	99 1f       	adc	r25, r25
    4a44:	36 fb       	bst	r19, 6
    4a46:	33 27       	eor	r19, r19
    4a48:	30 f9       	bld	r19, 0
    4a4a:	39 ab       	std	Y+49, r19	; 0x31
    4a4c:	1a aa       	std	Y+50, r1	; 0x32
    4a4e:	a9 a9       	ldd	r26, Y+49	; 0x31
    4a50:	ba a9       	ldd	r27, Y+50	; 0x32
    4a52:	8a 2b       	or	r24, r26
    4a54:	9b 2b       	or	r25, r27
    4a56:	22 95       	swap	r18
    4a58:	21 70       	andi	r18, 0x01	; 1
    4a5a:	2b ab       	std	Y+51, r18	; 0x33
    4a5c:	1c aa       	std	Y+52, r1	; 0x34
    4a5e:	2b a9       	ldd	r18, Y+51	; 0x33
    4a60:	3c a9       	ldd	r19, Y+52	; 0x34
    4a62:	22 0f       	add	r18, r18
    4a64:	33 1f       	adc	r19, r19
    4a66:	82 2b       	or	r24, r18
    4a68:	93 2b       	or	r25, r19
    4a6a:	45 fb       	bst	r20, 5
    4a6c:	44 27       	eor	r20, r20
    4a6e:	40 f9       	bld	r20, 0
    4a70:	4d ab       	std	Y+53, r20	; 0x35
    4a72:	1e aa       	std	Y+54, r1	; 0x36
    4a74:	2d a9       	ldd	r18, Y+53	; 0x35
    4a76:	3e a9       	ldd	r19, Y+54	; 0x36
    4a78:	22 0f       	add	r18, r18
    4a7a:	33 1f       	adc	r19, r19
    4a7c:	22 0f       	add	r18, r18
    4a7e:	33 1f       	adc	r19, r19
    4a80:	22 0f       	add	r18, r18
    4a82:	33 1f       	adc	r19, r19
    4a84:	82 2b       	or	r24, r18
    4a86:	93 2b       	or	r25, r19
    4a88:	58 9f       	mul	r21, r24
    4a8a:	d0 01       	movw	r26, r0
    4a8c:	59 9f       	mul	r21, r25
    4a8e:	b0 0d       	add	r27, r0
    4a90:	11 24       	eor	r1, r1
    4a92:	ac 54       	subi	r26, 0x4C	; 76
    4a94:	bf 4d       	sbci	r27, 0xDF	; 223
    4a96:	80 91 50 23 	lds	r24, 0x2350
    4a9a:	51 96       	adiw	r26, 0x11	; 17
    4a9c:	8c 93       	st	X, r24
    4a9e:	30 81       	ld	r19, Z
    4aa0:	20 81       	ld	r18, Z
    4aa2:	80 81       	ld	r24, Z
    4aa4:	40 81       	ld	r20, Z
    4aa6:	88 1f       	adc	r24, r24
    4aa8:	88 27       	eor	r24, r24
    4aaa:	88 1f       	adc	r24, r24
    4aac:	90 e0       	ldi	r25, 0x00	; 0
    4aae:	88 0f       	add	r24, r24
    4ab0:	99 1f       	adc	r25, r25
    4ab2:	88 0f       	add	r24, r24
    4ab4:	99 1f       	adc	r25, r25
    4ab6:	36 fb       	bst	r19, 6
    4ab8:	33 27       	eor	r19, r19
    4aba:	30 f9       	bld	r19, 0
    4abc:	3f ab       	std	Y+55, r19	; 0x37
    4abe:	18 ae       	std	Y+56, r1	; 0x38
    4ac0:	6f a9       	ldd	r22, Y+55	; 0x37
    4ac2:	78 ad       	ldd	r23, Y+56	; 0x38
    4ac4:	86 2b       	or	r24, r22
    4ac6:	97 2b       	or	r25, r23
    4ac8:	22 95       	swap	r18
    4aca:	21 70       	andi	r18, 0x01	; 1
    4acc:	29 af       	std	Y+57, r18	; 0x39
    4ace:	1a ae       	std	Y+58, r1	; 0x3a
    4ad0:	29 ad       	ldd	r18, Y+57	; 0x39
    4ad2:	3a ad       	ldd	r19, Y+58	; 0x3a
    4ad4:	22 0f       	add	r18, r18
    4ad6:	33 1f       	adc	r19, r19
    4ad8:	82 2b       	or	r24, r18
    4ada:	93 2b       	or	r25, r19
    4adc:	45 fb       	bst	r20, 5
    4ade:	44 27       	eor	r20, r20
    4ae0:	40 f9       	bld	r20, 0
    4ae2:	4b af       	std	Y+59, r20	; 0x3b
    4ae4:	1c ae       	std	Y+60, r1	; 0x3c
    4ae6:	2b ad       	ldd	r18, Y+59	; 0x3b
    4ae8:	3c ad       	ldd	r19, Y+60	; 0x3c
    4aea:	22 0f       	add	r18, r18
    4aec:	33 1f       	adc	r19, r19
    4aee:	22 0f       	add	r18, r18
    4af0:	33 1f       	adc	r19, r19
    4af2:	22 0f       	add	r18, r18
    4af4:	33 1f       	adc	r19, r19
    4af6:	82 2b       	or	r24, r18
    4af8:	93 2b       	or	r25, r19
    4afa:	58 9f       	mul	r21, r24
    4afc:	d0 01       	movw	r26, r0
    4afe:	59 9f       	mul	r21, r25
    4b00:	b0 0d       	add	r27, r0
    4b02:	11 24       	eor	r1, r1
    4b04:	ac 54       	subi	r26, 0x4C	; 76
    4b06:	bf 4d       	sbci	r27, 0xDF	; 223
    4b08:	80 91 51 23 	lds	r24, 0x2351
    4b0c:	52 96       	adiw	r26, 0x12	; 18
    4b0e:	8c 93       	st	X, r24
    4b10:	30 81       	ld	r19, Z
    4b12:	20 81       	ld	r18, Z
    4b14:	80 81       	ld	r24, Z
    4b16:	40 81       	ld	r20, Z
    4b18:	88 1f       	adc	r24, r24
    4b1a:	88 27       	eor	r24, r24
    4b1c:	88 1f       	adc	r24, r24
    4b1e:	90 e0       	ldi	r25, 0x00	; 0
    4b20:	88 0f       	add	r24, r24
    4b22:	99 1f       	adc	r25, r25
    4b24:	88 0f       	add	r24, r24
    4b26:	99 1f       	adc	r25, r25
    4b28:	36 fb       	bst	r19, 6
    4b2a:	33 27       	eor	r19, r19
    4b2c:	30 f9       	bld	r19, 0
    4b2e:	3d af       	std	Y+61, r19	; 0x3d
    4b30:	1e ae       	std	Y+62, r1	; 0x3e
    4b32:	ad ad       	ldd	r26, Y+61	; 0x3d
    4b34:	be ad       	ldd	r27, Y+62	; 0x3e
    4b36:	8a 2b       	or	r24, r26
    4b38:	9b 2b       	or	r25, r27
    4b3a:	22 95       	swap	r18
    4b3c:	21 70       	andi	r18, 0x01	; 1
    4b3e:	2f af       	std	Y+63, r18	; 0x3f
    4b40:	21 96       	adiw	r28, 0x01	; 1
    4b42:	1f ae       	std	Y+63, r1	; 0x3f
    4b44:	21 97       	sbiw	r28, 0x01	; 1
    4b46:	21 96       	adiw	r28, 0x01	; 1
    4b48:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b4a:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b4c:	21 97       	sbiw	r28, 0x01	; 1
    4b4e:	22 0f       	add	r18, r18
    4b50:	33 1f       	adc	r19, r19
    4b52:	82 2b       	or	r24, r18
    4b54:	93 2b       	or	r25, r19
    4b56:	45 fb       	bst	r20, 5
    4b58:	44 27       	eor	r20, r20
    4b5a:	40 f9       	bld	r20, 0
    4b5c:	22 96       	adiw	r28, 0x02	; 2
    4b5e:	4f af       	std	Y+63, r20	; 0x3f
    4b60:	22 97       	sbiw	r28, 0x02	; 2
    4b62:	23 96       	adiw	r28, 0x03	; 3
    4b64:	1f ae       	std	Y+63, r1	; 0x3f
    4b66:	23 97       	sbiw	r28, 0x03	; 3
    4b68:	23 96       	adiw	r28, 0x03	; 3
    4b6a:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b6c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b6e:	23 97       	sbiw	r28, 0x03	; 3
    4b70:	22 0f       	add	r18, r18
    4b72:	33 1f       	adc	r19, r19
    4b74:	22 0f       	add	r18, r18
    4b76:	33 1f       	adc	r19, r19
    4b78:	22 0f       	add	r18, r18
    4b7a:	33 1f       	adc	r19, r19
    4b7c:	82 2b       	or	r24, r18
    4b7e:	93 2b       	or	r25, r19
    4b80:	58 9f       	mul	r21, r24
    4b82:	d0 01       	movw	r26, r0
    4b84:	59 9f       	mul	r21, r25
    4b86:	b0 0d       	add	r27, r0
    4b88:	11 24       	eor	r1, r1
    4b8a:	ac 54       	subi	r26, 0x4C	; 76
    4b8c:	bf 4d       	sbci	r27, 0xDF	; 223
    4b8e:	80 91 52 23 	lds	r24, 0x2352
    4b92:	53 96       	adiw	r26, 0x13	; 19
    4b94:	8c 93       	st	X, r24
    4b96:	30 81       	ld	r19, Z
    4b98:	20 81       	ld	r18, Z
    4b9a:	80 81       	ld	r24, Z
    4b9c:	40 81       	ld	r20, Z
    4b9e:	88 1f       	adc	r24, r24
    4ba0:	88 27       	eor	r24, r24
    4ba2:	88 1f       	adc	r24, r24
    4ba4:	90 e0       	ldi	r25, 0x00	; 0
    4ba6:	88 0f       	add	r24, r24
    4ba8:	99 1f       	adc	r25, r25
    4baa:	88 0f       	add	r24, r24
    4bac:	99 1f       	adc	r25, r25
    4bae:	36 fb       	bst	r19, 6
    4bb0:	33 27       	eor	r19, r19
    4bb2:	30 f9       	bld	r19, 0
    4bb4:	24 96       	adiw	r28, 0x04	; 4
    4bb6:	3f af       	std	Y+63, r19	; 0x3f
    4bb8:	24 97       	sbiw	r28, 0x04	; 4
    4bba:	25 96       	adiw	r28, 0x05	; 5
    4bbc:	1f ae       	std	Y+63, r1	; 0x3f
    4bbe:	25 97       	sbiw	r28, 0x05	; 5
    4bc0:	25 96       	adiw	r28, 0x05	; 5
    4bc2:	6e ad       	ldd	r22, Y+62	; 0x3e
    4bc4:	7f ad       	ldd	r23, Y+63	; 0x3f
    4bc6:	25 97       	sbiw	r28, 0x05	; 5
    4bc8:	86 2b       	or	r24, r22
    4bca:	97 2b       	or	r25, r23
    4bcc:	22 95       	swap	r18
    4bce:	21 70       	andi	r18, 0x01	; 1
    4bd0:	26 96       	adiw	r28, 0x06	; 6
    4bd2:	2f af       	std	Y+63, r18	; 0x3f
    4bd4:	26 97       	sbiw	r28, 0x06	; 6
    4bd6:	27 96       	adiw	r28, 0x07	; 7
    4bd8:	1f ae       	std	Y+63, r1	; 0x3f
    4bda:	27 97       	sbiw	r28, 0x07	; 7
    4bdc:	27 96       	adiw	r28, 0x07	; 7
    4bde:	2e ad       	ldd	r18, Y+62	; 0x3e
    4be0:	3f ad       	ldd	r19, Y+63	; 0x3f
    4be2:	27 97       	sbiw	r28, 0x07	; 7
    4be4:	22 0f       	add	r18, r18
    4be6:	33 1f       	adc	r19, r19
    4be8:	82 2b       	or	r24, r18
    4bea:	93 2b       	or	r25, r19
    4bec:	45 fb       	bst	r20, 5
    4bee:	44 27       	eor	r20, r20
    4bf0:	40 f9       	bld	r20, 0
    4bf2:	28 96       	adiw	r28, 0x08	; 8
    4bf4:	4f af       	std	Y+63, r20	; 0x3f
    4bf6:	28 97       	sbiw	r28, 0x08	; 8
    4bf8:	29 96       	adiw	r28, 0x09	; 9
    4bfa:	1f ae       	std	Y+63, r1	; 0x3f
    4bfc:	29 97       	sbiw	r28, 0x09	; 9
    4bfe:	29 96       	adiw	r28, 0x09	; 9
    4c00:	2e ad       	ldd	r18, Y+62	; 0x3e
    4c02:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c04:	29 97       	sbiw	r28, 0x09	; 9
    4c06:	22 0f       	add	r18, r18
    4c08:	33 1f       	adc	r19, r19
    4c0a:	22 0f       	add	r18, r18
    4c0c:	33 1f       	adc	r19, r19
    4c0e:	22 0f       	add	r18, r18
    4c10:	33 1f       	adc	r19, r19
    4c12:	82 2b       	or	r24, r18
    4c14:	93 2b       	or	r25, r19
    4c16:	58 9f       	mul	r21, r24
    4c18:	d0 01       	movw	r26, r0
    4c1a:	59 9f       	mul	r21, r25
    4c1c:	b0 0d       	add	r27, r0
    4c1e:	11 24       	eor	r1, r1
    4c20:	ac 54       	subi	r26, 0x4C	; 76
    4c22:	bf 4d       	sbci	r27, 0xDF	; 223
    4c24:	80 91 53 23 	lds	r24, 0x2353
    4c28:	54 96       	adiw	r26, 0x14	; 20
    4c2a:	8c 93       	st	X, r24
    4c2c:	30 81       	ld	r19, Z
    4c2e:	20 81       	ld	r18, Z
    4c30:	80 81       	ld	r24, Z
    4c32:	40 81       	ld	r20, Z
    4c34:	88 1f       	adc	r24, r24
    4c36:	88 27       	eor	r24, r24
    4c38:	88 1f       	adc	r24, r24
    4c3a:	90 e0       	ldi	r25, 0x00	; 0
    4c3c:	88 0f       	add	r24, r24
    4c3e:	99 1f       	adc	r25, r25
    4c40:	88 0f       	add	r24, r24
    4c42:	99 1f       	adc	r25, r25
    4c44:	36 fb       	bst	r19, 6
    4c46:	33 27       	eor	r19, r19
    4c48:	30 f9       	bld	r19, 0
    4c4a:	2a 96       	adiw	r28, 0x0a	; 10
    4c4c:	3f af       	std	Y+63, r19	; 0x3f
    4c4e:	2a 97       	sbiw	r28, 0x0a	; 10
    4c50:	2b 96       	adiw	r28, 0x0b	; 11
    4c52:	1f ae       	std	Y+63, r1	; 0x3f
    4c54:	2b 97       	sbiw	r28, 0x0b	; 11
    4c56:	2b 96       	adiw	r28, 0x0b	; 11
    4c58:	ae ad       	ldd	r26, Y+62	; 0x3e
    4c5a:	bf ad       	ldd	r27, Y+63	; 0x3f
    4c5c:	2b 97       	sbiw	r28, 0x0b	; 11
    4c5e:	8a 2b       	or	r24, r26
    4c60:	9b 2b       	or	r25, r27
    4c62:	22 95       	swap	r18
    4c64:	21 70       	andi	r18, 0x01	; 1
    4c66:	2c 96       	adiw	r28, 0x0c	; 12
    4c68:	2f af       	std	Y+63, r18	; 0x3f
    4c6a:	2c 97       	sbiw	r28, 0x0c	; 12
    4c6c:	2d 96       	adiw	r28, 0x0d	; 13
    4c6e:	1f ae       	std	Y+63, r1	; 0x3f
    4c70:	2d 97       	sbiw	r28, 0x0d	; 13
    4c72:	2d 96       	adiw	r28, 0x0d	; 13
    4c74:	2e ad       	ldd	r18, Y+62	; 0x3e
    4c76:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c78:	2d 97       	sbiw	r28, 0x0d	; 13
    4c7a:	22 0f       	add	r18, r18
    4c7c:	33 1f       	adc	r19, r19
    4c7e:	82 2b       	or	r24, r18
    4c80:	93 2b       	or	r25, r19
    4c82:	45 fb       	bst	r20, 5
    4c84:	44 27       	eor	r20, r20
    4c86:	40 f9       	bld	r20, 0
    4c88:	2e 96       	adiw	r28, 0x0e	; 14
    4c8a:	4f af       	std	Y+63, r20	; 0x3f
    4c8c:	2e 97       	sbiw	r28, 0x0e	; 14
    4c8e:	2f 96       	adiw	r28, 0x0f	; 15
    4c90:	1f ae       	std	Y+63, r1	; 0x3f
    4c92:	2f 97       	sbiw	r28, 0x0f	; 15
    4c94:	2f 96       	adiw	r28, 0x0f	; 15
    4c96:	2e ad       	ldd	r18, Y+62	; 0x3e
    4c98:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c9a:	2f 97       	sbiw	r28, 0x0f	; 15
    4c9c:	22 0f       	add	r18, r18
    4c9e:	33 1f       	adc	r19, r19
    4ca0:	22 0f       	add	r18, r18
    4ca2:	33 1f       	adc	r19, r19
    4ca4:	22 0f       	add	r18, r18
    4ca6:	33 1f       	adc	r19, r19
    4ca8:	82 2b       	or	r24, r18
    4caa:	93 2b       	or	r25, r19
    4cac:	58 9f       	mul	r21, r24
    4cae:	d0 01       	movw	r26, r0
    4cb0:	59 9f       	mul	r21, r25
    4cb2:	b0 0d       	add	r27, r0
    4cb4:	11 24       	eor	r1, r1
    4cb6:	ac 54       	subi	r26, 0x4C	; 76
    4cb8:	bf 4d       	sbci	r27, 0xDF	; 223
    4cba:	80 91 54 23 	lds	r24, 0x2354
    4cbe:	55 96       	adiw	r26, 0x15	; 21
    4cc0:	8c 93       	st	X, r24
    4cc2:	30 81       	ld	r19, Z
    4cc4:	20 81       	ld	r18, Z
    4cc6:	80 81       	ld	r24, Z
    4cc8:	40 81       	ld	r20, Z
    4cca:	88 1f       	adc	r24, r24
    4ccc:	88 27       	eor	r24, r24
    4cce:	88 1f       	adc	r24, r24
    4cd0:	90 e0       	ldi	r25, 0x00	; 0
    4cd2:	88 0f       	add	r24, r24
    4cd4:	99 1f       	adc	r25, r25
    4cd6:	88 0f       	add	r24, r24
    4cd8:	99 1f       	adc	r25, r25
    4cda:	36 fb       	bst	r19, 6
    4cdc:	33 27       	eor	r19, r19
    4cde:	30 f9       	bld	r19, 0
    4ce0:	60 96       	adiw	r28, 0x10	; 16
    4ce2:	3f af       	std	Y+63, r19	; 0x3f
    4ce4:	60 97       	sbiw	r28, 0x10	; 16
    4ce6:	61 96       	adiw	r28, 0x11	; 17
    4ce8:	1f ae       	std	Y+63, r1	; 0x3f
    4cea:	61 97       	sbiw	r28, 0x11	; 17
    4cec:	61 96       	adiw	r28, 0x11	; 17
    4cee:	ee ad       	ldd	r30, Y+62	; 0x3e
    4cf0:	ff ad       	ldd	r31, Y+63	; 0x3f
    4cf2:	61 97       	sbiw	r28, 0x11	; 17
    4cf4:	8e 2b       	or	r24, r30
    4cf6:	9f 2b       	or	r25, r31
    4cf8:	22 95       	swap	r18
    4cfa:	21 70       	andi	r18, 0x01	; 1
    4cfc:	62 96       	adiw	r28, 0x12	; 18
    4cfe:	2f af       	std	Y+63, r18	; 0x3f
    4d00:	62 97       	sbiw	r28, 0x12	; 18
    4d02:	63 96       	adiw	r28, 0x13	; 19
    4d04:	1f ae       	std	Y+63, r1	; 0x3f
    4d06:	63 97       	sbiw	r28, 0x13	; 19
    4d08:	63 96       	adiw	r28, 0x13	; 19
    4d0a:	2e ad       	ldd	r18, Y+62	; 0x3e
    4d0c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d0e:	63 97       	sbiw	r28, 0x13	; 19
    4d10:	22 0f       	add	r18, r18
    4d12:	33 1f       	adc	r19, r19
    4d14:	82 2b       	or	r24, r18
    4d16:	93 2b       	or	r25, r19
    4d18:	45 fb       	bst	r20, 5
    4d1a:	44 27       	eor	r20, r20
    4d1c:	40 f9       	bld	r20, 0
    4d1e:	64 96       	adiw	r28, 0x14	; 20
    4d20:	4f af       	std	Y+63, r20	; 0x3f
    4d22:	64 97       	sbiw	r28, 0x14	; 20
    4d24:	65 96       	adiw	r28, 0x15	; 21
    4d26:	1f ae       	std	Y+63, r1	; 0x3f
    4d28:	65 97       	sbiw	r28, 0x15	; 21
    4d2a:	65 96       	adiw	r28, 0x15	; 21
    4d2c:	2e ad       	ldd	r18, Y+62	; 0x3e
    4d2e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d30:	65 97       	sbiw	r28, 0x15	; 21
    4d32:	22 0f       	add	r18, r18
    4d34:	33 1f       	adc	r19, r19
    4d36:	22 0f       	add	r18, r18
    4d38:	33 1f       	adc	r19, r19
    4d3a:	22 0f       	add	r18, r18
    4d3c:	33 1f       	adc	r19, r19
    4d3e:	82 2b       	or	r24, r18
    4d40:	93 2b       	or	r25, r19
    4d42:	58 9f       	mul	r21, r24
    4d44:	f0 01       	movw	r30, r0
    4d46:	59 9f       	mul	r21, r25
    4d48:	f0 0d       	add	r31, r0
    4d4a:	11 24       	eor	r1, r1
    4d4c:	ec 54       	subi	r30, 0x4C	; 76
    4d4e:	ff 4d       	sbci	r31, 0xDF	; 223
    4d50:	80 91 55 23 	lds	r24, 0x2355
    4d54:	86 8b       	std	Z+22, r24	; 0x16
    4d56:	75 fe       	sbrs	r7, 5
    4d58:	04 c0       	rjmp	.+8      	; 0x4d62 <__vector_43+0x86c>
    4d5a:	80 e2       	ldi	r24, 0x20	; 32
    4d5c:	e0 e6       	ldi	r30, 0x60	; 96
    4d5e:	f6 e0       	ldi	r31, 0x06	; 6
    4d60:	87 83       	std	Z+7, r24	; 0x07
    4d62:	74 fe       	sbrs	r7, 4
    4d64:	05 c0       	rjmp	.+10     	; 0x4d70 <__vector_43+0x87a>
    4d66:	84 e0       	ldi	r24, 0x04	; 4
    4d68:	e0 e6       	ldi	r30, 0x60	; 96
    4d6a:	f6 e0       	ldi	r31, 0x06	; 6
    4d6c:	87 83       	std	Z+7, r24	; 0x07
    4d6e:	53 d4       	rcall	.+2214   	; 0x5616 <NRF24L01_L_Flush_TX>
    4d70:	cc 5a       	subi	r28, 0xAC	; 172
    4d72:	df 4f       	sbci	r29, 0xFF	; 255
    4d74:	cd bf       	out	0x3d, r28	; 61
    4d76:	de bf       	out	0x3e, r29	; 62
    4d78:	df 91       	pop	r29
    4d7a:	cf 91       	pop	r28
    4d7c:	ff 91       	pop	r31
    4d7e:	ef 91       	pop	r30
    4d80:	bf 91       	pop	r27
    4d82:	af 91       	pop	r26
    4d84:	9f 91       	pop	r25
    4d86:	8f 91       	pop	r24
    4d88:	7f 91       	pop	r23
    4d8a:	6f 91       	pop	r22
    4d8c:	5f 91       	pop	r21
    4d8e:	4f 91       	pop	r20
    4d90:	3f 91       	pop	r19
    4d92:	2f 91       	pop	r18
    4d94:	1f 91       	pop	r17
    4d96:	0f 91       	pop	r16
    4d98:	ff 90       	pop	r15
    4d9a:	ef 90       	pop	r14
    4d9c:	df 90       	pop	r13
    4d9e:	cf 90       	pop	r12
    4da0:	bf 90       	pop	r11
    4da2:	af 90       	pop	r10
    4da4:	9f 90       	pop	r9
    4da6:	8f 90       	pop	r8
    4da8:	7f 90       	pop	r7
    4daa:	5f 90       	pop	r5
    4dac:	4f 90       	pop	r4
    4dae:	3f 90       	pop	r3
    4db0:	2f 90       	pop	r2
    4db2:	0f 90       	pop	r0
    4db4:	0b be       	out	0x3b, r0	; 59
    4db6:	0f 90       	pop	r0
    4db8:	0a be       	out	0x3a, r0	; 58
    4dba:	0f 90       	pop	r0
    4dbc:	09 be       	out	0x39, r0	; 57
    4dbe:	0f 90       	pop	r0
    4dc0:	08 be       	out	0x38, r0	; 56
    4dc2:	0f 90       	pop	r0
    4dc4:	0f be       	out	0x3f, r0	; 63
    4dc6:	0f 90       	pop	r0
    4dc8:	1f 90       	pop	r1
    4dca:	18 95       	reti

00004dcc <__vector_77>:
    4dcc:	1f 92       	push	r1
    4dce:	0f 92       	push	r0
    4dd0:	0f b6       	in	r0, 0x3f	; 63
    4dd2:	0f 92       	push	r0
    4dd4:	11 24       	eor	r1, r1
    4dd6:	08 b6       	in	r0, 0x38	; 56
    4dd8:	0f 92       	push	r0
    4dda:	18 be       	out	0x38, r1	; 56
    4ddc:	09 b6       	in	r0, 0x39	; 57
    4dde:	0f 92       	push	r0
    4de0:	19 be       	out	0x39, r1	; 57
    4de2:	0a b6       	in	r0, 0x3a	; 58
    4de4:	0f 92       	push	r0
    4de6:	1a be       	out	0x3a, r1	; 58
    4de8:	0b b6       	in	r0, 0x3b	; 59
    4dea:	0f 92       	push	r0
    4dec:	1b be       	out	0x3b, r1	; 59
    4dee:	af 92       	push	r10
    4df0:	bf 92       	push	r11
    4df2:	df 92       	push	r13
    4df4:	ef 92       	push	r14
    4df6:	ff 92       	push	r15
    4df8:	0f 93       	push	r16
    4dfa:	1f 93       	push	r17
    4dfc:	2f 93       	push	r18
    4dfe:	3f 93       	push	r19
    4e00:	4f 93       	push	r20
    4e02:	5f 93       	push	r21
    4e04:	6f 93       	push	r22
    4e06:	7f 93       	push	r23
    4e08:	8f 93       	push	r24
    4e0a:	9f 93       	push	r25
    4e0c:	af 93       	push	r26
    4e0e:	bf 93       	push	r27
    4e10:	cf 93       	push	r28
    4e12:	df 93       	push	r29
    4e14:	ef 93       	push	r30
    4e16:	ff 93       	push	r31
    4e18:	a8 95       	wdr
    4e1a:	80 91 6b 23 	lds	r24, 0x236B
    4e1e:	8f 5f       	subi	r24, 0xFF	; 255
    4e20:	80 93 6b 23 	sts	0x236B, r24
    4e24:	84 31       	cpi	r24, 0x14	; 20
    4e26:	74 f0       	brlt	.+28     	; 0x4e44 <__vector_77+0x78>
    4e28:	81 e0       	ldi	r24, 0x01	; 1
    4e2a:	80 93 9e 20 	sts	0x209E, r24
    4e2e:	10 92 6b 23 	sts	0x236B, r1
    4e32:	80 91 a3 20 	lds	r24, 0x20A3
    4e36:	90 91 a4 20 	lds	r25, 0x20A4
    4e3a:	01 96       	adiw	r24, 0x01	; 1
    4e3c:	80 93 a3 20 	sts	0x20A3, r24
    4e40:	90 93 a4 20 	sts	0x20A4, r25
    4e44:	80 91 9f 20 	lds	r24, 0x209F
    4e48:	90 91 a0 20 	lds	r25, 0x20A0
    4e4c:	a0 91 a1 20 	lds	r26, 0x20A1
    4e50:	b0 91 a2 20 	lds	r27, 0x20A2
    4e54:	01 96       	adiw	r24, 0x01	; 1
    4e56:	a1 1d       	adc	r26, r1
    4e58:	b1 1d       	adc	r27, r1
    4e5a:	80 93 9f 20 	sts	0x209F, r24
    4e5e:	90 93 a0 20 	sts	0x20A0, r25
    4e62:	a0 93 a1 20 	sts	0x20A1, r26
    4e66:	b0 93 a2 20 	sts	0x20A2, r27
    4e6a:	e0 90 a5 20 	lds	r14, 0x20A5
    4e6e:	f0 90 a6 20 	lds	r15, 0x20A6
    4e72:	e1 14       	cp	r14, r1
    4e74:	f1 04       	cpc	r15, r1
    4e76:	09 f4       	brne	.+2      	; 0x4e7a <__vector_77+0xae>
    4e78:	5c c0       	rjmp	.+184    	; 0x4f32 <__vector_77+0x166>
    4e7a:	80 91 ce 21 	lds	r24, 0x21CE
    4e7e:	90 91 cf 21 	lds	r25, 0x21CF
    4e82:	a0 91 d0 21 	lds	r26, 0x21D0
    4e86:	b0 91 d1 21 	lds	r27, 0x21D1
    4e8a:	01 96       	adiw	r24, 0x01	; 1
    4e8c:	a1 1d       	adc	r26, r1
    4e8e:	b1 1d       	adc	r27, r1
    4e90:	80 93 ce 21 	sts	0x21CE, r24
    4e94:	90 93 cf 21 	sts	0x21CF, r25
    4e98:	a0 93 d0 21 	sts	0x21D0, r26
    4e9c:	b0 93 d1 21 	sts	0x21D1, r27
    4ea0:	84 36       	cpi	r24, 0x64	; 100
    4ea2:	91 05       	cpc	r25, r1
    4ea4:	a1 05       	cpc	r26, r1
    4ea6:	b1 05       	cpc	r27, r1
    4ea8:	e0 f4       	brcc	.+56     	; 0x4ee2 <__vector_77+0x116>
    4eaa:	a0 e2       	ldi	r26, 0x20	; 32
    4eac:	b6 e0       	ldi	r27, 0x06	; 6
    4eae:	14 96       	adiw	r26, 0x04	; 4
    4eb0:	8c 91       	ld	r24, X
    4eb2:	14 97       	sbiw	r26, 0x04	; 4
    4eb4:	80 64       	ori	r24, 0x40	; 64
    4eb6:	14 96       	adiw	r26, 0x04	; 4
    4eb8:	8c 93       	st	X, r24
    4eba:	14 97       	sbiw	r26, 0x04	; 4
    4ebc:	e0 92 2a 08 	sts	0x082A, r14
    4ec0:	f0 92 2b 08 	sts	0x082B, r15
    4ec4:	14 96       	adiw	r26, 0x04	; 4
    4ec6:	8c 91       	ld	r24, X
    4ec8:	14 97       	sbiw	r26, 0x04	; 4
    4eca:	80 64       	ori	r24, 0x40	; 64
    4ecc:	14 96       	adiw	r26, 0x04	; 4
    4ece:	8c 93       	st	X, r24
    4ed0:	80 91 a5 20 	lds	r24, 0x20A5
    4ed4:	90 91 a6 20 	lds	r25, 0x20A6
    4ed8:	80 93 28 08 	sts	0x0828, r24
    4edc:	90 93 29 08 	sts	0x0829, r25
    4ee0:	28 c0       	rjmp	.+80     	; 0x4f32 <__vector_77+0x166>
    4ee2:	89 3b       	cpi	r24, 0xB9	; 185
    4ee4:	9b 40       	sbci	r25, 0x0B	; 11
    4ee6:	a1 05       	cpc	r26, r1
    4ee8:	b1 05       	cpc	r27, r1
    4eea:	60 f0       	brcs	.+24     	; 0x4f04 <__vector_77+0x138>
    4eec:	10 92 ce 21 	sts	0x21CE, r1
    4ef0:	10 92 cf 21 	sts	0x21CF, r1
    4ef4:	10 92 d0 21 	sts	0x21D0, r1
    4ef8:	10 92 d1 21 	sts	0x21D1, r1
    4efc:	10 92 a5 20 	sts	0x20A5, r1
    4f00:	10 92 a6 20 	sts	0x20A6, r1
    4f04:	10 92 2a 08 	sts	0x082A, r1
    4f08:	10 92 2b 08 	sts	0x082B, r1
    4f0c:	a0 e2       	ldi	r26, 0x20	; 32
    4f0e:	b6 e0       	ldi	r27, 0x06	; 6
    4f10:	14 96       	adiw	r26, 0x04	; 4
    4f12:	8c 91       	ld	r24, X
    4f14:	14 97       	sbiw	r26, 0x04	; 4
    4f16:	8f 7b       	andi	r24, 0xBF	; 191
    4f18:	14 96       	adiw	r26, 0x04	; 4
    4f1a:	8c 93       	st	X, r24
    4f1c:	14 97       	sbiw	r26, 0x04	; 4
    4f1e:	10 92 28 08 	sts	0x0828, r1
    4f22:	10 92 29 08 	sts	0x0829, r1
    4f26:	14 96       	adiw	r26, 0x04	; 4
    4f28:	8c 91       	ld	r24, X
    4f2a:	14 97       	sbiw	r26, 0x04	; 4
    4f2c:	8f 7b       	andi	r24, 0xBF	; 191
    4f2e:	14 96       	adiw	r26, 0x04	; 4
    4f30:	8c 93       	st	X, r24
    4f32:	80 91 a9 20 	lds	r24, 0x20A9
    4f36:	90 91 aa 20 	lds	r25, 0x20AA
    4f3a:	01 96       	adiw	r24, 0x01	; 1
    4f3c:	80 93 a9 20 	sts	0x20A9, r24
    4f40:	90 93 aa 20 	sts	0x20AA, r25
    4f44:	80 91 48 20 	lds	r24, 0x2048
    4f48:	90 91 49 20 	lds	r25, 0x2049
    4f4c:	81 30       	cpi	r24, 0x01	; 1
    4f4e:	91 05       	cpc	r25, r1
    4f50:	81 f4       	brne	.+32     	; 0x4f72 <__vector_77+0x1a6>
    4f52:	10 92 ab 20 	sts	0x20AB, r1
    4f56:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    4f5a:	0e 94 c4 02 	call	0x588	; 0x588 <Menu_Reset>
    4f5e:	80 91 48 20 	lds	r24, 0x2048
    4f62:	90 91 49 20 	lds	r25, 0x2049
    4f66:	01 97       	sbiw	r24, 0x01	; 1
    4f68:	80 93 48 20 	sts	0x2048, r24
    4f6c:	90 93 49 20 	sts	0x2049, r25
    4f70:	87 c0       	rjmp	.+270    	; 0x5080 <__vector_77+0x2b4>
    4f72:	82 30       	cpi	r24, 0x02	; 2
    4f74:	91 05       	cpc	r25, r1
    4f76:	08 f1       	brcs	.+66     	; 0x4fba <__vector_77+0x1ee>
    4f78:	01 97       	sbiw	r24, 0x01	; 1
    4f7a:	80 93 48 20 	sts	0x2048, r24
    4f7e:	90 93 49 20 	sts	0x2049, r25
    4f82:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <menu_check_status>
    4f86:	80 91 48 20 	lds	r24, 0x2048
    4f8a:	90 91 49 20 	lds	r25, 0x2049
    4f8e:	88 3b       	cpi	r24, 0xB8	; 184
    4f90:	2b e0       	ldi	r18, 0x0B	; 11
    4f92:	92 07       	cpc	r25, r18
    4f94:	08 f0       	brcs	.+2      	; 0x4f98 <__vector_77+0x1cc>
    4f96:	74 c0       	rjmp	.+232    	; 0x5080 <__vector_77+0x2b4>
    4f98:	a0 e0       	ldi	r26, 0x00	; 0
    4f9a:	b0 e0       	ldi	r27, 0x00	; 0
    4f9c:	80 93 2c 20 	sts	0x202C, r24
    4fa0:	90 93 2d 20 	sts	0x202D, r25
    4fa4:	a0 93 2e 20 	sts	0x202E, r26
    4fa8:	b0 93 2f 20 	sts	0x202F, r27
    4fac:	88 ec       	ldi	r24, 0xC8	; 200
    4fae:	90 e0       	ldi	r25, 0x00	; 0
    4fb0:	80 93 2f 22 	sts	0x222F, r24
    4fb4:	90 93 30 22 	sts	0x2230, r25
    4fb8:	63 c0       	rjmp	.+198    	; 0x5080 <__vector_77+0x2b4>
    4fba:	a8 e0       	ldi	r26, 0x08	; 8
    4fbc:	b6 e0       	ldi	r27, 0x06	; 6
    4fbe:	dc 90       	ld	r13, X
    4fc0:	ec 90       	ld	r14, X
    4fc2:	8c 91       	ld	r24, X
    4fc4:	fc 90       	ld	r15, X
    4fc6:	88 1f       	adc	r24, r24
    4fc8:	88 27       	eor	r24, r24
    4fca:	88 1f       	adc	r24, r24
    4fcc:	90 e0       	ldi	r25, 0x00	; 0
    4fce:	88 0f       	add	r24, r24
    4fd0:	99 1f       	adc	r25, r25
    4fd2:	88 0f       	add	r24, r24
    4fd4:	99 1f       	adc	r25, r25
    4fd6:	d6 fa       	bst	r13, 6
    4fd8:	00 27       	eor	r16, r16
    4fda:	00 f9       	bld	r16, 0
    4fdc:	10 e0       	ldi	r17, 0x00	; 0
    4fde:	08 2b       	or	r16, r24
    4fe0:	19 2b       	or	r17, r25
    4fe2:	e4 fa       	bst	r14, 4
    4fe4:	ee 24       	eor	r14, r14
    4fe6:	e0 f8       	bld	r14, 0
    4fe8:	ce 2d       	mov	r28, r14
    4fea:	80 e0       	ldi	r24, 0x00	; 0
    4fec:	d8 2f       	mov	r29, r24
    4fee:	cc 0f       	add	r28, r28
    4ff0:	dd 1f       	adc	r29, r29
    4ff2:	0c 2b       	or	r16, r28
    4ff4:	1d 2b       	or	r17, r29
    4ff6:	f5 fa       	bst	r15, 5
    4ff8:	ee 27       	eor	r30, r30
    4ffa:	e0 f9       	bld	r30, 0
    4ffc:	f0 e0       	ldi	r31, 0x00	; 0
    4ffe:	cf 01       	movw	r24, r30
    5000:	88 0f       	add	r24, r24
    5002:	99 1f       	adc	r25, r25
    5004:	88 0f       	add	r24, r24
    5006:	99 1f       	adc	r25, r25
    5008:	88 0f       	add	r24, r24
    500a:	99 1f       	adc	r25, r25
    500c:	f8 01       	movw	r30, r16
    500e:	e8 2b       	or	r30, r24
    5010:	f9 2b       	or	r31, r25
    5012:	ee 0f       	add	r30, r30
    5014:	ff 1f       	adc	r31, r31
    5016:	e8 5f       	subi	r30, 0xF8	; 248
    5018:	ff 4d       	sbci	r31, 0xDF	; 223
    501a:	80 81       	ld	r24, Z
    501c:	e0 e0       	ldi	r30, 0x00	; 0
    501e:	f7 e0       	ldi	r31, 0x07	; 7
    5020:	84 83       	std	Z+4, r24	; 0x04
    5022:	cc 91       	ld	r28, X
    5024:	9c 91       	ld	r25, X
    5026:	ec 91       	ld	r30, X
    5028:	8c 91       	ld	r24, X
    502a:	ee 1f       	adc	r30, r30
    502c:	ee 27       	eor	r30, r30
    502e:	ee 1f       	adc	r30, r30
    5030:	f0 e0       	ldi	r31, 0x00	; 0
    5032:	ee 0f       	add	r30, r30
    5034:	ff 1f       	adc	r31, r31
    5036:	ee 0f       	add	r30, r30
    5038:	ff 1f       	adc	r31, r31
    503a:	c6 fb       	bst	r28, 6
    503c:	66 27       	eor	r22, r22
    503e:	60 f9       	bld	r22, 0
    5040:	70 e0       	ldi	r23, 0x00	; 0
    5042:	e6 2b       	or	r30, r22
    5044:	f7 2b       	or	r31, r23
    5046:	94 fb       	bst	r25, 4
    5048:	44 27       	eor	r20, r20
    504a:	40 f9       	bld	r20, 0
    504c:	50 e0       	ldi	r21, 0x00	; 0
    504e:	44 0f       	add	r20, r20
    5050:	55 1f       	adc	r21, r21
    5052:	e4 2b       	or	r30, r20
    5054:	f5 2b       	or	r31, r21
    5056:	85 fb       	bst	r24, 5
    5058:	aa 24       	eor	r10, r10
    505a:	a0 f8       	bld	r10, 0
    505c:	b1 2c       	mov	r11, r1
    505e:	95 01       	movw	r18, r10
    5060:	22 0f       	add	r18, r18
    5062:	33 1f       	adc	r19, r19
    5064:	22 0f       	add	r18, r18
    5066:	33 1f       	adc	r19, r19
    5068:	22 0f       	add	r18, r18
    506a:	33 1f       	adc	r19, r19
    506c:	e2 2b       	or	r30, r18
    506e:	f3 2b       	or	r31, r19
    5070:	ee 0f       	add	r30, r30
    5072:	ff 1f       	adc	r31, r31
    5074:	e8 5f       	subi	r30, 0xF8	; 248
    5076:	ff 4d       	sbci	r31, 0xDF	; 223
    5078:	80 81       	ld	r24, Z
    507a:	e0 ee       	ldi	r30, 0xE0	; 224
    507c:	f6 e0       	ldi	r31, 0x06	; 6
    507e:	84 83       	std	Z+4, r24	; 0x04
    5080:	ff 91       	pop	r31
    5082:	ef 91       	pop	r30
    5084:	df 91       	pop	r29
    5086:	cf 91       	pop	r28
    5088:	bf 91       	pop	r27
    508a:	af 91       	pop	r26
    508c:	9f 91       	pop	r25
    508e:	8f 91       	pop	r24
    5090:	7f 91       	pop	r23
    5092:	6f 91       	pop	r22
    5094:	5f 91       	pop	r21
    5096:	4f 91       	pop	r20
    5098:	3f 91       	pop	r19
    509a:	2f 91       	pop	r18
    509c:	1f 91       	pop	r17
    509e:	0f 91       	pop	r16
    50a0:	ff 90       	pop	r15
    50a2:	ef 90       	pop	r14
    50a4:	df 90       	pop	r13
    50a6:	bf 90       	pop	r11
    50a8:	af 90       	pop	r10
    50aa:	0f 90       	pop	r0
    50ac:	0b be       	out	0x3b, r0	; 59
    50ae:	0f 90       	pop	r0
    50b0:	0a be       	out	0x3a, r0	; 58
    50b2:	0f 90       	pop	r0
    50b4:	09 be       	out	0x39, r0	; 57
    50b6:	0f 90       	pop	r0
    50b8:	08 be       	out	0x38, r0	; 56
    50ba:	0f 90       	pop	r0
    50bc:	0f be       	out	0x3f, r0	; 63
    50be:	0f 90       	pop	r0
    50c0:	1f 90       	pop	r1
    50c2:	18 95       	reti

000050c4 <__vector_104>:
    50c4:	1f 92       	push	r1
    50c6:	0f 92       	push	r0
    50c8:	0f b6       	in	r0, 0x3f	; 63
    50ca:	0f 92       	push	r0
    50cc:	11 24       	eor	r1, r1
    50ce:	08 b6       	in	r0, 0x38	; 56
    50d0:	0f 92       	push	r0
    50d2:	18 be       	out	0x38, r1	; 56
    50d4:	0f 90       	pop	r0
    50d6:	08 be       	out	0x38, r0	; 56
    50d8:	0f 90       	pop	r0
    50da:	0f be       	out	0x3f, r0	; 63
    50dc:	0f 90       	pop	r0
    50de:	1f 90       	pop	r1
    50e0:	18 95       	reti

000050e2 <__vector_94>:
    50e2:	1f 92       	push	r1
    50e4:	0f 92       	push	r0
    50e6:	0f b6       	in	r0, 0x3f	; 63
    50e8:	0f 92       	push	r0
    50ea:	11 24       	eor	r1, r1
    50ec:	08 b6       	in	r0, 0x38	; 56
    50ee:	0f 92       	push	r0
    50f0:	18 be       	out	0x38, r1	; 56
    50f2:	2f 93       	push	r18
    50f4:	3f 93       	push	r19
    50f6:	8f 93       	push	r24
    50f8:	9f 93       	push	r25
    50fa:	20 91 fc 23 	lds	r18, 0x23FC
    50fe:	30 91 fd 23 	lds	r19, 0x23FD
    5102:	80 91 c8 07 	lds	r24, 0x07C8
    5106:	81 ff       	sbrs	r24, 1
    5108:	03 c0       	rjmp	.+6      	; 0x5110 <__vector_94+0x2e>
    510a:	8f ef       	ldi	r24, 0xFF	; 255
    510c:	9f ef       	ldi	r25, 0xFF	; 255
    510e:	02 c0       	rjmp	.+4      	; 0x5114 <__vector_94+0x32>
    5110:	81 e0       	ldi	r24, 0x01	; 1
    5112:	90 e0       	ldi	r25, 0x00	; 0
    5114:	82 0f       	add	r24, r18
    5116:	93 1f       	adc	r25, r19
    5118:	80 93 fc 23 	sts	0x23FC, r24
    511c:	90 93 fd 23 	sts	0x23FD, r25
    5120:	9f 91       	pop	r25
    5122:	8f 91       	pop	r24
    5124:	3f 91       	pop	r19
    5126:	2f 91       	pop	r18
    5128:	0f 90       	pop	r0
    512a:	08 be       	out	0x38, r0	; 56
    512c:	0f 90       	pop	r0
    512e:	0f be       	out	0x3f, r0	; 63
    5130:	0f 90       	pop	r0
    5132:	1f 90       	pop	r1
    5134:	18 95       	reti

00005136 <__vector_96>:
    5136:	1f 92       	push	r1
    5138:	0f 92       	push	r0
    513a:	0f b6       	in	r0, 0x3f	; 63
    513c:	0f 92       	push	r0
    513e:	11 24       	eor	r1, r1
    5140:	08 b6       	in	r0, 0x38	; 56
    5142:	0f 92       	push	r0
    5144:	18 be       	out	0x38, r1	; 56
    5146:	2f 93       	push	r18
    5148:	3f 93       	push	r19
    514a:	8f 93       	push	r24
    514c:	9f 93       	push	r25
    514e:	20 91 77 23 	lds	r18, 0x2377
    5152:	30 91 78 23 	lds	r19, 0x2378
    5156:	80 91 e8 06 	lds	r24, 0x06E8
    515a:	84 ff       	sbrs	r24, 4
    515c:	03 c0       	rjmp	.+6      	; 0x5164 <__vector_96+0x2e>
    515e:	8f ef       	ldi	r24, 0xFF	; 255
    5160:	9f ef       	ldi	r25, 0xFF	; 255
    5162:	02 c0       	rjmp	.+4      	; 0x5168 <__vector_96+0x32>
    5164:	81 e0       	ldi	r24, 0x01	; 1
    5166:	90 e0       	ldi	r25, 0x00	; 0
    5168:	82 0f       	add	r24, r18
    516a:	93 1f       	adc	r25, r19
    516c:	80 93 77 23 	sts	0x2377, r24
    5170:	90 93 78 23 	sts	0x2378, r25
    5174:	9f 91       	pop	r25
    5176:	8f 91       	pop	r24
    5178:	3f 91       	pop	r19
    517a:	2f 91       	pop	r18
    517c:	0f 90       	pop	r0
    517e:	08 be       	out	0x38, r0	; 56
    5180:	0f 90       	pop	r0
    5182:	0f be       	out	0x3f, r0	; 63
    5184:	0f 90       	pop	r0
    5186:	1f 90       	pop	r1
    5188:	18 95       	reti

0000518a <__vector_2>:
    518a:	1f 92       	push	r1
    518c:	0f 92       	push	r0
    518e:	0f b6       	in	r0, 0x3f	; 63
    5190:	0f 92       	push	r0
    5192:	11 24       	eor	r1, r1
    5194:	08 b6       	in	r0, 0x38	; 56
    5196:	0f 92       	push	r0
    5198:	18 be       	out	0x38, r1	; 56
    519a:	2f 93       	push	r18
    519c:	3f 93       	push	r19
    519e:	8f 93       	push	r24
    51a0:	9f 93       	push	r25
    51a2:	20 91 a9 23 	lds	r18, 0x23A9
    51a6:	30 91 aa 23 	lds	r19, 0x23AA
    51aa:	80 91 48 06 	lds	r24, 0x0648
    51ae:	84 ff       	sbrs	r24, 4
    51b0:	03 c0       	rjmp	.+6      	; 0x51b8 <__vector_2+0x2e>
    51b2:	8f ef       	ldi	r24, 0xFF	; 255
    51b4:	9f ef       	ldi	r25, 0xFF	; 255
    51b6:	02 c0       	rjmp	.+4      	; 0x51bc <__vector_2+0x32>
    51b8:	81 e0       	ldi	r24, 0x01	; 1
    51ba:	90 e0       	ldi	r25, 0x00	; 0
    51bc:	82 0f       	add	r24, r18
    51be:	93 1f       	adc	r25, r19
    51c0:	80 93 a9 23 	sts	0x23A9, r24
    51c4:	90 93 aa 23 	sts	0x23AA, r25
    51c8:	9f 91       	pop	r25
    51ca:	8f 91       	pop	r24
    51cc:	3f 91       	pop	r19
    51ce:	2f 91       	pop	r18
    51d0:	0f 90       	pop	r0
    51d2:	08 be       	out	0x38, r0	; 56
    51d4:	0f 90       	pop	r0
    51d6:	0f be       	out	0x3f, r0	; 63
    51d8:	0f 90       	pop	r0
    51da:	1f 90       	pop	r1
    51dc:	18 95       	reti

000051de <__vector_95>:
    51de:	1f 92       	push	r1
    51e0:	0f 92       	push	r0
    51e2:	0f b6       	in	r0, 0x3f	; 63
    51e4:	0f 92       	push	r0
    51e6:	11 24       	eor	r1, r1
    51e8:	08 b6       	in	r0, 0x38	; 56
    51ea:	0f 92       	push	r0
    51ec:	18 be       	out	0x38, r1	; 56
    51ee:	2f 93       	push	r18
    51f0:	3f 93       	push	r19
    51f2:	8f 93       	push	r24
    51f4:	9f 93       	push	r25
    51f6:	20 91 10 24 	lds	r18, 0x2410
    51fa:	30 91 11 24 	lds	r19, 0x2411
    51fe:	80 91 c8 07 	lds	r24, 0x07C8
    5202:	82 ff       	sbrs	r24, 2
    5204:	03 c0       	rjmp	.+6      	; 0x520c <__vector_95+0x2e>
    5206:	8f ef       	ldi	r24, 0xFF	; 255
    5208:	9f ef       	ldi	r25, 0xFF	; 255
    520a:	02 c0       	rjmp	.+4      	; 0x5210 <__vector_95+0x32>
    520c:	81 e0       	ldi	r24, 0x01	; 1
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	82 0f       	add	r24, r18
    5212:	93 1f       	adc	r25, r19
    5214:	80 93 10 24 	sts	0x2410, r24
    5218:	90 93 11 24 	sts	0x2411, r25
    521c:	9f 91       	pop	r25
    521e:	8f 91       	pop	r24
    5220:	3f 91       	pop	r19
    5222:	2f 91       	pop	r18
    5224:	0f 90       	pop	r0
    5226:	08 be       	out	0x38, r0	; 56
    5228:	0f 90       	pop	r0
    522a:	0f be       	out	0x3f, r0	; 63
    522c:	0f 90       	pop	r0
    522e:	1f 90       	pop	r1
    5230:	18 95       	reti

00005232 <__vector_97>:
    5232:	1f 92       	push	r1
    5234:	0f 92       	push	r0
    5236:	0f b6       	in	r0, 0x3f	; 63
    5238:	0f 92       	push	r0
    523a:	11 24       	eor	r1, r1
    523c:	08 b6       	in	r0, 0x38	; 56
    523e:	0f 92       	push	r0
    5240:	18 be       	out	0x38, r1	; 56
    5242:	0b b6       	in	r0, 0x3b	; 59
    5244:	0f 92       	push	r0
    5246:	1b be       	out	0x3b, r1	; 59
    5248:	8f 93       	push	r24
    524a:	ef 93       	push	r30
    524c:	ff 93       	push	r31
    524e:	84 e0       	ldi	r24, 0x04	; 4
    5250:	e0 e6       	ldi	r30, 0x60	; 96
    5252:	f6 e0       	ldi	r31, 0x06	; 6
    5254:	87 83       	std	Z+7, r24	; 0x07
    5256:	ff 91       	pop	r31
    5258:	ef 91       	pop	r30
    525a:	8f 91       	pop	r24
    525c:	0f 90       	pop	r0
    525e:	0b be       	out	0x3b, r0	; 59
    5260:	0f 90       	pop	r0
    5262:	08 be       	out	0x38, r0	; 56
    5264:	0f 90       	pop	r0
    5266:	0f be       	out	0x3f, r0	; 63
    5268:	0f 90       	pop	r0
    526a:	1f 90       	pop	r1
    526c:	18 95       	reti

0000526e <__vector_100>:
    526e:	1f 92       	push	r1
    5270:	0f 92       	push	r0
    5272:	0f b6       	in	r0, 0x3f	; 63
    5274:	0f 92       	push	r0
    5276:	11 24       	eor	r1, r1
    5278:	08 b6       	in	r0, 0x38	; 56
    527a:	0f 92       	push	r0
    527c:	18 be       	out	0x38, r1	; 56
    527e:	09 b6       	in	r0, 0x39	; 57
    5280:	0f 92       	push	r0
    5282:	19 be       	out	0x39, r1	; 57
    5284:	0b b6       	in	r0, 0x3b	; 59
    5286:	0f 92       	push	r0
    5288:	1b be       	out	0x3b, r1	; 59
    528a:	2f 93       	push	r18
    528c:	3f 93       	push	r19
    528e:	4f 93       	push	r20
    5290:	5f 93       	push	r21
    5292:	6f 93       	push	r22
    5294:	7f 93       	push	r23
    5296:	8f 93       	push	r24
    5298:	9f 93       	push	r25
    529a:	af 93       	push	r26
    529c:	bf 93       	push	r27
    529e:	ef 93       	push	r30
    52a0:	ff 93       	push	r31
    52a2:	80 91 48 20 	lds	r24, 0x2048
    52a6:	90 91 49 20 	lds	r25, 0x2049
    52aa:	89 2b       	or	r24, r25
    52ac:	89 f4       	brne	.+34     	; 0x52d0 <__vector_100+0x62>
    52ae:	80 91 e8 06 	lds	r24, 0x06E8
    52b2:	6b e4       	ldi	r22, 0x4B	; 75
    52b4:	70 e2       	ldi	r23, 0x20	; 32
    52b6:	88 1f       	adc	r24, r24
    52b8:	88 27       	eor	r24, r24
    52ba:	88 1f       	adc	r24, r24
    52bc:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    52c0:	80 91 a8 06 	lds	r24, 0x06A8
    52c4:	6a e4       	ldi	r22, 0x4A	; 74
    52c6:	70 e2       	ldi	r23, 0x20	; 32
    52c8:	82 95       	swap	r24
    52ca:	81 70       	andi	r24, 0x01	; 1
    52cc:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    52d0:	80 e3       	ldi	r24, 0x30	; 48
    52d2:	95 e7       	ldi	r25, 0x75	; 117
    52d4:	80 93 48 20 	sts	0x2048, r24
    52d8:	90 93 49 20 	sts	0x2049, r25
    52dc:	8f ef       	ldi	r24, 0xFF	; 255
    52de:	80 93 ab 20 	sts	0x20AB, r24
    52e2:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    52e6:	ff 91       	pop	r31
    52e8:	ef 91       	pop	r30
    52ea:	bf 91       	pop	r27
    52ec:	af 91       	pop	r26
    52ee:	9f 91       	pop	r25
    52f0:	8f 91       	pop	r24
    52f2:	7f 91       	pop	r23
    52f4:	6f 91       	pop	r22
    52f6:	5f 91       	pop	r21
    52f8:	4f 91       	pop	r20
    52fa:	3f 91       	pop	r19
    52fc:	2f 91       	pop	r18
    52fe:	0f 90       	pop	r0
    5300:	0b be       	out	0x3b, r0	; 59
    5302:	0f 90       	pop	r0
    5304:	09 be       	out	0x39, r0	; 57
    5306:	0f 90       	pop	r0
    5308:	08 be       	out	0x38, r0	; 56
    530a:	0f 90       	pop	r0
    530c:	0f be       	out	0x3f, r0	; 63
    530e:	0f 90       	pop	r0
    5310:	1f 90       	pop	r1
    5312:	18 95       	reti

00005314 <__vector_119>:
int buff_i_temp;
int buff_d_temp;
int buff_u_temp;
unsigned char reply2_tmp;
ISR(USARTF0_RXC_vect)
{
    5314:	1f 92       	push	r1
    5316:	0f 92       	push	r0
    5318:	0f b6       	in	r0, 0x3f	; 63
    531a:	0f 92       	push	r0
    531c:	11 24       	eor	r1, r1
    531e:	08 b6       	in	r0, 0x38	; 56
    5320:	0f 92       	push	r0
    5322:	18 be       	out	0x38, r1	; 56
    5324:	2f 93       	push	r18
    5326:	8f 93       	push	r24
    5328:	9f 93       	push	r25
    //LED_Green_PORT.OUTSET = LED_Green_PIN_bm;
    //char buff_reply [16];
    unsigned char data;
    data=USARTF0_DATA;
    532a:	20 91 a0 0b 	lds	r18, 0x0BA0

    //LED_Red_PORT.OUTTGL = LED_Red_PIN_bm;

    switch(ask_cnt)
    532e:	80 91 9c 20 	lds	r24, 0x209C
    5332:	90 91 9d 20 	lds	r25, 0x209D
    5336:	82 30       	cpi	r24, 0x02	; 2
    5338:	91 05       	cpc	r25, r1
    533a:	19 f1       	breq	.+70     	; 0x5382 <__vector_119+0x6e>
    533c:	2c f4       	brge	.+10     	; 0x5348 <__vector_119+0x34>
    533e:	00 97       	sbiw	r24, 0x00	; 0
    5340:	49 f0       	breq	.+18     	; 0x5354 <__vector_119+0x40>
    5342:	01 97       	sbiw	r24, 0x01	; 1
    5344:	89 f0       	breq	.+34     	; 0x5368 <__vector_119+0x54>
    5346:	48 c0       	rjmp	.+144    	; 0x53d8 <__vector_119+0xc4>
    5348:	83 30       	cpi	r24, 0x03	; 3
    534a:	91 05       	cpc	r25, r1
    534c:	51 f1       	breq	.+84     	; 0x53a2 <__vector_119+0x8e>
    534e:	04 97       	sbiw	r24, 0x04	; 4
    5350:	89 f1       	breq	.+98     	; 0x53b4 <__vector_119+0xa0>
    5352:	42 c0       	rjmp	.+132    	; 0x53d8 <__vector_119+0xc4>
    {
    case 0:
        if (data== '*')
    5354:	2a 32       	cpi	r18, 0x2A	; 42
    5356:	09 f0       	breq	.+2      	; 0x535a <__vector_119+0x46>
    5358:	3f c0       	rjmp	.+126    	; 0x53d8 <__vector_119+0xc4>
        {
            ask_cnt++;}
    535a:	81 e0       	ldi	r24, 0x01	; 1
    535c:	90 e0       	ldi	r25, 0x00	; 0
    535e:	80 93 9c 20 	sts	0x209C, r24
    5362:	90 93 9d 20 	sts	0x209D, r25
    5366:	38 c0       	rjmp	.+112    	; 0x53d8 <__vector_119+0xc4>
        break;

    case 1:
        buff_reply_tmp=data&0x0ff;
    5368:	82 2f       	mov	r24, r18
    536a:	90 e0       	ldi	r25, 0x00	; 0
    536c:	80 93 b8 23 	sts	0x23B8, r24
    5370:	90 93 b9 23 	sts	0x23B9, r25
        ask_cnt++;
    5374:	82 e0       	ldi	r24, 0x02	; 2
    5376:	90 e0       	ldi	r25, 0x00	; 0
    5378:	80 93 9c 20 	sts	0x209C, r24
    537c:	90 93 9d 20 	sts	0x209D, r25
        break;
    5380:	2b c0       	rjmp	.+86     	; 0x53d8 <__vector_119+0xc4>

    case 2:
        buff_reply_tmp|=(data<<8)&0x0ff00;
    5382:	80 91 b8 23 	lds	r24, 0x23B8
    5386:	90 91 b9 23 	lds	r25, 0x23B9
    538a:	92 2b       	or	r25, r18
    538c:	80 93 b8 23 	sts	0x23B8, r24
    5390:	90 93 b9 23 	sts	0x23B9, r25
        ask_cnt++;
    5394:	83 e0       	ldi	r24, 0x03	; 3
    5396:	90 e0       	ldi	r25, 0x00	; 0
    5398:	80 93 9c 20 	sts	0x209C, r24
    539c:	90 93 9d 20 	sts	0x209D, r25
        break;
    53a0:	1b c0       	rjmp	.+54     	; 0x53d8 <__vector_119+0xc4>

    case 3:
        reply2_tmp = data;
    53a2:	20 93 c8 23 	sts	0x23C8, r18
        ask_cnt++;
    53a6:	84 e0       	ldi	r24, 0x04	; 4
    53a8:	90 e0       	ldi	r25, 0x00	; 0
    53aa:	80 93 9c 20 	sts	0x209C, r24
    53ae:	90 93 9d 20 	sts	0x209D, r25
        break;
    53b2:	12 c0       	rjmp	.+36     	; 0x53d8 <__vector_119+0xc4>
        //ask_cnt++;
        //break;


    case 4:
        if (data=='#')
    53b4:	23 32       	cpi	r18, 0x23	; 35
    53b6:	61 f4       	brne	.+24     	; 0x53d0 <__vector_119+0xbc>
        {
            //LED_Green_PORT.OUTTGL = LED_Green_PIN_bm;
            buff_reply = buff_reply_tmp;
    53b8:	80 91 b8 23 	lds	r24, 0x23B8
    53bc:	90 91 b9 23 	lds	r25, 0x23B9
    53c0:	80 93 6f 23 	sts	0x236F, r24
    53c4:	90 93 70 23 	sts	0x2370, r25
            reply2 = reply2_tmp;
    53c8:	80 91 c8 23 	lds	r24, 0x23C8
    53cc:	80 93 d5 21 	sts	0x21D5, r24


            //flg_reply=0;
            ask_cnt=0;
        }
        ask_cnt=0;
    53d0:	10 92 9c 20 	sts	0x209C, r1
    53d4:	10 92 9d 20 	sts	0x209D, r1
        break;
    }
}
    53d8:	9f 91       	pop	r25
    53da:	8f 91       	pop	r24
    53dc:	2f 91       	pop	r18
    53de:	0f 90       	pop	r0
    53e0:	08 be       	out	0x38, r0	; 56
    53e2:	0f 90       	pop	r0
    53e4:	0f be       	out	0x3f, r0	; 63
    53e6:	0f 90       	pop	r0
    53e8:	1f 90       	pop	r1
    53ea:	18 95       	reti

000053ec <NRF24L01_L_RF_TX>:
		NRF24L01_L_RF_TX();
	while ((NRF24L01_L_Get_Status() & _TX_DS) != _TX_DS)
	{
		
	}		
	NRF24L01_L_Clear_Interrupts();
    53ec:	e0 e8       	ldi	r30, 0x80	; 128
    53ee:	f6 e0       	ldi	r31, 0x06	; 6
    53f0:	82 e0       	ldi	r24, 0x02	; 2
    53f2:	86 83       	std	Z+6, r24	; 0x06
    53f4:	85 83       	std	Z+5, r24	; 0x05
    53f6:	8a e6       	ldi	r24, 0x6A	; 106
    53f8:	8a 95       	dec	r24
    53fa:	f1 f7       	brne	.-4      	; 0x53f8 <NRF24L01_L_RF_TX+0xc>
    53fc:	00 c0       	rjmp	.+0      	; 0x53fe <NRF24L01_L_RF_TX+0x12>
    53fe:	82 e0       	ldi	r24, 0x02	; 2
    5400:	86 83       	std	Z+6, r24	; 0x06
    5402:	08 95       	ret

00005404 <SPI_L>:
    5404:	e0 ec       	ldi	r30, 0xC0	; 192
    5406:	fa e0       	ldi	r31, 0x0A	; 10
    5408:	83 83       	std	Z+3, r24	; 0x03
    540a:	82 81       	ldd	r24, Z+2	; 0x02
    540c:	88 23       	and	r24, r24
    540e:	ec f7       	brge	.-6      	; 0x540a <SPI_L+0x6>
    5410:	e0 ec       	ldi	r30, 0xC0	; 192
    5412:	fa e0       	ldi	r31, 0x0A	; 10
    5414:	83 81       	ldd	r24, Z+3	; 0x03
    5416:	08 95       	ret

00005418 <NRF24L01_L_ReadReg>:
    5418:	1f 93       	push	r17
    541a:	cf 93       	push	r28
    541c:	df 93       	push	r29
    541e:	c0 e8       	ldi	r28, 0x80	; 128
    5420:	d6 e0       	ldi	r29, 0x06	; 6
    5422:	10 e1       	ldi	r17, 0x10	; 16
    5424:	1e 83       	std	Y+6, r17	; 0x06
    5426:	ee df       	rcall	.-36     	; 0x5404 <SPI_L>
    5428:	8f ef       	ldi	r24, 0xFF	; 255
    542a:	ec df       	rcall	.-40     	; 0x5404 <SPI_L>
    542c:	1d 83       	std	Y+5, r17	; 0x05
    542e:	df 91       	pop	r29
    5430:	cf 91       	pop	r28
    5432:	1f 91       	pop	r17
    5434:	08 95       	ret

00005436 <NRF24L01_L_WriteReg>:
    5436:	ff 92       	push	r15
    5438:	0f 93       	push	r16
    543a:	1f 93       	push	r17
    543c:	cf 93       	push	r28
    543e:	df 93       	push	r29
    5440:	f6 2e       	mov	r15, r22
    5442:	c0 e8       	ldi	r28, 0x80	; 128
    5444:	d6 e0       	ldi	r29, 0x06	; 6
    5446:	10 e1       	ldi	r17, 0x10	; 16
    5448:	1e 83       	std	Y+6, r17	; 0x06
    544a:	dc df       	rcall	.-72     	; 0x5404 <SPI_L>
    544c:	08 2f       	mov	r16, r24
    544e:	8f 2d       	mov	r24, r15
    5450:	d9 df       	rcall	.-78     	; 0x5404 <SPI_L>
    5452:	1d 83       	std	Y+5, r17	; 0x05
    5454:	80 2f       	mov	r24, r16
    5456:	df 91       	pop	r29
    5458:	cf 91       	pop	r28
    545a:	1f 91       	pop	r17
    545c:	0f 91       	pop	r16
    545e:	ff 90       	pop	r15
    5460:	08 95       	ret

00005462 <NRF24L01_L_Set_CH>:
    5462:	68 2f       	mov	r22, r24
    5464:	6f 77       	andi	r22, 0x7F	; 127
    5466:	85 e2       	ldi	r24, 0x25	; 37
    5468:	e6 cf       	rjmp	.-52     	; 0x5436 <NRF24L01_L_WriteReg>
    546a:	08 95       	ret

0000546c <NRF24L01_L_Set_ShockBurst>:
    546c:	cf 93       	push	r28
    546e:	c8 2f       	mov	r28, r24
    5470:	68 2f       	mov	r22, r24
    5472:	84 e2       	ldi	r24, 0x24	; 36
    5474:	e0 df       	rcall	.-64     	; 0x5436 <NRF24L01_L_WriteReg>
    5476:	6c 2f       	mov	r22, r28
    5478:	81 e2       	ldi	r24, 0x21	; 33
    547a:	dd df       	rcall	.-70     	; 0x5436 <NRF24L01_L_WriteReg>
    547c:	cf 91       	pop	r28
    547e:	08 95       	ret

00005480 <NRF24L01_L_Set_Address_Width>:
    5480:	63 e0       	ldi	r22, 0x03	; 3
    5482:	83 e2       	ldi	r24, 0x23	; 35
    5484:	d8 cf       	rjmp	.-80     	; 0x5436 <NRF24L01_L_WriteReg>
    5486:	08 95       	ret

00005488 <NRF24L01_L_Clear_Interrupts>:
    5488:	60 e7       	ldi	r22, 0x70	; 112
    548a:	87 e2       	ldi	r24, 0x27	; 39
    548c:	d4 cf       	rjmp	.-88     	; 0x5436 <NRF24L01_L_WriteReg>
    548e:	08 95       	ret

00005490 <NRF24L01_L_ReadRegBuf>:
    5490:	df 92       	push	r13
    5492:	ef 92       	push	r14
    5494:	ff 92       	push	r15
    5496:	0f 93       	push	r16
    5498:	1f 93       	push	r17
    549a:	cf 93       	push	r28
    549c:	df 93       	push	r29
    549e:	7b 01       	movw	r14, r22
    54a0:	8a 01       	movw	r16, r20
    54a2:	90 e1       	ldi	r25, 0x10	; 16
    54a4:	e0 e8       	ldi	r30, 0x80	; 128
    54a6:	f6 e0       	ldi	r31, 0x06	; 6
    54a8:	96 83       	std	Z+6, r25	; 0x06
    54aa:	ac df       	rcall	.-168    	; 0x5404 <SPI_L>
    54ac:	d8 2e       	mov	r13, r24
    54ae:	10 16       	cp	r1, r16
    54b0:	11 06       	cpc	r1, r17
    54b2:	4c f4       	brge	.+18     	; 0x54c6 <NRF24L01_L_ReadRegBuf+0x36>
    54b4:	e7 01       	movw	r28, r14
    54b6:	0e 0d       	add	r16, r14
    54b8:	1f 1d       	adc	r17, r15
    54ba:	8f ef       	ldi	r24, 0xFF	; 255
    54bc:	a3 df       	rcall	.-186    	; 0x5404 <SPI_L>
    54be:	89 93       	st	Y+, r24
    54c0:	c0 17       	cp	r28, r16
    54c2:	d1 07       	cpc	r29, r17
    54c4:	d1 f7       	brne	.-12     	; 0x54ba <NRF24L01_L_ReadRegBuf+0x2a>
    54c6:	80 e1       	ldi	r24, 0x10	; 16
    54c8:	e0 e8       	ldi	r30, 0x80	; 128
    54ca:	f6 e0       	ldi	r31, 0x06	; 6
    54cc:	85 83       	std	Z+5, r24	; 0x05
    54ce:	8d 2d       	mov	r24, r13
    54d0:	df 91       	pop	r29
    54d2:	cf 91       	pop	r28
    54d4:	1f 91       	pop	r17
    54d6:	0f 91       	pop	r16
    54d8:	ff 90       	pop	r15
    54da:	ef 90       	pop	r14
    54dc:	df 90       	pop	r13
    54de:	08 95       	ret

000054e0 <NRF24L01_L_Read_RX_Buf>:
    54e0:	ab 01       	movw	r20, r22
    54e2:	bc 01       	movw	r22, r24
    54e4:	81 e6       	ldi	r24, 0x61	; 97
    54e6:	d4 cf       	rjmp	.-88     	; 0x5490 <NRF24L01_L_ReadRegBuf>
    54e8:	08 95       	ret

000054ea <NRF24L01_L_WriteRegBuf>:
    54ea:	df 92       	push	r13
    54ec:	ef 92       	push	r14
    54ee:	ff 92       	push	r15
    54f0:	0f 93       	push	r16
    54f2:	1f 93       	push	r17
    54f4:	cf 93       	push	r28
    54f6:	df 93       	push	r29
    54f8:	7b 01       	movw	r14, r22
    54fa:	8a 01       	movw	r16, r20
    54fc:	90 e1       	ldi	r25, 0x10	; 16
    54fe:	e0 e8       	ldi	r30, 0x80	; 128
    5500:	f6 e0       	ldi	r31, 0x06	; 6
    5502:	96 83       	std	Z+6, r25	; 0x06
    5504:	7f df       	rcall	.-258    	; 0x5404 <SPI_L>
    5506:	d8 2e       	mov	r13, r24
    5508:	10 16       	cp	r1, r16
    550a:	11 06       	cpc	r1, r17
    550c:	44 f4       	brge	.+16     	; 0x551e <NRF24L01_L_WriteRegBuf+0x34>
    550e:	e7 01       	movw	r28, r14
    5510:	0e 0d       	add	r16, r14
    5512:	1f 1d       	adc	r17, r15
    5514:	89 91       	ld	r24, Y+
    5516:	76 df       	rcall	.-276    	; 0x5404 <SPI_L>
    5518:	c0 17       	cp	r28, r16
    551a:	d1 07       	cpc	r29, r17
    551c:	d9 f7       	brne	.-10     	; 0x5514 <NRF24L01_L_WriteRegBuf+0x2a>
    551e:	80 e1       	ldi	r24, 0x10	; 16
    5520:	e0 e8       	ldi	r30, 0x80	; 128
    5522:	f6 e0       	ldi	r31, 0x06	; 6
    5524:	85 83       	std	Z+5, r24	; 0x05
    5526:	8d 2d       	mov	r24, r13
    5528:	df 91       	pop	r29
    552a:	cf 91       	pop	r28
    552c:	1f 91       	pop	r17
    552e:	0f 91       	pop	r16
    5530:	ff 90       	pop	r15
    5532:	ef 90       	pop	r14
    5534:	df 90       	pop	r13
    5536:	08 95       	ret

00005538 <NRF24L01_L_Set_RX_Pipe>:
    5538:	ef 92       	push	r14
    553a:	ff 92       	push	r15
    553c:	0f 93       	push	r16
    553e:	1f 93       	push	r17
    5540:	cf 93       	push	r28
    5542:	df 93       	push	r29
    5544:	f8 2e       	mov	r15, r24
    5546:	eb 01       	movw	r28, r22
    5548:	8a 01       	movw	r16, r20
    554a:	e2 2e       	mov	r14, r18
    554c:	82 e0       	ldi	r24, 0x02	; 2
    554e:	64 df       	rcall	.-312    	; 0x5418 <NRF24L01_L_ReadReg>
    5550:	41 e0       	ldi	r20, 0x01	; 1
    5552:	50 e0       	ldi	r21, 0x00	; 0
    5554:	0f 2c       	mov	r0, r15
    5556:	02 c0       	rjmp	.+4      	; 0x555c <NRF24L01_L_Set_RX_Pipe+0x24>
    5558:	44 0f       	add	r20, r20
    555a:	55 1f       	adc	r21, r21
    555c:	0a 94       	dec	r0
    555e:	e2 f7       	brpl	.-8      	; 0x5558 <NRF24L01_L_Set_RX_Pipe+0x20>
    5560:	68 2f       	mov	r22, r24
    5562:	64 2b       	or	r22, r20
    5564:	82 e2       	ldi	r24, 0x22	; 34
    5566:	67 df       	rcall	.-306    	; 0x5436 <NRF24L01_L_WriteReg>
    5568:	81 e1       	ldi	r24, 0x11	; 17
    556a:	8f 0d       	add	r24, r15
    556c:	6e 2d       	mov	r22, r14
    556e:	80 62       	ori	r24, 0x20	; 32
    5570:	62 df       	rcall	.-316    	; 0x5436 <NRF24L01_L_WriteReg>
    5572:	8a e0       	ldi	r24, 0x0A	; 10
    5574:	8f 0d       	add	r24, r15
    5576:	a8 01       	movw	r20, r16
    5578:	be 01       	movw	r22, r28
    557a:	80 62       	ori	r24, 0x20	; 32
    557c:	b6 df       	rcall	.-148    	; 0x54ea <NRF24L01_L_WriteRegBuf>
    557e:	df 91       	pop	r29
    5580:	cf 91       	pop	r28
    5582:	1f 91       	pop	r17
    5584:	0f 91       	pop	r16
    5586:	ff 90       	pop	r15
    5588:	ef 90       	pop	r14
    558a:	08 95       	ret

0000558c <NRF24L01_L_Set_TX_Address>:
    558c:	ab 01       	movw	r20, r22
    558e:	bc 01       	movw	r22, r24
    5590:	80 e3       	ldi	r24, 0x30	; 48
    5592:	ab cf       	rjmp	.-170    	; 0x54ea <NRF24L01_L_WriteRegBuf>
    5594:	08 95       	ret

00005596 <NRF24L01_L_Init_milad>:
    5596:	cf 92       	push	r12
    5598:	df 92       	push	r13
    559a:	ef 92       	push	r14
    559c:	ff 92       	push	r15
    559e:	0f 93       	push	r16
    55a0:	1f 93       	push	r17
    55a2:	cf 93       	push	r28
    55a4:	df 93       	push	r29
    55a6:	f8 2e       	mov	r15, r24
    55a8:	d6 2e       	mov	r13, r22
    55aa:	14 2f       	mov	r17, r20
    55ac:	e9 01       	movw	r28, r18
    55ae:	80 e0       	ldi	r24, 0x00	; 0
    55b0:	5d df       	rcall	.-326    	; 0x546c <NRF24L01_L_Set_ShockBurst>
    55b2:	61 e0       	ldi	r22, 0x01	; 1
    55b4:	81 e2       	ldi	r24, 0x21	; 33
    55b6:	3f df       	rcall	.-386    	; 0x5436 <NRF24L01_L_WriteReg>
    55b8:	6f e2       	ldi	r22, 0x2F	; 47
    55ba:	84 e2       	ldi	r24, 0x24	; 36
    55bc:	3c df       	rcall	.-392    	; 0x5436 <NRF24L01_L_WriteReg>
    55be:	11 60       	ori	r17, 0x01	; 1
    55c0:	61 2f       	mov	r22, r17
    55c2:	6c 29       	or	r22, r12
    55c4:	86 e2       	ldi	r24, 0x26	; 38
    55c6:	37 df       	rcall	.-402    	; 0x5436 <NRF24L01_L_WriteReg>
    55c8:	80 2f       	mov	r24, r16
    55ca:	5a df       	rcall	.-332    	; 0x5480 <NRF24L01_L_Set_Address_Width>
    55cc:	11 27       	eor	r17, r17
    55ce:	07 fd       	sbrc	r16, 7
    55d0:	10 95       	com	r17
    55d2:	2e 2d       	mov	r18, r14
    55d4:	a8 01       	movw	r20, r16
    55d6:	be 01       	movw	r22, r28
    55d8:	80 e0       	ldi	r24, 0x00	; 0
    55da:	ae df       	rcall	.-164    	; 0x5538 <NRF24L01_L_Set_RX_Pipe>
    55dc:	8d 2d       	mov	r24, r13
    55de:	41 df       	rcall	.-382    	; 0x5462 <NRF24L01_L_Set_CH>
    55e0:	b8 01       	movw	r22, r16
    55e2:	ce 01       	movw	r24, r28
    55e4:	d3 df       	rcall	.-90     	; 0x558c <NRF24L01_L_Set_TX_Address>
    55e6:	6f 2d       	mov	r22, r15
    55e8:	6a 60       	ori	r22, 0x0A	; 10
    55ea:	80 e2       	ldi	r24, 0x20	; 32
    55ec:	24 df       	rcall	.-440    	; 0x5436 <NRF24L01_L_WriteReg>
    55ee:	8f ed       	ldi	r24, 0xDF	; 223
    55f0:	9e e2       	ldi	r25, 0x2E	; 46
    55f2:	01 97       	sbiw	r24, 0x01	; 1
    55f4:	f1 f7       	brne	.-4      	; 0x55f2 <NRF24L01_L_Init_milad+0x5c>
    55f6:	00 c0       	rjmp	.+0      	; 0x55f8 <NRF24L01_L_Init_milad+0x62>
    55f8:	00 00       	nop
    55fa:	df 91       	pop	r29
    55fc:	cf 91       	pop	r28
    55fe:	1f 91       	pop	r17
    5600:	0f 91       	pop	r16
    5602:	ff 90       	pop	r15
    5604:	ef 90       	pop	r14
    5606:	df 90       	pop	r13
    5608:	cf 90       	pop	r12
    560a:	08 95       	ret

0000560c <NRF24L01_L_Write_TX_Buf>:
    560c:	ab 01       	movw	r20, r22
    560e:	bc 01       	movw	r22, r24
    5610:	80 ea       	ldi	r24, 0xA0	; 160
    5612:	6b cf       	rjmp	.-298    	; 0x54ea <NRF24L01_L_WriteRegBuf>
    5614:	08 95       	ret

00005616 <NRF24L01_L_Flush_TX>:

/**
 Empty the transmit buffer

*/
void NRF24L01_L_Flush_TX(void) {
    5616:	1f 93       	push	r17
    5618:	cf 93       	push	r28
    561a:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    561c:	c0 e8       	ldi	r28, 0x80	; 128
    561e:	d6 e0       	ldi	r29, 0x06	; 6
    5620:	10 e1       	ldi	r17, 0x10	; 16
    5622:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_TX);
    5624:	81 ee       	ldi	r24, 0xE1	; 225
    5626:	ee de       	rcall	.-548    	; 0x5404 <SPI_L>
	NRF24L01_L_CS_HIGH;
    5628:	1d 83       	std	Y+5, r17	; 0x05
}
    562a:	df 91       	pop	r29
    562c:	cf 91       	pop	r28
    562e:	1f 91       	pop	r17
    5630:	08 95       	ret

00005632 <NRF24L01_L_Flush_RX>:

/**
 Empty the receive buffer
*/
void NRF24L01_L_Flush_RX(void) {
    5632:	1f 93       	push	r17
    5634:	cf 93       	push	r28
    5636:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    5638:	c0 e8       	ldi	r28, 0x80	; 128
    563a:	d6 e0       	ldi	r29, 0x06	; 6
    563c:	10 e1       	ldi	r17, 0x10	; 16
    563e:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_RX);
    5640:	82 ee       	ldi	r24, 0xE2	; 226
    5642:	e0 de       	rcall	.-576    	; 0x5404 <SPI_L>
	NRF24L01_L_CS_HIGH;
    5644:	1d 83       	std	Y+5, r17	; 0x05
}
    5646:	df 91       	pop	r29
    5648:	cf 91       	pop	r28
    564a:	1f 91       	pop	r17
    564c:	08 95       	ret

0000564e <__udivmodsi4>:
    564e:	a1 e2       	ldi	r26, 0x21	; 33
    5650:	1a 2e       	mov	r1, r26
    5652:	aa 1b       	sub	r26, r26
    5654:	bb 1b       	sub	r27, r27
    5656:	fd 01       	movw	r30, r26
    5658:	0d c0       	rjmp	.+26     	; 0x5674 <__udivmodsi4_ep>

0000565a <__udivmodsi4_loop>:
    565a:	aa 1f       	adc	r26, r26
    565c:	bb 1f       	adc	r27, r27
    565e:	ee 1f       	adc	r30, r30
    5660:	ff 1f       	adc	r31, r31
    5662:	a2 17       	cp	r26, r18
    5664:	b3 07       	cpc	r27, r19
    5666:	e4 07       	cpc	r30, r20
    5668:	f5 07       	cpc	r31, r21
    566a:	20 f0       	brcs	.+8      	; 0x5674 <__udivmodsi4_ep>
    566c:	a2 1b       	sub	r26, r18
    566e:	b3 0b       	sbc	r27, r19
    5670:	e4 0b       	sbc	r30, r20
    5672:	f5 0b       	sbc	r31, r21

00005674 <__udivmodsi4_ep>:
    5674:	66 1f       	adc	r22, r22
    5676:	77 1f       	adc	r23, r23
    5678:	88 1f       	adc	r24, r24
    567a:	99 1f       	adc	r25, r25
    567c:	1a 94       	dec	r1
    567e:	69 f7       	brne	.-38     	; 0x565a <__udivmodsi4_loop>
    5680:	60 95       	com	r22
    5682:	70 95       	com	r23
    5684:	80 95       	com	r24
    5686:	90 95       	com	r25
    5688:	9b 01       	movw	r18, r22
    568a:	ac 01       	movw	r20, r24
    568c:	bd 01       	movw	r22, r26
    568e:	cf 01       	movw	r24, r30
    5690:	08 95       	ret

00005692 <__subsf3>:
    5692:	50 58       	subi	r21, 0x80	; 128

00005694 <__addsf3>:
    5694:	bb 27       	eor	r27, r27
    5696:	aa 27       	eor	r26, r26
    5698:	0e d0       	rcall	.+28     	; 0x56b6 <__addsf3x>
    569a:	4d c1       	rjmp	.+666    	; 0x5936 <__fp_round>
    569c:	3e d1       	rcall	.+636    	; 0x591a <__fp_pscA>
    569e:	30 f0       	brcs	.+12     	; 0x56ac <__addsf3+0x18>
    56a0:	43 d1       	rcall	.+646    	; 0x5928 <__fp_pscB>
    56a2:	20 f0       	brcs	.+8      	; 0x56ac <__addsf3+0x18>
    56a4:	31 f4       	brne	.+12     	; 0x56b2 <__addsf3+0x1e>
    56a6:	9f 3f       	cpi	r25, 0xFF	; 255
    56a8:	11 f4       	brne	.+4      	; 0x56ae <__addsf3+0x1a>
    56aa:	1e f4       	brtc	.+6      	; 0x56b2 <__addsf3+0x1e>
    56ac:	33 c1       	rjmp	.+614    	; 0x5914 <__fp_nan>
    56ae:	0e f4       	brtc	.+2      	; 0x56b2 <__addsf3+0x1e>
    56b0:	e0 95       	com	r30
    56b2:	e7 fb       	bst	r30, 7
    56b4:	29 c1       	rjmp	.+594    	; 0x5908 <__fp_inf>

000056b6 <__addsf3x>:
    56b6:	e9 2f       	mov	r30, r25
    56b8:	4f d1       	rcall	.+670    	; 0x5958 <__fp_split3>
    56ba:	80 f3       	brcs	.-32     	; 0x569c <__addsf3+0x8>
    56bc:	ba 17       	cp	r27, r26
    56be:	62 07       	cpc	r22, r18
    56c0:	73 07       	cpc	r23, r19
    56c2:	84 07       	cpc	r24, r20
    56c4:	95 07       	cpc	r25, r21
    56c6:	18 f0       	brcs	.+6      	; 0x56ce <__addsf3x+0x18>
    56c8:	71 f4       	brne	.+28     	; 0x56e6 <__addsf3x+0x30>
    56ca:	9e f5       	brtc	.+102    	; 0x5732 <__addsf3x+0x7c>
    56cc:	67 c1       	rjmp	.+718    	; 0x599c <__fp_zero>
    56ce:	0e f4       	brtc	.+2      	; 0x56d2 <__addsf3x+0x1c>
    56d0:	e0 95       	com	r30
    56d2:	0b 2e       	mov	r0, r27
    56d4:	ba 2f       	mov	r27, r26
    56d6:	a0 2d       	mov	r26, r0
    56d8:	0b 01       	movw	r0, r22
    56da:	b9 01       	movw	r22, r18
    56dc:	90 01       	movw	r18, r0
    56de:	0c 01       	movw	r0, r24
    56e0:	ca 01       	movw	r24, r20
    56e2:	a0 01       	movw	r20, r0
    56e4:	11 24       	eor	r1, r1
    56e6:	ff 27       	eor	r31, r31
    56e8:	59 1b       	sub	r21, r25
    56ea:	99 f0       	breq	.+38     	; 0x5712 <__addsf3x+0x5c>
    56ec:	59 3f       	cpi	r21, 0xF9	; 249
    56ee:	50 f4       	brcc	.+20     	; 0x5704 <__addsf3x+0x4e>
    56f0:	50 3e       	cpi	r21, 0xE0	; 224
    56f2:	68 f1       	brcs	.+90     	; 0x574e <__addsf3x+0x98>
    56f4:	1a 16       	cp	r1, r26
    56f6:	f0 40       	sbci	r31, 0x00	; 0
    56f8:	a2 2f       	mov	r26, r18
    56fa:	23 2f       	mov	r18, r19
    56fc:	34 2f       	mov	r19, r20
    56fe:	44 27       	eor	r20, r20
    5700:	58 5f       	subi	r21, 0xF8	; 248
    5702:	f3 cf       	rjmp	.-26     	; 0x56ea <__addsf3x+0x34>
    5704:	46 95       	lsr	r20
    5706:	37 95       	ror	r19
    5708:	27 95       	ror	r18
    570a:	a7 95       	ror	r26
    570c:	f0 40       	sbci	r31, 0x00	; 0
    570e:	53 95       	inc	r21
    5710:	c9 f7       	brne	.-14     	; 0x5704 <__addsf3x+0x4e>
    5712:	7e f4       	brtc	.+30     	; 0x5732 <__addsf3x+0x7c>
    5714:	1f 16       	cp	r1, r31
    5716:	ba 0b       	sbc	r27, r26
    5718:	62 0b       	sbc	r22, r18
    571a:	73 0b       	sbc	r23, r19
    571c:	84 0b       	sbc	r24, r20
    571e:	ba f0       	brmi	.+46     	; 0x574e <__addsf3x+0x98>
    5720:	91 50       	subi	r25, 0x01	; 1
    5722:	a1 f0       	breq	.+40     	; 0x574c <__addsf3x+0x96>
    5724:	ff 0f       	add	r31, r31
    5726:	bb 1f       	adc	r27, r27
    5728:	66 1f       	adc	r22, r22
    572a:	77 1f       	adc	r23, r23
    572c:	88 1f       	adc	r24, r24
    572e:	c2 f7       	brpl	.-16     	; 0x5720 <__addsf3x+0x6a>
    5730:	0e c0       	rjmp	.+28     	; 0x574e <__addsf3x+0x98>
    5732:	ba 0f       	add	r27, r26
    5734:	62 1f       	adc	r22, r18
    5736:	73 1f       	adc	r23, r19
    5738:	84 1f       	adc	r24, r20
    573a:	48 f4       	brcc	.+18     	; 0x574e <__addsf3x+0x98>
    573c:	87 95       	ror	r24
    573e:	77 95       	ror	r23
    5740:	67 95       	ror	r22
    5742:	b7 95       	ror	r27
    5744:	f7 95       	ror	r31
    5746:	9e 3f       	cpi	r25, 0xFE	; 254
    5748:	08 f0       	brcs	.+2      	; 0x574c <__addsf3x+0x96>
    574a:	b3 cf       	rjmp	.-154    	; 0x56b2 <__addsf3+0x1e>
    574c:	93 95       	inc	r25
    574e:	88 0f       	add	r24, r24
    5750:	08 f0       	brcs	.+2      	; 0x5754 <__addsf3x+0x9e>
    5752:	99 27       	eor	r25, r25
    5754:	ee 0f       	add	r30, r30
    5756:	97 95       	ror	r25
    5758:	87 95       	ror	r24
    575a:	08 95       	ret

0000575c <__divsf3>:
    575c:	0c d0       	rcall	.+24     	; 0x5776 <__divsf3x>
    575e:	eb c0       	rjmp	.+470    	; 0x5936 <__fp_round>
    5760:	e3 d0       	rcall	.+454    	; 0x5928 <__fp_pscB>
    5762:	40 f0       	brcs	.+16     	; 0x5774 <__divsf3+0x18>
    5764:	da d0       	rcall	.+436    	; 0x591a <__fp_pscA>
    5766:	30 f0       	brcs	.+12     	; 0x5774 <__divsf3+0x18>
    5768:	21 f4       	brne	.+8      	; 0x5772 <__divsf3+0x16>
    576a:	5f 3f       	cpi	r21, 0xFF	; 255
    576c:	19 f0       	breq	.+6      	; 0x5774 <__divsf3+0x18>
    576e:	cc c0       	rjmp	.+408    	; 0x5908 <__fp_inf>
    5770:	51 11       	cpse	r21, r1
    5772:	15 c1       	rjmp	.+554    	; 0x599e <__fp_szero>
    5774:	cf c0       	rjmp	.+414    	; 0x5914 <__fp_nan>

00005776 <__divsf3x>:
    5776:	f0 d0       	rcall	.+480    	; 0x5958 <__fp_split3>
    5778:	98 f3       	brcs	.-26     	; 0x5760 <__divsf3+0x4>

0000577a <__divsf3_pse>:
    577a:	99 23       	and	r25, r25
    577c:	c9 f3       	breq	.-14     	; 0x5770 <__divsf3+0x14>
    577e:	55 23       	and	r21, r21
    5780:	b1 f3       	breq	.-20     	; 0x576e <__divsf3+0x12>
    5782:	95 1b       	sub	r25, r21
    5784:	55 0b       	sbc	r21, r21
    5786:	bb 27       	eor	r27, r27
    5788:	aa 27       	eor	r26, r26
    578a:	62 17       	cp	r22, r18
    578c:	73 07       	cpc	r23, r19
    578e:	84 07       	cpc	r24, r20
    5790:	38 f0       	brcs	.+14     	; 0x57a0 <__divsf3_pse+0x26>
    5792:	9f 5f       	subi	r25, 0xFF	; 255
    5794:	5f 4f       	sbci	r21, 0xFF	; 255
    5796:	22 0f       	add	r18, r18
    5798:	33 1f       	adc	r19, r19
    579a:	44 1f       	adc	r20, r20
    579c:	aa 1f       	adc	r26, r26
    579e:	a9 f3       	breq	.-22     	; 0x578a <__divsf3_pse+0x10>
    57a0:	33 d0       	rcall	.+102    	; 0x5808 <__divsf3_pse+0x8e>
    57a2:	0e 2e       	mov	r0, r30
    57a4:	3a f0       	brmi	.+14     	; 0x57b4 <__divsf3_pse+0x3a>
    57a6:	e0 e8       	ldi	r30, 0x80	; 128
    57a8:	30 d0       	rcall	.+96     	; 0x580a <__divsf3_pse+0x90>
    57aa:	91 50       	subi	r25, 0x01	; 1
    57ac:	50 40       	sbci	r21, 0x00	; 0
    57ae:	e6 95       	lsr	r30
    57b0:	00 1c       	adc	r0, r0
    57b2:	ca f7       	brpl	.-14     	; 0x57a6 <__divsf3_pse+0x2c>
    57b4:	29 d0       	rcall	.+82     	; 0x5808 <__divsf3_pse+0x8e>
    57b6:	fe 2f       	mov	r31, r30
    57b8:	27 d0       	rcall	.+78     	; 0x5808 <__divsf3_pse+0x8e>
    57ba:	66 0f       	add	r22, r22
    57bc:	77 1f       	adc	r23, r23
    57be:	88 1f       	adc	r24, r24
    57c0:	bb 1f       	adc	r27, r27
    57c2:	26 17       	cp	r18, r22
    57c4:	37 07       	cpc	r19, r23
    57c6:	48 07       	cpc	r20, r24
    57c8:	ab 07       	cpc	r26, r27
    57ca:	b0 e8       	ldi	r27, 0x80	; 128
    57cc:	09 f0       	breq	.+2      	; 0x57d0 <__divsf3_pse+0x56>
    57ce:	bb 0b       	sbc	r27, r27
    57d0:	80 2d       	mov	r24, r0
    57d2:	bf 01       	movw	r22, r30
    57d4:	ff 27       	eor	r31, r31
    57d6:	93 58       	subi	r25, 0x83	; 131
    57d8:	5f 4f       	sbci	r21, 0xFF	; 255
    57da:	2a f0       	brmi	.+10     	; 0x57e6 <__divsf3_pse+0x6c>
    57dc:	9e 3f       	cpi	r25, 0xFE	; 254
    57de:	51 05       	cpc	r21, r1
    57e0:	68 f0       	brcs	.+26     	; 0x57fc <__divsf3_pse+0x82>
    57e2:	92 c0       	rjmp	.+292    	; 0x5908 <__fp_inf>
    57e4:	dc c0       	rjmp	.+440    	; 0x599e <__fp_szero>
    57e6:	5f 3f       	cpi	r21, 0xFF	; 255
    57e8:	ec f3       	brlt	.-6      	; 0x57e4 <__divsf3_pse+0x6a>
    57ea:	98 3e       	cpi	r25, 0xE8	; 232
    57ec:	dc f3       	brlt	.-10     	; 0x57e4 <__divsf3_pse+0x6a>
    57ee:	86 95       	lsr	r24
    57f0:	77 95       	ror	r23
    57f2:	67 95       	ror	r22
    57f4:	b7 95       	ror	r27
    57f6:	f7 95       	ror	r31
    57f8:	9f 5f       	subi	r25, 0xFF	; 255
    57fa:	c9 f7       	brne	.-14     	; 0x57ee <__divsf3_pse+0x74>
    57fc:	88 0f       	add	r24, r24
    57fe:	91 1d       	adc	r25, r1
    5800:	96 95       	lsr	r25
    5802:	87 95       	ror	r24
    5804:	97 f9       	bld	r25, 7
    5806:	08 95       	ret
    5808:	e1 e0       	ldi	r30, 0x01	; 1
    580a:	66 0f       	add	r22, r22
    580c:	77 1f       	adc	r23, r23
    580e:	88 1f       	adc	r24, r24
    5810:	bb 1f       	adc	r27, r27
    5812:	62 17       	cp	r22, r18
    5814:	73 07       	cpc	r23, r19
    5816:	84 07       	cpc	r24, r20
    5818:	ba 07       	cpc	r27, r26
    581a:	20 f0       	brcs	.+8      	; 0x5824 <__divsf3_pse+0xaa>
    581c:	62 1b       	sub	r22, r18
    581e:	73 0b       	sbc	r23, r19
    5820:	84 0b       	sbc	r24, r20
    5822:	ba 0b       	sbc	r27, r26
    5824:	ee 1f       	adc	r30, r30
    5826:	88 f7       	brcc	.-30     	; 0x580a <__divsf3_pse+0x90>
    5828:	e0 95       	com	r30
    582a:	08 95       	ret

0000582c <__fixsfsi>:
    582c:	04 d0       	rcall	.+8      	; 0x5836 <__fixunssfsi>
    582e:	68 94       	set
    5830:	b1 11       	cpse	r27, r1
    5832:	b5 c0       	rjmp	.+362    	; 0x599e <__fp_szero>
    5834:	08 95       	ret

00005836 <__fixunssfsi>:
    5836:	98 d0       	rcall	.+304    	; 0x5968 <__fp_splitA>
    5838:	88 f0       	brcs	.+34     	; 0x585c <__fixunssfsi+0x26>
    583a:	9f 57       	subi	r25, 0x7F	; 127
    583c:	90 f0       	brcs	.+36     	; 0x5862 <__fixunssfsi+0x2c>
    583e:	b9 2f       	mov	r27, r25
    5840:	99 27       	eor	r25, r25
    5842:	b7 51       	subi	r27, 0x17	; 23
    5844:	a0 f0       	brcs	.+40     	; 0x586e <__fixunssfsi+0x38>
    5846:	d1 f0       	breq	.+52     	; 0x587c <__fixunssfsi+0x46>
    5848:	66 0f       	add	r22, r22
    584a:	77 1f       	adc	r23, r23
    584c:	88 1f       	adc	r24, r24
    584e:	99 1f       	adc	r25, r25
    5850:	1a f0       	brmi	.+6      	; 0x5858 <__fixunssfsi+0x22>
    5852:	ba 95       	dec	r27
    5854:	c9 f7       	brne	.-14     	; 0x5848 <__fixunssfsi+0x12>
    5856:	12 c0       	rjmp	.+36     	; 0x587c <__fixunssfsi+0x46>
    5858:	b1 30       	cpi	r27, 0x01	; 1
    585a:	81 f0       	breq	.+32     	; 0x587c <__fixunssfsi+0x46>
    585c:	9f d0       	rcall	.+318    	; 0x599c <__fp_zero>
    585e:	b1 e0       	ldi	r27, 0x01	; 1
    5860:	08 95       	ret
    5862:	9c c0       	rjmp	.+312    	; 0x599c <__fp_zero>
    5864:	67 2f       	mov	r22, r23
    5866:	78 2f       	mov	r23, r24
    5868:	88 27       	eor	r24, r24
    586a:	b8 5f       	subi	r27, 0xF8	; 248
    586c:	39 f0       	breq	.+14     	; 0x587c <__fixunssfsi+0x46>
    586e:	b9 3f       	cpi	r27, 0xF9	; 249
    5870:	cc f3       	brlt	.-14     	; 0x5864 <__fixunssfsi+0x2e>
    5872:	86 95       	lsr	r24
    5874:	77 95       	ror	r23
    5876:	67 95       	ror	r22
    5878:	b3 95       	inc	r27
    587a:	d9 f7       	brne	.-10     	; 0x5872 <__fixunssfsi+0x3c>
    587c:	3e f4       	brtc	.+14     	; 0x588c <__fixunssfsi+0x56>
    587e:	90 95       	com	r25
    5880:	80 95       	com	r24
    5882:	70 95       	com	r23
    5884:	61 95       	neg	r22
    5886:	7f 4f       	sbci	r23, 0xFF	; 255
    5888:	8f 4f       	sbci	r24, 0xFF	; 255
    588a:	9f 4f       	sbci	r25, 0xFF	; 255
    588c:	08 95       	ret

0000588e <__floatunsisf>:
    588e:	e8 94       	clt
    5890:	09 c0       	rjmp	.+18     	; 0x58a4 <__floatsisf+0x12>

00005892 <__floatsisf>:
    5892:	97 fb       	bst	r25, 7
    5894:	3e f4       	brtc	.+14     	; 0x58a4 <__floatsisf+0x12>
    5896:	90 95       	com	r25
    5898:	80 95       	com	r24
    589a:	70 95       	com	r23
    589c:	61 95       	neg	r22
    589e:	7f 4f       	sbci	r23, 0xFF	; 255
    58a0:	8f 4f       	sbci	r24, 0xFF	; 255
    58a2:	9f 4f       	sbci	r25, 0xFF	; 255
    58a4:	99 23       	and	r25, r25
    58a6:	a9 f0       	breq	.+42     	; 0x58d2 <__floatsisf+0x40>
    58a8:	f9 2f       	mov	r31, r25
    58aa:	96 e9       	ldi	r25, 0x96	; 150
    58ac:	bb 27       	eor	r27, r27
    58ae:	93 95       	inc	r25
    58b0:	f6 95       	lsr	r31
    58b2:	87 95       	ror	r24
    58b4:	77 95       	ror	r23
    58b6:	67 95       	ror	r22
    58b8:	b7 95       	ror	r27
    58ba:	f1 11       	cpse	r31, r1
    58bc:	f8 cf       	rjmp	.-16     	; 0x58ae <__floatsisf+0x1c>
    58be:	fa f4       	brpl	.+62     	; 0x58fe <__floatsisf+0x6c>
    58c0:	bb 0f       	add	r27, r27
    58c2:	11 f4       	brne	.+4      	; 0x58c8 <__floatsisf+0x36>
    58c4:	60 ff       	sbrs	r22, 0
    58c6:	1b c0       	rjmp	.+54     	; 0x58fe <__floatsisf+0x6c>
    58c8:	6f 5f       	subi	r22, 0xFF	; 255
    58ca:	7f 4f       	sbci	r23, 0xFF	; 255
    58cc:	8f 4f       	sbci	r24, 0xFF	; 255
    58ce:	9f 4f       	sbci	r25, 0xFF	; 255
    58d0:	16 c0       	rjmp	.+44     	; 0x58fe <__floatsisf+0x6c>
    58d2:	88 23       	and	r24, r24
    58d4:	11 f0       	breq	.+4      	; 0x58da <__floatsisf+0x48>
    58d6:	96 e9       	ldi	r25, 0x96	; 150
    58d8:	11 c0       	rjmp	.+34     	; 0x58fc <__floatsisf+0x6a>
    58da:	77 23       	and	r23, r23
    58dc:	21 f0       	breq	.+8      	; 0x58e6 <__floatsisf+0x54>
    58de:	9e e8       	ldi	r25, 0x8E	; 142
    58e0:	87 2f       	mov	r24, r23
    58e2:	76 2f       	mov	r23, r22
    58e4:	05 c0       	rjmp	.+10     	; 0x58f0 <__floatsisf+0x5e>
    58e6:	66 23       	and	r22, r22
    58e8:	71 f0       	breq	.+28     	; 0x5906 <__floatsisf+0x74>
    58ea:	96 e8       	ldi	r25, 0x86	; 134
    58ec:	86 2f       	mov	r24, r22
    58ee:	70 e0       	ldi	r23, 0x00	; 0
    58f0:	60 e0       	ldi	r22, 0x00	; 0
    58f2:	2a f0       	brmi	.+10     	; 0x58fe <__floatsisf+0x6c>
    58f4:	9a 95       	dec	r25
    58f6:	66 0f       	add	r22, r22
    58f8:	77 1f       	adc	r23, r23
    58fa:	88 1f       	adc	r24, r24
    58fc:	da f7       	brpl	.-10     	; 0x58f4 <__floatsisf+0x62>
    58fe:	88 0f       	add	r24, r24
    5900:	96 95       	lsr	r25
    5902:	87 95       	ror	r24
    5904:	97 f9       	bld	r25, 7
    5906:	08 95       	ret

00005908 <__fp_inf>:
    5908:	97 f9       	bld	r25, 7
    590a:	9f 67       	ori	r25, 0x7F	; 127
    590c:	80 e8       	ldi	r24, 0x80	; 128
    590e:	70 e0       	ldi	r23, 0x00	; 0
    5910:	60 e0       	ldi	r22, 0x00	; 0
    5912:	08 95       	ret

00005914 <__fp_nan>:
    5914:	9f ef       	ldi	r25, 0xFF	; 255
    5916:	80 ec       	ldi	r24, 0xC0	; 192
    5918:	08 95       	ret

0000591a <__fp_pscA>:
    591a:	00 24       	eor	r0, r0
    591c:	0a 94       	dec	r0
    591e:	16 16       	cp	r1, r22
    5920:	17 06       	cpc	r1, r23
    5922:	18 06       	cpc	r1, r24
    5924:	09 06       	cpc	r0, r25
    5926:	08 95       	ret

00005928 <__fp_pscB>:
    5928:	00 24       	eor	r0, r0
    592a:	0a 94       	dec	r0
    592c:	12 16       	cp	r1, r18
    592e:	13 06       	cpc	r1, r19
    5930:	14 06       	cpc	r1, r20
    5932:	05 06       	cpc	r0, r21
    5934:	08 95       	ret

00005936 <__fp_round>:
    5936:	09 2e       	mov	r0, r25
    5938:	03 94       	inc	r0
    593a:	00 0c       	add	r0, r0
    593c:	11 f4       	brne	.+4      	; 0x5942 <__fp_round+0xc>
    593e:	88 23       	and	r24, r24
    5940:	52 f0       	brmi	.+20     	; 0x5956 <__fp_round+0x20>
    5942:	bb 0f       	add	r27, r27
    5944:	40 f4       	brcc	.+16     	; 0x5956 <__fp_round+0x20>
    5946:	bf 2b       	or	r27, r31
    5948:	11 f4       	brne	.+4      	; 0x594e <__fp_round+0x18>
    594a:	60 ff       	sbrs	r22, 0
    594c:	04 c0       	rjmp	.+8      	; 0x5956 <__fp_round+0x20>
    594e:	6f 5f       	subi	r22, 0xFF	; 255
    5950:	7f 4f       	sbci	r23, 0xFF	; 255
    5952:	8f 4f       	sbci	r24, 0xFF	; 255
    5954:	9f 4f       	sbci	r25, 0xFF	; 255
    5956:	08 95       	ret

00005958 <__fp_split3>:
    5958:	57 fd       	sbrc	r21, 7
    595a:	90 58       	subi	r25, 0x80	; 128
    595c:	44 0f       	add	r20, r20
    595e:	55 1f       	adc	r21, r21
    5960:	59 f0       	breq	.+22     	; 0x5978 <__fp_splitA+0x10>
    5962:	5f 3f       	cpi	r21, 0xFF	; 255
    5964:	71 f0       	breq	.+28     	; 0x5982 <__fp_splitA+0x1a>
    5966:	47 95       	ror	r20

00005968 <__fp_splitA>:
    5968:	88 0f       	add	r24, r24
    596a:	97 fb       	bst	r25, 7
    596c:	99 1f       	adc	r25, r25
    596e:	61 f0       	breq	.+24     	; 0x5988 <__fp_splitA+0x20>
    5970:	9f 3f       	cpi	r25, 0xFF	; 255
    5972:	79 f0       	breq	.+30     	; 0x5992 <__fp_splitA+0x2a>
    5974:	87 95       	ror	r24
    5976:	08 95       	ret
    5978:	12 16       	cp	r1, r18
    597a:	13 06       	cpc	r1, r19
    597c:	14 06       	cpc	r1, r20
    597e:	55 1f       	adc	r21, r21
    5980:	f2 cf       	rjmp	.-28     	; 0x5966 <__fp_split3+0xe>
    5982:	46 95       	lsr	r20
    5984:	f1 df       	rcall	.-30     	; 0x5968 <__fp_splitA>
    5986:	08 c0       	rjmp	.+16     	; 0x5998 <__fp_splitA+0x30>
    5988:	16 16       	cp	r1, r22
    598a:	17 06       	cpc	r1, r23
    598c:	18 06       	cpc	r1, r24
    598e:	99 1f       	adc	r25, r25
    5990:	f1 cf       	rjmp	.-30     	; 0x5974 <__fp_splitA+0xc>
    5992:	86 95       	lsr	r24
    5994:	71 05       	cpc	r23, r1
    5996:	61 05       	cpc	r22, r1
    5998:	08 94       	sec
    599a:	08 95       	ret

0000599c <__fp_zero>:
    599c:	e8 94       	clt

0000599e <__fp_szero>:
    599e:	bb 27       	eor	r27, r27
    59a0:	66 27       	eor	r22, r22
    59a2:	77 27       	eor	r23, r23
    59a4:	cb 01       	movw	r24, r22
    59a6:	97 f9       	bld	r25, 7
    59a8:	08 95       	ret

000059aa <__mulsf3>:
    59aa:	0b d0       	rcall	.+22     	; 0x59c2 <__mulsf3x>
    59ac:	c4 cf       	rjmp	.-120    	; 0x5936 <__fp_round>
    59ae:	b5 df       	rcall	.-150    	; 0x591a <__fp_pscA>
    59b0:	28 f0       	brcs	.+10     	; 0x59bc <__mulsf3+0x12>
    59b2:	ba df       	rcall	.-140    	; 0x5928 <__fp_pscB>
    59b4:	18 f0       	brcs	.+6      	; 0x59bc <__mulsf3+0x12>
    59b6:	95 23       	and	r25, r21
    59b8:	09 f0       	breq	.+2      	; 0x59bc <__mulsf3+0x12>
    59ba:	a6 cf       	rjmp	.-180    	; 0x5908 <__fp_inf>
    59bc:	ab cf       	rjmp	.-170    	; 0x5914 <__fp_nan>
    59be:	11 24       	eor	r1, r1
    59c0:	ee cf       	rjmp	.-36     	; 0x599e <__fp_szero>

000059c2 <__mulsf3x>:
    59c2:	ca df       	rcall	.-108    	; 0x5958 <__fp_split3>
    59c4:	a0 f3       	brcs	.-24     	; 0x59ae <__mulsf3+0x4>

000059c6 <__mulsf3_pse>:
    59c6:	95 9f       	mul	r25, r21
    59c8:	d1 f3       	breq	.-12     	; 0x59be <__mulsf3+0x14>
    59ca:	95 0f       	add	r25, r21
    59cc:	50 e0       	ldi	r21, 0x00	; 0
    59ce:	55 1f       	adc	r21, r21
    59d0:	62 9f       	mul	r22, r18
    59d2:	f0 01       	movw	r30, r0
    59d4:	72 9f       	mul	r23, r18
    59d6:	bb 27       	eor	r27, r27
    59d8:	f0 0d       	add	r31, r0
    59da:	b1 1d       	adc	r27, r1
    59dc:	63 9f       	mul	r22, r19
    59de:	aa 27       	eor	r26, r26
    59e0:	f0 0d       	add	r31, r0
    59e2:	b1 1d       	adc	r27, r1
    59e4:	aa 1f       	adc	r26, r26
    59e6:	64 9f       	mul	r22, r20
    59e8:	66 27       	eor	r22, r22
    59ea:	b0 0d       	add	r27, r0
    59ec:	a1 1d       	adc	r26, r1
    59ee:	66 1f       	adc	r22, r22
    59f0:	82 9f       	mul	r24, r18
    59f2:	22 27       	eor	r18, r18
    59f4:	b0 0d       	add	r27, r0
    59f6:	a1 1d       	adc	r26, r1
    59f8:	62 1f       	adc	r22, r18
    59fa:	73 9f       	mul	r23, r19
    59fc:	b0 0d       	add	r27, r0
    59fe:	a1 1d       	adc	r26, r1
    5a00:	62 1f       	adc	r22, r18
    5a02:	83 9f       	mul	r24, r19
    5a04:	a0 0d       	add	r26, r0
    5a06:	61 1d       	adc	r22, r1
    5a08:	22 1f       	adc	r18, r18
    5a0a:	74 9f       	mul	r23, r20
    5a0c:	33 27       	eor	r19, r19
    5a0e:	a0 0d       	add	r26, r0
    5a10:	61 1d       	adc	r22, r1
    5a12:	23 1f       	adc	r18, r19
    5a14:	84 9f       	mul	r24, r20
    5a16:	60 0d       	add	r22, r0
    5a18:	21 1d       	adc	r18, r1
    5a1a:	82 2f       	mov	r24, r18
    5a1c:	76 2f       	mov	r23, r22
    5a1e:	6a 2f       	mov	r22, r26
    5a20:	11 24       	eor	r1, r1
    5a22:	9f 57       	subi	r25, 0x7F	; 127
    5a24:	50 40       	sbci	r21, 0x00	; 0
    5a26:	8a f0       	brmi	.+34     	; 0x5a4a <__mulsf3_pse+0x84>
    5a28:	e1 f0       	breq	.+56     	; 0x5a62 <__mulsf3_pse+0x9c>
    5a2a:	88 23       	and	r24, r24
    5a2c:	4a f0       	brmi	.+18     	; 0x5a40 <__mulsf3_pse+0x7a>
    5a2e:	ee 0f       	add	r30, r30
    5a30:	ff 1f       	adc	r31, r31
    5a32:	bb 1f       	adc	r27, r27
    5a34:	66 1f       	adc	r22, r22
    5a36:	77 1f       	adc	r23, r23
    5a38:	88 1f       	adc	r24, r24
    5a3a:	91 50       	subi	r25, 0x01	; 1
    5a3c:	50 40       	sbci	r21, 0x00	; 0
    5a3e:	a9 f7       	brne	.-22     	; 0x5a2a <__mulsf3_pse+0x64>
    5a40:	9e 3f       	cpi	r25, 0xFE	; 254
    5a42:	51 05       	cpc	r21, r1
    5a44:	70 f0       	brcs	.+28     	; 0x5a62 <__mulsf3_pse+0x9c>
    5a46:	60 cf       	rjmp	.-320    	; 0x5908 <__fp_inf>
    5a48:	aa cf       	rjmp	.-172    	; 0x599e <__fp_szero>
    5a4a:	5f 3f       	cpi	r21, 0xFF	; 255
    5a4c:	ec f3       	brlt	.-6      	; 0x5a48 <__mulsf3_pse+0x82>
    5a4e:	98 3e       	cpi	r25, 0xE8	; 232
    5a50:	dc f3       	brlt	.-10     	; 0x5a48 <__mulsf3_pse+0x82>
    5a52:	86 95       	lsr	r24
    5a54:	77 95       	ror	r23
    5a56:	67 95       	ror	r22
    5a58:	b7 95       	ror	r27
    5a5a:	f7 95       	ror	r31
    5a5c:	e7 95       	ror	r30
    5a5e:	9f 5f       	subi	r25, 0xFF	; 255
    5a60:	c1 f7       	brne	.-16     	; 0x5a52 <__mulsf3_pse+0x8c>
    5a62:	fe 2b       	or	r31, r30
    5a64:	88 0f       	add	r24, r24
    5a66:	91 1d       	adc	r25, r1
    5a68:	96 95       	lsr	r25
    5a6a:	87 95       	ror	r24
    5a6c:	97 f9       	bld	r25, 7
    5a6e:	08 95       	ret

00005a70 <sprintf>:
    5a70:	0f 93       	push	r16
    5a72:	1f 93       	push	r17
    5a74:	cf 93       	push	r28
    5a76:	df 93       	push	r29
    5a78:	cd b7       	in	r28, 0x3d	; 61
    5a7a:	de b7       	in	r29, 0x3e	; 62
    5a7c:	2e 97       	sbiw	r28, 0x0e	; 14
    5a7e:	cd bf       	out	0x3d, r28	; 61
    5a80:	de bf       	out	0x3e, r29	; 62
    5a82:	0e 89       	ldd	r16, Y+22	; 0x16
    5a84:	1f 89       	ldd	r17, Y+23	; 0x17
    5a86:	86 e0       	ldi	r24, 0x06	; 6
    5a88:	8c 83       	std	Y+4, r24	; 0x04
    5a8a:	09 83       	std	Y+1, r16	; 0x01
    5a8c:	1a 83       	std	Y+2, r17	; 0x02
    5a8e:	8f ef       	ldi	r24, 0xFF	; 255
    5a90:	9f e7       	ldi	r25, 0x7F	; 127
    5a92:	8d 83       	std	Y+5, r24	; 0x05
    5a94:	9e 83       	std	Y+6, r25	; 0x06
    5a96:	ae 01       	movw	r20, r28
    5a98:	46 5e       	subi	r20, 0xE6	; 230
    5a9a:	5f 4f       	sbci	r21, 0xFF	; 255
    5a9c:	68 8d       	ldd	r22, Y+24	; 0x18
    5a9e:	79 8d       	ldd	r23, Y+25	; 0x19
    5aa0:	ce 01       	movw	r24, r28
    5aa2:	01 96       	adiw	r24, 0x01	; 1
    5aa4:	0d d0       	rcall	.+26     	; 0x5ac0 <vfprintf>
    5aa6:	ef 81       	ldd	r30, Y+7	; 0x07
    5aa8:	f8 85       	ldd	r31, Y+8	; 0x08
    5aaa:	e0 0f       	add	r30, r16
    5aac:	f1 1f       	adc	r31, r17
    5aae:	10 82       	st	Z, r1
    5ab0:	2e 96       	adiw	r28, 0x0e	; 14
    5ab2:	cd bf       	out	0x3d, r28	; 61
    5ab4:	de bf       	out	0x3e, r29	; 62
    5ab6:	df 91       	pop	r29
    5ab8:	cf 91       	pop	r28
    5aba:	1f 91       	pop	r17
    5abc:	0f 91       	pop	r16
    5abe:	08 95       	ret

00005ac0 <vfprintf>:
    5ac0:	2f 92       	push	r2
    5ac2:	3f 92       	push	r3
    5ac4:	4f 92       	push	r4
    5ac6:	5f 92       	push	r5
    5ac8:	6f 92       	push	r6
    5aca:	7f 92       	push	r7
    5acc:	8f 92       	push	r8
    5ace:	9f 92       	push	r9
    5ad0:	af 92       	push	r10
    5ad2:	bf 92       	push	r11
    5ad4:	cf 92       	push	r12
    5ad6:	df 92       	push	r13
    5ad8:	ef 92       	push	r14
    5ada:	ff 92       	push	r15
    5adc:	0f 93       	push	r16
    5ade:	1f 93       	push	r17
    5ae0:	cf 93       	push	r28
    5ae2:	df 93       	push	r29
    5ae4:	cd b7       	in	r28, 0x3d	; 61
    5ae6:	de b7       	in	r29, 0x3e	; 62
    5ae8:	2c 97       	sbiw	r28, 0x0c	; 12
    5aea:	cd bf       	out	0x3d, r28	; 61
    5aec:	de bf       	out	0x3e, r29	; 62
    5aee:	7c 01       	movw	r14, r24
    5af0:	6b 01       	movw	r12, r22
    5af2:	8a 01       	movw	r16, r20
    5af4:	fc 01       	movw	r30, r24
    5af6:	16 82       	std	Z+6, r1	; 0x06
    5af8:	17 82       	std	Z+7, r1	; 0x07
    5afa:	83 81       	ldd	r24, Z+3	; 0x03
    5afc:	81 ff       	sbrs	r24, 1
    5afe:	b0 c1       	rjmp	.+864    	; 0x5e60 <vfprintf+0x3a0>
    5b00:	ce 01       	movw	r24, r28
    5b02:	01 96       	adiw	r24, 0x01	; 1
    5b04:	4c 01       	movw	r8, r24
    5b06:	f7 01       	movw	r30, r14
    5b08:	93 81       	ldd	r25, Z+3	; 0x03
    5b0a:	f6 01       	movw	r30, r12
    5b0c:	93 fd       	sbrc	r25, 3
    5b0e:	85 91       	lpm	r24, Z+
    5b10:	93 ff       	sbrs	r25, 3
    5b12:	81 91       	ld	r24, Z+
    5b14:	6f 01       	movw	r12, r30
    5b16:	88 23       	and	r24, r24
    5b18:	09 f4       	brne	.+2      	; 0x5b1c <vfprintf+0x5c>
    5b1a:	9e c1       	rjmp	.+828    	; 0x5e58 <vfprintf+0x398>
    5b1c:	85 32       	cpi	r24, 0x25	; 37
    5b1e:	39 f4       	brne	.+14     	; 0x5b2e <vfprintf+0x6e>
    5b20:	93 fd       	sbrc	r25, 3
    5b22:	85 91       	lpm	r24, Z+
    5b24:	93 ff       	sbrs	r25, 3
    5b26:	81 91       	ld	r24, Z+
    5b28:	6f 01       	movw	r12, r30
    5b2a:	85 32       	cpi	r24, 0x25	; 37
    5b2c:	21 f4       	brne	.+8      	; 0x5b36 <vfprintf+0x76>
    5b2e:	b7 01       	movw	r22, r14
    5b30:	90 e0       	ldi	r25, 0x00	; 0
    5b32:	c4 d1       	rcall	.+904    	; 0x5ebc <fputc>
    5b34:	e8 cf       	rjmp	.-48     	; 0x5b06 <vfprintf+0x46>
    5b36:	51 2c       	mov	r5, r1
    5b38:	31 2c       	mov	r3, r1
    5b3a:	20 e0       	ldi	r18, 0x00	; 0
    5b3c:	20 32       	cpi	r18, 0x20	; 32
    5b3e:	a0 f4       	brcc	.+40     	; 0x5b68 <vfprintf+0xa8>
    5b40:	8b 32       	cpi	r24, 0x2B	; 43
    5b42:	69 f0       	breq	.+26     	; 0x5b5e <vfprintf+0x9e>
    5b44:	30 f4       	brcc	.+12     	; 0x5b52 <vfprintf+0x92>
    5b46:	80 32       	cpi	r24, 0x20	; 32
    5b48:	59 f0       	breq	.+22     	; 0x5b60 <vfprintf+0xa0>
    5b4a:	83 32       	cpi	r24, 0x23	; 35
    5b4c:	69 f4       	brne	.+26     	; 0x5b68 <vfprintf+0xa8>
    5b4e:	20 61       	ori	r18, 0x10	; 16
    5b50:	2c c0       	rjmp	.+88     	; 0x5baa <vfprintf+0xea>
    5b52:	8d 32       	cpi	r24, 0x2D	; 45
    5b54:	39 f0       	breq	.+14     	; 0x5b64 <vfprintf+0xa4>
    5b56:	80 33       	cpi	r24, 0x30	; 48
    5b58:	39 f4       	brne	.+14     	; 0x5b68 <vfprintf+0xa8>
    5b5a:	21 60       	ori	r18, 0x01	; 1
    5b5c:	26 c0       	rjmp	.+76     	; 0x5baa <vfprintf+0xea>
    5b5e:	22 60       	ori	r18, 0x02	; 2
    5b60:	24 60       	ori	r18, 0x04	; 4
    5b62:	23 c0       	rjmp	.+70     	; 0x5baa <vfprintf+0xea>
    5b64:	28 60       	ori	r18, 0x08	; 8
    5b66:	21 c0       	rjmp	.+66     	; 0x5baa <vfprintf+0xea>
    5b68:	27 fd       	sbrc	r18, 7
    5b6a:	27 c0       	rjmp	.+78     	; 0x5bba <vfprintf+0xfa>
    5b6c:	30 ed       	ldi	r19, 0xD0	; 208
    5b6e:	38 0f       	add	r19, r24
    5b70:	3a 30       	cpi	r19, 0x0A	; 10
    5b72:	78 f4       	brcc	.+30     	; 0x5b92 <vfprintf+0xd2>
    5b74:	26 ff       	sbrs	r18, 6
    5b76:	06 c0       	rjmp	.+12     	; 0x5b84 <vfprintf+0xc4>
    5b78:	fa e0       	ldi	r31, 0x0A	; 10
    5b7a:	5f 9e       	mul	r5, r31
    5b7c:	30 0d       	add	r19, r0
    5b7e:	11 24       	eor	r1, r1
    5b80:	53 2e       	mov	r5, r19
    5b82:	13 c0       	rjmp	.+38     	; 0x5baa <vfprintf+0xea>
    5b84:	8a e0       	ldi	r24, 0x0A	; 10
    5b86:	38 9e       	mul	r3, r24
    5b88:	30 0d       	add	r19, r0
    5b8a:	11 24       	eor	r1, r1
    5b8c:	33 2e       	mov	r3, r19
    5b8e:	20 62       	ori	r18, 0x20	; 32
    5b90:	0c c0       	rjmp	.+24     	; 0x5baa <vfprintf+0xea>
    5b92:	8e 32       	cpi	r24, 0x2E	; 46
    5b94:	21 f4       	brne	.+8      	; 0x5b9e <vfprintf+0xde>
    5b96:	26 fd       	sbrc	r18, 6
    5b98:	5f c1       	rjmp	.+702    	; 0x5e58 <vfprintf+0x398>
    5b9a:	20 64       	ori	r18, 0x40	; 64
    5b9c:	06 c0       	rjmp	.+12     	; 0x5baa <vfprintf+0xea>
    5b9e:	8c 36       	cpi	r24, 0x6C	; 108
    5ba0:	11 f4       	brne	.+4      	; 0x5ba6 <vfprintf+0xe6>
    5ba2:	20 68       	ori	r18, 0x80	; 128
    5ba4:	02 c0       	rjmp	.+4      	; 0x5baa <vfprintf+0xea>
    5ba6:	88 36       	cpi	r24, 0x68	; 104
    5ba8:	41 f4       	brne	.+16     	; 0x5bba <vfprintf+0xfa>
    5baa:	f6 01       	movw	r30, r12
    5bac:	93 fd       	sbrc	r25, 3
    5bae:	85 91       	lpm	r24, Z+
    5bb0:	93 ff       	sbrs	r25, 3
    5bb2:	81 91       	ld	r24, Z+
    5bb4:	6f 01       	movw	r12, r30
    5bb6:	81 11       	cpse	r24, r1
    5bb8:	c1 cf       	rjmp	.-126    	; 0x5b3c <vfprintf+0x7c>
    5bba:	98 2f       	mov	r25, r24
    5bbc:	9f 7d       	andi	r25, 0xDF	; 223
    5bbe:	95 54       	subi	r25, 0x45	; 69
    5bc0:	93 30       	cpi	r25, 0x03	; 3
    5bc2:	28 f4       	brcc	.+10     	; 0x5bce <vfprintf+0x10e>
    5bc4:	0c 5f       	subi	r16, 0xFC	; 252
    5bc6:	1f 4f       	sbci	r17, 0xFF	; 255
    5bc8:	ff e3       	ldi	r31, 0x3F	; 63
    5bca:	f9 83       	std	Y+1, r31	; 0x01
    5bcc:	0d c0       	rjmp	.+26     	; 0x5be8 <vfprintf+0x128>
    5bce:	83 36       	cpi	r24, 0x63	; 99
    5bd0:	31 f0       	breq	.+12     	; 0x5bde <vfprintf+0x11e>
    5bd2:	83 37       	cpi	r24, 0x73	; 115
    5bd4:	71 f0       	breq	.+28     	; 0x5bf2 <vfprintf+0x132>
    5bd6:	83 35       	cpi	r24, 0x53	; 83
    5bd8:	09 f0       	breq	.+2      	; 0x5bdc <vfprintf+0x11c>
    5bda:	57 c0       	rjmp	.+174    	; 0x5c8a <vfprintf+0x1ca>
    5bdc:	21 c0       	rjmp	.+66     	; 0x5c20 <vfprintf+0x160>
    5bde:	f8 01       	movw	r30, r16
    5be0:	80 81       	ld	r24, Z
    5be2:	89 83       	std	Y+1, r24	; 0x01
    5be4:	0e 5f       	subi	r16, 0xFE	; 254
    5be6:	1f 4f       	sbci	r17, 0xFF	; 255
    5be8:	44 24       	eor	r4, r4
    5bea:	43 94       	inc	r4
    5bec:	51 2c       	mov	r5, r1
    5bee:	54 01       	movw	r10, r8
    5bf0:	14 c0       	rjmp	.+40     	; 0x5c1a <vfprintf+0x15a>
    5bf2:	38 01       	movw	r6, r16
    5bf4:	f2 e0       	ldi	r31, 0x02	; 2
    5bf6:	6f 0e       	add	r6, r31
    5bf8:	71 1c       	adc	r7, r1
    5bfa:	f8 01       	movw	r30, r16
    5bfc:	a0 80       	ld	r10, Z
    5bfe:	b1 80       	ldd	r11, Z+1	; 0x01
    5c00:	26 ff       	sbrs	r18, 6
    5c02:	03 c0       	rjmp	.+6      	; 0x5c0a <vfprintf+0x14a>
    5c04:	65 2d       	mov	r22, r5
    5c06:	70 e0       	ldi	r23, 0x00	; 0
    5c08:	02 c0       	rjmp	.+4      	; 0x5c0e <vfprintf+0x14e>
    5c0a:	6f ef       	ldi	r22, 0xFF	; 255
    5c0c:	7f ef       	ldi	r23, 0xFF	; 255
    5c0e:	c5 01       	movw	r24, r10
    5c10:	2c 87       	std	Y+12, r18	; 0x0c
    5c12:	49 d1       	rcall	.+658    	; 0x5ea6 <strnlen>
    5c14:	2c 01       	movw	r4, r24
    5c16:	83 01       	movw	r16, r6
    5c18:	2c 85       	ldd	r18, Y+12	; 0x0c
    5c1a:	2f 77       	andi	r18, 0x7F	; 127
    5c1c:	22 2e       	mov	r2, r18
    5c1e:	16 c0       	rjmp	.+44     	; 0x5c4c <vfprintf+0x18c>
    5c20:	38 01       	movw	r6, r16
    5c22:	f2 e0       	ldi	r31, 0x02	; 2
    5c24:	6f 0e       	add	r6, r31
    5c26:	71 1c       	adc	r7, r1
    5c28:	f8 01       	movw	r30, r16
    5c2a:	a0 80       	ld	r10, Z
    5c2c:	b1 80       	ldd	r11, Z+1	; 0x01
    5c2e:	26 ff       	sbrs	r18, 6
    5c30:	03 c0       	rjmp	.+6      	; 0x5c38 <vfprintf+0x178>
    5c32:	65 2d       	mov	r22, r5
    5c34:	70 e0       	ldi	r23, 0x00	; 0
    5c36:	02 c0       	rjmp	.+4      	; 0x5c3c <vfprintf+0x17c>
    5c38:	6f ef       	ldi	r22, 0xFF	; 255
    5c3a:	7f ef       	ldi	r23, 0xFF	; 255
    5c3c:	c5 01       	movw	r24, r10
    5c3e:	2c 87       	std	Y+12, r18	; 0x0c
    5c40:	27 d1       	rcall	.+590    	; 0x5e90 <strnlen_P>
    5c42:	2c 01       	movw	r4, r24
    5c44:	2c 85       	ldd	r18, Y+12	; 0x0c
    5c46:	20 68       	ori	r18, 0x80	; 128
    5c48:	22 2e       	mov	r2, r18
    5c4a:	83 01       	movw	r16, r6
    5c4c:	23 fc       	sbrc	r2, 3
    5c4e:	19 c0       	rjmp	.+50     	; 0x5c82 <vfprintf+0x1c2>
    5c50:	83 2d       	mov	r24, r3
    5c52:	90 e0       	ldi	r25, 0x00	; 0
    5c54:	48 16       	cp	r4, r24
    5c56:	59 06       	cpc	r5, r25
    5c58:	a0 f4       	brcc	.+40     	; 0x5c82 <vfprintf+0x1c2>
    5c5a:	b7 01       	movw	r22, r14
    5c5c:	80 e2       	ldi	r24, 0x20	; 32
    5c5e:	90 e0       	ldi	r25, 0x00	; 0
    5c60:	2d d1       	rcall	.+602    	; 0x5ebc <fputc>
    5c62:	3a 94       	dec	r3
    5c64:	f5 cf       	rjmp	.-22     	; 0x5c50 <vfprintf+0x190>
    5c66:	f5 01       	movw	r30, r10
    5c68:	27 fc       	sbrc	r2, 7
    5c6a:	85 91       	lpm	r24, Z+
    5c6c:	27 fe       	sbrs	r2, 7
    5c6e:	81 91       	ld	r24, Z+
    5c70:	5f 01       	movw	r10, r30
    5c72:	b7 01       	movw	r22, r14
    5c74:	90 e0       	ldi	r25, 0x00	; 0
    5c76:	22 d1       	rcall	.+580    	; 0x5ebc <fputc>
    5c78:	31 10       	cpse	r3, r1
    5c7a:	3a 94       	dec	r3
    5c7c:	f1 e0       	ldi	r31, 0x01	; 1
    5c7e:	4f 1a       	sub	r4, r31
    5c80:	51 08       	sbc	r5, r1
    5c82:	41 14       	cp	r4, r1
    5c84:	51 04       	cpc	r5, r1
    5c86:	79 f7       	brne	.-34     	; 0x5c66 <vfprintf+0x1a6>
    5c88:	de c0       	rjmp	.+444    	; 0x5e46 <vfprintf+0x386>
    5c8a:	84 36       	cpi	r24, 0x64	; 100
    5c8c:	11 f0       	breq	.+4      	; 0x5c92 <vfprintf+0x1d2>
    5c8e:	89 36       	cpi	r24, 0x69	; 105
    5c90:	31 f5       	brne	.+76     	; 0x5cde <vfprintf+0x21e>
    5c92:	f8 01       	movw	r30, r16
    5c94:	27 ff       	sbrs	r18, 7
    5c96:	07 c0       	rjmp	.+14     	; 0x5ca6 <vfprintf+0x1e6>
    5c98:	60 81       	ld	r22, Z
    5c9a:	71 81       	ldd	r23, Z+1	; 0x01
    5c9c:	82 81       	ldd	r24, Z+2	; 0x02
    5c9e:	93 81       	ldd	r25, Z+3	; 0x03
    5ca0:	0c 5f       	subi	r16, 0xFC	; 252
    5ca2:	1f 4f       	sbci	r17, 0xFF	; 255
    5ca4:	08 c0       	rjmp	.+16     	; 0x5cb6 <vfprintf+0x1f6>
    5ca6:	60 81       	ld	r22, Z
    5ca8:	71 81       	ldd	r23, Z+1	; 0x01
    5caa:	88 27       	eor	r24, r24
    5cac:	77 fd       	sbrc	r23, 7
    5cae:	80 95       	com	r24
    5cb0:	98 2f       	mov	r25, r24
    5cb2:	0e 5f       	subi	r16, 0xFE	; 254
    5cb4:	1f 4f       	sbci	r17, 0xFF	; 255
    5cb6:	2f 76       	andi	r18, 0x6F	; 111
    5cb8:	b2 2e       	mov	r11, r18
    5cba:	97 ff       	sbrs	r25, 7
    5cbc:	09 c0       	rjmp	.+18     	; 0x5cd0 <vfprintf+0x210>
    5cbe:	90 95       	com	r25
    5cc0:	80 95       	com	r24
    5cc2:	70 95       	com	r23
    5cc4:	61 95       	neg	r22
    5cc6:	7f 4f       	sbci	r23, 0xFF	; 255
    5cc8:	8f 4f       	sbci	r24, 0xFF	; 255
    5cca:	9f 4f       	sbci	r25, 0xFF	; 255
    5ccc:	20 68       	ori	r18, 0x80	; 128
    5cce:	b2 2e       	mov	r11, r18
    5cd0:	2a e0       	ldi	r18, 0x0A	; 10
    5cd2:	30 e0       	ldi	r19, 0x00	; 0
    5cd4:	a4 01       	movw	r20, r8
    5cd6:	24 d1       	rcall	.+584    	; 0x5f20 <__ultoa_invert>
    5cd8:	a8 2e       	mov	r10, r24
    5cda:	a8 18       	sub	r10, r8
    5cdc:	43 c0       	rjmp	.+134    	; 0x5d64 <vfprintf+0x2a4>
    5cde:	85 37       	cpi	r24, 0x75	; 117
    5ce0:	29 f4       	brne	.+10     	; 0x5cec <vfprintf+0x22c>
    5ce2:	2f 7e       	andi	r18, 0xEF	; 239
    5ce4:	b2 2e       	mov	r11, r18
    5ce6:	2a e0       	ldi	r18, 0x0A	; 10
    5ce8:	30 e0       	ldi	r19, 0x00	; 0
    5cea:	25 c0       	rjmp	.+74     	; 0x5d36 <vfprintf+0x276>
    5cec:	f2 2f       	mov	r31, r18
    5cee:	f9 7f       	andi	r31, 0xF9	; 249
    5cf0:	bf 2e       	mov	r11, r31
    5cf2:	8f 36       	cpi	r24, 0x6F	; 111
    5cf4:	c1 f0       	breq	.+48     	; 0x5d26 <vfprintf+0x266>
    5cf6:	18 f4       	brcc	.+6      	; 0x5cfe <vfprintf+0x23e>
    5cf8:	88 35       	cpi	r24, 0x58	; 88
    5cfa:	79 f0       	breq	.+30     	; 0x5d1a <vfprintf+0x25a>
    5cfc:	ad c0       	rjmp	.+346    	; 0x5e58 <vfprintf+0x398>
    5cfe:	80 37       	cpi	r24, 0x70	; 112
    5d00:	19 f0       	breq	.+6      	; 0x5d08 <vfprintf+0x248>
    5d02:	88 37       	cpi	r24, 0x78	; 120
    5d04:	21 f0       	breq	.+8      	; 0x5d0e <vfprintf+0x24e>
    5d06:	a8 c0       	rjmp	.+336    	; 0x5e58 <vfprintf+0x398>
    5d08:	2f 2f       	mov	r18, r31
    5d0a:	20 61       	ori	r18, 0x10	; 16
    5d0c:	b2 2e       	mov	r11, r18
    5d0e:	b4 fe       	sbrs	r11, 4
    5d10:	0d c0       	rjmp	.+26     	; 0x5d2c <vfprintf+0x26c>
    5d12:	8b 2d       	mov	r24, r11
    5d14:	84 60       	ori	r24, 0x04	; 4
    5d16:	b8 2e       	mov	r11, r24
    5d18:	09 c0       	rjmp	.+18     	; 0x5d2c <vfprintf+0x26c>
    5d1a:	24 ff       	sbrs	r18, 4
    5d1c:	0a c0       	rjmp	.+20     	; 0x5d32 <vfprintf+0x272>
    5d1e:	9f 2f       	mov	r25, r31
    5d20:	96 60       	ori	r25, 0x06	; 6
    5d22:	b9 2e       	mov	r11, r25
    5d24:	06 c0       	rjmp	.+12     	; 0x5d32 <vfprintf+0x272>
    5d26:	28 e0       	ldi	r18, 0x08	; 8
    5d28:	30 e0       	ldi	r19, 0x00	; 0
    5d2a:	05 c0       	rjmp	.+10     	; 0x5d36 <vfprintf+0x276>
    5d2c:	20 e1       	ldi	r18, 0x10	; 16
    5d2e:	30 e0       	ldi	r19, 0x00	; 0
    5d30:	02 c0       	rjmp	.+4      	; 0x5d36 <vfprintf+0x276>
    5d32:	20 e1       	ldi	r18, 0x10	; 16
    5d34:	32 e0       	ldi	r19, 0x02	; 2
    5d36:	f8 01       	movw	r30, r16
    5d38:	b7 fe       	sbrs	r11, 7
    5d3a:	07 c0       	rjmp	.+14     	; 0x5d4a <vfprintf+0x28a>
    5d3c:	60 81       	ld	r22, Z
    5d3e:	71 81       	ldd	r23, Z+1	; 0x01
    5d40:	82 81       	ldd	r24, Z+2	; 0x02
    5d42:	93 81       	ldd	r25, Z+3	; 0x03
    5d44:	0c 5f       	subi	r16, 0xFC	; 252
    5d46:	1f 4f       	sbci	r17, 0xFF	; 255
    5d48:	06 c0       	rjmp	.+12     	; 0x5d56 <vfprintf+0x296>
    5d4a:	60 81       	ld	r22, Z
    5d4c:	71 81       	ldd	r23, Z+1	; 0x01
    5d4e:	80 e0       	ldi	r24, 0x00	; 0
    5d50:	90 e0       	ldi	r25, 0x00	; 0
    5d52:	0e 5f       	subi	r16, 0xFE	; 254
    5d54:	1f 4f       	sbci	r17, 0xFF	; 255
    5d56:	a4 01       	movw	r20, r8
    5d58:	e3 d0       	rcall	.+454    	; 0x5f20 <__ultoa_invert>
    5d5a:	a8 2e       	mov	r10, r24
    5d5c:	a8 18       	sub	r10, r8
    5d5e:	fb 2d       	mov	r31, r11
    5d60:	ff 77       	andi	r31, 0x7F	; 127
    5d62:	bf 2e       	mov	r11, r31
    5d64:	b6 fe       	sbrs	r11, 6
    5d66:	0b c0       	rjmp	.+22     	; 0x5d7e <vfprintf+0x2be>
    5d68:	2b 2d       	mov	r18, r11
    5d6a:	2e 7f       	andi	r18, 0xFE	; 254
    5d6c:	a5 14       	cp	r10, r5
    5d6e:	50 f4       	brcc	.+20     	; 0x5d84 <vfprintf+0x2c4>
    5d70:	b4 fe       	sbrs	r11, 4
    5d72:	0a c0       	rjmp	.+20     	; 0x5d88 <vfprintf+0x2c8>
    5d74:	b2 fc       	sbrc	r11, 2
    5d76:	08 c0       	rjmp	.+16     	; 0x5d88 <vfprintf+0x2c8>
    5d78:	2b 2d       	mov	r18, r11
    5d7a:	2e 7e       	andi	r18, 0xEE	; 238
    5d7c:	05 c0       	rjmp	.+10     	; 0x5d88 <vfprintf+0x2c8>
    5d7e:	7a 2c       	mov	r7, r10
    5d80:	2b 2d       	mov	r18, r11
    5d82:	03 c0       	rjmp	.+6      	; 0x5d8a <vfprintf+0x2ca>
    5d84:	7a 2c       	mov	r7, r10
    5d86:	01 c0       	rjmp	.+2      	; 0x5d8a <vfprintf+0x2ca>
    5d88:	75 2c       	mov	r7, r5
    5d8a:	24 ff       	sbrs	r18, 4
    5d8c:	0d c0       	rjmp	.+26     	; 0x5da8 <vfprintf+0x2e8>
    5d8e:	fe 01       	movw	r30, r28
    5d90:	ea 0d       	add	r30, r10
    5d92:	f1 1d       	adc	r31, r1
    5d94:	80 81       	ld	r24, Z
    5d96:	80 33       	cpi	r24, 0x30	; 48
    5d98:	11 f4       	brne	.+4      	; 0x5d9e <vfprintf+0x2de>
    5d9a:	29 7e       	andi	r18, 0xE9	; 233
    5d9c:	09 c0       	rjmp	.+18     	; 0x5db0 <vfprintf+0x2f0>
    5d9e:	22 ff       	sbrs	r18, 2
    5da0:	06 c0       	rjmp	.+12     	; 0x5dae <vfprintf+0x2ee>
    5da2:	73 94       	inc	r7
    5da4:	73 94       	inc	r7
    5da6:	04 c0       	rjmp	.+8      	; 0x5db0 <vfprintf+0x2f0>
    5da8:	82 2f       	mov	r24, r18
    5daa:	86 78       	andi	r24, 0x86	; 134
    5dac:	09 f0       	breq	.+2      	; 0x5db0 <vfprintf+0x2f0>
    5dae:	73 94       	inc	r7
    5db0:	23 fd       	sbrc	r18, 3
    5db2:	12 c0       	rjmp	.+36     	; 0x5dd8 <vfprintf+0x318>
    5db4:	20 ff       	sbrs	r18, 0
    5db6:	06 c0       	rjmp	.+12     	; 0x5dc4 <vfprintf+0x304>
    5db8:	5a 2c       	mov	r5, r10
    5dba:	73 14       	cp	r7, r3
    5dbc:	18 f4       	brcc	.+6      	; 0x5dc4 <vfprintf+0x304>
    5dbe:	53 0c       	add	r5, r3
    5dc0:	57 18       	sub	r5, r7
    5dc2:	73 2c       	mov	r7, r3
    5dc4:	73 14       	cp	r7, r3
    5dc6:	60 f4       	brcc	.+24     	; 0x5de0 <vfprintf+0x320>
    5dc8:	b7 01       	movw	r22, r14
    5dca:	80 e2       	ldi	r24, 0x20	; 32
    5dcc:	90 e0       	ldi	r25, 0x00	; 0
    5dce:	2c 87       	std	Y+12, r18	; 0x0c
    5dd0:	75 d0       	rcall	.+234    	; 0x5ebc <fputc>
    5dd2:	73 94       	inc	r7
    5dd4:	2c 85       	ldd	r18, Y+12	; 0x0c
    5dd6:	f6 cf       	rjmp	.-20     	; 0x5dc4 <vfprintf+0x304>
    5dd8:	73 14       	cp	r7, r3
    5dda:	10 f4       	brcc	.+4      	; 0x5de0 <vfprintf+0x320>
    5ddc:	37 18       	sub	r3, r7
    5dde:	01 c0       	rjmp	.+2      	; 0x5de2 <vfprintf+0x322>
    5de0:	31 2c       	mov	r3, r1
    5de2:	24 ff       	sbrs	r18, 4
    5de4:	11 c0       	rjmp	.+34     	; 0x5e08 <vfprintf+0x348>
    5de6:	b7 01       	movw	r22, r14
    5de8:	80 e3       	ldi	r24, 0x30	; 48
    5dea:	90 e0       	ldi	r25, 0x00	; 0
    5dec:	2c 87       	std	Y+12, r18	; 0x0c
    5dee:	66 d0       	rcall	.+204    	; 0x5ebc <fputc>
    5df0:	2c 85       	ldd	r18, Y+12	; 0x0c
    5df2:	22 ff       	sbrs	r18, 2
    5df4:	16 c0       	rjmp	.+44     	; 0x5e22 <vfprintf+0x362>
    5df6:	21 ff       	sbrs	r18, 1
    5df8:	03 c0       	rjmp	.+6      	; 0x5e00 <vfprintf+0x340>
    5dfa:	88 e5       	ldi	r24, 0x58	; 88
    5dfc:	90 e0       	ldi	r25, 0x00	; 0
    5dfe:	02 c0       	rjmp	.+4      	; 0x5e04 <vfprintf+0x344>
    5e00:	88 e7       	ldi	r24, 0x78	; 120
    5e02:	90 e0       	ldi	r25, 0x00	; 0
    5e04:	b7 01       	movw	r22, r14
    5e06:	0c c0       	rjmp	.+24     	; 0x5e20 <vfprintf+0x360>
    5e08:	82 2f       	mov	r24, r18
    5e0a:	86 78       	andi	r24, 0x86	; 134
    5e0c:	51 f0       	breq	.+20     	; 0x5e22 <vfprintf+0x362>
    5e0e:	21 fd       	sbrc	r18, 1
    5e10:	02 c0       	rjmp	.+4      	; 0x5e16 <vfprintf+0x356>
    5e12:	80 e2       	ldi	r24, 0x20	; 32
    5e14:	01 c0       	rjmp	.+2      	; 0x5e18 <vfprintf+0x358>
    5e16:	8b e2       	ldi	r24, 0x2B	; 43
    5e18:	27 fd       	sbrc	r18, 7
    5e1a:	8d e2       	ldi	r24, 0x2D	; 45
    5e1c:	b7 01       	movw	r22, r14
    5e1e:	90 e0       	ldi	r25, 0x00	; 0
    5e20:	4d d0       	rcall	.+154    	; 0x5ebc <fputc>
    5e22:	a5 14       	cp	r10, r5
    5e24:	30 f4       	brcc	.+12     	; 0x5e32 <vfprintf+0x372>
    5e26:	b7 01       	movw	r22, r14
    5e28:	80 e3       	ldi	r24, 0x30	; 48
    5e2a:	90 e0       	ldi	r25, 0x00	; 0
    5e2c:	47 d0       	rcall	.+142    	; 0x5ebc <fputc>
    5e2e:	5a 94       	dec	r5
    5e30:	f8 cf       	rjmp	.-16     	; 0x5e22 <vfprintf+0x362>
    5e32:	aa 94       	dec	r10
    5e34:	f4 01       	movw	r30, r8
    5e36:	ea 0d       	add	r30, r10
    5e38:	f1 1d       	adc	r31, r1
    5e3a:	80 81       	ld	r24, Z
    5e3c:	b7 01       	movw	r22, r14
    5e3e:	90 e0       	ldi	r25, 0x00	; 0
    5e40:	3d d0       	rcall	.+122    	; 0x5ebc <fputc>
    5e42:	a1 10       	cpse	r10, r1
    5e44:	f6 cf       	rjmp	.-20     	; 0x5e32 <vfprintf+0x372>
    5e46:	33 20       	and	r3, r3
    5e48:	09 f4       	brne	.+2      	; 0x5e4c <vfprintf+0x38c>
    5e4a:	5d ce       	rjmp	.-838    	; 0x5b06 <vfprintf+0x46>
    5e4c:	b7 01       	movw	r22, r14
    5e4e:	80 e2       	ldi	r24, 0x20	; 32
    5e50:	90 e0       	ldi	r25, 0x00	; 0
    5e52:	34 d0       	rcall	.+104    	; 0x5ebc <fputc>
    5e54:	3a 94       	dec	r3
    5e56:	f7 cf       	rjmp	.-18     	; 0x5e46 <vfprintf+0x386>
    5e58:	f7 01       	movw	r30, r14
    5e5a:	86 81       	ldd	r24, Z+6	; 0x06
    5e5c:	97 81       	ldd	r25, Z+7	; 0x07
    5e5e:	02 c0       	rjmp	.+4      	; 0x5e64 <vfprintf+0x3a4>
    5e60:	8f ef       	ldi	r24, 0xFF	; 255
    5e62:	9f ef       	ldi	r25, 0xFF	; 255
    5e64:	2c 96       	adiw	r28, 0x0c	; 12
    5e66:	cd bf       	out	0x3d, r28	; 61
    5e68:	de bf       	out	0x3e, r29	; 62
    5e6a:	df 91       	pop	r29
    5e6c:	cf 91       	pop	r28
    5e6e:	1f 91       	pop	r17
    5e70:	0f 91       	pop	r16
    5e72:	ff 90       	pop	r15
    5e74:	ef 90       	pop	r14
    5e76:	df 90       	pop	r13
    5e78:	cf 90       	pop	r12
    5e7a:	bf 90       	pop	r11
    5e7c:	af 90       	pop	r10
    5e7e:	9f 90       	pop	r9
    5e80:	8f 90       	pop	r8
    5e82:	7f 90       	pop	r7
    5e84:	6f 90       	pop	r6
    5e86:	5f 90       	pop	r5
    5e88:	4f 90       	pop	r4
    5e8a:	3f 90       	pop	r3
    5e8c:	2f 90       	pop	r2
    5e8e:	08 95       	ret

00005e90 <strnlen_P>:
    5e90:	fc 01       	movw	r30, r24
    5e92:	05 90       	lpm	r0, Z+
    5e94:	61 50       	subi	r22, 0x01	; 1
    5e96:	70 40       	sbci	r23, 0x00	; 0
    5e98:	01 10       	cpse	r0, r1
    5e9a:	d8 f7       	brcc	.-10     	; 0x5e92 <strnlen_P+0x2>
    5e9c:	80 95       	com	r24
    5e9e:	90 95       	com	r25
    5ea0:	8e 0f       	add	r24, r30
    5ea2:	9f 1f       	adc	r25, r31
    5ea4:	08 95       	ret

00005ea6 <strnlen>:
    5ea6:	fc 01       	movw	r30, r24
    5ea8:	61 50       	subi	r22, 0x01	; 1
    5eaa:	70 40       	sbci	r23, 0x00	; 0
    5eac:	01 90       	ld	r0, Z+
    5eae:	01 10       	cpse	r0, r1
    5eb0:	d8 f7       	brcc	.-10     	; 0x5ea8 <strnlen+0x2>
    5eb2:	80 95       	com	r24
    5eb4:	90 95       	com	r25
    5eb6:	8e 0f       	add	r24, r30
    5eb8:	9f 1f       	adc	r25, r31
    5eba:	08 95       	ret

00005ebc <fputc>:
    5ebc:	0f 93       	push	r16
    5ebe:	1f 93       	push	r17
    5ec0:	cf 93       	push	r28
    5ec2:	df 93       	push	r29
    5ec4:	18 2f       	mov	r17, r24
    5ec6:	09 2f       	mov	r16, r25
    5ec8:	eb 01       	movw	r28, r22
    5eca:	8b 81       	ldd	r24, Y+3	; 0x03
    5ecc:	81 fd       	sbrc	r24, 1
    5ece:	03 c0       	rjmp	.+6      	; 0x5ed6 <fputc+0x1a>
    5ed0:	8f ef       	ldi	r24, 0xFF	; 255
    5ed2:	9f ef       	ldi	r25, 0xFF	; 255
    5ed4:	20 c0       	rjmp	.+64     	; 0x5f16 <fputc+0x5a>
    5ed6:	82 ff       	sbrs	r24, 2
    5ed8:	10 c0       	rjmp	.+32     	; 0x5efa <fputc+0x3e>
    5eda:	4e 81       	ldd	r20, Y+6	; 0x06
    5edc:	5f 81       	ldd	r21, Y+7	; 0x07
    5ede:	2c 81       	ldd	r18, Y+4	; 0x04
    5ee0:	3d 81       	ldd	r19, Y+5	; 0x05
    5ee2:	42 17       	cp	r20, r18
    5ee4:	53 07       	cpc	r21, r19
    5ee6:	7c f4       	brge	.+30     	; 0x5f06 <fputc+0x4a>
    5ee8:	e8 81       	ld	r30, Y
    5eea:	f9 81       	ldd	r31, Y+1	; 0x01
    5eec:	9f 01       	movw	r18, r30
    5eee:	2f 5f       	subi	r18, 0xFF	; 255
    5ef0:	3f 4f       	sbci	r19, 0xFF	; 255
    5ef2:	28 83       	st	Y, r18
    5ef4:	39 83       	std	Y+1, r19	; 0x01
    5ef6:	10 83       	st	Z, r17
    5ef8:	06 c0       	rjmp	.+12     	; 0x5f06 <fputc+0x4a>
    5efa:	e8 85       	ldd	r30, Y+8	; 0x08
    5efc:	f9 85       	ldd	r31, Y+9	; 0x09
    5efe:	81 2f       	mov	r24, r17
    5f00:	19 95       	eicall
    5f02:	89 2b       	or	r24, r25
    5f04:	29 f7       	brne	.-54     	; 0x5ed0 <fputc+0x14>
    5f06:	2e 81       	ldd	r18, Y+6	; 0x06
    5f08:	3f 81       	ldd	r19, Y+7	; 0x07
    5f0a:	2f 5f       	subi	r18, 0xFF	; 255
    5f0c:	3f 4f       	sbci	r19, 0xFF	; 255
    5f0e:	2e 83       	std	Y+6, r18	; 0x06
    5f10:	3f 83       	std	Y+7, r19	; 0x07
    5f12:	81 2f       	mov	r24, r17
    5f14:	90 2f       	mov	r25, r16
    5f16:	df 91       	pop	r29
    5f18:	cf 91       	pop	r28
    5f1a:	1f 91       	pop	r17
    5f1c:	0f 91       	pop	r16
    5f1e:	08 95       	ret

00005f20 <__ultoa_invert>:
    5f20:	fa 01       	movw	r30, r20
    5f22:	aa 27       	eor	r26, r26
    5f24:	28 30       	cpi	r18, 0x08	; 8
    5f26:	51 f1       	breq	.+84     	; 0x5f7c <__ultoa_invert+0x5c>
    5f28:	20 31       	cpi	r18, 0x10	; 16
    5f2a:	81 f1       	breq	.+96     	; 0x5f8c <__ultoa_invert+0x6c>
    5f2c:	e8 94       	clt
    5f2e:	6f 93       	push	r22
    5f30:	6e 7f       	andi	r22, 0xFE	; 254
    5f32:	6e 5f       	subi	r22, 0xFE	; 254
    5f34:	7f 4f       	sbci	r23, 0xFF	; 255
    5f36:	8f 4f       	sbci	r24, 0xFF	; 255
    5f38:	9f 4f       	sbci	r25, 0xFF	; 255
    5f3a:	af 4f       	sbci	r26, 0xFF	; 255
    5f3c:	b1 e0       	ldi	r27, 0x01	; 1
    5f3e:	3e d0       	rcall	.+124    	; 0x5fbc <__ultoa_invert+0x9c>
    5f40:	b4 e0       	ldi	r27, 0x04	; 4
    5f42:	3c d0       	rcall	.+120    	; 0x5fbc <__ultoa_invert+0x9c>
    5f44:	67 0f       	add	r22, r23
    5f46:	78 1f       	adc	r23, r24
    5f48:	89 1f       	adc	r24, r25
    5f4a:	9a 1f       	adc	r25, r26
    5f4c:	a1 1d       	adc	r26, r1
    5f4e:	68 0f       	add	r22, r24
    5f50:	79 1f       	adc	r23, r25
    5f52:	8a 1f       	adc	r24, r26
    5f54:	91 1d       	adc	r25, r1
    5f56:	a1 1d       	adc	r26, r1
    5f58:	6a 0f       	add	r22, r26
    5f5a:	71 1d       	adc	r23, r1
    5f5c:	81 1d       	adc	r24, r1
    5f5e:	91 1d       	adc	r25, r1
    5f60:	a1 1d       	adc	r26, r1
    5f62:	20 d0       	rcall	.+64     	; 0x5fa4 <__ultoa_invert+0x84>
    5f64:	09 f4       	brne	.+2      	; 0x5f68 <__ultoa_invert+0x48>
    5f66:	68 94       	set
    5f68:	3f 91       	pop	r19
    5f6a:	2a e0       	ldi	r18, 0x0A	; 10
    5f6c:	26 9f       	mul	r18, r22
    5f6e:	11 24       	eor	r1, r1
    5f70:	30 19       	sub	r19, r0
    5f72:	30 5d       	subi	r19, 0xD0	; 208
    5f74:	31 93       	st	Z+, r19
    5f76:	de f6       	brtc	.-74     	; 0x5f2e <__ultoa_invert+0xe>
    5f78:	cf 01       	movw	r24, r30
    5f7a:	08 95       	ret
    5f7c:	46 2f       	mov	r20, r22
    5f7e:	47 70       	andi	r20, 0x07	; 7
    5f80:	40 5d       	subi	r20, 0xD0	; 208
    5f82:	41 93       	st	Z+, r20
    5f84:	b3 e0       	ldi	r27, 0x03	; 3
    5f86:	0f d0       	rcall	.+30     	; 0x5fa6 <__ultoa_invert+0x86>
    5f88:	c9 f7       	brne	.-14     	; 0x5f7c <__ultoa_invert+0x5c>
    5f8a:	f6 cf       	rjmp	.-20     	; 0x5f78 <__ultoa_invert+0x58>
    5f8c:	46 2f       	mov	r20, r22
    5f8e:	4f 70       	andi	r20, 0x0F	; 15
    5f90:	40 5d       	subi	r20, 0xD0	; 208
    5f92:	4a 33       	cpi	r20, 0x3A	; 58
    5f94:	18 f0       	brcs	.+6      	; 0x5f9c <__ultoa_invert+0x7c>
    5f96:	49 5d       	subi	r20, 0xD9	; 217
    5f98:	31 fd       	sbrc	r19, 1
    5f9a:	40 52       	subi	r20, 0x20	; 32
    5f9c:	41 93       	st	Z+, r20
    5f9e:	02 d0       	rcall	.+4      	; 0x5fa4 <__ultoa_invert+0x84>
    5fa0:	a9 f7       	brne	.-22     	; 0x5f8c <__ultoa_invert+0x6c>
    5fa2:	ea cf       	rjmp	.-44     	; 0x5f78 <__ultoa_invert+0x58>
    5fa4:	b4 e0       	ldi	r27, 0x04	; 4
    5fa6:	a6 95       	lsr	r26
    5fa8:	97 95       	ror	r25
    5faa:	87 95       	ror	r24
    5fac:	77 95       	ror	r23
    5fae:	67 95       	ror	r22
    5fb0:	ba 95       	dec	r27
    5fb2:	c9 f7       	brne	.-14     	; 0x5fa6 <__ultoa_invert+0x86>
    5fb4:	00 97       	sbiw	r24, 0x00	; 0
    5fb6:	61 05       	cpc	r22, r1
    5fb8:	71 05       	cpc	r23, r1
    5fba:	08 95       	ret
    5fbc:	9b 01       	movw	r18, r22
    5fbe:	ac 01       	movw	r20, r24
    5fc0:	0a 2e       	mov	r0, r26
    5fc2:	06 94       	lsr	r0
    5fc4:	57 95       	ror	r21
    5fc6:	47 95       	ror	r20
    5fc8:	37 95       	ror	r19
    5fca:	27 95       	ror	r18
    5fcc:	ba 95       	dec	r27
    5fce:	c9 f7       	brne	.-14     	; 0x5fc2 <__ultoa_invert+0xa2>
    5fd0:	62 0f       	add	r22, r18
    5fd2:	73 1f       	adc	r23, r19
    5fd4:	84 1f       	adc	r24, r20
    5fd6:	95 1f       	adc	r25, r21
    5fd8:	a0 1d       	adc	r26, r0
    5fda:	08 95       	ret

00005fdc <_exit>:
    5fdc:	f8 94       	cli

00005fde <__stop_program>:
    5fde:	ff cf       	rjmp	.-2      	; 0x5fde <__stop_program>
