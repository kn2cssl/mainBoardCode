
base1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006096  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000048  00802000  00006096  0000612a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000003de  00802048  00802048  00006172  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00006172  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007c8  00000000  00000000  000061d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000c46b  00000000  00000000  00006998  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002123  00000000  00000000  00012e03  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00008636  00000000  00000000  00014f26  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00002088  00000000  00000000  0001d55c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00026591  00000000  00000000  0001f5e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00007292  00000000  00000000  00045b75  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006a8  00000000  00000000  0004ce08  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000ad90  00000000  00000000  0004d4b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f9 c0       	rjmp	.+498    	; 0x1f4 <__ctors_end>
       2:	00 00       	nop
       4:	1d c1       	rjmp	.+570    	; 0x240 <__bad_interrupt>
       6:	00 00       	nop
       8:	0c 94 03 29 	jmp	0x5206	; 0x5206 <__vector_2>
       c:	19 c1       	rjmp	.+562    	; 0x240 <__bad_interrupt>
       e:	00 00       	nop
      10:	17 c1       	rjmp	.+558    	; 0x240 <__bad_interrupt>
      12:	00 00       	nop
      14:	15 c1       	rjmp	.+554    	; 0x240 <__bad_interrupt>
      16:	00 00       	nop
      18:	13 c1       	rjmp	.+550    	; 0x240 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	11 c1       	rjmp	.+546    	; 0x240 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0f c1       	rjmp	.+542    	; 0x240 <__bad_interrupt>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__bad_interrupt>
      26:	00 00       	nop
      28:	0b c1       	rjmp	.+534    	; 0x240 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	09 c1       	rjmp	.+530    	; 0x240 <__bad_interrupt>
      2e:	00 00       	nop
      30:	07 c1       	rjmp	.+526    	; 0x240 <__bad_interrupt>
      32:	00 00       	nop
      34:	05 c1       	rjmp	.+522    	; 0x240 <__bad_interrupt>
      36:	00 00       	nop
      38:	44 c5       	rjmp	.+2696   	; 0xac2 <__vector_14>
      3a:	00 00       	nop
      3c:	7a c5       	rjmp	.+2804   	; 0xb32 <__vector_15>
      3e:	00 00       	nop
      40:	b0 c5       	rjmp	.+2912   	; 0xba2 <__vector_16>
      42:	00 00       	nop
      44:	e6 c5       	rjmp	.+3020   	; 0xc12 <__vector_17>
      46:	00 00       	nop
      48:	1c c6       	rjmp	.+3128   	; 0xc82 <__vector_18>
      4a:	00 00       	nop
      4c:	52 c6       	rjmp	.+3236   	; 0xcf2 <__vector_19>
      4e:	00 00       	nop
      50:	88 c6       	rjmp	.+3344   	; 0xd62 <__vector_20>
      52:	00 00       	nop
      54:	be c6       	rjmp	.+3452   	; 0xdd2 <__vector_21>
      56:	00 00       	nop
      58:	f4 c6       	rjmp	.+3560   	; 0xe42 <__vector_22>
      5a:	00 00       	nop
      5c:	2a c7       	rjmp	.+3668   	; 0xeb2 <__vector_23>
      5e:	00 00       	nop
      60:	ef c0       	rjmp	.+478    	; 0x240 <__bad_interrupt>
      62:	00 00       	nop
      64:	ed c0       	rjmp	.+474    	; 0x240 <__bad_interrupt>
      66:	00 00       	nop
      68:	eb c0       	rjmp	.+470    	; 0x240 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e9 c0       	rjmp	.+466    	; 0x240 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e7 c0       	rjmp	.+462    	; 0x240 <__bad_interrupt>
      72:	00 00       	nop
      74:	e5 c0       	rjmp	.+458    	; 0x240 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c0       	rjmp	.+454    	; 0x240 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e1 c0       	rjmp	.+450    	; 0x240 <__bad_interrupt>
      7e:	00 00       	nop
      80:	df c0       	rjmp	.+446    	; 0x240 <__bad_interrupt>
      82:	00 00       	nop
      84:	dd c0       	rjmp	.+442    	; 0x240 <__bad_interrupt>
      86:	00 00       	nop
      88:	db c0       	rjmp	.+438    	; 0x240 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d9 c0       	rjmp	.+434    	; 0x240 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d7 c0       	rjmp	.+430    	; 0x240 <__bad_interrupt>
      92:	00 00       	nop
      94:	d5 c0       	rjmp	.+426    	; 0x240 <__bad_interrupt>
      96:	00 00       	nop
      98:	d3 c0       	rjmp	.+422    	; 0x240 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d1 c0       	rjmp	.+418    	; 0x240 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cf c0       	rjmp	.+414    	; 0x240 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cd c0       	rjmp	.+410    	; 0x240 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cb c0       	rjmp	.+406    	; 0x240 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0c 94 b9 22 	jmp	0x4572	; 0x4572 <__vector_43>
      b0:	c7 c0       	rjmp	.+398    	; 0x240 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c5 c0       	rjmp	.+394    	; 0x240 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c3 c0       	rjmp	.+390    	; 0x240 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__vector_47>
      c0:	0c 94 c1 09 	jmp	0x1382	; 0x1382 <__vector_48>
      c4:	0c 94 f9 09 	jmp	0x13f2	; 0x13f2 <__vector_49>
      c8:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__vector_50>
      cc:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__vector_51>
      d0:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <__vector_52>
      d4:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__vector_53>
      d8:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__vector_54>
      dc:	0c 94 49 0b 	jmp	0x1692	; 0x1692 <__vector_55>
      e0:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__vector_56>
      e4:	ad c0       	rjmp	.+346    	; 0x240 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ab c0       	rjmp	.+342    	; 0x240 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	a9 c0       	rjmp	.+338    	; 0x240 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a7 c0       	rjmp	.+334    	; 0x240 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a5 c0       	rjmp	.+330    	; 0x240 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a3 c0       	rjmp	.+326    	; 0x240 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a1 c0       	rjmp	.+322    	; 0x240 <__bad_interrupt>
      fe:	00 00       	nop
     100:	9f c0       	rjmp	.+318    	; 0x240 <__bad_interrupt>
     102:	00 00       	nop
     104:	9d c0       	rjmp	.+314    	; 0x240 <__bad_interrupt>
     106:	00 00       	nop
     108:	9b c0       	rjmp	.+310    	; 0x240 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	99 c0       	rjmp	.+306    	; 0x240 <__bad_interrupt>
     10e:	00 00       	nop
     110:	97 c0       	rjmp	.+302    	; 0x240 <__bad_interrupt>
     112:	00 00       	nop
     114:	95 c0       	rjmp	.+298    	; 0x240 <__bad_interrupt>
     116:	00 00       	nop
     118:	93 c0       	rjmp	.+294    	; 0x240 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	91 c0       	rjmp	.+290    	; 0x240 <__bad_interrupt>
     11e:	00 00       	nop
     120:	8f c0       	rjmp	.+286    	; 0x240 <__bad_interrupt>
     122:	00 00       	nop
     124:	8d c0       	rjmp	.+282    	; 0x240 <__bad_interrupt>
     126:	00 00       	nop
     128:	8b c0       	rjmp	.+278    	; 0x240 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	89 c0       	rjmp	.+274    	; 0x240 <__bad_interrupt>
     12e:	00 00       	nop
     130:	87 c0       	rjmp	.+270    	; 0x240 <__bad_interrupt>
     132:	00 00       	nop
     134:	0c 94 24 27 	jmp	0x4e48	; 0x4e48 <__vector_77>
     138:	f4 c6       	rjmp	.+3560   	; 0xf22 <__vector_78>
     13a:	00 00       	nop
     13c:	2a c7       	rjmp	.+3668   	; 0xf92 <__vector_79>
     13e:	00 00       	nop
     140:	60 c7       	rjmp	.+3776   	; 0x1002 <__vector_80>
     142:	00 00       	nop
     144:	96 c7       	rjmp	.+3884   	; 0x1072 <__vector_81>
     146:	00 00       	nop
     148:	cc c7       	rjmp	.+3992   	; 0x10e2 <__vector_82>
     14a:	00 00       	nop
     14c:	0c 94 a9 08 	jmp	0x1152	; 0x1152 <__vector_83>
     150:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <__vector_84>
     154:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__vector_85>
     158:	0c 94 51 09 	jmp	0x12a2	; 0x12a2 <__vector_86>
     15c:	71 c0       	rjmp	.+226    	; 0x240 <__bad_interrupt>
     15e:	00 00       	nop
     160:	6f c0       	rjmp	.+222    	; 0x240 <__bad_interrupt>
     162:	00 00       	nop
     164:	6d c0       	rjmp	.+218    	; 0x240 <__bad_interrupt>
     166:	00 00       	nop
     168:	6b c0       	rjmp	.+214    	; 0x240 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	69 c0       	rjmp	.+210    	; 0x240 <__bad_interrupt>
     16e:	00 00       	nop
     170:	67 c0       	rjmp	.+206    	; 0x240 <__bad_interrupt>
     172:	00 00       	nop
     174:	65 c0       	rjmp	.+202    	; 0x240 <__bad_interrupt>
     176:	00 00       	nop
     178:	0c 94 af 28 	jmp	0x515e	; 0x515e <__vector_94>
     17c:	0c 94 2d 29 	jmp	0x525a	; 0x525a <__vector_95>
     180:	0c 94 d9 28 	jmp	0x51b2	; 0x51b2 <__vector_96>
     184:	0c 94 57 29 	jmp	0x52ae	; 0x52ae <__vector_97>
     188:	5b c0       	rjmp	.+182    	; 0x240 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	59 c0       	rjmp	.+178    	; 0x240 <__bad_interrupt>
     18e:	00 00       	nop
     190:	0c 94 66 29 	jmp	0x52cc	; 0x52cc <__vector_100>
     194:	55 c0       	rjmp	.+170    	; 0x240 <__bad_interrupt>
     196:	00 00       	nop
     198:	53 c0       	rjmp	.+166    	; 0x240 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	51 c0       	rjmp	.+162    	; 0x240 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	0c 94 a0 28 	jmp	0x5140	; 0x5140 <__vector_104>
     1a4:	4d c0       	rjmp	.+154    	; 0x240 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4b c0       	rjmp	.+150    	; 0x240 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	49 c0       	rjmp	.+146    	; 0x240 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 b9 0b 	jmp	0x1772	; 0x1772 <__vector_108>
     1b4:	0c 94 f1 0b 	jmp	0x17e2	; 0x17e2 <__vector_109>
     1b8:	0c 94 29 0c 	jmp	0x1852	; 0x1852 <__vector_110>
     1bc:	0c 94 61 0c 	jmp	0x18c2	; 0x18c2 <__vector_111>
     1c0:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <__vector_112>
     1c4:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__vector_113>
     1c8:	0c 94 09 0d 	jmp	0x1a12	; 0x1a12 <__vector_114>
     1cc:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__vector_115>
     1d0:	0c 94 79 0d 	jmp	0x1af2	; 0x1af2 <__vector_116>
     1d4:	0c 94 b1 0d 	jmp	0x1b62	; 0x1b62 <__vector_117>
     1d8:	33 c0       	rjmp	.+102    	; 0x240 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	0c 94 b9 29 	jmp	0x5372	; 0x5372 <__vector_119>
     1e0:	2f c0       	rjmp	.+94     	; 0x240 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2d c0       	rjmp	.+90     	; 0x240 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2b c0       	rjmp	.+86     	; 0x240 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	29 c0       	rjmp	.+82     	; 0x240 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	27 c0       	rjmp	.+78     	; 0x240 <__bad_interrupt>
	...

000001f4 <__ctors_end>:
     1f4:	11 24       	eor	r1, r1
     1f6:	1f be       	out	0x3f, r1	; 63
     1f8:	cf ef       	ldi	r28, 0xFF	; 255
     1fa:	cd bf       	out	0x3d, r28	; 61
     1fc:	df e3       	ldi	r29, 0x3F	; 63
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0c bf       	out	0x3c, r16	; 60
     204:	18 be       	out	0x38, r1	; 56
     206:	19 be       	out	0x39, r1	; 57
     208:	1a be       	out	0x3a, r1	; 58
     20a:	1b be       	out	0x3b, r1	; 59

0000020c <__do_copy_data>:
     20c:	10 e2       	ldi	r17, 0x20	; 32
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	e6 e9       	ldi	r30, 0x96	; 150
     214:	f0 e6       	ldi	r31, 0x60	; 96
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a8 34       	cpi	r26, 0x48	; 72
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>
     226:	1b be       	out	0x3b, r1	; 59

00000228 <__do_clear_bss>:
     228:	24 e2       	ldi	r18, 0x24	; 36
     22a:	a8 e4       	ldi	r26, 0x48	; 72
     22c:	b0 e2       	ldi	r27, 0x20	; 32
     22e:	01 c0       	rjmp	.+2      	; 0x232 <.do_clear_bss_start>

00000230 <.do_clear_bss_loop>:
     230:	1d 92       	st	X+, r1

00000232 <.do_clear_bss_start>:
     232:	a6 32       	cpi	r26, 0x26	; 38
     234:	b2 07       	cpc	r27, r18
     236:	e1 f7       	brne	.-8      	; 0x230 <.do_clear_bss_loop>
     238:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <main>
     23c:	0c 94 49 30 	jmp	0x6092	; 0x6092 <_exit>

00000240 <__bad_interrupt>:
     240:	df ce       	rjmp	.-578    	; 0x0 <__vectors>

00000242 <LCDDataLines>:
}
void LCDStringFlash(char *data)	
{ 
 char k;
 while (k=*data++) LCDSendData(k);
}
     242:	e4 e2       	ldi	r30, 0x24	; 36
     244:	f6 e0       	ldi	r31, 0x06	; 6
     246:	90 81       	ld	r25, Z
     248:	a8 2f       	mov	r26, r24
     24a:	a1 70       	andi	r26, 0x01	; 1
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	aa 0f       	add	r26, r26
     250:	bb 1f       	adc	r27, r27
     252:	aa 0f       	add	r26, r26
     254:	bb 1f       	adc	r27, r27
     256:	9b 7f       	andi	r25, 0xFB	; 251
     258:	a9 2b       	or	r26, r25
     25a:	a0 83       	st	Z, r26
     25c:	90 81       	ld	r25, Z
     25e:	81 fb       	bst	r24, 1
     260:	66 27       	eor	r22, r22
     262:	60 f9       	bld	r22, 0
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	66 0f       	add	r22, r22
     268:	77 1f       	adc	r23, r23
     26a:	62 95       	swap	r22
     26c:	72 95       	swap	r23
     26e:	70 7f       	andi	r23, 0xF0	; 240
     270:	76 27       	eor	r23, r22
     272:	60 7f       	andi	r22, 0xF0	; 240
     274:	76 27       	eor	r23, r22
     276:	9f 7d       	andi	r25, 0xDF	; 223
     278:	69 2b       	or	r22, r25
     27a:	60 83       	st	Z, r22
     27c:	90 81       	ld	r25, Z
     27e:	82 fb       	bst	r24, 2
     280:	44 27       	eor	r20, r20
     282:	40 f9       	bld	r20, 0
     284:	50 e0       	ldi	r21, 0x00	; 0
     286:	42 95       	swap	r20
     288:	52 95       	swap	r21
     28a:	50 7f       	andi	r21, 0xF0	; 240
     28c:	54 27       	eor	r21, r20
     28e:	40 7f       	andi	r20, 0xF0	; 240
     290:	54 27       	eor	r21, r20
     292:	9f 7e       	andi	r25, 0xEF	; 239
     294:	49 2b       	or	r20, r25
     296:	40 83       	st	Z, r20
     298:	e4 e4       	ldi	r30, 0x44	; 68
     29a:	f6 e0       	ldi	r31, 0x06	; 6
     29c:	90 81       	ld	r25, Z
     29e:	83 fb       	bst	r24, 3
     2a0:	22 27       	eor	r18, r18
     2a2:	20 f9       	bld	r18, 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	22 0f       	add	r18, r18
     2a8:	33 1f       	adc	r19, r19
     2aa:	22 95       	swap	r18
     2ac:	32 95       	swap	r19
     2ae:	30 7f       	andi	r19, 0xF0	; 240
     2b0:	32 27       	eor	r19, r18
     2b2:	20 7f       	andi	r18, 0xF0	; 240
     2b4:	32 27       	eor	r19, r18
     2b6:	89 2f       	mov	r24, r25
     2b8:	8f 7d       	andi	r24, 0xDF	; 223
     2ba:	28 2b       	or	r18, r24
     2bc:	20 83       	st	Z, r18
     2be:	08 95       	ret

000002c0 <LCDDirOut>:
     2c0:	e0 e2       	ldi	r30, 0x20	; 32
     2c2:	f6 e0       	ldi	r31, 0x06	; 6
     2c4:	80 81       	ld	r24, Z
     2c6:	84 60       	ori	r24, 0x04	; 4
     2c8:	80 83       	st	Z, r24
     2ca:	80 81       	ld	r24, Z
     2cc:	80 62       	ori	r24, 0x20	; 32
     2ce:	80 83       	st	Z, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	80 61       	ori	r24, 0x10	; 16
     2d4:	80 83       	st	Z, r24
     2d6:	e0 e4       	ldi	r30, 0x40	; 64
     2d8:	f6 e0       	ldi	r31, 0x06	; 6
     2da:	80 81       	ld	r24, Z
     2dc:	80 62       	ori	r24, 0x20	; 32
     2de:	80 83       	st	Z, r24
     2e0:	08 95       	ret

000002e2 <LCDDirIn>:
     2e2:	e0 e2       	ldi	r30, 0x20	; 32
     2e4:	f6 e0       	ldi	r31, 0x06	; 6
     2e6:	80 81       	ld	r24, Z
     2e8:	8b 7f       	andi	r24, 0xFB	; 251
     2ea:	80 83       	st	Z, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	8f 7d       	andi	r24, 0xDF	; 223
     2f0:	80 83       	st	Z, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	8f 7e       	andi	r24, 0xEF	; 239
     2f6:	80 83       	st	Z, r24
     2f8:	e0 e4       	ldi	r30, 0x40	; 64
     2fa:	f6 e0       	ldi	r31, 0x06	; 6
     2fc:	80 81       	ld	r24, Z
     2fe:	8f 7d       	andi	r24, 0xDF	; 223
     300:	80 83       	st	Z, r24
     302:	08 95       	ret

00000304 <LCDSendData>:
     304:	cf 93       	push	r28
     306:	c8 2f       	mov	r28, r24
     308:	8f e1       	ldi	r24, 0x1F	; 31
     30a:	93 e0       	ldi	r25, 0x03	; 3
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <LCDSendData+0x8>
     310:	00 c0       	rjmp	.+0      	; 0x312 <LCDSendData+0xe>
     312:	00 00       	nop
     314:	8c 2f       	mov	r24, r28
     316:	82 95       	swap	r24
     318:	8f 70       	andi	r24, 0x0F	; 15
     31a:	93 df       	rcall	.-218    	; 0x242 <LCDDataLines>
     31c:	e4 e2       	ldi	r30, 0x24	; 36
     31e:	f6 e0       	ldi	r31, 0x06	; 6
     320:	80 81       	ld	r24, Z
     322:	82 60       	ori	r24, 0x02	; 2
     324:	80 83       	st	Z, r24
     326:	80 81       	ld	r24, Z
     328:	88 60       	ori	r24, 0x08	; 8
     32a:	80 83       	st	Z, r24
     32c:	95 ed       	ldi	r25, 0xD5	; 213
     32e:	9a 95       	dec	r25
     330:	f1 f7       	brne	.-4      	; 0x32e <LCDSendData+0x2a>
     332:	00 00       	nop
     334:	80 81       	ld	r24, Z
     336:	87 7f       	andi	r24, 0xF7	; 247
     338:	80 83       	st	Z, r24
     33a:	85 ed       	ldi	r24, 0xD5	; 213
     33c:	8a 95       	dec	r24
     33e:	f1 f7       	brne	.-4      	; 0x33c <LCDSendData+0x38>
     340:	00 00       	nop
     342:	8c 2f       	mov	r24, r28
     344:	7e df       	rcall	.-260    	; 0x242 <LCDDataLines>
     346:	e4 e2       	ldi	r30, 0x24	; 36
     348:	f6 e0       	ldi	r31, 0x06	; 6
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	95 ed       	ldi	r25, 0xD5	; 213
     352:	9a 95       	dec	r25
     354:	f1 f7       	brne	.-4      	; 0x352 <LCDSendData+0x4e>
     356:	00 00       	nop
     358:	80 81       	ld	r24, Z
     35a:	87 7f       	andi	r24, 0xF7	; 247
     35c:	80 83       	st	Z, r24
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <LCDSendCommand>:
     362:	cf 93       	push	r28
     364:	c8 2f       	mov	r28, r24
     366:	8f ef       	ldi	r24, 0xFF	; 255
     368:	8c 0f       	add	r24, r28
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	38 f4       	brcc	.+14     	; 0x37c <LCDSendCommand+0x1a>
     36e:	8f e3       	ldi	r24, 0x3F	; 63
     370:	9c e9       	ldi	r25, 0x9C	; 156
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <LCDSendCommand+0x10>
     376:	00 c0       	rjmp	.+0      	; 0x378 <LCDSendCommand+0x16>
     378:	00 00       	nop
     37a:	06 c0       	rjmp	.+12     	; 0x388 <LCDSendCommand+0x26>
     37c:	8f e3       	ldi	r24, 0x3F	; 63
     37e:	9f e1       	ldi	r25, 0x1F	; 31
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <LCDSendCommand+0x1e>
     384:	00 c0       	rjmp	.+0      	; 0x386 <LCDSendCommand+0x24>
     386:	00 00       	nop
     388:	8c 2f       	mov	r24, r28
     38a:	82 95       	swap	r24
     38c:	8f 70       	andi	r24, 0x0F	; 15
     38e:	59 df       	rcall	.-334    	; 0x242 <LCDDataLines>
     390:	e4 e2       	ldi	r30, 0x24	; 36
     392:	f6 e0       	ldi	r31, 0x06	; 6
     394:	80 81       	ld	r24, Z
     396:	8d 7f       	andi	r24, 0xFD	; 253
     398:	80 83       	st	Z, r24
     39a:	80 81       	ld	r24, Z
     39c:	88 60       	ori	r24, 0x08	; 8
     39e:	80 83       	st	Z, r24
     3a0:	95 ed       	ldi	r25, 0xD5	; 213
     3a2:	9a 95       	dec	r25
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <LCDSendCommand+0x40>
     3a6:	00 00       	nop
     3a8:	80 81       	ld	r24, Z
     3aa:	87 7f       	andi	r24, 0xF7	; 247
     3ac:	80 83       	st	Z, r24
     3ae:	85 ed       	ldi	r24, 0xD5	; 213
     3b0:	8a 95       	dec	r24
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCDSendCommand+0x4e>
     3b4:	00 00       	nop
     3b6:	8c 2f       	mov	r24, r28
     3b8:	44 df       	rcall	.-376    	; 0x242 <LCDDataLines>
     3ba:	e4 e2       	ldi	r30, 0x24	; 36
     3bc:	f6 e0       	ldi	r31, 0x06	; 6
     3be:	80 81       	ld	r24, Z
     3c0:	88 60       	ori	r24, 0x08	; 8
     3c2:	80 83       	st	Z, r24
     3c4:	95 ed       	ldi	r25, 0xD5	; 213
     3c6:	9a 95       	dec	r25
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <LCDSendCommand+0x64>
     3ca:	00 00       	nop
     3cc:	80 81       	ld	r24, Z
     3ce:	87 7f       	andi	r24, 0xF7	; 247
     3d0:	80 83       	st	Z, r24
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <LCDInit>:
     3d6:	e4 e2       	ldi	r30, 0x24	; 36
     3d8:	f6 e0       	ldi	r31, 0x06	; 6
     3da:	80 81       	ld	r24, Z
     3dc:	87 7f       	andi	r24, 0xF7	; 247
     3de:	80 83       	st	Z, r24
     3e0:	80 df       	rcall	.-256    	; 0x2e2 <LCDDirIn>
     3e2:	2f ef       	ldi	r18, 0xFF	; 255
     3e4:	87 ee       	ldi	r24, 0xE7	; 231
     3e6:	93 e0       	ldi	r25, 0x03	; 3
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <LCDInit+0x12>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <LCDInit+0x1c>
     3f2:	00 00       	nop
     3f4:	65 df       	rcall	.-310    	; 0x2c0 <LCDDirOut>
     3f6:	83 e0       	ldi	r24, 0x03	; 3
     3f8:	24 df       	rcall	.-440    	; 0x242 <LCDDataLines>
     3fa:	e0 e2       	ldi	r30, 0x20	; 32
     3fc:	f6 e0       	ldi	r31, 0x06	; 6
     3fe:	80 81       	ld	r24, Z
     400:	82 60       	ori	r24, 0x02	; 2
     402:	80 83       	st	Z, r24
     404:	80 81       	ld	r24, Z
     406:	81 60       	ori	r24, 0x01	; 1
     408:	80 83       	st	Z, r24
     40a:	a4 e2       	ldi	r26, 0x24	; 36
     40c:	b6 e0       	ldi	r27, 0x06	; 6
     40e:	8c 91       	ld	r24, X
     410:	8d 7f       	andi	r24, 0xFD	; 253
     412:	8c 93       	st	X, r24
     414:	8c 91       	ld	r24, X
     416:	8e 7f       	andi	r24, 0xFE	; 254
     418:	8c 93       	st	X, r24
     41a:	80 81       	ld	r24, Z
     41c:	88 60       	ori	r24, 0x08	; 8
     41e:	80 83       	st	Z, r24
     420:	25 ed       	ldi	r18, 0xD5	; 213
     422:	2a 95       	dec	r18
     424:	f1 f7       	brne	.-4      	; 0x422 <LCDInit+0x4c>
     426:	00 00       	nop
     428:	e4 e2       	ldi	r30, 0x24	; 36
     42a:	f6 e0       	ldi	r31, 0x06	; 6
     42c:	80 81       	ld	r24, Z
     42e:	88 60       	ori	r24, 0x08	; 8
     430:	80 83       	st	Z, r24
     432:	85 ed       	ldi	r24, 0xD5	; 213
     434:	8a 95       	dec	r24
     436:	f1 f7       	brne	.-4      	; 0x434 <LCDInit+0x5e>
     438:	00 00       	nop
     43a:	80 81       	ld	r24, Z
     43c:	87 7f       	andi	r24, 0xF7	; 247
     43e:	80 83       	st	Z, r24
     440:	9f ef       	ldi	r25, 0xFF	; 255
     442:	23 ef       	ldi	r18, 0xF3	; 243
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	91 50       	subi	r25, 0x01	; 1
     448:	20 40       	sbci	r18, 0x00	; 0
     44a:	80 40       	sbci	r24, 0x00	; 0
     44c:	e1 f7       	brne	.-8      	; 0x446 <LCDInit+0x70>
     44e:	00 c0       	rjmp	.+0      	; 0x450 <LCDInit+0x7a>
     450:	00 00       	nop
     452:	80 81       	ld	r24, Z
     454:	88 60       	ori	r24, 0x08	; 8
     456:	80 83       	st	Z, r24
     458:	95 ed       	ldi	r25, 0xD5	; 213
     45a:	9a 95       	dec	r25
     45c:	f1 f7       	brne	.-4      	; 0x45a <LCDInit+0x84>
     45e:	00 00       	nop
     460:	80 81       	ld	r24, Z
     462:	87 7f       	andi	r24, 0xF7	; 247
     464:	80 83       	st	Z, r24
     466:	8f e1       	ldi	r24, 0x1F	; 31
     468:	93 e0       	ldi	r25, 0x03	; 3
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	f1 f7       	brne	.-4      	; 0x46a <LCDInit+0x94>
     46e:	00 c0       	rjmp	.+0      	; 0x470 <LCDInit+0x9a>
     470:	00 00       	nop
     472:	80 81       	ld	r24, Z
     474:	88 60       	ori	r24, 0x08	; 8
     476:	80 83       	st	Z, r24
     478:	95 ed       	ldi	r25, 0xD5	; 213
     47a:	9a 95       	dec	r25
     47c:	f1 f7       	brne	.-4      	; 0x47a <LCDInit+0xa4>
     47e:	00 00       	nop
     480:	80 81       	ld	r24, Z
     482:	87 7f       	andi	r24, 0xF7	; 247
     484:	80 83       	st	Z, r24
     486:	8f e1       	ldi	r24, 0x1F	; 31
     488:	93 e0       	ldi	r25, 0x03	; 3
     48a:	01 97       	sbiw	r24, 0x01	; 1
     48c:	f1 f7       	brne	.-4      	; 0x48a <LCDInit+0xb4>
     48e:	00 c0       	rjmp	.+0      	; 0x490 <LCDInit+0xba>
     490:	00 00       	nop
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	d6 de       	rcall	.-596    	; 0x242 <LCDDataLines>
     496:	95 ed       	ldi	r25, 0xD5	; 213
     498:	9a 95       	dec	r25
     49a:	f1 f7       	brne	.-4      	; 0x498 <LCDInit+0xc2>
     49c:	00 00       	nop
     49e:	e4 e2       	ldi	r30, 0x24	; 36
     4a0:	f6 e0       	ldi	r31, 0x06	; 6
     4a2:	80 81       	ld	r24, Z
     4a4:	88 60       	ori	r24, 0x08	; 8
     4a6:	80 83       	st	Z, r24
     4a8:	25 ed       	ldi	r18, 0xD5	; 213
     4aa:	2a 95       	dec	r18
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <LCDInit+0xd4>
     4ae:	00 00       	nop
     4b0:	80 81       	ld	r24, Z
     4b2:	87 7f       	andi	r24, 0xF7	; 247
     4b4:	80 83       	st	Z, r24
     4b6:	8f e1       	ldi	r24, 0x1F	; 31
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <LCDInit+0xe4>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <LCDInit+0xea>
     4c0:	00 00       	nop
     4c2:	88 e2       	ldi	r24, 0x28	; 40
     4c4:	4e df       	rcall	.-356    	; 0x362 <LCDSendCommand>
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	4c df       	rcall	.-360    	; 0x362 <LCDSendCommand>
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	4a df       	rcall	.-364    	; 0x362 <LCDSendCommand>
     4ce:	86 e0       	ldi	r24, 0x06	; 6
     4d0:	48 df       	rcall	.-368    	; 0x362 <LCDSendCommand>
     4d2:	8c e0       	ldi	r24, 0x0C	; 12
     4d4:	46 cf       	rjmp	.-372    	; 0x362 <LCDSendCommand>
     4d6:	08 95       	ret

000004d8 <LCDStringRam>:
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
     4de:	21 96       	adiw	r28, 0x01	; 1
     4e0:	fc 01       	movw	r30, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	88 23       	and	r24, r24
     4e6:	21 f0       	breq	.+8      	; 0x4f0 <LCDStringRam+0x18>
     4e8:	0d df       	rcall	.-486    	; 0x304 <LCDSendData>
     4ea:	89 91       	ld	r24, Y+
     4ec:	81 11       	cpse	r24, r1
     4ee:	fc cf       	rjmp	.-8      	; 0x4e8 <LCDStringRam+0x10>
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	08 95       	ret

000004f6 <LCDGotoXY>:
void LCDGotoXY(unsigned char x, unsigned char y)	//Cursor to X Y position
{
 unsigned char DDRAMAddr;	
 switch(y)
     4f6:	62 30       	cpi	r22, 0x02	; 2
     4f8:	31 f0       	breq	.+12     	; 0x506 <LCDGotoXY+0x10>
     4fa:	63 30       	cpi	r22, 0x03	; 3
     4fc:	31 f0       	breq	.+12     	; 0x50a <LCDGotoXY+0x14>
     4fe:	61 30       	cpi	r22, 0x01	; 1
     500:	29 f4       	brne	.+10     	; 0x50c <LCDGotoXY+0x16>
 {
  case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
  case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     502:	80 5c       	subi	r24, 0xC0	; 192
     504:	03 c0       	rjmp	.+6      	; 0x50c <LCDGotoXY+0x16>
  case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     506:	8c 5e       	subi	r24, 0xEC	; 236
     508:	01 c0       	rjmp	.+2      	; 0x50c <LCDGotoXY+0x16>
  case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     50a:	8c 5a       	subi	r24, 0xAC	; 172
  default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
 }	
 LCDSendCommand(1<<LCD_DDRAM | DDRAMAddr);	
     50c:	80 68       	ori	r24, 0x80	; 128
     50e:	29 cf       	rjmp	.-430    	; 0x362 <LCDSendCommand>
     510:	08 95       	ret

00000512 <menu_check_sw>:
    menu_index[2] = 0;
}

bool menu_check_sw(uint8_t SW,uint8_t *SW_Flag)
{
    if(SW && !(*SW_Flag))
     512:	88 23       	and	r24, r24
     514:	39 f0       	breq	.+14     	; 0x524 <menu_check_sw+0x12>
     516:	fb 01       	movw	r30, r22
     518:	80 81       	ld	r24, Z
     51a:	81 11       	cpse	r24, r1
     51c:	07 c0       	rjmp	.+14     	; 0x52c <menu_check_sw+0x1a>
    {
        *SW_Flag = true;
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	80 83       	st	Z, r24
        return 1;
     522:	08 95       	ret
    }
    else if(SW == 0)
        *SW_Flag = false;
     524:	fb 01       	movw	r30, r22
     526:	10 82       	st	Z, r1
    return 0;
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	08 95       	ret
     52c:	80 e0       	ldi	r24, 0x00	; 0
}
     52e:	08 95       	ret

00000530 <Menu_Display>:
	}
}

void Menu_Display(void)
{
    Disp_R(menu_index[0]);
     530:	e0 e0       	ldi	r30, 0x00	; 0
     532:	f7 e0       	ldi	r31, 0x07	; 7
     534:	94 81       	ldd	r25, Z+4	; 0x04
     536:	80 91 ab 20 	lds	r24, 0x20AB
     53a:	a0 91 00 20 	lds	r26, 0x2000
     53e:	b0 e0       	ldi	r27, 0x00	; 0
     540:	aa 0f       	add	r26, r26
     542:	bb 1f       	adc	r27, r27
     544:	a8 5f       	subi	r26, 0xF8	; 248
     546:	bf 4d       	sbci	r27, 0xDF	; 223
     548:	90 78       	andi	r25, 0x80	; 128
     54a:	2c 91       	ld	r18, X
     54c:	92 2b       	or	r25, r18
     54e:	98 23       	and	r25, r24
     550:	94 83       	std	Z+4, r25	; 0x04
    Disp_L(menu_index[1]);
     552:	e0 ee       	ldi	r30, 0xE0	; 224
     554:	f6 e0       	ldi	r31, 0x06	; 6
     556:	94 81       	ldd	r25, Z+4	; 0x04
     558:	a0 91 01 20 	lds	r26, 0x2001
     55c:	b0 e0       	ldi	r27, 0x00	; 0
     55e:	aa 0f       	add	r26, r26
     560:	bb 1f       	adc	r27, r27
     562:	a8 5f       	subi	r26, 0xF8	; 248
     564:	bf 4d       	sbci	r27, 0xDF	; 223
     566:	90 78       	andi	r25, 0x80	; 128
     568:	2c 91       	ld	r18, X
     56a:	92 2b       	or	r25, r18
     56c:	89 23       	and	r24, r25
     56e:	84 83       	std	Z+4, r24	; 0x04
     570:	08 95       	ret

00000572 <menu_table>:
}

void menu_table(void)
{

    switch(menu_index[1])
     572:	80 91 01 20 	lds	r24, 0x2001
     576:	8e 30       	cpi	r24, 0x0E	; 14
     578:	31 f4       	brne	.+12     	; 0x586 <menu_table+0x14>
			break;
			
		}
		break;
	case 0xE:
		switch(menu_index[0])
     57a:	80 91 00 20 	lds	r24, 0x2000
     57e:	8f 30       	cpi	r24, 0x0F	; 15
     580:	11 f4       	brne	.+4      	; 0x586 <menu_table+0x14>
		{
		case 0xF:
			wdt_reset_mcu();
     582:	0c 94 84 0f 	jmp	0x1f08	; 0x1f08 <wdt_reset_mcu>
     586:	08 95       	ret

00000588 <Menu_Reset>:
uint8_t menu_index[3]={Menu_Clear,Menu_Clear,0};
uint8_t disp;
uint16_t menu_time = 0;

void Menu_Reset(void)
{
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
    uint8_t i=0;
    for (i=0;i<16;i++)
     594:	f1 2c       	mov	r15, r1
    {
        menu_index[1] = i;
     596:	01 e0       	ldi	r16, 0x01	; 1
     598:	10 e2       	ldi	r17, 0x20	; 32
        menu_index[0] = Menu_Default;
     59a:	c0 e0       	ldi	r28, 0x00	; 0
     59c:	d0 e2       	ldi	r29, 0x20	; 32
     59e:	0f 2e       	mov	r0, r31
     5a0:	f1 e1       	ldi	r31, 0x11	; 17
     5a2:	ef 2e       	mov	r14, r31
     5a4:	f0 2d       	mov	r31, r0
void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
    {
        menu_index[1] = i;
     5a6:	f8 01       	movw	r30, r16
     5a8:	f0 82       	st	Z, r15
        menu_index[0] = Menu_Default;
     5aa:	e8 82       	st	Y, r14
        menu_table();
     5ac:	e2 df       	rcall	.-60     	; 0x572 <menu_table>
uint16_t menu_time = 0;

void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
     5ae:	f3 94       	inc	r15
     5b0:	f0 e1       	ldi	r31, 0x10	; 16
     5b2:	ff 12       	cpse	r15, r31
     5b4:	f8 cf       	rjmp	.-16     	; 0x5a6 <Menu_Reset+0x1e>
    {
        menu_index[1] = i;
        menu_index[0] = Menu_Default;
        menu_table();
    }
    menu_index[0] = Menu_Clear;
     5b6:	80 e1       	ldi	r24, 0x10	; 16
     5b8:	80 93 00 20 	sts	0x2000, r24
    menu_index[1] = Menu_Clear;
     5bc:	80 93 01 20 	sts	0x2001, r24
    menu_index[2] = 0;
     5c0:	10 92 02 20 	sts	0x2002, r1
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <menu_check_status>:
        *SW_Flag = false;
    return 0;
}

void menu_check_status(void)
{
     5d2:	8f 92       	push	r8
     5d4:	9f 92       	push	r9
     5d6:	af 92       	push	r10
     5d8:	bf 92       	push	r11
     5da:	cf 92       	push	r12
     5dc:	df 92       	push	r13
     5de:	ef 92       	push	r14
     5e0:	ff 92       	push	r15
     5e2:	0f 93       	push	r16
     5e4:	1f 93       	push	r17
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
	switch(menu_index[2])
     5ea:	80 91 02 20 	lds	r24, 0x2002
     5ee:	81 30       	cpi	r24, 0x01	; 1
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <menu_check_status+0x22>
     5f2:	65 c0       	rjmp	.+202    	; 0x6be <menu_check_status+0xec>
     5f4:	20 f0       	brcs	.+8      	; 0x5fe <menu_check_status+0x2c>
     5f6:	82 30       	cpi	r24, 0x02	; 2
     5f8:	09 f4       	brne	.+2      	; 0x5fc <menu_check_status+0x2a>
     5fa:	c2 c0       	rjmp	.+388    	; 0x780 <menu_check_status+0x1ae>
     5fc:	df c0       	rjmp	.+446    	; 0x7bc <menu_check_status+0x1ea>
	{
		case 0://Wait for Index0
		Disp_L_PORT.OUT = (Disp_L_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     5fe:	c0 ee       	ldi	r28, 0xE0	; 224
     600:	d6 e0       	ldi	r29, 0x06	; 6
     602:	1c 81       	ldd	r17, Y+4	; 0x04
     604:	60 91 9f 20 	lds	r22, 0x209F
     608:	70 91 a0 20 	lds	r23, 0x20A0
     60c:	80 91 a1 20 	lds	r24, 0x20A1
     610:	90 91 a2 20 	lds	r25, 0x20A2
     614:	24 e6       	ldi	r18, 0x64	; 100
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>
     620:	20 fb       	bst	r18, 0
     622:	17 f9       	bld	r17, 7
     624:	1c 83       	std	Y+4, r17	; 0x04
		Disp_R_PORT.OUTCLR = Segment_DP_bm;
     626:	80 e8       	ldi	r24, 0x80	; 128
     628:	e0 e0       	ldi	r30, 0x00	; 0
     62a:	f7 e0       	ldi	r31, 0x07	; 7
     62c:	86 83       	std	Z+6, r24	; 0x06
		menu_index[1] = Menu_Num;
     62e:	98 85       	ldd	r25, Y+8	; 0x08
     630:	28 85       	ldd	r18, Y+8	; 0x08
     632:	88 85       	ldd	r24, Y+8	; 0x08
     634:	38 85       	ldd	r19, Y+8	; 0x08
     636:	30 fb       	bst	r19, 0
     638:	88 24       	eor	r8, r8
     63a:	80 f8       	bld	r8, 0
     63c:	91 2c       	mov	r9, r1
     63e:	88 0c       	add	r8, r8
     640:	99 1c       	adc	r9, r9
     642:	22 fb       	bst	r18, 2
     644:	22 27       	eor	r18, r18
     646:	20 f9       	bld	r18, 0
     648:	82 2a       	or	r8, r18
     64a:	93 fb       	bst	r25, 3
     64c:	aa 24       	eor	r10, r10
     64e:	a0 f8       	bld	r10, 0
     650:	b1 2c       	mov	r11, r1
     652:	aa 0c       	add	r10, r10
     654:	bb 1c       	adc	r11, r11
     656:	aa 0c       	add	r10, r10
     658:	bb 1c       	adc	r11, r11
     65a:	a8 28       	or	r10, r8
     65c:	81 fb       	bst	r24, 1
     65e:	cc 24       	eor	r12, r12
     660:	c0 f8       	bld	r12, 0
     662:	d1 2c       	mov	r13, r1
     664:	cc 0c       	add	r12, r12
     666:	dd 1c       	adc	r13, r13
     668:	cc 0c       	add	r12, r12
     66a:	dd 1c       	adc	r13, r13
     66c:	cc 0c       	add	r12, r12
     66e:	dd 1c       	adc	r13, r13
     670:	ca 28       	or	r12, r10
     672:	c0 92 01 20 	sts	0x2001, r12
		menu_index[0] = Menu_Clear;
     676:	80 e1       	ldi	r24, 0x10	; 16
     678:	80 93 00 20 	sts	0x2000, r24
		Menu_Display();
     67c:	59 df       	rcall	.-334    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     67e:	80 91 e8 06 	lds	r24, 0x06E8
     682:	6b e4       	ldi	r22, 0x4B	; 75
     684:	70 e2       	ldi	r23, 0x20	; 32
     686:	88 1f       	adc	r24, r24
     688:	88 27       	eor	r24, r24
     68a:	88 1f       	adc	r24, r24
     68c:	42 df       	rcall	.-380    	; 0x512 <menu_check_sw>
     68e:	88 23       	and	r24, r24
     690:	29 f0       	breq	.+10     	; 0x69c <menu_check_status+0xca>
		{
			menu_index[2]++;
     692:	e2 e0       	ldi	r30, 0x02	; 2
     694:	f0 e2       	ldi	r31, 0x20	; 32
     696:	80 81       	ld	r24, Z
     698:	8f 5f       	subi	r24, 0xFF	; 255
     69a:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     69c:	80 91 a8 06 	lds	r24, 0x06A8
     6a0:	6a e4       	ldi	r22, 0x4A	; 74
     6a2:	70 e2       	ldi	r23, 0x20	; 32
     6a4:	82 95       	swap	r24
     6a6:	81 70       	andi	r24, 0x01	; 1
     6a8:	34 df       	rcall	.-408    	; 0x512 <menu_check_sw>
     6aa:	88 23       	and	r24, r24
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <menu_check_status+0xde>
     6ae:	86 c0       	rjmp	.+268    	; 0x7bc <menu_check_status+0x1ea>
		{
			 menu_time=100;
     6b0:	84 e6       	ldi	r24, 0x64	; 100
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	80 93 48 20 	sts	0x2048, r24
     6b8:	90 93 49 20 	sts	0x2049, r25
     6bc:	7f c0       	rjmp	.+254    	; 0x7bc <menu_check_status+0x1ea>
		}
		break;
		case 1://Wait for Index1
		Disp_R_PORT.OUT = (Disp_R_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     6be:	0f 2e       	mov	r0, r31
     6c0:	c1 2c       	mov	r12, r1
     6c2:	f7 e0       	ldi	r31, 0x07	; 7
     6c4:	df 2e       	mov	r13, r31
     6c6:	f0 2d       	mov	r31, r0
     6c8:	f6 01       	movw	r30, r12
     6ca:	b4 80       	ldd	r11, Z+4	; 0x04
     6cc:	60 91 9f 20 	lds	r22, 0x209F
     6d0:	70 91 a0 20 	lds	r23, 0x20A0
     6d4:	80 91 a1 20 	lds	r24, 0x20A1
     6d8:	90 91 a2 20 	lds	r25, 0x20A2
     6dc:	24 e6       	ldi	r18, 0x64	; 100
     6de:	30 e0       	ldi	r19, 0x00	; 0
     6e0:	40 e0       	ldi	r20, 0x00	; 0
     6e2:	50 e0       	ldi	r21, 0x00	; 0
     6e4:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>
     6e8:	20 fb       	bst	r18, 0
     6ea:	b7 f8       	bld	r11, 7
     6ec:	f6 01       	movw	r30, r12
     6ee:	b4 82       	std	Z+4, r11	; 0x04
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     6f0:	e0 ee       	ldi	r30, 0xE0	; 224
     6f2:	f6 e0       	ldi	r31, 0x06	; 6
     6f4:	80 e8       	ldi	r24, 0x80	; 128
     6f6:	85 83       	std	Z+5, r24	; 0x05
		menu_index[0] = Menu_Num;
     6f8:	90 85       	ldd	r25, Z+8	; 0x08
     6fa:	20 85       	ldd	r18, Z+8	; 0x08
     6fc:	80 85       	ldd	r24, Z+8	; 0x08
     6fe:	30 85       	ldd	r19, Z+8	; 0x08
     700:	30 fb       	bst	r19, 0
     702:	ee 24       	eor	r14, r14
     704:	e0 f8       	bld	r14, 0
     706:	f1 2c       	mov	r15, r1
     708:	ee 0c       	add	r14, r14
     70a:	ff 1c       	adc	r15, r15
     70c:	22 fb       	bst	r18, 2
     70e:	22 27       	eor	r18, r18
     710:	20 f9       	bld	r18, 0
     712:	e2 2a       	or	r14, r18
     714:	93 fb       	bst	r25, 3
     716:	00 27       	eor	r16, r16
     718:	00 f9       	bld	r16, 0
     71a:	10 e0       	ldi	r17, 0x00	; 0
     71c:	00 0f       	add	r16, r16
     71e:	11 1f       	adc	r17, r17
     720:	00 0f       	add	r16, r16
     722:	11 1f       	adc	r17, r17
     724:	0e 29       	or	r16, r14
     726:	86 95       	lsr	r24
     728:	81 70       	andi	r24, 0x01	; 1
     72a:	c8 2f       	mov	r28, r24
     72c:	f0 e0       	ldi	r31, 0x00	; 0
     72e:	df 2f       	mov	r29, r31
     730:	cc 0f       	add	r28, r28
     732:	dd 1f       	adc	r29, r29
     734:	cc 0f       	add	r28, r28
     736:	dd 1f       	adc	r29, r29
     738:	cc 0f       	add	r28, r28
     73a:	dd 1f       	adc	r29, r29
     73c:	c0 2b       	or	r28, r16
     73e:	c0 93 00 20 	sts	0x2000, r28
		Menu_Display();
     742:	f6 de       	rcall	.-532    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     744:	80 91 e8 06 	lds	r24, 0x06E8
     748:	6b e4       	ldi	r22, 0x4B	; 75
     74a:	70 e2       	ldi	r23, 0x20	; 32
     74c:	88 1f       	adc	r24, r24
     74e:	88 27       	eor	r24, r24
     750:	88 1f       	adc	r24, r24
     752:	df de       	rcall	.-578    	; 0x512 <menu_check_sw>
     754:	88 23       	and	r24, r24
     756:	29 f0       	breq	.+10     	; 0x762 <menu_check_status+0x190>
		{
			menu_index[2]++;
     758:	e2 e0       	ldi	r30, 0x02	; 2
     75a:	f0 e2       	ldi	r31, 0x20	; 32
     75c:	80 81       	ld	r24, Z
     75e:	8f 5f       	subi	r24, 0xFF	; 255
     760:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     762:	80 91 a8 06 	lds	r24, 0x06A8
     766:	6a e4       	ldi	r22, 0x4A	; 74
     768:	70 e2       	ldi	r23, 0x20	; 32
     76a:	82 95       	swap	r24
     76c:	81 70       	andi	r24, 0x01	; 1
     76e:	d1 de       	rcall	.-606    	; 0x512 <menu_check_sw>
     770:	88 23       	and	r24, r24
     772:	21 f1       	breq	.+72     	; 0x7bc <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     774:	e2 e0       	ldi	r30, 0x02	; 2
     776:	f0 e2       	ldi	r31, 0x20	; 32
     778:	80 81       	ld	r24, Z
     77a:	81 50       	subi	r24, 0x01	; 1
     77c:	80 83       	st	Z, r24
     77e:	1e c0       	rjmp	.+60     	; 0x7bc <menu_check_status+0x1ea>
		}
		break;
		case 2:
		Disp_R_PORT.OUTSET = Segment_DP_bm;
     780:	80 e8       	ldi	r24, 0x80	; 128
     782:	e0 e0       	ldi	r30, 0x00	; 0
     784:	f7 e0       	ldi	r31, 0x07	; 7
     786:	85 83       	std	Z+5, r24	; 0x05
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     788:	e0 ee       	ldi	r30, 0xE0	; 224
     78a:	f6 e0       	ldi	r31, 0x06	; 6
     78c:	85 83       	std	Z+5, r24	; 0x05
		menu_table();
     78e:	f1 de       	rcall	.-542    	; 0x572 <menu_table>
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     790:	80 91 a8 06 	lds	r24, 0x06A8
     794:	6a e4       	ldi	r22, 0x4A	; 74
     796:	70 e2       	ldi	r23, 0x20	; 32
     798:	82 95       	swap	r24
     79a:	81 70       	andi	r24, 0x01	; 1
     79c:	ba de       	rcall	.-652    	; 0x512 <menu_check_sw>
     79e:	88 23       	and	r24, r24
     7a0:	69 f0       	breq	.+26     	; 0x7bc <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     7a2:	e2 e0       	ldi	r30, 0x02	; 2
     7a4:	f0 e2       	ldi	r31, 0x20	; 32
     7a6:	80 81       	ld	r24, Z
     7a8:	81 50       	subi	r24, 0x01	; 1
     7aa:	80 83       	st	Z, r24
			menu_index[0] = Menu_Default;
     7ac:	c0 e0       	ldi	r28, 0x00	; 0
     7ae:	d0 e2       	ldi	r29, 0x20	; 32
     7b0:	81 e1       	ldi	r24, 0x11	; 17
     7b2:	88 83       	st	Y, r24
			menu_table();
     7b4:	de de       	rcall	.-580    	; 0x572 <menu_table>
			menu_index[0] = Menu_Clear;
     7b6:	80 e1       	ldi	r24, 0x10	; 16
     7b8:	88 83       	st	Y, r24
			Menu_Display();
     7ba:	ba de       	rcall	.-652    	; 0x530 <Menu_Display>
		}

		break;
	}
}
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	ff 90       	pop	r15
     7c6:	ef 90       	pop	r14
     7c8:	df 90       	pop	r13
     7ca:	cf 90       	pop	r12
     7cc:	bf 90       	pop	r11
     7ce:	af 90       	pop	r10
     7d0:	9f 90       	pop	r9
     7d2:	8f 90       	pop	r8
     7d4:	08 95       	ret

000007d6 <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7d6:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7d8:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     7da:	fc 01       	movw	r30, r24
     7dc:	e0 59       	subi	r30, 0x90	; 144
     7de:	ff 4f       	sbci	r31, 0xFF	; 255
     7e0:	60 95       	com	r22
     7e2:	80 81       	ld	r24, Z
     7e4:	68 23       	and	r22, r24
     7e6:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7e8:	2f bf       	out	0x3f, r18	; 63
     7ea:	08 95       	ret

000007ec <sysclk_disable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7ec:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7ee:	f8 94       	cli

void sysclk_disable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) |= id;
     7f0:	fc 01       	movw	r30, r24
     7f2:	e0 59       	subi	r30, 0x90	; 144
     7f4:	ff 4f       	sbci	r31, 0xFF	; 255
     7f6:	80 81       	ld	r24, Z
     7f8:	68 2b       	or	r22, r24
     7fa:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7fc:	2f bf       	out	0x3f, r18	; 63
     7fe:	08 95       	ret

00000800 <adc_enable_clock>:
	conf->ctrlb = adc->CTRLB;

	adc_disable_clock(adc);

	cpu_irq_restore(flags);
}
     800:	81 15       	cp	r24, r1
     802:	22 e0       	ldi	r18, 0x02	; 2
     804:	92 07       	cpc	r25, r18
     806:	69 f4       	brne	.+26     	; 0x822 <adc_enable_clock+0x22>
     808:	80 91 4d 20 	lds	r24, 0x204D
     80c:	91 e0       	ldi	r25, 0x01	; 1
     80e:	98 0f       	add	r25, r24
     810:	90 93 4d 20 	sts	0x204D, r25
     814:	81 11       	cpse	r24, r1
     816:	14 c0       	rjmp	.+40     	; 0x840 <adc_enable_clock+0x40>
     818:	62 e0       	ldi	r22, 0x02	; 2
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	db cf       	rjmp	.-74     	; 0x7d6 <sysclk_enable_module>
     820:	08 95       	ret
     822:	80 34       	cpi	r24, 0x40	; 64
     824:	92 40       	sbci	r25, 0x02	; 2
     826:	61 f4       	brne	.+24     	; 0x840 <adc_enable_clock+0x40>
     828:	80 91 4c 20 	lds	r24, 0x204C
     82c:	91 e0       	ldi	r25, 0x01	; 1
     82e:	98 0f       	add	r25, r24
     830:	90 93 4c 20 	sts	0x204C, r25
     834:	81 11       	cpse	r24, r1
     836:	04 c0       	rjmp	.+8      	; 0x840 <adc_enable_clock+0x40>
     838:	62 e0       	ldi	r22, 0x02	; 2
     83a:	82 e0       	ldi	r24, 0x02	; 2
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	cb cf       	rjmp	.-106    	; 0x7d6 <sysclk_enable_module>
     840:	08 95       	ret

00000842 <adc_disable_clock>:
     842:	81 15       	cp	r24, r1
     844:	22 e0       	ldi	r18, 0x02	; 2
     846:	92 07       	cpc	r25, r18
     848:	61 f4       	brne	.+24     	; 0x862 <adc_disable_clock+0x20>
     84a:	80 91 4d 20 	lds	r24, 0x204D
     84e:	81 50       	subi	r24, 0x01	; 1
     850:	80 93 4d 20 	sts	0x204D, r24
     854:	81 11       	cpse	r24, r1
     856:	13 c0       	rjmp	.+38     	; 0x87e <adc_disable_clock+0x3c>
     858:	62 e0       	ldi	r22, 0x02	; 2
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	c6 cf       	rjmp	.-116    	; 0x7ec <sysclk_disable_module>
     860:	08 95       	ret
     862:	80 34       	cpi	r24, 0x40	; 64
     864:	92 40       	sbci	r25, 0x02	; 2
     866:	59 f4       	brne	.+22     	; 0x87e <adc_disable_clock+0x3c>
     868:	80 91 4c 20 	lds	r24, 0x204C
     86c:	81 50       	subi	r24, 0x01	; 1
     86e:	80 93 4c 20 	sts	0x204C, r24
     872:	81 11       	cpse	r24, r1
     874:	04 c0       	rjmp	.+8      	; 0x87e <adc_disable_clock+0x3c>
     876:	62 e0       	ldi	r22, 0x02	; 2
     878:	82 e0       	ldi	r24, 0x02	; 2
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	b7 cf       	rjmp	.-146    	; 0x7ec <sysclk_disable_module>
     87e:	08 95       	ret

00000880 <adc_enable>:
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	ec 01       	movw	r28, r24
     888:	1f b7       	in	r17, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	b9 df       	rcall	.-142    	; 0x800 <adc_enable_clock>
     88e:	88 81       	ld	r24, Y
     890:	81 60       	ori	r24, 0x01	; 1
     892:	88 83       	st	Y, r24
     894:	1f bf       	out	0x3f, r17	; 63
     896:	8f b7       	in	r24, 0x3f	; 63
     898:	f8 94       	cli
     89a:	ed ea       	ldi	r30, 0xAD	; 173
     89c:	f0 e2       	ldi	r31, 0x20	; 32
     89e:	90 81       	ld	r25, Z
     8a0:	9f 5f       	subi	r25, 0xFF	; 255
     8a2:	90 83       	st	Z, r25
     8a4:	8f bf       	out	0x3f, r24	; 63
     8a6:	df 91       	pop	r29
     8a8:	cf 91       	pop	r28
     8aa:	1f 91       	pop	r17
     8ac:	08 95       	ret

000008ae <adc_write_configuration>:
     8ae:	df 92       	push	r13
     8b0:	ef 92       	push	r14
     8b2:	ff 92       	push	r15
     8b4:	0f 93       	push	r16
     8b6:	1f 93       	push	r17
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	ec 01       	movw	r28, r24
     8be:	8b 01       	movw	r16, r22
     8c0:	c1 15       	cp	r28, r1
     8c2:	22 e0       	ldi	r18, 0x02	; 2
     8c4:	d2 07       	cpc	r29, r18
     8c6:	71 f4       	brne	.+28     	; 0x8e4 <adc_write_configuration+0x36>
     8c8:	61 e2       	ldi	r22, 0x21	; 33
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	82 e0       	ldi	r24, 0x02	; 2
     8ce:	a7 d0       	rcall	.+334    	; 0xa1e <nvm_read_byte>
     8d0:	e8 2e       	mov	r14, r24
     8d2:	f1 2c       	mov	r15, r1
     8d4:	60 e2       	ldi	r22, 0x20	; 32
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	82 e0       	ldi	r24, 0x02	; 2
     8da:	a1 d0       	rcall	.+322    	; 0xa1e <nvm_read_byte>
     8dc:	fe 2c       	mov	r15, r14
     8de:	ee 24       	eor	r14, r14
     8e0:	e8 2a       	or	r14, r24
     8e2:	10 c0       	rjmp	.+32     	; 0x904 <adc_write_configuration+0x56>
     8e4:	80 34       	cpi	r24, 0x40	; 64
     8e6:	92 40       	sbci	r25, 0x02	; 2
     8e8:	59 f5       	brne	.+86     	; 0x940 <adc_write_configuration+0x92>
     8ea:	65 e2       	ldi	r22, 0x25	; 37
     8ec:	70 e0       	ldi	r23, 0x00	; 0
     8ee:	82 e0       	ldi	r24, 0x02	; 2
     8f0:	96 d0       	rcall	.+300    	; 0xa1e <nvm_read_byte>
     8f2:	e8 2e       	mov	r14, r24
     8f4:	f1 2c       	mov	r15, r1
     8f6:	64 e2       	ldi	r22, 0x24	; 36
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	82 e0       	ldi	r24, 0x02	; 2
     8fc:	90 d0       	rcall	.+288    	; 0xa1e <nvm_read_byte>
     8fe:	fe 2c       	mov	r15, r14
     900:	ee 24       	eor	r14, r14
     902:	e8 2a       	or	r14, r24
     904:	df b6       	in	r13, 0x3f	; 63
     906:	f8 94       	cli
     908:	ce 01       	movw	r24, r28
     90a:	7a df       	rcall	.-268    	; 0x800 <adc_enable_clock>
     90c:	28 81       	ld	r18, Y
     90e:	82 e0       	ldi	r24, 0x02	; 2
     910:	88 83       	st	Y, r24
     912:	ec 86       	std	Y+12, r14	; 0x0c
     914:	fd 86       	std	Y+13, r15	; 0x0d
     916:	f8 01       	movw	r30, r16
     918:	85 81       	ldd	r24, Z+5	; 0x05
     91a:	96 81       	ldd	r25, Z+6	; 0x06
     91c:	88 8f       	std	Y+24, r24	; 0x18
     91e:	99 8f       	std	Y+25, r25	; 0x19
     920:	82 81       	ldd	r24, Z+2	; 0x02
     922:	8a 83       	std	Y+2, r24	; 0x02
     924:	84 81       	ldd	r24, Z+4	; 0x04
     926:	8c 83       	std	Y+4, r24	; 0x04
     928:	83 81       	ldd	r24, Z+3	; 0x03
     92a:	8b 83       	std	Y+3, r24	; 0x03
     92c:	81 81       	ldd	r24, Z+1	; 0x01
     92e:	89 83       	std	Y+1, r24	; 0x01
     930:	82 2f       	mov	r24, r18
     932:	81 70       	andi	r24, 0x01	; 1
     934:	90 81       	ld	r25, Z
     936:	89 2b       	or	r24, r25
     938:	88 83       	st	Y, r24
     93a:	ce 01       	movw	r24, r28
     93c:	82 df       	rcall	.-252    	; 0x842 <adc_disable_clock>
     93e:	df be       	out	0x3f, r13	; 63
     940:	df 91       	pop	r29
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	ff 90       	pop	r15
     94a:	ef 90       	pop	r14
     94c:	df 90       	pop	r13
     94e:	08 95       	ret

00000950 <adcch_write_configuration>:
 * is called if callbacks are enabled and interrupts are enabled in the
 * channel configuration.
 */
void adcch_write_configuration(ADC_t *adc, uint8_t ch_mask,
		const struct adc_channel_config *ch_conf)
{
     950:	df 92       	push	r13
     952:	ef 92       	push	r14
     954:	ff 92       	push	r15
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	7c 01       	movw	r14, r24
     960:	8a 01       	movw	r16, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     962:	86 2f       	mov	r24, r22
     964:	83 70       	andi	r24, 0x03	; 3
     966:	21 f4       	brne	.+8      	; 0x970 <adcch_write_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     968:	66 95       	lsr	r22
     96a:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	01 c0       	rjmp	.+2      	; 0x972 <adcch_write_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     970:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     972:	60 ff       	sbrs	r22, 0
		index++;
     974:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     976:	e7 01       	movw	r28, r14
     978:	a0 96       	adiw	r28, 0x20	; 32
     97a:	98 e0       	ldi	r25, 0x08	; 8
     97c:	89 9f       	mul	r24, r25
     97e:	c0 0d       	add	r28, r0
     980:	d1 1d       	adc	r29, r1
     982:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     984:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     986:	f8 94       	cli
			return;
		}
	}
#endif /* CONFIG_ADC_CALLBACK_ENABLE */

	adc_enable_clock(adc);
     988:	c7 01       	movw	r24, r14
     98a:	3a df       	rcall	.-396    	; 0x800 <adc_enable_clock>
	adc_ch->CTRL = ch_conf->ctrl;
     98c:	f8 01       	movw	r30, r16
     98e:	80 81       	ld	r24, Z
     990:	88 83       	st	Y, r24
	adc_ch->INTCTRL = ch_conf->intctrl;
     992:	82 81       	ldd	r24, Z+2	; 0x02
     994:	8a 83       	std	Y+2, r24	; 0x02
	adc_ch->MUXCTRL = ch_conf->muxctrl;
     996:	81 81       	ldd	r24, Z+1	; 0x01
     998:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		adc_ch->SCAN = ch_conf->scan;
	}
#endif
	adc_disable_clock(adc);
     99a:	c7 01       	movw	r24, r14
     99c:	52 df       	rcall	.-348    	; 0x842 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     99e:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     9a0:	df 91       	pop	r29
     9a2:	cf 91       	pop	r28
     9a4:	1f 91       	pop	r17
     9a6:	0f 91       	pop	r16
     9a8:	ff 90       	pop	r15
     9aa:	ef 90       	pop	r14
     9ac:	df 90       	pop	r13
     9ae:	08 95       	ret

000009b0 <adcch_read_configuration>:
 * can be given in mask)
 * \param ch_conf Pointer to ADC channel configuration.
 */
void adcch_read_configuration(ADC_t *adc, uint8_t ch_mask,
		struct adc_channel_config *ch_conf)
{
     9b0:	df 92       	push	r13
     9b2:	ef 92       	push	r14
     9b4:	ff 92       	push	r15
     9b6:	0f 93       	push	r16
     9b8:	1f 93       	push	r17
     9ba:	cf 93       	push	r28
     9bc:	df 93       	push	r29
     9be:	7c 01       	movw	r14, r24
     9c0:	ea 01       	movw	r28, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     9c2:	86 2f       	mov	r24, r22
     9c4:	83 70       	andi	r24, 0x03	; 3
     9c6:	21 f4       	brne	.+8      	; 0x9d0 <adcch_read_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     9c8:	66 95       	lsr	r22
     9ca:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     9cc:	82 e0       	ldi	r24, 0x02	; 2
     9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <adcch_read_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     9d0:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     9d2:	60 ff       	sbrs	r22, 0
		index++;
     9d4:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     9d6:	87 01       	movw	r16, r14
     9d8:	00 5e       	subi	r16, 0xE0	; 224
     9da:	1f 4f       	sbci	r17, 0xFF	; 255
     9dc:	98 e0       	ldi	r25, 0x08	; 8
     9de:	89 9f       	mul	r24, r25
     9e0:	00 0d       	add	r16, r0
     9e2:	11 1d       	adc	r17, r1
     9e4:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     9e6:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     9e8:	f8 94       	cli

	adc_ch = adc_get_channel(adc, ch_mask);

	flags = cpu_irq_save();

	adc_enable_clock(adc);
     9ea:	c7 01       	movw	r24, r14
     9ec:	09 df       	rcall	.-494    	; 0x800 <adc_enable_clock>
	ch_conf->ctrl = adc_ch->CTRL;
     9ee:	f8 01       	movw	r30, r16
     9f0:	80 81       	ld	r24, Z
     9f2:	88 83       	st	Y, r24
	ch_conf->intctrl = adc_ch->INTCTRL;
     9f4:	82 81       	ldd	r24, Z+2	; 0x02
     9f6:	8a 83       	std	Y+2, r24	; 0x02
	ch_conf->muxctrl = adc_ch->MUXCTRL;
     9f8:	81 81       	ldd	r24, Z+1	; 0x01
     9fa:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		ch_conf->scan = adc_ch->SCAN;
	}
#endif
	adc_disable_clock(adc);
     9fc:	c7 01       	movw	r24, r14
     9fe:	21 df       	rcall	.-446    	; 0x842 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     a00:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	1f 91       	pop	r17
     a08:	0f 91       	pop	r16
     a0a:	ff 90       	pop	r15
     a0c:	ef 90       	pop	r14
     a0e:	df 90       	pop	r13
     a10:	08 95       	ret

00000a12 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
     a12:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
     a14:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
     a16:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
     a18:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
     a1a:	60 83       	st	Z, r22
	ret                             // Return to caller
     a1c:	08 95       	ret

00000a1e <nvm_read_byte>:
#endif

#ifndef __DOXYGEN__
	PUBLIC_FUNCTION(nvm_read_byte)
#if defined(__GNUC__)
	lds r20, NVM_CMD          ; Store NVM command register
     a1e:	40 91 ca 01 	lds	r20, 0x01CA
	mov ZL, r22               ; Load byte index into low byte of Z.
     a22:	e6 2f       	mov	r30, r22
	mov ZH, r23               ; Load high byte into Z.
     a24:	f7 2f       	mov	r31, r23
	sts NVM_CMD, r24          ; Load prepared command into NVM Command register.
     a26:	80 93 ca 01 	sts	0x01CA, r24
	lpm r24, Z                ; Perform an LPM to read out byte
     a2a:	84 91       	lpm	r24, Z
	sts NVM_CMD, r20          ; Restore NVM command register
     a2c:	40 93 ca 01 	sts	0x01CA, r20
	sts NVM_CMD, r16          ; Load prepared command into NVM Command register.
	lpm r16, Z                ; Perform an LPM to read out byte
	sts NVM_CMD, r20          ; Restore NVM command register
#endif

	ret
     a30:	08 95       	ret

00000a32 <spi_xmega_set_baud_div>:
 * \return Status of operation.
 *   \retval >=0  Success.
 *   \retval  <0  Error.
 */
int8_t spi_xmega_set_baud_div(SPI_t *spi, uint32_t baudrate, uint32_t clkper_hz)
{
     a32:	cf 92       	push	r12
     a34:	df 92       	push	r13
     a36:	ef 92       	push	r14
     a38:	ff 92       	push	r15
     a3a:	0f 93       	push	r16
     a3c:	1f 93       	push	r17
     a3e:	cf 93       	push	r28
     a40:	df 93       	push	r29
     a42:	ec 01       	movw	r28, r24
     a44:	6a 01       	movw	r12, r20
     a46:	7b 01       	movw	r14, r22

	/*
	 * Get wanted divisor rounded up so we don't get speed higher than
	 * requested baudrate.
	 */
	divisor = (clkper_hz + baudrate - 1) / baudrate;
     a48:	db 01       	movw	r26, r22
     a4a:	ca 01       	movw	r24, r20
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	a1 09       	sbc	r26, r1
     a50:	b1 09       	sbc	r27, r1
     a52:	bc 01       	movw	r22, r24
     a54:	cd 01       	movw	r24, r26
     a56:	60 0f       	add	r22, r16
     a58:	71 1f       	adc	r23, r17
     a5a:	82 1f       	adc	r24, r18
     a5c:	93 1f       	adc	r25, r19
     a5e:	a7 01       	movw	r20, r14
     a60:	96 01       	movw	r18, r12
     a62:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>

	if (divisor > 128) {
     a66:	21 38       	cpi	r18, 0x81	; 129
     a68:	31 05       	cpc	r19, r1
     a6a:	41 05       	cpc	r20, r1
     a6c:	51 05       	cpc	r21, r1
     a6e:	f8 f4       	brcc	.+62     	; 0xaae <spi_xmega_set_baud_div+0x7c>

	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
     a70:	21 34       	cpi	r18, 0x41	; 65
     a72:	60 f4       	brcc	.+24     	; 0xa8c <spi_xmega_set_baud_div+0x5a>
		ctrl = SPI_PRESCALER_DIV128_gc;
	}
	else if (divisor_8bit > 32) {
     a74:	21 32       	cpi	r18, 0x21	; 33
     a76:	60 f4       	brcc	.+24     	; 0xa90 <spi_xmega_set_baud_div+0x5e>
		ctrl = SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 16) {
     a78:	21 31       	cpi	r18, 0x11	; 17
     a7a:	60 f4       	brcc	.+24     	; 0xa94 <spi_xmega_set_baud_div+0x62>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 8) {
     a7c:	29 30       	cpi	r18, 0x09	; 9
     a7e:	60 f4       	brcc	.+24     	; 0xa98 <spi_xmega_set_baud_div+0x66>
		ctrl = SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 4) {
     a80:	25 30       	cpi	r18, 0x05	; 5
     a82:	60 f4       	brcc	.+24     	; 0xa9c <spi_xmega_set_baud_div+0x6a>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 2) {
     a84:	23 30       	cpi	r18, 0x03	; 3
     a86:	60 f0       	brcs	.+24     	; 0xaa0 <spi_xmega_set_baud_div+0x6e>
		ctrl = SPI_PRESCALER_DIV4_gc;
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	0b c0       	rjmp	.+22     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
		ctrl = SPI_PRESCALER_DIV128_gc;
     a8c:	93 e0       	ldi	r25, 0x03	; 3
     a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 32) {
		ctrl = SPI_PRESCALER_DIV64_gc;
     a90:	92 e0       	ldi	r25, 0x02	; 2
     a92:	07 c0       	rjmp	.+14     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 16) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
     a94:	92 e8       	ldi	r25, 0x82	; 130
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 8) {
		ctrl = SPI_PRESCALER_DIV16_gc;
     a98:	91 e0       	ldi	r25, 0x01	; 1
     a9a:	03 c0       	rjmp	.+6      	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 4) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
     a9c:	91 e8       	ldi	r25, 0x81	; 129
     a9e:	01 c0       	rjmp	.+2      	; 0xaa2 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 2) {
		ctrl = SPI_PRESCALER_DIV4_gc;
	}
	else {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV4_gc;
     aa0:	90 e8       	ldi	r25, 0x80	; 128
	}

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;
     aa2:	88 81       	ld	r24, Y
     aa4:	8c 77       	andi	r24, 0x7C	; 124
     aa6:	89 2b       	or	r24, r25
     aa8:	88 83       	st	Y, r24

	return 1;
     aaa:	81 e0       	ldi	r24, 0x01	; 1
     aac:	01 c0       	rjmp	.+2      	; 0xab0 <spi_xmega_set_baud_div+0x7e>
	if (divisor > 128) {
		/*
		 * Highest possible divisor is 128 so fail since we can't get
		 * low enough baudrate.
		 */
		return -1;
     aae:	8f ef       	ldi	r24, 0xFF	; 255

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;

	return 1;
}
     ab0:	df 91       	pop	r29
     ab2:	cf 91       	pop	r28
     ab4:	1f 91       	pop	r17
     ab6:	0f 91       	pop	r16
     ab8:	ff 90       	pop	r15
     aba:	ef 90       	pop	r14
     abc:	df 90       	pop	r13
     abe:	cf 90       	pop	r12
     ac0:	08 95       	ret

00000ac2 <__vector_14>:
 *
 * This function will handle interrupt on Timer Counter CO overflow and
 * call the callback function.
 */
ISR(TCC0_OVF_vect)
{
     ac2:	1f 92       	push	r1
     ac4:	0f 92       	push	r0
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	0f 92       	push	r0
     aca:	11 24       	eor	r1, r1
     acc:	08 b6       	in	r0, 0x38	; 56
     ace:	0f 92       	push	r0
     ad0:	18 be       	out	0x38, r1	; 56
     ad2:	09 b6       	in	r0, 0x39	; 57
     ad4:	0f 92       	push	r0
     ad6:	19 be       	out	0x39, r1	; 57
     ad8:	0b b6       	in	r0, 0x3b	; 59
     ada:	0f 92       	push	r0
     adc:	1b be       	out	0x3b, r1	; 59
     ade:	2f 93       	push	r18
     ae0:	3f 93       	push	r19
     ae2:	4f 93       	push	r20
     ae4:	5f 93       	push	r21
     ae6:	6f 93       	push	r22
     ae8:	7f 93       	push	r23
     aea:	8f 93       	push	r24
     aec:	9f 93       	push	r25
     aee:	af 93       	push	r26
     af0:	bf 93       	push	r27
     af2:	ef 93       	push	r30
     af4:	ff 93       	push	r31
	if (tc_tcc0_ovf_callback) {
     af6:	e0 91 9a 20 	lds	r30, 0x209A
     afa:	f0 91 9b 20 	lds	r31, 0x209B
     afe:	30 97       	sbiw	r30, 0x00	; 0
     b00:	09 f0       	breq	.+2      	; 0xb04 <__vector_14+0x42>
		tc_tcc0_ovf_callback();
     b02:	19 95       	eicall
	}
}
     b04:	ff 91       	pop	r31
     b06:	ef 91       	pop	r30
     b08:	bf 91       	pop	r27
     b0a:	af 91       	pop	r26
     b0c:	9f 91       	pop	r25
     b0e:	8f 91       	pop	r24
     b10:	7f 91       	pop	r23
     b12:	6f 91       	pop	r22
     b14:	5f 91       	pop	r21
     b16:	4f 91       	pop	r20
     b18:	3f 91       	pop	r19
     b1a:	2f 91       	pop	r18
     b1c:	0f 90       	pop	r0
     b1e:	0b be       	out	0x3b, r0	; 59
     b20:	0f 90       	pop	r0
     b22:	09 be       	out	0x39, r0	; 57
     b24:	0f 90       	pop	r0
     b26:	08 be       	out	0x38, r0	; 56
     b28:	0f 90       	pop	r0
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	0f 90       	pop	r0
     b2e:	1f 90       	pop	r1
     b30:	18 95       	reti

00000b32 <__vector_15>:
 *
 * This function will handle interrupt on Timer Counter CO error and
 * call the callback function.
 */
ISR(TCC0_ERR_vect)
{
     b32:	1f 92       	push	r1
     b34:	0f 92       	push	r0
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	0f 92       	push	r0
     b3a:	11 24       	eor	r1, r1
     b3c:	08 b6       	in	r0, 0x38	; 56
     b3e:	0f 92       	push	r0
     b40:	18 be       	out	0x38, r1	; 56
     b42:	09 b6       	in	r0, 0x39	; 57
     b44:	0f 92       	push	r0
     b46:	19 be       	out	0x39, r1	; 57
     b48:	0b b6       	in	r0, 0x3b	; 59
     b4a:	0f 92       	push	r0
     b4c:	1b be       	out	0x3b, r1	; 59
     b4e:	2f 93       	push	r18
     b50:	3f 93       	push	r19
     b52:	4f 93       	push	r20
     b54:	5f 93       	push	r21
     b56:	6f 93       	push	r22
     b58:	7f 93       	push	r23
     b5a:	8f 93       	push	r24
     b5c:	9f 93       	push	r25
     b5e:	af 93       	push	r26
     b60:	bf 93       	push	r27
     b62:	ef 93       	push	r30
     b64:	ff 93       	push	r31
	if (tc_tcc0_err_callback) {
     b66:	e0 91 98 20 	lds	r30, 0x2098
     b6a:	f0 91 99 20 	lds	r31, 0x2099
     b6e:	30 97       	sbiw	r30, 0x00	; 0
     b70:	09 f0       	breq	.+2      	; 0xb74 <__vector_15+0x42>
		tc_tcc0_err_callback();
     b72:	19 95       	eicall
	}
}
     b74:	ff 91       	pop	r31
     b76:	ef 91       	pop	r30
     b78:	bf 91       	pop	r27
     b7a:	af 91       	pop	r26
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	7f 91       	pop	r23
     b82:	6f 91       	pop	r22
     b84:	5f 91       	pop	r21
     b86:	4f 91       	pop	r20
     b88:	3f 91       	pop	r19
     b8a:	2f 91       	pop	r18
     b8c:	0f 90       	pop	r0
     b8e:	0b be       	out	0x3b, r0	; 59
     b90:	0f 90       	pop	r0
     b92:	09 be       	out	0x39, r0	; 57
     b94:	0f 90       	pop	r0
     b96:	08 be       	out	0x38, r0	; 56
     b98:	0f 90       	pop	r0
     b9a:	0f be       	out	0x3f, r0	; 63
     b9c:	0f 90       	pop	r0
     b9e:	1f 90       	pop	r1
     ba0:	18 95       	reti

00000ba2 <__vector_16>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC0_CCA_vect)
{
     ba2:	1f 92       	push	r1
     ba4:	0f 92       	push	r0
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	0f 92       	push	r0
     baa:	11 24       	eor	r1, r1
     bac:	08 b6       	in	r0, 0x38	; 56
     bae:	0f 92       	push	r0
     bb0:	18 be       	out	0x38, r1	; 56
     bb2:	09 b6       	in	r0, 0x39	; 57
     bb4:	0f 92       	push	r0
     bb6:	19 be       	out	0x39, r1	; 57
     bb8:	0b b6       	in	r0, 0x3b	; 59
     bba:	0f 92       	push	r0
     bbc:	1b be       	out	0x3b, r1	; 59
     bbe:	2f 93       	push	r18
     bc0:	3f 93       	push	r19
     bc2:	4f 93       	push	r20
     bc4:	5f 93       	push	r21
     bc6:	6f 93       	push	r22
     bc8:	7f 93       	push	r23
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	af 93       	push	r26
     bd0:	bf 93       	push	r27
     bd2:	ef 93       	push	r30
     bd4:	ff 93       	push	r31
	if (tc_tcc0_cca_callback) {
     bd6:	e0 91 96 20 	lds	r30, 0x2096
     bda:	f0 91 97 20 	lds	r31, 0x2097
     bde:	30 97       	sbiw	r30, 0x00	; 0
     be0:	09 f0       	breq	.+2      	; 0xbe4 <__vector_16+0x42>
		tc_tcc0_cca_callback();
     be2:	19 95       	eicall
	}
}
     be4:	ff 91       	pop	r31
     be6:	ef 91       	pop	r30
     be8:	bf 91       	pop	r27
     bea:	af 91       	pop	r26
     bec:	9f 91       	pop	r25
     bee:	8f 91       	pop	r24
     bf0:	7f 91       	pop	r23
     bf2:	6f 91       	pop	r22
     bf4:	5f 91       	pop	r21
     bf6:	4f 91       	pop	r20
     bf8:	3f 91       	pop	r19
     bfa:	2f 91       	pop	r18
     bfc:	0f 90       	pop	r0
     bfe:	0b be       	out	0x3b, r0	; 59
     c00:	0f 90       	pop	r0
     c02:	09 be       	out	0x39, r0	; 57
     c04:	0f 90       	pop	r0
     c06:	08 be       	out	0x38, r0	; 56
     c08:	0f 90       	pop	r0
     c0a:	0f be       	out	0x3f, r0	; 63
     c0c:	0f 90       	pop	r0
     c0e:	1f 90       	pop	r1
     c10:	18 95       	reti

00000c12 <__vector_17>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC0_CCB_vect)
{
     c12:	1f 92       	push	r1
     c14:	0f 92       	push	r0
     c16:	0f b6       	in	r0, 0x3f	; 63
     c18:	0f 92       	push	r0
     c1a:	11 24       	eor	r1, r1
     c1c:	08 b6       	in	r0, 0x38	; 56
     c1e:	0f 92       	push	r0
     c20:	18 be       	out	0x38, r1	; 56
     c22:	09 b6       	in	r0, 0x39	; 57
     c24:	0f 92       	push	r0
     c26:	19 be       	out	0x39, r1	; 57
     c28:	0b b6       	in	r0, 0x3b	; 59
     c2a:	0f 92       	push	r0
     c2c:	1b be       	out	0x3b, r1	; 59
     c2e:	2f 93       	push	r18
     c30:	3f 93       	push	r19
     c32:	4f 93       	push	r20
     c34:	5f 93       	push	r21
     c36:	6f 93       	push	r22
     c38:	7f 93       	push	r23
     c3a:	8f 93       	push	r24
     c3c:	9f 93       	push	r25
     c3e:	af 93       	push	r26
     c40:	bf 93       	push	r27
     c42:	ef 93       	push	r30
     c44:	ff 93       	push	r31
	if (tc_tcc0_ccb_callback) {
     c46:	e0 91 94 20 	lds	r30, 0x2094
     c4a:	f0 91 95 20 	lds	r31, 0x2095
     c4e:	30 97       	sbiw	r30, 0x00	; 0
     c50:	09 f0       	breq	.+2      	; 0xc54 <__vector_17+0x42>
		tc_tcc0_ccb_callback();
     c52:	19 95       	eicall
	}
}
     c54:	ff 91       	pop	r31
     c56:	ef 91       	pop	r30
     c58:	bf 91       	pop	r27
     c5a:	af 91       	pop	r26
     c5c:	9f 91       	pop	r25
     c5e:	8f 91       	pop	r24
     c60:	7f 91       	pop	r23
     c62:	6f 91       	pop	r22
     c64:	5f 91       	pop	r21
     c66:	4f 91       	pop	r20
     c68:	3f 91       	pop	r19
     c6a:	2f 91       	pop	r18
     c6c:	0f 90       	pop	r0
     c6e:	0b be       	out	0x3b, r0	; 59
     c70:	0f 90       	pop	r0
     c72:	09 be       	out	0x39, r0	; 57
     c74:	0f 90       	pop	r0
     c76:	08 be       	out	0x38, r0	; 56
     c78:	0f 90       	pop	r0
     c7a:	0f be       	out	0x3f, r0	; 63
     c7c:	0f 90       	pop	r0
     c7e:	1f 90       	pop	r1
     c80:	18 95       	reti

00000c82 <__vector_18>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureC and
 * call the callback function.
 */
ISR(TCC0_CCC_vect)
{
     c82:	1f 92       	push	r1
     c84:	0f 92       	push	r0
     c86:	0f b6       	in	r0, 0x3f	; 63
     c88:	0f 92       	push	r0
     c8a:	11 24       	eor	r1, r1
     c8c:	08 b6       	in	r0, 0x38	; 56
     c8e:	0f 92       	push	r0
     c90:	18 be       	out	0x38, r1	; 56
     c92:	09 b6       	in	r0, 0x39	; 57
     c94:	0f 92       	push	r0
     c96:	19 be       	out	0x39, r1	; 57
     c98:	0b b6       	in	r0, 0x3b	; 59
     c9a:	0f 92       	push	r0
     c9c:	1b be       	out	0x3b, r1	; 59
     c9e:	2f 93       	push	r18
     ca0:	3f 93       	push	r19
     ca2:	4f 93       	push	r20
     ca4:	5f 93       	push	r21
     ca6:	6f 93       	push	r22
     ca8:	7f 93       	push	r23
     caa:	8f 93       	push	r24
     cac:	9f 93       	push	r25
     cae:	af 93       	push	r26
     cb0:	bf 93       	push	r27
     cb2:	ef 93       	push	r30
     cb4:	ff 93       	push	r31
	if (tc_tcc0_ccc_callback) {
     cb6:	e0 91 92 20 	lds	r30, 0x2092
     cba:	f0 91 93 20 	lds	r31, 0x2093
     cbe:	30 97       	sbiw	r30, 0x00	; 0
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <__vector_18+0x42>
		tc_tcc0_ccc_callback();
     cc2:	19 95       	eicall
	}
}
     cc4:	ff 91       	pop	r31
     cc6:	ef 91       	pop	r30
     cc8:	bf 91       	pop	r27
     cca:	af 91       	pop	r26
     ccc:	9f 91       	pop	r25
     cce:	8f 91       	pop	r24
     cd0:	7f 91       	pop	r23
     cd2:	6f 91       	pop	r22
     cd4:	5f 91       	pop	r21
     cd6:	4f 91       	pop	r20
     cd8:	3f 91       	pop	r19
     cda:	2f 91       	pop	r18
     cdc:	0f 90       	pop	r0
     cde:	0b be       	out	0x3b, r0	; 59
     ce0:	0f 90       	pop	r0
     ce2:	09 be       	out	0x39, r0	; 57
     ce4:	0f 90       	pop	r0
     ce6:	08 be       	out	0x38, r0	; 56
     ce8:	0f 90       	pop	r0
     cea:	0f be       	out	0x3f, r0	; 63
     cec:	0f 90       	pop	r0
     cee:	1f 90       	pop	r1
     cf0:	18 95       	reti

00000cf2 <__vector_19>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureD and
 * call the callback function.
 */
ISR(TCC0_CCD_vect)
{
     cf2:	1f 92       	push	r1
     cf4:	0f 92       	push	r0
     cf6:	0f b6       	in	r0, 0x3f	; 63
     cf8:	0f 92       	push	r0
     cfa:	11 24       	eor	r1, r1
     cfc:	08 b6       	in	r0, 0x38	; 56
     cfe:	0f 92       	push	r0
     d00:	18 be       	out	0x38, r1	; 56
     d02:	09 b6       	in	r0, 0x39	; 57
     d04:	0f 92       	push	r0
     d06:	19 be       	out	0x39, r1	; 57
     d08:	0b b6       	in	r0, 0x3b	; 59
     d0a:	0f 92       	push	r0
     d0c:	1b be       	out	0x3b, r1	; 59
     d0e:	2f 93       	push	r18
     d10:	3f 93       	push	r19
     d12:	4f 93       	push	r20
     d14:	5f 93       	push	r21
     d16:	6f 93       	push	r22
     d18:	7f 93       	push	r23
     d1a:	8f 93       	push	r24
     d1c:	9f 93       	push	r25
     d1e:	af 93       	push	r26
     d20:	bf 93       	push	r27
     d22:	ef 93       	push	r30
     d24:	ff 93       	push	r31
	if (tc_tcc0_ccd_callback) {
     d26:	e0 91 90 20 	lds	r30, 0x2090
     d2a:	f0 91 91 20 	lds	r31, 0x2091
     d2e:	30 97       	sbiw	r30, 0x00	; 0
     d30:	09 f0       	breq	.+2      	; 0xd34 <__vector_19+0x42>
		tc_tcc0_ccd_callback();
     d32:	19 95       	eicall
	}
}
     d34:	ff 91       	pop	r31
     d36:	ef 91       	pop	r30
     d38:	bf 91       	pop	r27
     d3a:	af 91       	pop	r26
     d3c:	9f 91       	pop	r25
     d3e:	8f 91       	pop	r24
     d40:	7f 91       	pop	r23
     d42:	6f 91       	pop	r22
     d44:	5f 91       	pop	r21
     d46:	4f 91       	pop	r20
     d48:	3f 91       	pop	r19
     d4a:	2f 91       	pop	r18
     d4c:	0f 90       	pop	r0
     d4e:	0b be       	out	0x3b, r0	; 59
     d50:	0f 90       	pop	r0
     d52:	09 be       	out	0x39, r0	; 57
     d54:	0f 90       	pop	r0
     d56:	08 be       	out	0x38, r0	; 56
     d58:	0f 90       	pop	r0
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	0f 90       	pop	r0
     d5e:	1f 90       	pop	r1
     d60:	18 95       	reti

00000d62 <__vector_20>:
 *
 * This function will handle interrupt on Timer Counter C1 overflow and
 * call the callback function.
 */
ISR(TCC1_OVF_vect)
{
     d62:	1f 92       	push	r1
     d64:	0f 92       	push	r0
     d66:	0f b6       	in	r0, 0x3f	; 63
     d68:	0f 92       	push	r0
     d6a:	11 24       	eor	r1, r1
     d6c:	08 b6       	in	r0, 0x38	; 56
     d6e:	0f 92       	push	r0
     d70:	18 be       	out	0x38, r1	; 56
     d72:	09 b6       	in	r0, 0x39	; 57
     d74:	0f 92       	push	r0
     d76:	19 be       	out	0x39, r1	; 57
     d78:	0b b6       	in	r0, 0x3b	; 59
     d7a:	0f 92       	push	r0
     d7c:	1b be       	out	0x3b, r1	; 59
     d7e:	2f 93       	push	r18
     d80:	3f 93       	push	r19
     d82:	4f 93       	push	r20
     d84:	5f 93       	push	r21
     d86:	6f 93       	push	r22
     d88:	7f 93       	push	r23
     d8a:	8f 93       	push	r24
     d8c:	9f 93       	push	r25
     d8e:	af 93       	push	r26
     d90:	bf 93       	push	r27
     d92:	ef 93       	push	r30
     d94:	ff 93       	push	r31
	if (tc_tcc1_ovf_callback) {
     d96:	e0 91 8e 20 	lds	r30, 0x208E
     d9a:	f0 91 8f 20 	lds	r31, 0x208F
     d9e:	30 97       	sbiw	r30, 0x00	; 0
     da0:	09 f0       	breq	.+2      	; 0xda4 <__vector_20+0x42>
		tc_tcc1_ovf_callback();
     da2:	19 95       	eicall
	}
}
     da4:	ff 91       	pop	r31
     da6:	ef 91       	pop	r30
     da8:	bf 91       	pop	r27
     daa:	af 91       	pop	r26
     dac:	9f 91       	pop	r25
     dae:	8f 91       	pop	r24
     db0:	7f 91       	pop	r23
     db2:	6f 91       	pop	r22
     db4:	5f 91       	pop	r21
     db6:	4f 91       	pop	r20
     db8:	3f 91       	pop	r19
     dba:	2f 91       	pop	r18
     dbc:	0f 90       	pop	r0
     dbe:	0b be       	out	0x3b, r0	; 59
     dc0:	0f 90       	pop	r0
     dc2:	09 be       	out	0x39, r0	; 57
     dc4:	0f 90       	pop	r0
     dc6:	08 be       	out	0x38, r0	; 56
     dc8:	0f 90       	pop	r0
     dca:	0f be       	out	0x3f, r0	; 63
     dcc:	0f 90       	pop	r0
     dce:	1f 90       	pop	r1
     dd0:	18 95       	reti

00000dd2 <__vector_21>:
 *
 * This function will handle interrupt on Timer Counter C1 error and
 * call the callback function.
 */
ISR(TCC1_ERR_vect)
{
     dd2:	1f 92       	push	r1
     dd4:	0f 92       	push	r0
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	0f 92       	push	r0
     dda:	11 24       	eor	r1, r1
     ddc:	08 b6       	in	r0, 0x38	; 56
     dde:	0f 92       	push	r0
     de0:	18 be       	out	0x38, r1	; 56
     de2:	09 b6       	in	r0, 0x39	; 57
     de4:	0f 92       	push	r0
     de6:	19 be       	out	0x39, r1	; 57
     de8:	0b b6       	in	r0, 0x3b	; 59
     dea:	0f 92       	push	r0
     dec:	1b be       	out	0x3b, r1	; 59
     dee:	2f 93       	push	r18
     df0:	3f 93       	push	r19
     df2:	4f 93       	push	r20
     df4:	5f 93       	push	r21
     df6:	6f 93       	push	r22
     df8:	7f 93       	push	r23
     dfa:	8f 93       	push	r24
     dfc:	9f 93       	push	r25
     dfe:	af 93       	push	r26
     e00:	bf 93       	push	r27
     e02:	ef 93       	push	r30
     e04:	ff 93       	push	r31
	if (tc_tcc1_err_callback) {
     e06:	e0 91 8c 20 	lds	r30, 0x208C
     e0a:	f0 91 8d 20 	lds	r31, 0x208D
     e0e:	30 97       	sbiw	r30, 0x00	; 0
     e10:	09 f0       	breq	.+2      	; 0xe14 <__vector_21+0x42>
		tc_tcc1_err_callback();
     e12:	19 95       	eicall
	}
}
     e14:	ff 91       	pop	r31
     e16:	ef 91       	pop	r30
     e18:	bf 91       	pop	r27
     e1a:	af 91       	pop	r26
     e1c:	9f 91       	pop	r25
     e1e:	8f 91       	pop	r24
     e20:	7f 91       	pop	r23
     e22:	6f 91       	pop	r22
     e24:	5f 91       	pop	r21
     e26:	4f 91       	pop	r20
     e28:	3f 91       	pop	r19
     e2a:	2f 91       	pop	r18
     e2c:	0f 90       	pop	r0
     e2e:	0b be       	out	0x3b, r0	; 59
     e30:	0f 90       	pop	r0
     e32:	09 be       	out	0x39, r0	; 57
     e34:	0f 90       	pop	r0
     e36:	08 be       	out	0x38, r0	; 56
     e38:	0f 90       	pop	r0
     e3a:	0f be       	out	0x3f, r0	; 63
     e3c:	0f 90       	pop	r0
     e3e:	1f 90       	pop	r1
     e40:	18 95       	reti

00000e42 <__vector_22>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC1_CCA_vect)
{
     e42:	1f 92       	push	r1
     e44:	0f 92       	push	r0
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	0f 92       	push	r0
     e4a:	11 24       	eor	r1, r1
     e4c:	08 b6       	in	r0, 0x38	; 56
     e4e:	0f 92       	push	r0
     e50:	18 be       	out	0x38, r1	; 56
     e52:	09 b6       	in	r0, 0x39	; 57
     e54:	0f 92       	push	r0
     e56:	19 be       	out	0x39, r1	; 57
     e58:	0b b6       	in	r0, 0x3b	; 59
     e5a:	0f 92       	push	r0
     e5c:	1b be       	out	0x3b, r1	; 59
     e5e:	2f 93       	push	r18
     e60:	3f 93       	push	r19
     e62:	4f 93       	push	r20
     e64:	5f 93       	push	r21
     e66:	6f 93       	push	r22
     e68:	7f 93       	push	r23
     e6a:	8f 93       	push	r24
     e6c:	9f 93       	push	r25
     e6e:	af 93       	push	r26
     e70:	bf 93       	push	r27
     e72:	ef 93       	push	r30
     e74:	ff 93       	push	r31
	if (tc_tcc1_cca_callback) {
     e76:	e0 91 8a 20 	lds	r30, 0x208A
     e7a:	f0 91 8b 20 	lds	r31, 0x208B
     e7e:	30 97       	sbiw	r30, 0x00	; 0
     e80:	09 f0       	breq	.+2      	; 0xe84 <__vector_22+0x42>
		tc_tcc1_cca_callback();
     e82:	19 95       	eicall
	}
}
     e84:	ff 91       	pop	r31
     e86:	ef 91       	pop	r30
     e88:	bf 91       	pop	r27
     e8a:	af 91       	pop	r26
     e8c:	9f 91       	pop	r25
     e8e:	8f 91       	pop	r24
     e90:	7f 91       	pop	r23
     e92:	6f 91       	pop	r22
     e94:	5f 91       	pop	r21
     e96:	4f 91       	pop	r20
     e98:	3f 91       	pop	r19
     e9a:	2f 91       	pop	r18
     e9c:	0f 90       	pop	r0
     e9e:	0b be       	out	0x3b, r0	; 59
     ea0:	0f 90       	pop	r0
     ea2:	09 be       	out	0x39, r0	; 57
     ea4:	0f 90       	pop	r0
     ea6:	08 be       	out	0x38, r0	; 56
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	0f 90       	pop	r0
     eae:	1f 90       	pop	r1
     eb0:	18 95       	reti

00000eb2 <__vector_23>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC1_CCB_vect)
{
     eb2:	1f 92       	push	r1
     eb4:	0f 92       	push	r0
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	0f 92       	push	r0
     eba:	11 24       	eor	r1, r1
     ebc:	08 b6       	in	r0, 0x38	; 56
     ebe:	0f 92       	push	r0
     ec0:	18 be       	out	0x38, r1	; 56
     ec2:	09 b6       	in	r0, 0x39	; 57
     ec4:	0f 92       	push	r0
     ec6:	19 be       	out	0x39, r1	; 57
     ec8:	0b b6       	in	r0, 0x3b	; 59
     eca:	0f 92       	push	r0
     ecc:	1b be       	out	0x3b, r1	; 59
     ece:	2f 93       	push	r18
     ed0:	3f 93       	push	r19
     ed2:	4f 93       	push	r20
     ed4:	5f 93       	push	r21
     ed6:	6f 93       	push	r22
     ed8:	7f 93       	push	r23
     eda:	8f 93       	push	r24
     edc:	9f 93       	push	r25
     ede:	af 93       	push	r26
     ee0:	bf 93       	push	r27
     ee2:	ef 93       	push	r30
     ee4:	ff 93       	push	r31
	if (tc_tcc1_ccb_callback) {
     ee6:	e0 91 88 20 	lds	r30, 0x2088
     eea:	f0 91 89 20 	lds	r31, 0x2089
     eee:	30 97       	sbiw	r30, 0x00	; 0
     ef0:	09 f0       	breq	.+2      	; 0xef4 <__vector_23+0x42>
		tc_tcc1_ccb_callback();
     ef2:	19 95       	eicall
	}
}
     ef4:	ff 91       	pop	r31
     ef6:	ef 91       	pop	r30
     ef8:	bf 91       	pop	r27
     efa:	af 91       	pop	r26
     efc:	9f 91       	pop	r25
     efe:	8f 91       	pop	r24
     f00:	7f 91       	pop	r23
     f02:	6f 91       	pop	r22
     f04:	5f 91       	pop	r21
     f06:	4f 91       	pop	r20
     f08:	3f 91       	pop	r19
     f0a:	2f 91       	pop	r18
     f0c:	0f 90       	pop	r0
     f0e:	0b be       	out	0x3b, r0	; 59
     f10:	0f 90       	pop	r0
     f12:	09 be       	out	0x39, r0	; 57
     f14:	0f 90       	pop	r0
     f16:	08 be       	out	0x38, r0	; 56
     f18:	0f 90       	pop	r0
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	0f 90       	pop	r0
     f1e:	1f 90       	pop	r1
     f20:	18 95       	reti

00000f22 <__vector_78>:
 *
 * This function will handle interrupt on Timer Counter D0 error and
 * call the callback function.
 */
ISR(TCD0_ERR_vect)
{
     f22:	1f 92       	push	r1
     f24:	0f 92       	push	r0
     f26:	0f b6       	in	r0, 0x3f	; 63
     f28:	0f 92       	push	r0
     f2a:	11 24       	eor	r1, r1
     f2c:	08 b6       	in	r0, 0x38	; 56
     f2e:	0f 92       	push	r0
     f30:	18 be       	out	0x38, r1	; 56
     f32:	09 b6       	in	r0, 0x39	; 57
     f34:	0f 92       	push	r0
     f36:	19 be       	out	0x39, r1	; 57
     f38:	0b b6       	in	r0, 0x3b	; 59
     f3a:	0f 92       	push	r0
     f3c:	1b be       	out	0x3b, r1	; 59
     f3e:	2f 93       	push	r18
     f40:	3f 93       	push	r19
     f42:	4f 93       	push	r20
     f44:	5f 93       	push	r21
     f46:	6f 93       	push	r22
     f48:	7f 93       	push	r23
     f4a:	8f 93       	push	r24
     f4c:	9f 93       	push	r25
     f4e:	af 93       	push	r26
     f50:	bf 93       	push	r27
     f52:	ef 93       	push	r30
     f54:	ff 93       	push	r31
	if (tc_tcd0_err_callback) {
     f56:	e0 91 86 20 	lds	r30, 0x2086
     f5a:	f0 91 87 20 	lds	r31, 0x2087
     f5e:	30 97       	sbiw	r30, 0x00	; 0
     f60:	09 f0       	breq	.+2      	; 0xf64 <__vector_78+0x42>
		tc_tcd0_err_callback();
     f62:	19 95       	eicall
	}
}
     f64:	ff 91       	pop	r31
     f66:	ef 91       	pop	r30
     f68:	bf 91       	pop	r27
     f6a:	af 91       	pop	r26
     f6c:	9f 91       	pop	r25
     f6e:	8f 91       	pop	r24
     f70:	7f 91       	pop	r23
     f72:	6f 91       	pop	r22
     f74:	5f 91       	pop	r21
     f76:	4f 91       	pop	r20
     f78:	3f 91       	pop	r19
     f7a:	2f 91       	pop	r18
     f7c:	0f 90       	pop	r0
     f7e:	0b be       	out	0x3b, r0	; 59
     f80:	0f 90       	pop	r0
     f82:	09 be       	out	0x39, r0	; 57
     f84:	0f 90       	pop	r0
     f86:	08 be       	out	0x38, r0	; 56
     f88:	0f 90       	pop	r0
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	0f 90       	pop	r0
     f8e:	1f 90       	pop	r1
     f90:	18 95       	reti

00000f92 <__vector_79>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD0_CCA_vect)
{
     f92:	1f 92       	push	r1
     f94:	0f 92       	push	r0
     f96:	0f b6       	in	r0, 0x3f	; 63
     f98:	0f 92       	push	r0
     f9a:	11 24       	eor	r1, r1
     f9c:	08 b6       	in	r0, 0x38	; 56
     f9e:	0f 92       	push	r0
     fa0:	18 be       	out	0x38, r1	; 56
     fa2:	09 b6       	in	r0, 0x39	; 57
     fa4:	0f 92       	push	r0
     fa6:	19 be       	out	0x39, r1	; 57
     fa8:	0b b6       	in	r0, 0x3b	; 59
     faa:	0f 92       	push	r0
     fac:	1b be       	out	0x3b, r1	; 59
     fae:	2f 93       	push	r18
     fb0:	3f 93       	push	r19
     fb2:	4f 93       	push	r20
     fb4:	5f 93       	push	r21
     fb6:	6f 93       	push	r22
     fb8:	7f 93       	push	r23
     fba:	8f 93       	push	r24
     fbc:	9f 93       	push	r25
     fbe:	af 93       	push	r26
     fc0:	bf 93       	push	r27
     fc2:	ef 93       	push	r30
     fc4:	ff 93       	push	r31
	if (tc_tcd0_cca_callback) {
     fc6:	e0 91 84 20 	lds	r30, 0x2084
     fca:	f0 91 85 20 	lds	r31, 0x2085
     fce:	30 97       	sbiw	r30, 0x00	; 0
     fd0:	09 f0       	breq	.+2      	; 0xfd4 <__vector_79+0x42>
		tc_tcd0_cca_callback();
     fd2:	19 95       	eicall
	}
}
     fd4:	ff 91       	pop	r31
     fd6:	ef 91       	pop	r30
     fd8:	bf 91       	pop	r27
     fda:	af 91       	pop	r26
     fdc:	9f 91       	pop	r25
     fde:	8f 91       	pop	r24
     fe0:	7f 91       	pop	r23
     fe2:	6f 91       	pop	r22
     fe4:	5f 91       	pop	r21
     fe6:	4f 91       	pop	r20
     fe8:	3f 91       	pop	r19
     fea:	2f 91       	pop	r18
     fec:	0f 90       	pop	r0
     fee:	0b be       	out	0x3b, r0	; 59
     ff0:	0f 90       	pop	r0
     ff2:	09 be       	out	0x39, r0	; 57
     ff4:	0f 90       	pop	r0
     ff6:	08 be       	out	0x38, r0	; 56
     ff8:	0f 90       	pop	r0
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	0f 90       	pop	r0
     ffe:	1f 90       	pop	r1
    1000:	18 95       	reti

00001002 <__vector_80>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD0_CCB_vect)
{
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	08 b6       	in	r0, 0x38	; 56
    100e:	0f 92       	push	r0
    1010:	18 be       	out	0x38, r1	; 56
    1012:	09 b6       	in	r0, 0x39	; 57
    1014:	0f 92       	push	r0
    1016:	19 be       	out	0x39, r1	; 57
    1018:	0b b6       	in	r0, 0x3b	; 59
    101a:	0f 92       	push	r0
    101c:	1b be       	out	0x3b, r1	; 59
    101e:	2f 93       	push	r18
    1020:	3f 93       	push	r19
    1022:	4f 93       	push	r20
    1024:	5f 93       	push	r21
    1026:	6f 93       	push	r22
    1028:	7f 93       	push	r23
    102a:	8f 93       	push	r24
    102c:	9f 93       	push	r25
    102e:	af 93       	push	r26
    1030:	bf 93       	push	r27
    1032:	ef 93       	push	r30
    1034:	ff 93       	push	r31
	if (tc_tcd0_ccb_callback) {
    1036:	e0 91 82 20 	lds	r30, 0x2082
    103a:	f0 91 83 20 	lds	r31, 0x2083
    103e:	30 97       	sbiw	r30, 0x00	; 0
    1040:	09 f0       	breq	.+2      	; 0x1044 <__vector_80+0x42>
		tc_tcd0_ccb_callback();
    1042:	19 95       	eicall
	}
}
    1044:	ff 91       	pop	r31
    1046:	ef 91       	pop	r30
    1048:	bf 91       	pop	r27
    104a:	af 91       	pop	r26
    104c:	9f 91       	pop	r25
    104e:	8f 91       	pop	r24
    1050:	7f 91       	pop	r23
    1052:	6f 91       	pop	r22
    1054:	5f 91       	pop	r21
    1056:	4f 91       	pop	r20
    1058:	3f 91       	pop	r19
    105a:	2f 91       	pop	r18
    105c:	0f 90       	pop	r0
    105e:	0b be       	out	0x3b, r0	; 59
    1060:	0f 90       	pop	r0
    1062:	09 be       	out	0x39, r0	; 57
    1064:	0f 90       	pop	r0
    1066:	08 be       	out	0x38, r0	; 56
    1068:	0f 90       	pop	r0
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	0f 90       	pop	r0
    106e:	1f 90       	pop	r1
    1070:	18 95       	reti

00001072 <__vector_81>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCD0_CCC_vect)
{
    1072:	1f 92       	push	r1
    1074:	0f 92       	push	r0
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	0f 92       	push	r0
    107a:	11 24       	eor	r1, r1
    107c:	08 b6       	in	r0, 0x38	; 56
    107e:	0f 92       	push	r0
    1080:	18 be       	out	0x38, r1	; 56
    1082:	09 b6       	in	r0, 0x39	; 57
    1084:	0f 92       	push	r0
    1086:	19 be       	out	0x39, r1	; 57
    1088:	0b b6       	in	r0, 0x3b	; 59
    108a:	0f 92       	push	r0
    108c:	1b be       	out	0x3b, r1	; 59
    108e:	2f 93       	push	r18
    1090:	3f 93       	push	r19
    1092:	4f 93       	push	r20
    1094:	5f 93       	push	r21
    1096:	6f 93       	push	r22
    1098:	7f 93       	push	r23
    109a:	8f 93       	push	r24
    109c:	9f 93       	push	r25
    109e:	af 93       	push	r26
    10a0:	bf 93       	push	r27
    10a2:	ef 93       	push	r30
    10a4:	ff 93       	push	r31
	if (tc_tcd0_ccc_callback) {
    10a6:	e0 91 80 20 	lds	r30, 0x2080
    10aa:	f0 91 81 20 	lds	r31, 0x2081
    10ae:	30 97       	sbiw	r30, 0x00	; 0
    10b0:	09 f0       	breq	.+2      	; 0x10b4 <__vector_81+0x42>
		tc_tcd0_ccc_callback();
    10b2:	19 95       	eicall
	}
}
    10b4:	ff 91       	pop	r31
    10b6:	ef 91       	pop	r30
    10b8:	bf 91       	pop	r27
    10ba:	af 91       	pop	r26
    10bc:	9f 91       	pop	r25
    10be:	8f 91       	pop	r24
    10c0:	7f 91       	pop	r23
    10c2:	6f 91       	pop	r22
    10c4:	5f 91       	pop	r21
    10c6:	4f 91       	pop	r20
    10c8:	3f 91       	pop	r19
    10ca:	2f 91       	pop	r18
    10cc:	0f 90       	pop	r0
    10ce:	0b be       	out	0x3b, r0	; 59
    10d0:	0f 90       	pop	r0
    10d2:	09 be       	out	0x39, r0	; 57
    10d4:	0f 90       	pop	r0
    10d6:	08 be       	out	0x38, r0	; 56
    10d8:	0f 90       	pop	r0
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	0f 90       	pop	r0
    10de:	1f 90       	pop	r1
    10e0:	18 95       	reti

000010e2 <__vector_82>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCD0_CCD_vect)
{
    10e2:	1f 92       	push	r1
    10e4:	0f 92       	push	r0
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	0f 92       	push	r0
    10ea:	11 24       	eor	r1, r1
    10ec:	08 b6       	in	r0, 0x38	; 56
    10ee:	0f 92       	push	r0
    10f0:	18 be       	out	0x38, r1	; 56
    10f2:	09 b6       	in	r0, 0x39	; 57
    10f4:	0f 92       	push	r0
    10f6:	19 be       	out	0x39, r1	; 57
    10f8:	0b b6       	in	r0, 0x3b	; 59
    10fa:	0f 92       	push	r0
    10fc:	1b be       	out	0x3b, r1	; 59
    10fe:	2f 93       	push	r18
    1100:	3f 93       	push	r19
    1102:	4f 93       	push	r20
    1104:	5f 93       	push	r21
    1106:	6f 93       	push	r22
    1108:	7f 93       	push	r23
    110a:	8f 93       	push	r24
    110c:	9f 93       	push	r25
    110e:	af 93       	push	r26
    1110:	bf 93       	push	r27
    1112:	ef 93       	push	r30
    1114:	ff 93       	push	r31
	if (tc_tcd0_ccd_callback) {
    1116:	e0 91 7e 20 	lds	r30, 0x207E
    111a:	f0 91 7f 20 	lds	r31, 0x207F
    111e:	30 97       	sbiw	r30, 0x00	; 0
    1120:	09 f0       	breq	.+2      	; 0x1124 <__vector_82+0x42>
		tc_tcd0_ccd_callback();
    1122:	19 95       	eicall
	}
}
    1124:	ff 91       	pop	r31
    1126:	ef 91       	pop	r30
    1128:	bf 91       	pop	r27
    112a:	af 91       	pop	r26
    112c:	9f 91       	pop	r25
    112e:	8f 91       	pop	r24
    1130:	7f 91       	pop	r23
    1132:	6f 91       	pop	r22
    1134:	5f 91       	pop	r21
    1136:	4f 91       	pop	r20
    1138:	3f 91       	pop	r19
    113a:	2f 91       	pop	r18
    113c:	0f 90       	pop	r0
    113e:	0b be       	out	0x3b, r0	; 59
    1140:	0f 90       	pop	r0
    1142:	09 be       	out	0x39, r0	; 57
    1144:	0f 90       	pop	r0
    1146:	08 be       	out	0x38, r0	; 56
    1148:	0f 90       	pop	r0
    114a:	0f be       	out	0x3f, r0	; 63
    114c:	0f 90       	pop	r0
    114e:	1f 90       	pop	r1
    1150:	18 95       	reti

00001152 <__vector_83>:
 *
 * This function will handle interrupt on Timer Counter D1 overflow and
 * call the callback function.
 */
ISR(TCD1_OVF_vect)
{
    1152:	1f 92       	push	r1
    1154:	0f 92       	push	r0
    1156:	0f b6       	in	r0, 0x3f	; 63
    1158:	0f 92       	push	r0
    115a:	11 24       	eor	r1, r1
    115c:	08 b6       	in	r0, 0x38	; 56
    115e:	0f 92       	push	r0
    1160:	18 be       	out	0x38, r1	; 56
    1162:	09 b6       	in	r0, 0x39	; 57
    1164:	0f 92       	push	r0
    1166:	19 be       	out	0x39, r1	; 57
    1168:	0b b6       	in	r0, 0x3b	; 59
    116a:	0f 92       	push	r0
    116c:	1b be       	out	0x3b, r1	; 59
    116e:	2f 93       	push	r18
    1170:	3f 93       	push	r19
    1172:	4f 93       	push	r20
    1174:	5f 93       	push	r21
    1176:	6f 93       	push	r22
    1178:	7f 93       	push	r23
    117a:	8f 93       	push	r24
    117c:	9f 93       	push	r25
    117e:	af 93       	push	r26
    1180:	bf 93       	push	r27
    1182:	ef 93       	push	r30
    1184:	ff 93       	push	r31
	if (tc_tcd1_ovf_callback) {
    1186:	e0 91 7c 20 	lds	r30, 0x207C
    118a:	f0 91 7d 20 	lds	r31, 0x207D
    118e:	30 97       	sbiw	r30, 0x00	; 0
    1190:	09 f0       	breq	.+2      	; 0x1194 <__vector_83+0x42>
		tc_tcd1_ovf_callback();
    1192:	19 95       	eicall
	}
}
    1194:	ff 91       	pop	r31
    1196:	ef 91       	pop	r30
    1198:	bf 91       	pop	r27
    119a:	af 91       	pop	r26
    119c:	9f 91       	pop	r25
    119e:	8f 91       	pop	r24
    11a0:	7f 91       	pop	r23
    11a2:	6f 91       	pop	r22
    11a4:	5f 91       	pop	r21
    11a6:	4f 91       	pop	r20
    11a8:	3f 91       	pop	r19
    11aa:	2f 91       	pop	r18
    11ac:	0f 90       	pop	r0
    11ae:	0b be       	out	0x3b, r0	; 59
    11b0:	0f 90       	pop	r0
    11b2:	09 be       	out	0x39, r0	; 57
    11b4:	0f 90       	pop	r0
    11b6:	08 be       	out	0x38, r0	; 56
    11b8:	0f 90       	pop	r0
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	0f 90       	pop	r0
    11be:	1f 90       	pop	r1
    11c0:	18 95       	reti

000011c2 <__vector_84>:
 *
 * This function will handle interrupt on Timer Counter D1 error and
 * call the callback function.
 */
ISR(TCD1_ERR_vect)
{
    11c2:	1f 92       	push	r1
    11c4:	0f 92       	push	r0
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	0f 92       	push	r0
    11ca:	11 24       	eor	r1, r1
    11cc:	08 b6       	in	r0, 0x38	; 56
    11ce:	0f 92       	push	r0
    11d0:	18 be       	out	0x38, r1	; 56
    11d2:	09 b6       	in	r0, 0x39	; 57
    11d4:	0f 92       	push	r0
    11d6:	19 be       	out	0x39, r1	; 57
    11d8:	0b b6       	in	r0, 0x3b	; 59
    11da:	0f 92       	push	r0
    11dc:	1b be       	out	0x3b, r1	; 59
    11de:	2f 93       	push	r18
    11e0:	3f 93       	push	r19
    11e2:	4f 93       	push	r20
    11e4:	5f 93       	push	r21
    11e6:	6f 93       	push	r22
    11e8:	7f 93       	push	r23
    11ea:	8f 93       	push	r24
    11ec:	9f 93       	push	r25
    11ee:	af 93       	push	r26
    11f0:	bf 93       	push	r27
    11f2:	ef 93       	push	r30
    11f4:	ff 93       	push	r31
	if (tc_tcd1_err_callback) {
    11f6:	e0 91 7a 20 	lds	r30, 0x207A
    11fa:	f0 91 7b 20 	lds	r31, 0x207B
    11fe:	30 97       	sbiw	r30, 0x00	; 0
    1200:	09 f0       	breq	.+2      	; 0x1204 <__vector_84+0x42>
		tc_tcd1_err_callback();
    1202:	19 95       	eicall
	}
}
    1204:	ff 91       	pop	r31
    1206:	ef 91       	pop	r30
    1208:	bf 91       	pop	r27
    120a:	af 91       	pop	r26
    120c:	9f 91       	pop	r25
    120e:	8f 91       	pop	r24
    1210:	7f 91       	pop	r23
    1212:	6f 91       	pop	r22
    1214:	5f 91       	pop	r21
    1216:	4f 91       	pop	r20
    1218:	3f 91       	pop	r19
    121a:	2f 91       	pop	r18
    121c:	0f 90       	pop	r0
    121e:	0b be       	out	0x3b, r0	; 59
    1220:	0f 90       	pop	r0
    1222:	09 be       	out	0x39, r0	; 57
    1224:	0f 90       	pop	r0
    1226:	08 be       	out	0x38, r0	; 56
    1228:	0f 90       	pop	r0
    122a:	0f be       	out	0x3f, r0	; 63
    122c:	0f 90       	pop	r0
    122e:	1f 90       	pop	r1
    1230:	18 95       	reti

00001232 <__vector_85>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD1_CCA_vect)
{
    1232:	1f 92       	push	r1
    1234:	0f 92       	push	r0
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	0f 92       	push	r0
    123a:	11 24       	eor	r1, r1
    123c:	08 b6       	in	r0, 0x38	; 56
    123e:	0f 92       	push	r0
    1240:	18 be       	out	0x38, r1	; 56
    1242:	09 b6       	in	r0, 0x39	; 57
    1244:	0f 92       	push	r0
    1246:	19 be       	out	0x39, r1	; 57
    1248:	0b b6       	in	r0, 0x3b	; 59
    124a:	0f 92       	push	r0
    124c:	1b be       	out	0x3b, r1	; 59
    124e:	2f 93       	push	r18
    1250:	3f 93       	push	r19
    1252:	4f 93       	push	r20
    1254:	5f 93       	push	r21
    1256:	6f 93       	push	r22
    1258:	7f 93       	push	r23
    125a:	8f 93       	push	r24
    125c:	9f 93       	push	r25
    125e:	af 93       	push	r26
    1260:	bf 93       	push	r27
    1262:	ef 93       	push	r30
    1264:	ff 93       	push	r31
	if (tc_tcd1_cca_callback) {
    1266:	e0 91 78 20 	lds	r30, 0x2078
    126a:	f0 91 79 20 	lds	r31, 0x2079
    126e:	30 97       	sbiw	r30, 0x00	; 0
    1270:	09 f0       	breq	.+2      	; 0x1274 <__vector_85+0x42>
		tc_tcd1_cca_callback();
    1272:	19 95       	eicall
	}
}
    1274:	ff 91       	pop	r31
    1276:	ef 91       	pop	r30
    1278:	bf 91       	pop	r27
    127a:	af 91       	pop	r26
    127c:	9f 91       	pop	r25
    127e:	8f 91       	pop	r24
    1280:	7f 91       	pop	r23
    1282:	6f 91       	pop	r22
    1284:	5f 91       	pop	r21
    1286:	4f 91       	pop	r20
    1288:	3f 91       	pop	r19
    128a:	2f 91       	pop	r18
    128c:	0f 90       	pop	r0
    128e:	0b be       	out	0x3b, r0	; 59
    1290:	0f 90       	pop	r0
    1292:	09 be       	out	0x39, r0	; 57
    1294:	0f 90       	pop	r0
    1296:	08 be       	out	0x38, r0	; 56
    1298:	0f 90       	pop	r0
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	0f 90       	pop	r0
    129e:	1f 90       	pop	r1
    12a0:	18 95       	reti

000012a2 <__vector_86>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD1_CCB_vect)
{
    12a2:	1f 92       	push	r1
    12a4:	0f 92       	push	r0
    12a6:	0f b6       	in	r0, 0x3f	; 63
    12a8:	0f 92       	push	r0
    12aa:	11 24       	eor	r1, r1
    12ac:	08 b6       	in	r0, 0x38	; 56
    12ae:	0f 92       	push	r0
    12b0:	18 be       	out	0x38, r1	; 56
    12b2:	09 b6       	in	r0, 0x39	; 57
    12b4:	0f 92       	push	r0
    12b6:	19 be       	out	0x39, r1	; 57
    12b8:	0b b6       	in	r0, 0x3b	; 59
    12ba:	0f 92       	push	r0
    12bc:	1b be       	out	0x3b, r1	; 59
    12be:	2f 93       	push	r18
    12c0:	3f 93       	push	r19
    12c2:	4f 93       	push	r20
    12c4:	5f 93       	push	r21
    12c6:	6f 93       	push	r22
    12c8:	7f 93       	push	r23
    12ca:	8f 93       	push	r24
    12cc:	9f 93       	push	r25
    12ce:	af 93       	push	r26
    12d0:	bf 93       	push	r27
    12d2:	ef 93       	push	r30
    12d4:	ff 93       	push	r31
	if (tc_tcd1_ccb_callback) {
    12d6:	e0 91 76 20 	lds	r30, 0x2076
    12da:	f0 91 77 20 	lds	r31, 0x2077
    12de:	30 97       	sbiw	r30, 0x00	; 0
    12e0:	09 f0       	breq	.+2      	; 0x12e4 <__vector_86+0x42>
		tc_tcd1_ccb_callback();
    12e2:	19 95       	eicall
	}
}
    12e4:	ff 91       	pop	r31
    12e6:	ef 91       	pop	r30
    12e8:	bf 91       	pop	r27
    12ea:	af 91       	pop	r26
    12ec:	9f 91       	pop	r25
    12ee:	8f 91       	pop	r24
    12f0:	7f 91       	pop	r23
    12f2:	6f 91       	pop	r22
    12f4:	5f 91       	pop	r21
    12f6:	4f 91       	pop	r20
    12f8:	3f 91       	pop	r19
    12fa:	2f 91       	pop	r18
    12fc:	0f 90       	pop	r0
    12fe:	0b be       	out	0x3b, r0	; 59
    1300:	0f 90       	pop	r0
    1302:	09 be       	out	0x39, r0	; 57
    1304:	0f 90       	pop	r0
    1306:	08 be       	out	0x38, r0	; 56
    1308:	0f 90       	pop	r0
    130a:	0f be       	out	0x3f, r0	; 63
    130c:	0f 90       	pop	r0
    130e:	1f 90       	pop	r1
    1310:	18 95       	reti

00001312 <__vector_47>:
 *
 * This function will handle interrupt on Timer Counter E0 overflow and
 * call the callback function.
 */
ISR(TCE0_OVF_vect)
{
    1312:	1f 92       	push	r1
    1314:	0f 92       	push	r0
    1316:	0f b6       	in	r0, 0x3f	; 63
    1318:	0f 92       	push	r0
    131a:	11 24       	eor	r1, r1
    131c:	08 b6       	in	r0, 0x38	; 56
    131e:	0f 92       	push	r0
    1320:	18 be       	out	0x38, r1	; 56
    1322:	09 b6       	in	r0, 0x39	; 57
    1324:	0f 92       	push	r0
    1326:	19 be       	out	0x39, r1	; 57
    1328:	0b b6       	in	r0, 0x3b	; 59
    132a:	0f 92       	push	r0
    132c:	1b be       	out	0x3b, r1	; 59
    132e:	2f 93       	push	r18
    1330:	3f 93       	push	r19
    1332:	4f 93       	push	r20
    1334:	5f 93       	push	r21
    1336:	6f 93       	push	r22
    1338:	7f 93       	push	r23
    133a:	8f 93       	push	r24
    133c:	9f 93       	push	r25
    133e:	af 93       	push	r26
    1340:	bf 93       	push	r27
    1342:	ef 93       	push	r30
    1344:	ff 93       	push	r31
	if (tc_tce0_ovf_callback) {
    1346:	e0 91 74 20 	lds	r30, 0x2074
    134a:	f0 91 75 20 	lds	r31, 0x2075
    134e:	30 97       	sbiw	r30, 0x00	; 0
    1350:	09 f0       	breq	.+2      	; 0x1354 <__vector_47+0x42>
		tc_tce0_ovf_callback();
    1352:	19 95       	eicall
	}
}
    1354:	ff 91       	pop	r31
    1356:	ef 91       	pop	r30
    1358:	bf 91       	pop	r27
    135a:	af 91       	pop	r26
    135c:	9f 91       	pop	r25
    135e:	8f 91       	pop	r24
    1360:	7f 91       	pop	r23
    1362:	6f 91       	pop	r22
    1364:	5f 91       	pop	r21
    1366:	4f 91       	pop	r20
    1368:	3f 91       	pop	r19
    136a:	2f 91       	pop	r18
    136c:	0f 90       	pop	r0
    136e:	0b be       	out	0x3b, r0	; 59
    1370:	0f 90       	pop	r0
    1372:	09 be       	out	0x39, r0	; 57
    1374:	0f 90       	pop	r0
    1376:	08 be       	out	0x38, r0	; 56
    1378:	0f 90       	pop	r0
    137a:	0f be       	out	0x3f, r0	; 63
    137c:	0f 90       	pop	r0
    137e:	1f 90       	pop	r1
    1380:	18 95       	reti

00001382 <__vector_48>:
 *
 * This function will handle interrupt on Timer Counter E0 error and
 * call the callback function.
 */
ISR(TCE0_ERR_vect)
{
    1382:	1f 92       	push	r1
    1384:	0f 92       	push	r0
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	0f 92       	push	r0
    138a:	11 24       	eor	r1, r1
    138c:	08 b6       	in	r0, 0x38	; 56
    138e:	0f 92       	push	r0
    1390:	18 be       	out	0x38, r1	; 56
    1392:	09 b6       	in	r0, 0x39	; 57
    1394:	0f 92       	push	r0
    1396:	19 be       	out	0x39, r1	; 57
    1398:	0b b6       	in	r0, 0x3b	; 59
    139a:	0f 92       	push	r0
    139c:	1b be       	out	0x3b, r1	; 59
    139e:	2f 93       	push	r18
    13a0:	3f 93       	push	r19
    13a2:	4f 93       	push	r20
    13a4:	5f 93       	push	r21
    13a6:	6f 93       	push	r22
    13a8:	7f 93       	push	r23
    13aa:	8f 93       	push	r24
    13ac:	9f 93       	push	r25
    13ae:	af 93       	push	r26
    13b0:	bf 93       	push	r27
    13b2:	ef 93       	push	r30
    13b4:	ff 93       	push	r31
	if (tc_tce0_err_callback) {
    13b6:	e0 91 72 20 	lds	r30, 0x2072
    13ba:	f0 91 73 20 	lds	r31, 0x2073
    13be:	30 97       	sbiw	r30, 0x00	; 0
    13c0:	09 f0       	breq	.+2      	; 0x13c4 <__vector_48+0x42>
		tc_tce0_err_callback();
    13c2:	19 95       	eicall
	}
}
    13c4:	ff 91       	pop	r31
    13c6:	ef 91       	pop	r30
    13c8:	bf 91       	pop	r27
    13ca:	af 91       	pop	r26
    13cc:	9f 91       	pop	r25
    13ce:	8f 91       	pop	r24
    13d0:	7f 91       	pop	r23
    13d2:	6f 91       	pop	r22
    13d4:	5f 91       	pop	r21
    13d6:	4f 91       	pop	r20
    13d8:	3f 91       	pop	r19
    13da:	2f 91       	pop	r18
    13dc:	0f 90       	pop	r0
    13de:	0b be       	out	0x3b, r0	; 59
    13e0:	0f 90       	pop	r0
    13e2:	09 be       	out	0x39, r0	; 57
    13e4:	0f 90       	pop	r0
    13e6:	08 be       	out	0x38, r0	; 56
    13e8:	0f 90       	pop	r0
    13ea:	0f be       	out	0x3f, r0	; 63
    13ec:	0f 90       	pop	r0
    13ee:	1f 90       	pop	r1
    13f0:	18 95       	reti

000013f2 <__vector_49>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE0_CCA_vect)
{
    13f2:	1f 92       	push	r1
    13f4:	0f 92       	push	r0
    13f6:	0f b6       	in	r0, 0x3f	; 63
    13f8:	0f 92       	push	r0
    13fa:	11 24       	eor	r1, r1
    13fc:	08 b6       	in	r0, 0x38	; 56
    13fe:	0f 92       	push	r0
    1400:	18 be       	out	0x38, r1	; 56
    1402:	09 b6       	in	r0, 0x39	; 57
    1404:	0f 92       	push	r0
    1406:	19 be       	out	0x39, r1	; 57
    1408:	0b b6       	in	r0, 0x3b	; 59
    140a:	0f 92       	push	r0
    140c:	1b be       	out	0x3b, r1	; 59
    140e:	2f 93       	push	r18
    1410:	3f 93       	push	r19
    1412:	4f 93       	push	r20
    1414:	5f 93       	push	r21
    1416:	6f 93       	push	r22
    1418:	7f 93       	push	r23
    141a:	8f 93       	push	r24
    141c:	9f 93       	push	r25
    141e:	af 93       	push	r26
    1420:	bf 93       	push	r27
    1422:	ef 93       	push	r30
    1424:	ff 93       	push	r31
	if (tc_tce0_cca_callback) {
    1426:	e0 91 70 20 	lds	r30, 0x2070
    142a:	f0 91 71 20 	lds	r31, 0x2071
    142e:	30 97       	sbiw	r30, 0x00	; 0
    1430:	09 f0       	breq	.+2      	; 0x1434 <__vector_49+0x42>
		tc_tce0_cca_callback();
    1432:	19 95       	eicall
	}
}
    1434:	ff 91       	pop	r31
    1436:	ef 91       	pop	r30
    1438:	bf 91       	pop	r27
    143a:	af 91       	pop	r26
    143c:	9f 91       	pop	r25
    143e:	8f 91       	pop	r24
    1440:	7f 91       	pop	r23
    1442:	6f 91       	pop	r22
    1444:	5f 91       	pop	r21
    1446:	4f 91       	pop	r20
    1448:	3f 91       	pop	r19
    144a:	2f 91       	pop	r18
    144c:	0f 90       	pop	r0
    144e:	0b be       	out	0x3b, r0	; 59
    1450:	0f 90       	pop	r0
    1452:	09 be       	out	0x39, r0	; 57
    1454:	0f 90       	pop	r0
    1456:	08 be       	out	0x38, r0	; 56
    1458:	0f 90       	pop	r0
    145a:	0f be       	out	0x3f, r0	; 63
    145c:	0f 90       	pop	r0
    145e:	1f 90       	pop	r1
    1460:	18 95       	reti

00001462 <__vector_50>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE0_CCB_vect)
{
    1462:	1f 92       	push	r1
    1464:	0f 92       	push	r0
    1466:	0f b6       	in	r0, 0x3f	; 63
    1468:	0f 92       	push	r0
    146a:	11 24       	eor	r1, r1
    146c:	08 b6       	in	r0, 0x38	; 56
    146e:	0f 92       	push	r0
    1470:	18 be       	out	0x38, r1	; 56
    1472:	09 b6       	in	r0, 0x39	; 57
    1474:	0f 92       	push	r0
    1476:	19 be       	out	0x39, r1	; 57
    1478:	0b b6       	in	r0, 0x3b	; 59
    147a:	0f 92       	push	r0
    147c:	1b be       	out	0x3b, r1	; 59
    147e:	2f 93       	push	r18
    1480:	3f 93       	push	r19
    1482:	4f 93       	push	r20
    1484:	5f 93       	push	r21
    1486:	6f 93       	push	r22
    1488:	7f 93       	push	r23
    148a:	8f 93       	push	r24
    148c:	9f 93       	push	r25
    148e:	af 93       	push	r26
    1490:	bf 93       	push	r27
    1492:	ef 93       	push	r30
    1494:	ff 93       	push	r31
	if (tc_tce0_ccb_callback) {
    1496:	e0 91 6e 20 	lds	r30, 0x206E
    149a:	f0 91 6f 20 	lds	r31, 0x206F
    149e:	30 97       	sbiw	r30, 0x00	; 0
    14a0:	09 f0       	breq	.+2      	; 0x14a4 <__vector_50+0x42>
		tc_tce0_ccb_callback();
    14a2:	19 95       	eicall
	}
}
    14a4:	ff 91       	pop	r31
    14a6:	ef 91       	pop	r30
    14a8:	bf 91       	pop	r27
    14aa:	af 91       	pop	r26
    14ac:	9f 91       	pop	r25
    14ae:	8f 91       	pop	r24
    14b0:	7f 91       	pop	r23
    14b2:	6f 91       	pop	r22
    14b4:	5f 91       	pop	r21
    14b6:	4f 91       	pop	r20
    14b8:	3f 91       	pop	r19
    14ba:	2f 91       	pop	r18
    14bc:	0f 90       	pop	r0
    14be:	0b be       	out	0x3b, r0	; 59
    14c0:	0f 90       	pop	r0
    14c2:	09 be       	out	0x39, r0	; 57
    14c4:	0f 90       	pop	r0
    14c6:	08 be       	out	0x38, r0	; 56
    14c8:	0f 90       	pop	r0
    14ca:	0f be       	out	0x3f, r0	; 63
    14cc:	0f 90       	pop	r0
    14ce:	1f 90       	pop	r1
    14d0:	18 95       	reti

000014d2 <__vector_51>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCE0_CCC_vect)
{
    14d2:	1f 92       	push	r1
    14d4:	0f 92       	push	r0
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	0f 92       	push	r0
    14da:	11 24       	eor	r1, r1
    14dc:	08 b6       	in	r0, 0x38	; 56
    14de:	0f 92       	push	r0
    14e0:	18 be       	out	0x38, r1	; 56
    14e2:	09 b6       	in	r0, 0x39	; 57
    14e4:	0f 92       	push	r0
    14e6:	19 be       	out	0x39, r1	; 57
    14e8:	0b b6       	in	r0, 0x3b	; 59
    14ea:	0f 92       	push	r0
    14ec:	1b be       	out	0x3b, r1	; 59
    14ee:	2f 93       	push	r18
    14f0:	3f 93       	push	r19
    14f2:	4f 93       	push	r20
    14f4:	5f 93       	push	r21
    14f6:	6f 93       	push	r22
    14f8:	7f 93       	push	r23
    14fa:	8f 93       	push	r24
    14fc:	9f 93       	push	r25
    14fe:	af 93       	push	r26
    1500:	bf 93       	push	r27
    1502:	ef 93       	push	r30
    1504:	ff 93       	push	r31
	if (tc_tce0_ccc_callback) {
    1506:	e0 91 6c 20 	lds	r30, 0x206C
    150a:	f0 91 6d 20 	lds	r31, 0x206D
    150e:	30 97       	sbiw	r30, 0x00	; 0
    1510:	09 f0       	breq	.+2      	; 0x1514 <__vector_51+0x42>
		tc_tce0_ccc_callback();
    1512:	19 95       	eicall
	}
}
    1514:	ff 91       	pop	r31
    1516:	ef 91       	pop	r30
    1518:	bf 91       	pop	r27
    151a:	af 91       	pop	r26
    151c:	9f 91       	pop	r25
    151e:	8f 91       	pop	r24
    1520:	7f 91       	pop	r23
    1522:	6f 91       	pop	r22
    1524:	5f 91       	pop	r21
    1526:	4f 91       	pop	r20
    1528:	3f 91       	pop	r19
    152a:	2f 91       	pop	r18
    152c:	0f 90       	pop	r0
    152e:	0b be       	out	0x3b, r0	; 59
    1530:	0f 90       	pop	r0
    1532:	09 be       	out	0x39, r0	; 57
    1534:	0f 90       	pop	r0
    1536:	08 be       	out	0x38, r0	; 56
    1538:	0f 90       	pop	r0
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	0f 90       	pop	r0
    153e:	1f 90       	pop	r1
    1540:	18 95       	reti

00001542 <__vector_52>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCE0_CCD_vect)
{
    1542:	1f 92       	push	r1
    1544:	0f 92       	push	r0
    1546:	0f b6       	in	r0, 0x3f	; 63
    1548:	0f 92       	push	r0
    154a:	11 24       	eor	r1, r1
    154c:	08 b6       	in	r0, 0x38	; 56
    154e:	0f 92       	push	r0
    1550:	18 be       	out	0x38, r1	; 56
    1552:	09 b6       	in	r0, 0x39	; 57
    1554:	0f 92       	push	r0
    1556:	19 be       	out	0x39, r1	; 57
    1558:	0b b6       	in	r0, 0x3b	; 59
    155a:	0f 92       	push	r0
    155c:	1b be       	out	0x3b, r1	; 59
    155e:	2f 93       	push	r18
    1560:	3f 93       	push	r19
    1562:	4f 93       	push	r20
    1564:	5f 93       	push	r21
    1566:	6f 93       	push	r22
    1568:	7f 93       	push	r23
    156a:	8f 93       	push	r24
    156c:	9f 93       	push	r25
    156e:	af 93       	push	r26
    1570:	bf 93       	push	r27
    1572:	ef 93       	push	r30
    1574:	ff 93       	push	r31
	if (tc_tce0_ccd_callback) {
    1576:	e0 91 6a 20 	lds	r30, 0x206A
    157a:	f0 91 6b 20 	lds	r31, 0x206B
    157e:	30 97       	sbiw	r30, 0x00	; 0
    1580:	09 f0       	breq	.+2      	; 0x1584 <__vector_52+0x42>
		tc_tce0_ccd_callback();
    1582:	19 95       	eicall
	}
}
    1584:	ff 91       	pop	r31
    1586:	ef 91       	pop	r30
    1588:	bf 91       	pop	r27
    158a:	af 91       	pop	r26
    158c:	9f 91       	pop	r25
    158e:	8f 91       	pop	r24
    1590:	7f 91       	pop	r23
    1592:	6f 91       	pop	r22
    1594:	5f 91       	pop	r21
    1596:	4f 91       	pop	r20
    1598:	3f 91       	pop	r19
    159a:	2f 91       	pop	r18
    159c:	0f 90       	pop	r0
    159e:	0b be       	out	0x3b, r0	; 59
    15a0:	0f 90       	pop	r0
    15a2:	09 be       	out	0x39, r0	; 57
    15a4:	0f 90       	pop	r0
    15a6:	08 be       	out	0x38, r0	; 56
    15a8:	0f 90       	pop	r0
    15aa:	0f be       	out	0x3f, r0	; 63
    15ac:	0f 90       	pop	r0
    15ae:	1f 90       	pop	r1
    15b0:	18 95       	reti

000015b2 <__vector_53>:
 *
 * This function will handle interrupt on Timer Counter E1 overflow and
 * call the callback function.
 */
ISR(TCE1_OVF_vect)
{
    15b2:	1f 92       	push	r1
    15b4:	0f 92       	push	r0
    15b6:	0f b6       	in	r0, 0x3f	; 63
    15b8:	0f 92       	push	r0
    15ba:	11 24       	eor	r1, r1
    15bc:	08 b6       	in	r0, 0x38	; 56
    15be:	0f 92       	push	r0
    15c0:	18 be       	out	0x38, r1	; 56
    15c2:	09 b6       	in	r0, 0x39	; 57
    15c4:	0f 92       	push	r0
    15c6:	19 be       	out	0x39, r1	; 57
    15c8:	0b b6       	in	r0, 0x3b	; 59
    15ca:	0f 92       	push	r0
    15cc:	1b be       	out	0x3b, r1	; 59
    15ce:	2f 93       	push	r18
    15d0:	3f 93       	push	r19
    15d2:	4f 93       	push	r20
    15d4:	5f 93       	push	r21
    15d6:	6f 93       	push	r22
    15d8:	7f 93       	push	r23
    15da:	8f 93       	push	r24
    15dc:	9f 93       	push	r25
    15de:	af 93       	push	r26
    15e0:	bf 93       	push	r27
    15e2:	ef 93       	push	r30
    15e4:	ff 93       	push	r31
	if (tc_tce1_ovf_callback) {
    15e6:	e0 91 68 20 	lds	r30, 0x2068
    15ea:	f0 91 69 20 	lds	r31, 0x2069
    15ee:	30 97       	sbiw	r30, 0x00	; 0
    15f0:	09 f0       	breq	.+2      	; 0x15f4 <__vector_53+0x42>
		tc_tce1_ovf_callback();
    15f2:	19 95       	eicall
	}
}
    15f4:	ff 91       	pop	r31
    15f6:	ef 91       	pop	r30
    15f8:	bf 91       	pop	r27
    15fa:	af 91       	pop	r26
    15fc:	9f 91       	pop	r25
    15fe:	8f 91       	pop	r24
    1600:	7f 91       	pop	r23
    1602:	6f 91       	pop	r22
    1604:	5f 91       	pop	r21
    1606:	4f 91       	pop	r20
    1608:	3f 91       	pop	r19
    160a:	2f 91       	pop	r18
    160c:	0f 90       	pop	r0
    160e:	0b be       	out	0x3b, r0	; 59
    1610:	0f 90       	pop	r0
    1612:	09 be       	out	0x39, r0	; 57
    1614:	0f 90       	pop	r0
    1616:	08 be       	out	0x38, r0	; 56
    1618:	0f 90       	pop	r0
    161a:	0f be       	out	0x3f, r0	; 63
    161c:	0f 90       	pop	r0
    161e:	1f 90       	pop	r1
    1620:	18 95       	reti

00001622 <__vector_54>:
 *
 * This function will handle interrupt on Timer Counter E1 error and
 * call the callback function.
 */
ISR(TCE1_ERR_vect)
{
    1622:	1f 92       	push	r1
    1624:	0f 92       	push	r0
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	0f 92       	push	r0
    162a:	11 24       	eor	r1, r1
    162c:	08 b6       	in	r0, 0x38	; 56
    162e:	0f 92       	push	r0
    1630:	18 be       	out	0x38, r1	; 56
    1632:	09 b6       	in	r0, 0x39	; 57
    1634:	0f 92       	push	r0
    1636:	19 be       	out	0x39, r1	; 57
    1638:	0b b6       	in	r0, 0x3b	; 59
    163a:	0f 92       	push	r0
    163c:	1b be       	out	0x3b, r1	; 59
    163e:	2f 93       	push	r18
    1640:	3f 93       	push	r19
    1642:	4f 93       	push	r20
    1644:	5f 93       	push	r21
    1646:	6f 93       	push	r22
    1648:	7f 93       	push	r23
    164a:	8f 93       	push	r24
    164c:	9f 93       	push	r25
    164e:	af 93       	push	r26
    1650:	bf 93       	push	r27
    1652:	ef 93       	push	r30
    1654:	ff 93       	push	r31
	if (tc_tce1_err_callback) {
    1656:	e0 91 66 20 	lds	r30, 0x2066
    165a:	f0 91 67 20 	lds	r31, 0x2067
    165e:	30 97       	sbiw	r30, 0x00	; 0
    1660:	09 f0       	breq	.+2      	; 0x1664 <__vector_54+0x42>
		tc_tce1_err_callback();
    1662:	19 95       	eicall
	}
}
    1664:	ff 91       	pop	r31
    1666:	ef 91       	pop	r30
    1668:	bf 91       	pop	r27
    166a:	af 91       	pop	r26
    166c:	9f 91       	pop	r25
    166e:	8f 91       	pop	r24
    1670:	7f 91       	pop	r23
    1672:	6f 91       	pop	r22
    1674:	5f 91       	pop	r21
    1676:	4f 91       	pop	r20
    1678:	3f 91       	pop	r19
    167a:	2f 91       	pop	r18
    167c:	0f 90       	pop	r0
    167e:	0b be       	out	0x3b, r0	; 59
    1680:	0f 90       	pop	r0
    1682:	09 be       	out	0x39, r0	; 57
    1684:	0f 90       	pop	r0
    1686:	08 be       	out	0x38, r0	; 56
    1688:	0f 90       	pop	r0
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	0f 90       	pop	r0
    168e:	1f 90       	pop	r1
    1690:	18 95       	reti

00001692 <__vector_55>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE1_CCA_vect)
{
    1692:	1f 92       	push	r1
    1694:	0f 92       	push	r0
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	0f 92       	push	r0
    169a:	11 24       	eor	r1, r1
    169c:	08 b6       	in	r0, 0x38	; 56
    169e:	0f 92       	push	r0
    16a0:	18 be       	out	0x38, r1	; 56
    16a2:	09 b6       	in	r0, 0x39	; 57
    16a4:	0f 92       	push	r0
    16a6:	19 be       	out	0x39, r1	; 57
    16a8:	0b b6       	in	r0, 0x3b	; 59
    16aa:	0f 92       	push	r0
    16ac:	1b be       	out	0x3b, r1	; 59
    16ae:	2f 93       	push	r18
    16b0:	3f 93       	push	r19
    16b2:	4f 93       	push	r20
    16b4:	5f 93       	push	r21
    16b6:	6f 93       	push	r22
    16b8:	7f 93       	push	r23
    16ba:	8f 93       	push	r24
    16bc:	9f 93       	push	r25
    16be:	af 93       	push	r26
    16c0:	bf 93       	push	r27
    16c2:	ef 93       	push	r30
    16c4:	ff 93       	push	r31
	if (tc_tce1_cca_callback) {
    16c6:	e0 91 64 20 	lds	r30, 0x2064
    16ca:	f0 91 65 20 	lds	r31, 0x2065
    16ce:	30 97       	sbiw	r30, 0x00	; 0
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <__vector_55+0x42>
		tc_tce1_cca_callback();
    16d2:	19 95       	eicall
	}
}
    16d4:	ff 91       	pop	r31
    16d6:	ef 91       	pop	r30
    16d8:	bf 91       	pop	r27
    16da:	af 91       	pop	r26
    16dc:	9f 91       	pop	r25
    16de:	8f 91       	pop	r24
    16e0:	7f 91       	pop	r23
    16e2:	6f 91       	pop	r22
    16e4:	5f 91       	pop	r21
    16e6:	4f 91       	pop	r20
    16e8:	3f 91       	pop	r19
    16ea:	2f 91       	pop	r18
    16ec:	0f 90       	pop	r0
    16ee:	0b be       	out	0x3b, r0	; 59
    16f0:	0f 90       	pop	r0
    16f2:	09 be       	out	0x39, r0	; 57
    16f4:	0f 90       	pop	r0
    16f6:	08 be       	out	0x38, r0	; 56
    16f8:	0f 90       	pop	r0
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	0f 90       	pop	r0
    16fe:	1f 90       	pop	r1
    1700:	18 95       	reti

00001702 <__vector_56>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE1_CCB_vect)
{
    1702:	1f 92       	push	r1
    1704:	0f 92       	push	r0
    1706:	0f b6       	in	r0, 0x3f	; 63
    1708:	0f 92       	push	r0
    170a:	11 24       	eor	r1, r1
    170c:	08 b6       	in	r0, 0x38	; 56
    170e:	0f 92       	push	r0
    1710:	18 be       	out	0x38, r1	; 56
    1712:	09 b6       	in	r0, 0x39	; 57
    1714:	0f 92       	push	r0
    1716:	19 be       	out	0x39, r1	; 57
    1718:	0b b6       	in	r0, 0x3b	; 59
    171a:	0f 92       	push	r0
    171c:	1b be       	out	0x3b, r1	; 59
    171e:	2f 93       	push	r18
    1720:	3f 93       	push	r19
    1722:	4f 93       	push	r20
    1724:	5f 93       	push	r21
    1726:	6f 93       	push	r22
    1728:	7f 93       	push	r23
    172a:	8f 93       	push	r24
    172c:	9f 93       	push	r25
    172e:	af 93       	push	r26
    1730:	bf 93       	push	r27
    1732:	ef 93       	push	r30
    1734:	ff 93       	push	r31
	if (tc_tce1_ccb_callback) {
    1736:	e0 91 62 20 	lds	r30, 0x2062
    173a:	f0 91 63 20 	lds	r31, 0x2063
    173e:	30 97       	sbiw	r30, 0x00	; 0
    1740:	09 f0       	breq	.+2      	; 0x1744 <__vector_56+0x42>
		tc_tce1_ccb_callback();
    1742:	19 95       	eicall
	}
}
    1744:	ff 91       	pop	r31
    1746:	ef 91       	pop	r30
    1748:	bf 91       	pop	r27
    174a:	af 91       	pop	r26
    174c:	9f 91       	pop	r25
    174e:	8f 91       	pop	r24
    1750:	7f 91       	pop	r23
    1752:	6f 91       	pop	r22
    1754:	5f 91       	pop	r21
    1756:	4f 91       	pop	r20
    1758:	3f 91       	pop	r19
    175a:	2f 91       	pop	r18
    175c:	0f 90       	pop	r0
    175e:	0b be       	out	0x3b, r0	; 59
    1760:	0f 90       	pop	r0
    1762:	09 be       	out	0x39, r0	; 57
    1764:	0f 90       	pop	r0
    1766:	08 be       	out	0x38, r0	; 56
    1768:	0f 90       	pop	r0
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	0f 90       	pop	r0
    176e:	1f 90       	pop	r1
    1770:	18 95       	reti

00001772 <__vector_108>:
 *
 * This function will handle interrupt on Timer Counter F0 overflow and
 * call the callback function.
 */
ISR(TCF0_OVF_vect)
{
    1772:	1f 92       	push	r1
    1774:	0f 92       	push	r0
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	0f 92       	push	r0
    177a:	11 24       	eor	r1, r1
    177c:	08 b6       	in	r0, 0x38	; 56
    177e:	0f 92       	push	r0
    1780:	18 be       	out	0x38, r1	; 56
    1782:	09 b6       	in	r0, 0x39	; 57
    1784:	0f 92       	push	r0
    1786:	19 be       	out	0x39, r1	; 57
    1788:	0b b6       	in	r0, 0x3b	; 59
    178a:	0f 92       	push	r0
    178c:	1b be       	out	0x3b, r1	; 59
    178e:	2f 93       	push	r18
    1790:	3f 93       	push	r19
    1792:	4f 93       	push	r20
    1794:	5f 93       	push	r21
    1796:	6f 93       	push	r22
    1798:	7f 93       	push	r23
    179a:	8f 93       	push	r24
    179c:	9f 93       	push	r25
    179e:	af 93       	push	r26
    17a0:	bf 93       	push	r27
    17a2:	ef 93       	push	r30
    17a4:	ff 93       	push	r31
	if (tc_tcf0_ovf_callback) {
    17a6:	e0 91 60 20 	lds	r30, 0x2060
    17aa:	f0 91 61 20 	lds	r31, 0x2061
    17ae:	30 97       	sbiw	r30, 0x00	; 0
    17b0:	09 f0       	breq	.+2      	; 0x17b4 <__vector_108+0x42>
		tc_tcf0_ovf_callback();
    17b2:	19 95       	eicall
	}
}
    17b4:	ff 91       	pop	r31
    17b6:	ef 91       	pop	r30
    17b8:	bf 91       	pop	r27
    17ba:	af 91       	pop	r26
    17bc:	9f 91       	pop	r25
    17be:	8f 91       	pop	r24
    17c0:	7f 91       	pop	r23
    17c2:	6f 91       	pop	r22
    17c4:	5f 91       	pop	r21
    17c6:	4f 91       	pop	r20
    17c8:	3f 91       	pop	r19
    17ca:	2f 91       	pop	r18
    17cc:	0f 90       	pop	r0
    17ce:	0b be       	out	0x3b, r0	; 59
    17d0:	0f 90       	pop	r0
    17d2:	09 be       	out	0x39, r0	; 57
    17d4:	0f 90       	pop	r0
    17d6:	08 be       	out	0x38, r0	; 56
    17d8:	0f 90       	pop	r0
    17da:	0f be       	out	0x3f, r0	; 63
    17dc:	0f 90       	pop	r0
    17de:	1f 90       	pop	r1
    17e0:	18 95       	reti

000017e2 <__vector_109>:
 *
 * This function will handle interrupt on Timer Counter F0 error and
 * call the callback function.
 */
ISR(TCF0_ERR_vect)
{
    17e2:	1f 92       	push	r1
    17e4:	0f 92       	push	r0
    17e6:	0f b6       	in	r0, 0x3f	; 63
    17e8:	0f 92       	push	r0
    17ea:	11 24       	eor	r1, r1
    17ec:	08 b6       	in	r0, 0x38	; 56
    17ee:	0f 92       	push	r0
    17f0:	18 be       	out	0x38, r1	; 56
    17f2:	09 b6       	in	r0, 0x39	; 57
    17f4:	0f 92       	push	r0
    17f6:	19 be       	out	0x39, r1	; 57
    17f8:	0b b6       	in	r0, 0x3b	; 59
    17fa:	0f 92       	push	r0
    17fc:	1b be       	out	0x3b, r1	; 59
    17fe:	2f 93       	push	r18
    1800:	3f 93       	push	r19
    1802:	4f 93       	push	r20
    1804:	5f 93       	push	r21
    1806:	6f 93       	push	r22
    1808:	7f 93       	push	r23
    180a:	8f 93       	push	r24
    180c:	9f 93       	push	r25
    180e:	af 93       	push	r26
    1810:	bf 93       	push	r27
    1812:	ef 93       	push	r30
    1814:	ff 93       	push	r31
	if (tc_tcf0_err_callback) {
    1816:	e0 91 5e 20 	lds	r30, 0x205E
    181a:	f0 91 5f 20 	lds	r31, 0x205F
    181e:	30 97       	sbiw	r30, 0x00	; 0
    1820:	09 f0       	breq	.+2      	; 0x1824 <__vector_109+0x42>
		tc_tcf0_err_callback();
    1822:	19 95       	eicall
	}
}
    1824:	ff 91       	pop	r31
    1826:	ef 91       	pop	r30
    1828:	bf 91       	pop	r27
    182a:	af 91       	pop	r26
    182c:	9f 91       	pop	r25
    182e:	8f 91       	pop	r24
    1830:	7f 91       	pop	r23
    1832:	6f 91       	pop	r22
    1834:	5f 91       	pop	r21
    1836:	4f 91       	pop	r20
    1838:	3f 91       	pop	r19
    183a:	2f 91       	pop	r18
    183c:	0f 90       	pop	r0
    183e:	0b be       	out	0x3b, r0	; 59
    1840:	0f 90       	pop	r0
    1842:	09 be       	out	0x39, r0	; 57
    1844:	0f 90       	pop	r0
    1846:	08 be       	out	0x38, r0	; 56
    1848:	0f 90       	pop	r0
    184a:	0f be       	out	0x3f, r0	; 63
    184c:	0f 90       	pop	r0
    184e:	1f 90       	pop	r1
    1850:	18 95       	reti

00001852 <__vector_110>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF0_CCA_vect)
{
    1852:	1f 92       	push	r1
    1854:	0f 92       	push	r0
    1856:	0f b6       	in	r0, 0x3f	; 63
    1858:	0f 92       	push	r0
    185a:	11 24       	eor	r1, r1
    185c:	08 b6       	in	r0, 0x38	; 56
    185e:	0f 92       	push	r0
    1860:	18 be       	out	0x38, r1	; 56
    1862:	09 b6       	in	r0, 0x39	; 57
    1864:	0f 92       	push	r0
    1866:	19 be       	out	0x39, r1	; 57
    1868:	0b b6       	in	r0, 0x3b	; 59
    186a:	0f 92       	push	r0
    186c:	1b be       	out	0x3b, r1	; 59
    186e:	2f 93       	push	r18
    1870:	3f 93       	push	r19
    1872:	4f 93       	push	r20
    1874:	5f 93       	push	r21
    1876:	6f 93       	push	r22
    1878:	7f 93       	push	r23
    187a:	8f 93       	push	r24
    187c:	9f 93       	push	r25
    187e:	af 93       	push	r26
    1880:	bf 93       	push	r27
    1882:	ef 93       	push	r30
    1884:	ff 93       	push	r31
	if (tc_tcf0_cca_callback) {
    1886:	e0 91 5c 20 	lds	r30, 0x205C
    188a:	f0 91 5d 20 	lds	r31, 0x205D
    188e:	30 97       	sbiw	r30, 0x00	; 0
    1890:	09 f0       	breq	.+2      	; 0x1894 <__vector_110+0x42>
		tc_tcf0_cca_callback();
    1892:	19 95       	eicall
	}
}
    1894:	ff 91       	pop	r31
    1896:	ef 91       	pop	r30
    1898:	bf 91       	pop	r27
    189a:	af 91       	pop	r26
    189c:	9f 91       	pop	r25
    189e:	8f 91       	pop	r24
    18a0:	7f 91       	pop	r23
    18a2:	6f 91       	pop	r22
    18a4:	5f 91       	pop	r21
    18a6:	4f 91       	pop	r20
    18a8:	3f 91       	pop	r19
    18aa:	2f 91       	pop	r18
    18ac:	0f 90       	pop	r0
    18ae:	0b be       	out	0x3b, r0	; 59
    18b0:	0f 90       	pop	r0
    18b2:	09 be       	out	0x39, r0	; 57
    18b4:	0f 90       	pop	r0
    18b6:	08 be       	out	0x38, r0	; 56
    18b8:	0f 90       	pop	r0
    18ba:	0f be       	out	0x3f, r0	; 63
    18bc:	0f 90       	pop	r0
    18be:	1f 90       	pop	r1
    18c0:	18 95       	reti

000018c2 <__vector_111>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF0_CCB_vect)
{
    18c2:	1f 92       	push	r1
    18c4:	0f 92       	push	r0
    18c6:	0f b6       	in	r0, 0x3f	; 63
    18c8:	0f 92       	push	r0
    18ca:	11 24       	eor	r1, r1
    18cc:	08 b6       	in	r0, 0x38	; 56
    18ce:	0f 92       	push	r0
    18d0:	18 be       	out	0x38, r1	; 56
    18d2:	09 b6       	in	r0, 0x39	; 57
    18d4:	0f 92       	push	r0
    18d6:	19 be       	out	0x39, r1	; 57
    18d8:	0b b6       	in	r0, 0x3b	; 59
    18da:	0f 92       	push	r0
    18dc:	1b be       	out	0x3b, r1	; 59
    18de:	2f 93       	push	r18
    18e0:	3f 93       	push	r19
    18e2:	4f 93       	push	r20
    18e4:	5f 93       	push	r21
    18e6:	6f 93       	push	r22
    18e8:	7f 93       	push	r23
    18ea:	8f 93       	push	r24
    18ec:	9f 93       	push	r25
    18ee:	af 93       	push	r26
    18f0:	bf 93       	push	r27
    18f2:	ef 93       	push	r30
    18f4:	ff 93       	push	r31
	if (tc_tcf0_ccb_callback) {
    18f6:	e0 91 5a 20 	lds	r30, 0x205A
    18fa:	f0 91 5b 20 	lds	r31, 0x205B
    18fe:	30 97       	sbiw	r30, 0x00	; 0
    1900:	09 f0       	breq	.+2      	; 0x1904 <__vector_111+0x42>
		tc_tcf0_ccb_callback();
    1902:	19 95       	eicall
	}
}
    1904:	ff 91       	pop	r31
    1906:	ef 91       	pop	r30
    1908:	bf 91       	pop	r27
    190a:	af 91       	pop	r26
    190c:	9f 91       	pop	r25
    190e:	8f 91       	pop	r24
    1910:	7f 91       	pop	r23
    1912:	6f 91       	pop	r22
    1914:	5f 91       	pop	r21
    1916:	4f 91       	pop	r20
    1918:	3f 91       	pop	r19
    191a:	2f 91       	pop	r18
    191c:	0f 90       	pop	r0
    191e:	0b be       	out	0x3b, r0	; 59
    1920:	0f 90       	pop	r0
    1922:	09 be       	out	0x39, r0	; 57
    1924:	0f 90       	pop	r0
    1926:	08 be       	out	0x38, r0	; 56
    1928:	0f 90       	pop	r0
    192a:	0f be       	out	0x3f, r0	; 63
    192c:	0f 90       	pop	r0
    192e:	1f 90       	pop	r1
    1930:	18 95       	reti

00001932 <__vector_112>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCF0_CCC_vect)
{
    1932:	1f 92       	push	r1
    1934:	0f 92       	push	r0
    1936:	0f b6       	in	r0, 0x3f	; 63
    1938:	0f 92       	push	r0
    193a:	11 24       	eor	r1, r1
    193c:	08 b6       	in	r0, 0x38	; 56
    193e:	0f 92       	push	r0
    1940:	18 be       	out	0x38, r1	; 56
    1942:	09 b6       	in	r0, 0x39	; 57
    1944:	0f 92       	push	r0
    1946:	19 be       	out	0x39, r1	; 57
    1948:	0b b6       	in	r0, 0x3b	; 59
    194a:	0f 92       	push	r0
    194c:	1b be       	out	0x3b, r1	; 59
    194e:	2f 93       	push	r18
    1950:	3f 93       	push	r19
    1952:	4f 93       	push	r20
    1954:	5f 93       	push	r21
    1956:	6f 93       	push	r22
    1958:	7f 93       	push	r23
    195a:	8f 93       	push	r24
    195c:	9f 93       	push	r25
    195e:	af 93       	push	r26
    1960:	bf 93       	push	r27
    1962:	ef 93       	push	r30
    1964:	ff 93       	push	r31
	if (tc_tcf0_ccc_callback) {
    1966:	e0 91 58 20 	lds	r30, 0x2058
    196a:	f0 91 59 20 	lds	r31, 0x2059
    196e:	30 97       	sbiw	r30, 0x00	; 0
    1970:	09 f0       	breq	.+2      	; 0x1974 <__vector_112+0x42>
		tc_tcf0_ccc_callback();
    1972:	19 95       	eicall
	}
}
    1974:	ff 91       	pop	r31
    1976:	ef 91       	pop	r30
    1978:	bf 91       	pop	r27
    197a:	af 91       	pop	r26
    197c:	9f 91       	pop	r25
    197e:	8f 91       	pop	r24
    1980:	7f 91       	pop	r23
    1982:	6f 91       	pop	r22
    1984:	5f 91       	pop	r21
    1986:	4f 91       	pop	r20
    1988:	3f 91       	pop	r19
    198a:	2f 91       	pop	r18
    198c:	0f 90       	pop	r0
    198e:	0b be       	out	0x3b, r0	; 59
    1990:	0f 90       	pop	r0
    1992:	09 be       	out	0x39, r0	; 57
    1994:	0f 90       	pop	r0
    1996:	08 be       	out	0x38, r0	; 56
    1998:	0f 90       	pop	r0
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	0f 90       	pop	r0
    199e:	1f 90       	pop	r1
    19a0:	18 95       	reti

000019a2 <__vector_113>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCF0_CCD_vect)
{
    19a2:	1f 92       	push	r1
    19a4:	0f 92       	push	r0
    19a6:	0f b6       	in	r0, 0x3f	; 63
    19a8:	0f 92       	push	r0
    19aa:	11 24       	eor	r1, r1
    19ac:	08 b6       	in	r0, 0x38	; 56
    19ae:	0f 92       	push	r0
    19b0:	18 be       	out	0x38, r1	; 56
    19b2:	09 b6       	in	r0, 0x39	; 57
    19b4:	0f 92       	push	r0
    19b6:	19 be       	out	0x39, r1	; 57
    19b8:	0b b6       	in	r0, 0x3b	; 59
    19ba:	0f 92       	push	r0
    19bc:	1b be       	out	0x3b, r1	; 59
    19be:	2f 93       	push	r18
    19c0:	3f 93       	push	r19
    19c2:	4f 93       	push	r20
    19c4:	5f 93       	push	r21
    19c6:	6f 93       	push	r22
    19c8:	7f 93       	push	r23
    19ca:	8f 93       	push	r24
    19cc:	9f 93       	push	r25
    19ce:	af 93       	push	r26
    19d0:	bf 93       	push	r27
    19d2:	ef 93       	push	r30
    19d4:	ff 93       	push	r31
	if (tc_tcf0_ccd_callback) {
    19d6:	e0 91 56 20 	lds	r30, 0x2056
    19da:	f0 91 57 20 	lds	r31, 0x2057
    19de:	30 97       	sbiw	r30, 0x00	; 0
    19e0:	09 f0       	breq	.+2      	; 0x19e4 <__vector_113+0x42>
		tc_tcf0_ccd_callback();
    19e2:	19 95       	eicall
	}
}
    19e4:	ff 91       	pop	r31
    19e6:	ef 91       	pop	r30
    19e8:	bf 91       	pop	r27
    19ea:	af 91       	pop	r26
    19ec:	9f 91       	pop	r25
    19ee:	8f 91       	pop	r24
    19f0:	7f 91       	pop	r23
    19f2:	6f 91       	pop	r22
    19f4:	5f 91       	pop	r21
    19f6:	4f 91       	pop	r20
    19f8:	3f 91       	pop	r19
    19fa:	2f 91       	pop	r18
    19fc:	0f 90       	pop	r0
    19fe:	0b be       	out	0x3b, r0	; 59
    1a00:	0f 90       	pop	r0
    1a02:	09 be       	out	0x39, r0	; 57
    1a04:	0f 90       	pop	r0
    1a06:	08 be       	out	0x38, r0	; 56
    1a08:	0f 90       	pop	r0
    1a0a:	0f be       	out	0x3f, r0	; 63
    1a0c:	0f 90       	pop	r0
    1a0e:	1f 90       	pop	r1
    1a10:	18 95       	reti

00001a12 <__vector_114>:
 *
 * This function will handle interrupt on Timer Counter F1 overflow and
 * call the callback function.
 */
ISR(TCF1_OVF_vect)
{
    1a12:	1f 92       	push	r1
    1a14:	0f 92       	push	r0
    1a16:	0f b6       	in	r0, 0x3f	; 63
    1a18:	0f 92       	push	r0
    1a1a:	11 24       	eor	r1, r1
    1a1c:	08 b6       	in	r0, 0x38	; 56
    1a1e:	0f 92       	push	r0
    1a20:	18 be       	out	0x38, r1	; 56
    1a22:	09 b6       	in	r0, 0x39	; 57
    1a24:	0f 92       	push	r0
    1a26:	19 be       	out	0x39, r1	; 57
    1a28:	0b b6       	in	r0, 0x3b	; 59
    1a2a:	0f 92       	push	r0
    1a2c:	1b be       	out	0x3b, r1	; 59
    1a2e:	2f 93       	push	r18
    1a30:	3f 93       	push	r19
    1a32:	4f 93       	push	r20
    1a34:	5f 93       	push	r21
    1a36:	6f 93       	push	r22
    1a38:	7f 93       	push	r23
    1a3a:	8f 93       	push	r24
    1a3c:	9f 93       	push	r25
    1a3e:	af 93       	push	r26
    1a40:	bf 93       	push	r27
    1a42:	ef 93       	push	r30
    1a44:	ff 93       	push	r31
	if (tc_tcf1_ovf_callback) {
    1a46:	e0 91 54 20 	lds	r30, 0x2054
    1a4a:	f0 91 55 20 	lds	r31, 0x2055
    1a4e:	30 97       	sbiw	r30, 0x00	; 0
    1a50:	09 f0       	breq	.+2      	; 0x1a54 <__vector_114+0x42>
		tc_tcf1_ovf_callback();
    1a52:	19 95       	eicall
	}
}
    1a54:	ff 91       	pop	r31
    1a56:	ef 91       	pop	r30
    1a58:	bf 91       	pop	r27
    1a5a:	af 91       	pop	r26
    1a5c:	9f 91       	pop	r25
    1a5e:	8f 91       	pop	r24
    1a60:	7f 91       	pop	r23
    1a62:	6f 91       	pop	r22
    1a64:	5f 91       	pop	r21
    1a66:	4f 91       	pop	r20
    1a68:	3f 91       	pop	r19
    1a6a:	2f 91       	pop	r18
    1a6c:	0f 90       	pop	r0
    1a6e:	0b be       	out	0x3b, r0	; 59
    1a70:	0f 90       	pop	r0
    1a72:	09 be       	out	0x39, r0	; 57
    1a74:	0f 90       	pop	r0
    1a76:	08 be       	out	0x38, r0	; 56
    1a78:	0f 90       	pop	r0
    1a7a:	0f be       	out	0x3f, r0	; 63
    1a7c:	0f 90       	pop	r0
    1a7e:	1f 90       	pop	r1
    1a80:	18 95       	reti

00001a82 <__vector_115>:
 *
 * This function will handle interrupt on Timer Counter F1 error and
 * call the callback function.
 */
ISR(TCF1_ERR_vect)
{
    1a82:	1f 92       	push	r1
    1a84:	0f 92       	push	r0
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	0f 92       	push	r0
    1a8a:	11 24       	eor	r1, r1
    1a8c:	08 b6       	in	r0, 0x38	; 56
    1a8e:	0f 92       	push	r0
    1a90:	18 be       	out	0x38, r1	; 56
    1a92:	09 b6       	in	r0, 0x39	; 57
    1a94:	0f 92       	push	r0
    1a96:	19 be       	out	0x39, r1	; 57
    1a98:	0b b6       	in	r0, 0x3b	; 59
    1a9a:	0f 92       	push	r0
    1a9c:	1b be       	out	0x3b, r1	; 59
    1a9e:	2f 93       	push	r18
    1aa0:	3f 93       	push	r19
    1aa2:	4f 93       	push	r20
    1aa4:	5f 93       	push	r21
    1aa6:	6f 93       	push	r22
    1aa8:	7f 93       	push	r23
    1aaa:	8f 93       	push	r24
    1aac:	9f 93       	push	r25
    1aae:	af 93       	push	r26
    1ab0:	bf 93       	push	r27
    1ab2:	ef 93       	push	r30
    1ab4:	ff 93       	push	r31
	if (tc_tcf1_err_callback) {
    1ab6:	e0 91 52 20 	lds	r30, 0x2052
    1aba:	f0 91 53 20 	lds	r31, 0x2053
    1abe:	30 97       	sbiw	r30, 0x00	; 0
    1ac0:	09 f0       	breq	.+2      	; 0x1ac4 <__vector_115+0x42>
		tc_tcf1_err_callback();
    1ac2:	19 95       	eicall
	}
}
    1ac4:	ff 91       	pop	r31
    1ac6:	ef 91       	pop	r30
    1ac8:	bf 91       	pop	r27
    1aca:	af 91       	pop	r26
    1acc:	9f 91       	pop	r25
    1ace:	8f 91       	pop	r24
    1ad0:	7f 91       	pop	r23
    1ad2:	6f 91       	pop	r22
    1ad4:	5f 91       	pop	r21
    1ad6:	4f 91       	pop	r20
    1ad8:	3f 91       	pop	r19
    1ada:	2f 91       	pop	r18
    1adc:	0f 90       	pop	r0
    1ade:	0b be       	out	0x3b, r0	; 59
    1ae0:	0f 90       	pop	r0
    1ae2:	09 be       	out	0x39, r0	; 57
    1ae4:	0f 90       	pop	r0
    1ae6:	08 be       	out	0x38, r0	; 56
    1ae8:	0f 90       	pop	r0
    1aea:	0f be       	out	0x3f, r0	; 63
    1aec:	0f 90       	pop	r0
    1aee:	1f 90       	pop	r1
    1af0:	18 95       	reti

00001af2 <__vector_116>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF1_CCA_vect)
{
    1af2:	1f 92       	push	r1
    1af4:	0f 92       	push	r0
    1af6:	0f b6       	in	r0, 0x3f	; 63
    1af8:	0f 92       	push	r0
    1afa:	11 24       	eor	r1, r1
    1afc:	08 b6       	in	r0, 0x38	; 56
    1afe:	0f 92       	push	r0
    1b00:	18 be       	out	0x38, r1	; 56
    1b02:	09 b6       	in	r0, 0x39	; 57
    1b04:	0f 92       	push	r0
    1b06:	19 be       	out	0x39, r1	; 57
    1b08:	0b b6       	in	r0, 0x3b	; 59
    1b0a:	0f 92       	push	r0
    1b0c:	1b be       	out	0x3b, r1	; 59
    1b0e:	2f 93       	push	r18
    1b10:	3f 93       	push	r19
    1b12:	4f 93       	push	r20
    1b14:	5f 93       	push	r21
    1b16:	6f 93       	push	r22
    1b18:	7f 93       	push	r23
    1b1a:	8f 93       	push	r24
    1b1c:	9f 93       	push	r25
    1b1e:	af 93       	push	r26
    1b20:	bf 93       	push	r27
    1b22:	ef 93       	push	r30
    1b24:	ff 93       	push	r31
	if (tc_tcf1_cca_callback) {
    1b26:	e0 91 50 20 	lds	r30, 0x2050
    1b2a:	f0 91 51 20 	lds	r31, 0x2051
    1b2e:	30 97       	sbiw	r30, 0x00	; 0
    1b30:	09 f0       	breq	.+2      	; 0x1b34 <__vector_116+0x42>
		tc_tcf1_cca_callback();
    1b32:	19 95       	eicall
	}
}
    1b34:	ff 91       	pop	r31
    1b36:	ef 91       	pop	r30
    1b38:	bf 91       	pop	r27
    1b3a:	af 91       	pop	r26
    1b3c:	9f 91       	pop	r25
    1b3e:	8f 91       	pop	r24
    1b40:	7f 91       	pop	r23
    1b42:	6f 91       	pop	r22
    1b44:	5f 91       	pop	r21
    1b46:	4f 91       	pop	r20
    1b48:	3f 91       	pop	r19
    1b4a:	2f 91       	pop	r18
    1b4c:	0f 90       	pop	r0
    1b4e:	0b be       	out	0x3b, r0	; 59
    1b50:	0f 90       	pop	r0
    1b52:	09 be       	out	0x39, r0	; 57
    1b54:	0f 90       	pop	r0
    1b56:	08 be       	out	0x38, r0	; 56
    1b58:	0f 90       	pop	r0
    1b5a:	0f be       	out	0x3f, r0	; 63
    1b5c:	0f 90       	pop	r0
    1b5e:	1f 90       	pop	r1
    1b60:	18 95       	reti

00001b62 <__vector_117>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF1_CCB_vect)
{
    1b62:	1f 92       	push	r1
    1b64:	0f 92       	push	r0
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	0f 92       	push	r0
    1b6a:	11 24       	eor	r1, r1
    1b6c:	08 b6       	in	r0, 0x38	; 56
    1b6e:	0f 92       	push	r0
    1b70:	18 be       	out	0x38, r1	; 56
    1b72:	09 b6       	in	r0, 0x39	; 57
    1b74:	0f 92       	push	r0
    1b76:	19 be       	out	0x39, r1	; 57
    1b78:	0b b6       	in	r0, 0x3b	; 59
    1b7a:	0f 92       	push	r0
    1b7c:	1b be       	out	0x3b, r1	; 59
    1b7e:	2f 93       	push	r18
    1b80:	3f 93       	push	r19
    1b82:	4f 93       	push	r20
    1b84:	5f 93       	push	r21
    1b86:	6f 93       	push	r22
    1b88:	7f 93       	push	r23
    1b8a:	8f 93       	push	r24
    1b8c:	9f 93       	push	r25
    1b8e:	af 93       	push	r26
    1b90:	bf 93       	push	r27
    1b92:	ef 93       	push	r30
    1b94:	ff 93       	push	r31
	if (tc_tcf1_ccb_callback) {
    1b96:	e0 91 4e 20 	lds	r30, 0x204E
    1b9a:	f0 91 4f 20 	lds	r31, 0x204F
    1b9e:	30 97       	sbiw	r30, 0x00	; 0
    1ba0:	09 f0       	breq	.+2      	; 0x1ba4 <__vector_117+0x42>
		tc_tcf1_ccb_callback();
    1ba2:	19 95       	eicall
	}
}
    1ba4:	ff 91       	pop	r31
    1ba6:	ef 91       	pop	r30
    1ba8:	bf 91       	pop	r27
    1baa:	af 91       	pop	r26
    1bac:	9f 91       	pop	r25
    1bae:	8f 91       	pop	r24
    1bb0:	7f 91       	pop	r23
    1bb2:	6f 91       	pop	r22
    1bb4:	5f 91       	pop	r21
    1bb6:	4f 91       	pop	r20
    1bb8:	3f 91       	pop	r19
    1bba:	2f 91       	pop	r18
    1bbc:	0f 90       	pop	r0
    1bbe:	0b be       	out	0x3b, r0	; 59
    1bc0:	0f 90       	pop	r0
    1bc2:	09 be       	out	0x39, r0	; 57
    1bc4:	0f 90       	pop	r0
    1bc6:	08 be       	out	0x38, r0	; 56
    1bc8:	0f 90       	pop	r0
    1bca:	0f be       	out	0x3f, r0	; 63
    1bcc:	0f 90       	pop	r0
    1bce:	1f 90       	pop	r1
    1bd0:	18 95       	reti

00001bd2 <tc_enable>:
 *
 * \note
 * unmask TC clock (sysclk), but does not configure the TC clock source.
 */
void tc_enable(volatile void *tc)
{
    1bd2:	cf 93       	push	r28

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1bd4:	cf b7       	in	r28, 0x3f	; 63
	cpu_irq_disable();
    1bd6:	f8 94       	cli
	irqflags_t iflags = cpu_irq_save();

#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1bd8:	28 2f       	mov	r18, r24
    1bda:	39 2f       	mov	r19, r25
    1bdc:	21 15       	cp	r18, r1
    1bde:	88 e0       	ldi	r24, 0x08	; 8
    1be0:	38 07       	cpc	r19, r24
    1be2:	59 f4       	brne	.+22     	; 0x1bfa <tc_enable+0x28>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    1be4:	61 e0       	ldi	r22, 0x01	; 1
    1be6:	83 e0       	ldi	r24, 0x03	; 3
    1be8:	90 e0       	ldi	r25, 0x00	; 0
    1bea:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1bee:	64 e0       	ldi	r22, 0x04	; 4
    1bf0:	83 e0       	ldi	r24, 0x03	; 3
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1bf8:	6a c0       	rjmp	.+212    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1bfa:	20 34       	cpi	r18, 0x40	; 64
    1bfc:	88 e0       	ldi	r24, 0x08	; 8
    1bfe:	38 07       	cpc	r19, r24
    1c00:	59 f4       	brne	.+22     	; 0x1c18 <tc_enable+0x46>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    1c02:	62 e0       	ldi	r22, 0x02	; 2
    1c04:	83 e0       	ldi	r24, 0x03	; 3
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1c0c:	64 e0       	ldi	r22, 0x04	; 4
    1c0e:	83 e0       	ldi	r24, 0x03	; 3
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c16:	5b c0       	rjmp	.+182    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1c18:	21 15       	cp	r18, r1
    1c1a:	89 e0       	ldi	r24, 0x09	; 9
    1c1c:	38 07       	cpc	r19, r24
    1c1e:	59 f4       	brne	.+22     	; 0x1c36 <tc_enable+0x64>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    1c20:	61 e0       	ldi	r22, 0x01	; 1
    1c22:	84 e0       	ldi	r24, 0x04	; 4
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c2a:	64 e0       	ldi	r22, 0x04	; 4
    1c2c:	84 e0       	ldi	r24, 0x04	; 4
    1c2e:	90 e0       	ldi	r25, 0x00	; 0
    1c30:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c34:	4c c0       	rjmp	.+152    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
    1c36:	20 34       	cpi	r18, 0x40	; 64
    1c38:	89 e0       	ldi	r24, 0x09	; 9
    1c3a:	38 07       	cpc	r19, r24
    1c3c:	59 f4       	brne	.+22     	; 0x1c54 <tc_enable+0x82>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    1c3e:	62 e0       	ldi	r22, 0x02	; 2
    1c40:	84 e0       	ldi	r24, 0x04	; 4
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c48:	64 e0       	ldi	r22, 0x04	; 4
    1c4a:	84 e0       	ldi	r24, 0x04	; 4
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c52:	3d c0       	rjmp	.+122    	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    1c54:	21 15       	cp	r18, r1
    1c56:	8a e0       	ldi	r24, 0x0A	; 10
    1c58:	38 07       	cpc	r19, r24
    1c5a:	59 f4       	brne	.+22     	; 0x1c72 <tc_enable+0xa0>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    1c5c:	61 e0       	ldi	r22, 0x01	; 1
    1c5e:	85 e0       	ldi	r24, 0x05	; 5
    1c60:	90 e0       	ldi	r25, 0x00	; 0
    1c62:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c66:	64 e0       	ldi	r22, 0x04	; 4
    1c68:	85 e0       	ldi	r24, 0x05	; 5
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c70:	2e c0       	rjmp	.+92     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCE1
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
    1c72:	20 34       	cpi	r18, 0x40	; 64
    1c74:	8a e0       	ldi	r24, 0x0A	; 10
    1c76:	38 07       	cpc	r19, r24
    1c78:	59 f4       	brne	.+22     	; 0x1c90 <tc_enable+0xbe>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    1c7a:	62 e0       	ldi	r22, 0x02	; 2
    1c7c:	85 e0       	ldi	r24, 0x05	; 5
    1c7e:	90 e0       	ldi	r25, 0x00	; 0
    1c80:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c84:	64 e0       	ldi	r22, 0x04	; 4
    1c86:	85 e0       	ldi	r24, 0x05	; 5
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1c8e:	1f c0       	rjmp	.+62     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    1c90:	21 15       	cp	r18, r1
    1c92:	8b e0       	ldi	r24, 0x0B	; 11
    1c94:	38 07       	cpc	r19, r24
    1c96:	59 f4       	brne	.+22     	; 0x1cae <tc_enable+0xdc>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    1c98:	61 e0       	ldi	r22, 0x01	; 1
    1c9a:	86 e0       	ldi	r24, 0x06	; 6
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1ca2:	64 e0       	ldi	r22, 0x04	; 4
    1ca4:	86 e0       	ldi	r24, 0x06	; 6
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1cac:	10 c0       	rjmp	.+32     	; 0x1cce <tc_enable+0xfc>
	} else
#endif
#ifdef TCF1
	if ((uintptr_t) tc == (uintptr_t) & TCF1) {
    1cae:	20 34       	cpi	r18, 0x40	; 64
    1cb0:	3b 40       	sbci	r19, 0x0B	; 11
    1cb2:	59 f4       	brne	.+22     	; 0x1cca <tc_enable+0xf8>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    1cb4:	62 e0       	ldi	r22, 0x02	; 2
    1cb6:	86 e0       	ldi	r24, 0x06	; 6
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1cbe:	64 e0       	ldi	r22, 0x04	; 4
    1cc0:	86 e0       	ldi	r24, 0x06	; 6
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <sysclk_enable_module>
    1cc8:	02 c0       	rjmp	.+4      	; 0x1cce <tc_enable+0xfc>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cca:	cf bf       	out	0x3f, r28	; 63
    1ccc:	09 c0       	rjmp	.+18     	; 0x1ce0 <tc_enable+0x10e>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1cce:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    1cd0:	f8 94       	cli
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    1cd2:	ed ea       	ldi	r30, 0xAD	; 173
    1cd4:	f0 e2       	ldi	r31, 0x20	; 32
    1cd6:	90 81       	ld	r25, Z
    1cd8:	9f 5f       	subi	r25, 0xFF	; 255
    1cda:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cdc:	8f bf       	out	0x3f, r24	; 63
    1cde:	cf bf       	out	0x3f, r28	; 63
		cpu_irq_restore(iflags);
		return;
	}
	sleepmgr_lock_mode(SLEEPMGR_IDLE);
	cpu_irq_restore(iflags);
}
    1ce0:	cf 91       	pop	r28
    1ce2:	08 95       	ret

00001ce4 <usart_putchar>:
	}
	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
    1ce4:	fc 01       	movw	r30, r24
    1ce6:	81 81       	ldd	r24, Z+1	; 0x01
    1ce8:	85 ff       	sbrs	r24, 5
    1cea:	fd cf       	rjmp	.-6      	; 0x1ce6 <usart_putchar+0x2>
    1cec:	60 83       	st	Z, r22
    1cee:	80 e0       	ldi	r24, 0x00	; 0
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	08 95       	ret

00001cf4 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
    1cf4:	4f 92       	push	r4
    1cf6:	5f 92       	push	r5
    1cf8:	6f 92       	push	r6
    1cfa:	7f 92       	push	r7
    1cfc:	8f 92       	push	r8
    1cfe:	9f 92       	push	r9
    1d00:	af 92       	push	r10
    1d02:	bf 92       	push	r11
    1d04:	cf 92       	push	r12
    1d06:	df 92       	push	r13
    1d08:	ef 92       	push	r14
    1d0a:	ff 92       	push	r15
    1d0c:	0f 93       	push	r16
    1d0e:	1f 93       	push	r17
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	ec 01       	movw	r28, r24
    1d16:	4a 01       	movw	r8, r20
    1d18:	5b 01       	movw	r10, r22
    1d1a:	28 01       	movw	r4, r16
    1d1c:	39 01       	movw	r6, r18

	/*
	 * Check if the hardware supports the given baud rate
	 */
	// 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN)
	max_rate = cpu_hz / 8;
    1d1e:	d9 01       	movw	r26, r18
    1d20:	c8 01       	movw	r24, r16
    1d22:	68 94       	set
    1d24:	12 f8       	bld	r1, 2
    1d26:	b6 95       	lsr	r27
    1d28:	a7 95       	ror	r26
    1d2a:	97 95       	ror	r25
    1d2c:	87 95       	ror	r24
    1d2e:	16 94       	lsr	r1
    1d30:	d1 f7       	brne	.-12     	; 0x1d26 <usart_set_baudrate+0x32>
	// 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1)
	min_rate = cpu_hz / 4194304;
    1d32:	b9 01       	movw	r22, r18
    1d34:	a8 01       	movw	r20, r16
    1d36:	03 2e       	mov	r0, r19
    1d38:	36 e1       	ldi	r19, 0x16	; 22
    1d3a:	76 95       	lsr	r23
    1d3c:	67 95       	ror	r22
    1d3e:	57 95       	ror	r21
    1d40:	47 95       	ror	r20
    1d42:	3a 95       	dec	r19
    1d44:	d1 f7       	brne	.-12     	; 0x1d3a <usart_set_baudrate+0x46>
    1d46:	30 2d       	mov	r19, r0

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d48:	2c 81       	ldd	r18, Y+4	; 0x04
    1d4a:	22 fd       	sbrc	r18, 2
    1d4c:	08 c0       	rjmp	.+16     	; 0x1d5e <usart_set_baudrate+0x6a>
		max_rate /= 2;
    1d4e:	b6 95       	lsr	r27
    1d50:	a7 95       	ror	r26
    1d52:	97 95       	ror	r25
    1d54:	87 95       	ror	r24
		min_rate /= 2;
    1d56:	76 95       	lsr	r23
    1d58:	67 95       	ror	r22
    1d5a:	57 95       	ror	r21
    1d5c:	47 95       	ror	r20
	}

	if ((baud > max_rate) || (baud < min_rate)) {
    1d5e:	88 15       	cp	r24, r8
    1d60:	99 05       	cpc	r25, r9
    1d62:	aa 05       	cpc	r26, r10
    1d64:	bb 05       	cpc	r27, r11
    1d66:	08 f4       	brcc	.+2      	; 0x1d6a <usart_set_baudrate+0x76>
    1d68:	a6 c0       	rjmp	.+332    	; 0x1eb6 <usart_set_baudrate+0x1c2>
    1d6a:	84 16       	cp	r8, r20
    1d6c:	95 06       	cpc	r9, r21
    1d6e:	a6 06       	cpc	r10, r22
    1d70:	b7 06       	cpc	r11, r23
    1d72:	08 f4       	brcc	.+2      	; 0x1d76 <usart_set_baudrate+0x82>
    1d74:	a2 c0       	rjmp	.+324    	; 0x1eba <usart_set_baudrate+0x1c6>
	}

	/*
	 * Check if double speed is enabled.
	 */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d76:	8c 81       	ldd	r24, Y+4	; 0x04
    1d78:	82 fd       	sbrc	r24, 2
    1d7a:	04 c0       	rjmp	.+8      	; 0x1d84 <usart_set_baudrate+0x90>
		baud *= 2;
    1d7c:	88 0c       	add	r8, r8
    1d7e:	99 1c       	adc	r9, r9
    1d80:	aa 1c       	adc	r10, r10
    1d82:	bb 1c       	adc	r11, r11

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
    1d84:	c3 01       	movw	r24, r6
    1d86:	b2 01       	movw	r22, r4
    1d88:	a5 01       	movw	r20, r10
    1d8a:	94 01       	movw	r18, r8
    1d8c:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
    1d90:	2f 3f       	cpi	r18, 0xFF	; 255
    1d92:	31 05       	cpc	r19, r1
    1d94:	41 05       	cpc	r20, r1
    1d96:	51 05       	cpc	r21, r1
    1d98:	08 f4       	brcc	.+2      	; 0x1d9c <usart_set_baudrate+0xa8>
    1d9a:	91 c0       	rjmp	.+290    	; 0x1ebe <usart_set_baudrate+0x1ca>
	}

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
    1d9c:	c1 2c       	mov	r12, r1
    1d9e:	d1 2c       	mov	r13, r1
    1da0:	76 01       	movw	r14, r12
    1da2:	ca 94       	dec	r12
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1da4:	19 ef       	ldi	r17, 0xF9	; 249
    1da6:	05 c0       	rjmp	.+10     	; 0x1db2 <usart_set_baudrate+0xbe>
		if (ratio < limit) {
    1da8:	2c 15       	cp	r18, r12
    1daa:	3d 05       	cpc	r19, r13
    1dac:	4e 05       	cpc	r20, r14
    1dae:	5f 05       	cpc	r21, r15
    1db0:	68 f0       	brcs	.+26     	; 0x1dcc <usart_set_baudrate+0xd8>
			break;
		}

		limit <<= 1;
    1db2:	cc 0c       	add	r12, r12
    1db4:	dd 1c       	adc	r13, r13
    1db6:	ee 1c       	adc	r14, r14
    1db8:	ff 1c       	adc	r15, r15

		if (exp < -3) {
    1dba:	1d 3f       	cpi	r17, 0xFD	; 253
    1dbc:	14 f4       	brge	.+4      	; 0x1dc2 <usart_set_baudrate+0xce>
			limit |= 1;
    1dbe:	68 94       	set
    1dc0:	c0 f8       	bld	r12, 0
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1dc2:	1f 5f       	subi	r17, 0xFF	; 255
    1dc4:	17 30       	cpi	r17, 0x07	; 7
    1dc6:	81 f7       	brne	.-32     	; 0x1da8 <usart_set_baudrate+0xb4>
    1dc8:	21 2f       	mov	r18, r17
    1dca:	50 c0       	rjmp	.+160    	; 0x1e6c <usart_set_baudrate+0x178>
    1dcc:	21 2f       	mov	r18, r17
	 * operation as it ensures that we never exceeed 2**32 at any point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
    1dce:	11 23       	and	r17, r17
    1dd0:	0c f0       	brlt	.+2      	; 0x1dd4 <usart_set_baudrate+0xe0>
    1dd2:	4c c0       	rjmp	.+152    	; 0x1e6c <usart_set_baudrate+0x178>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1dd4:	d5 01       	movw	r26, r10
    1dd6:	c4 01       	movw	r24, r8
    1dd8:	88 0f       	add	r24, r24
    1dda:	99 1f       	adc	r25, r25
    1ddc:	aa 1f       	adc	r26, r26
    1dde:	bb 1f       	adc	r27, r27
    1de0:	88 0f       	add	r24, r24
    1de2:	99 1f       	adc	r25, r25
    1de4:	aa 1f       	adc	r26, r26
    1de6:	bb 1f       	adc	r27, r27
    1de8:	88 0f       	add	r24, r24
    1dea:	99 1f       	adc	r25, r25
    1dec:	aa 1f       	adc	r26, r26
    1dee:	bb 1f       	adc	r27, r27
    1df0:	48 1a       	sub	r4, r24
    1df2:	59 0a       	sbc	r5, r25
    1df4:	6a 0a       	sbc	r6, r26
    1df6:	7b 0a       	sbc	r7, r27
		 * If we end up with a left-shift after taking the final divide-by-8
		 * into account, do the shift before the divide. Otherwise, left-shift
		 * the denominator instead (effectively resulting in an overall right
		 * shift.)
		 */
		if (exp <= -3) {
    1df8:	1e 3f       	cpi	r17, 0xFE	; 254
    1dfa:	f4 f4       	brge	.+60     	; 0x1e38 <usart_set_baudrate+0x144>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
    1dfc:	6d ef       	ldi	r22, 0xFD	; 253
    1dfe:	7f ef       	ldi	r23, 0xFF	; 255
    1e00:	61 1b       	sub	r22, r17
    1e02:	71 09       	sbc	r23, r1
    1e04:	17 fd       	sbrc	r17, 7
    1e06:	73 95       	inc	r23
    1e08:	04 c0       	rjmp	.+8      	; 0x1e12 <usart_set_baudrate+0x11e>
    1e0a:	44 0c       	add	r4, r4
    1e0c:	55 1c       	adc	r5, r5
    1e0e:	66 1c       	adc	r6, r6
    1e10:	77 1c       	adc	r7, r7
    1e12:	6a 95       	dec	r22
    1e14:	d2 f7       	brpl	.-12     	; 0x1e0a <usart_set_baudrate+0x116>
    1e16:	d5 01       	movw	r26, r10
    1e18:	c4 01       	movw	r24, r8
    1e1a:	b6 95       	lsr	r27
    1e1c:	a7 95       	ror	r26
    1e1e:	97 95       	ror	r25
    1e20:	87 95       	ror	r24
    1e22:	bc 01       	movw	r22, r24
    1e24:	cd 01       	movw	r24, r26
    1e26:	64 0d       	add	r22, r4
    1e28:	75 1d       	adc	r23, r5
    1e2a:	86 1d       	adc	r24, r6
    1e2c:	97 1d       	adc	r25, r7
    1e2e:	a5 01       	movw	r20, r10
    1e30:	94 01       	movw	r18, r8
    1e32:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>
    1e36:	36 c0       	rjmp	.+108    	; 0x1ea4 <usart_set_baudrate+0x1b0>
		} else {
			baud <<= exp + 3;
    1e38:	23 e0       	ldi	r18, 0x03	; 3
    1e3a:	21 0f       	add	r18, r17
    1e3c:	d5 01       	movw	r26, r10
    1e3e:	c4 01       	movw	r24, r8
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <usart_set_baudrate+0x156>
    1e42:	88 0f       	add	r24, r24
    1e44:	99 1f       	adc	r25, r25
    1e46:	aa 1f       	adc	r26, r26
    1e48:	bb 1f       	adc	r27, r27
    1e4a:	2a 95       	dec	r18
    1e4c:	d2 f7       	brpl	.-12     	; 0x1e42 <usart_set_baudrate+0x14e>
    1e4e:	9c 01       	movw	r18, r24
    1e50:	ad 01       	movw	r20, r26
			div = (cpu_hz + baud / 2) / baud;
    1e52:	b6 95       	lsr	r27
    1e54:	a7 95       	ror	r26
    1e56:	97 95       	ror	r25
    1e58:	87 95       	ror	r24
    1e5a:	bc 01       	movw	r22, r24
    1e5c:	cd 01       	movw	r24, r26
    1e5e:	64 0d       	add	r22, r4
    1e60:	75 1d       	adc	r23, r5
    1e62:	86 1d       	adc	r24, r6
    1e64:	97 1d       	adc	r25, r7
    1e66:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>
    1e6a:	1c c0       	rjmp	.+56     	; 0x1ea4 <usart_set_baudrate+0x1b0>
	} else {
		/*
		 * We will always do a right shift in this case, but we need to shift
		 * three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
    1e6c:	2d 5f       	subi	r18, 0xFD	; 253
    1e6e:	d5 01       	movw	r26, r10
    1e70:	c4 01       	movw	r24, r8
    1e72:	04 c0       	rjmp	.+8      	; 0x1e7c <usart_set_baudrate+0x188>
    1e74:	88 0f       	add	r24, r24
    1e76:	99 1f       	adc	r25, r25
    1e78:	aa 1f       	adc	r26, r26
    1e7a:	bb 1f       	adc	r27, r27
    1e7c:	2a 95       	dec	r18
    1e7e:	d2 f7       	brpl	.-12     	; 0x1e74 <usart_set_baudrate+0x180>
    1e80:	9c 01       	movw	r18, r24
    1e82:	ad 01       	movw	r20, r26
		div = (cpu_hz + baud / 2) / baud - 1;
    1e84:	b6 95       	lsr	r27
    1e86:	a7 95       	ror	r26
    1e88:	97 95       	ror	r25
    1e8a:	87 95       	ror	r24
    1e8c:	bc 01       	movw	r22, r24
    1e8e:	cd 01       	movw	r24, r26
    1e90:	64 0d       	add	r22, r4
    1e92:	75 1d       	adc	r23, r5
    1e94:	86 1d       	adc	r24, r6
    1e96:	97 1d       	adc	r25, r7
    1e98:	0e 94 56 2b 	call	0x56ac	; 0x56ac <__udivmodsi4>
    1e9c:	21 50       	subi	r18, 0x01	; 1
    1e9e:	31 09       	sbc	r19, r1
    1ea0:	41 09       	sbc	r20, r1
    1ea2:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
    1ea4:	83 2f       	mov	r24, r19
    1ea6:	8f 70       	andi	r24, 0x0F	; 15
    1ea8:	12 95       	swap	r17
    1eaa:	10 7f       	andi	r17, 0xF0	; 240
    1eac:	18 2b       	or	r17, r24
    1eae:	1f 83       	std	Y+7, r17	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
    1eb0:	2e 83       	std	Y+6, r18	; 0x06

	return true;
    1eb2:	81 e0       	ldi	r24, 0x01	; 1
    1eb4:	18 c0       	rjmp	.+48     	; 0x1ee6 <usart_set_baudrate+0x1f2>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
    1eb6:	80 e0       	ldi	r24, 0x00	; 0
    1eb8:	16 c0       	rjmp	.+44     	; 0x1ee6 <usart_set_baudrate+0x1f2>
    1eba:	80 e0       	ldi	r24, 0x00	; 0
    1ebc:	14 c0       	rjmp	.+40     	; 0x1ee6 <usart_set_baudrate+0x1f2>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1ebe:	d5 01       	movw	r26, r10
    1ec0:	c4 01       	movw	r24, r8
    1ec2:	88 0f       	add	r24, r24
    1ec4:	99 1f       	adc	r25, r25
    1ec6:	aa 1f       	adc	r26, r26
    1ec8:	bb 1f       	adc	r27, r27
    1eca:	88 0f       	add	r24, r24
    1ecc:	99 1f       	adc	r25, r25
    1ece:	aa 1f       	adc	r26, r26
    1ed0:	bb 1f       	adc	r27, r27
    1ed2:	88 0f       	add	r24, r24
    1ed4:	99 1f       	adc	r25, r25
    1ed6:	aa 1f       	adc	r26, r26
    1ed8:	bb 1f       	adc	r27, r27
    1eda:	48 1a       	sub	r4, r24
    1edc:	59 0a       	sbc	r5, r25
    1ede:	6a 0a       	sbc	r6, r26
    1ee0:	7b 0a       	sbc	r7, r27
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1ee2:	19 ef       	ldi	r17, 0xF9	; 249
    1ee4:	8b cf       	rjmp	.-234    	; 0x1dfc <usart_set_baudrate+0x108>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
    1ee6:	df 91       	pop	r29
    1ee8:	cf 91       	pop	r28
    1eea:	1f 91       	pop	r17
    1eec:	0f 91       	pop	r16
    1eee:	ff 90       	pop	r15
    1ef0:	ef 90       	pop	r14
    1ef2:	df 90       	pop	r13
    1ef4:	cf 90       	pop	r12
    1ef6:	bf 90       	pop	r11
    1ef8:	af 90       	pop	r10
    1efa:	9f 90       	pop	r9
    1efc:	8f 90       	pop	r8
    1efe:	7f 90       	pop	r7
    1f00:	6f 90       	pop	r6
    1f02:	5f 90       	pop	r5
    1f04:	4f 90       	pop	r4
    1f06:	08 95       	ret

00001f08 <wdt_reset_mcu>:
uint8_t temp;
	/*
	 * WDT enabled (minimum timeout period for max. security)
	 */
	temp = WDT_PER_8CLK_gc | (1 << WDT_ENABLE_bp) | (1 << WDT_CEN_bp);
	ccp_write_io((void *)&WDT.CTRL, temp);
    1f08:	63 e0       	ldi	r22, 0x03	; 3
    1f0a:	80 e8       	ldi	r24, 0x80	; 128
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 09 05 	call	0xa12	; 0xa12 <ccp_write_io>
/*! \brief Wait until WD settings are synchronized to the WD clock domain.
 *
 */
static inline void wdt_wait_while_busy(void)
{
	while ((WDT.STATUS & WDT_SYNCBUSY_bm) == WDT_SYNCBUSY_bm) {
    1f12:	e0 e8       	ldi	r30, 0x80	; 128
    1f14:	f0 e0       	ldi	r31, 0x00	; 0
    1f16:	82 81       	ldd	r24, Z+2	; 0x02
    1f18:	80 fd       	sbrc	r24, 0
    1f1a:	fd cf       	rjmp	.-6      	; 0x1f16 <wdt_reset_mcu+0xe>
	wdt_wait_while_busy();
	/*
	 * WDT enabled (maximum window period for max. security)
	 */
	temp = WDT_WPER_8KCLK_gc | (1 << WDT_WEN_bp) | (1 << WDT_WCEN_bp);
	ccp_write_io((void *)&WDT.WINCTRL, temp);
    1f1c:	6b e2       	ldi	r22, 0x2B	; 43
    1f1e:	81 e8       	ldi	r24, 0x81	; 129
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	0e 94 09 05 	call	0xa12	; 0xa12 <ccp_write_io>
    1f26:	e0 e8       	ldi	r30, 0x80	; 128
    1f28:	f0 e0       	ldi	r31, 0x00	; 0
    1f2a:	82 81       	ldd	r24, Z+2	; 0x02
    1f2c:	80 fd       	sbrc	r24, 0
    1f2e:	fd cf       	rjmp	.-6      	; 0x1f2a <wdt_reset_mcu+0x22>
	wdt_wait_while_busy();
	/*
	 * WDT Reset during window => WDT generates an Hard Reset.
	 */
	wdt_reset();
    1f30:	a8 95       	wdr
    1f32:	ff cf       	rjmp	.-2      	; 0x1f32 <wdt_reset_mcu+0x2a>

00001f34 <En_RC32M>:
//Motor_Param M0,M1,M2,M3;

void En_RC32M(void)
{
    // Start RC32M OSC
    OSC_CTRL |= OSC_RC32MEN_bm;
    1f34:	e0 e5       	ldi	r30, 0x50	; 80
    1f36:	f0 e0       	ldi	r31, 0x00	; 0
    1f38:	80 81       	ld	r24, Z
    1f3a:	82 60       	ori	r24, 0x02	; 2
    1f3c:	80 83       	st	Z, r24
    while(!(OSC_STATUS & OSC_RC32MRDY_bm));
    1f3e:	e1 e5       	ldi	r30, 0x51	; 81
    1f40:	f0 e0       	ldi	r31, 0x00	; 0
    1f42:	80 81       	ld	r24, Z
    1f44:	81 ff       	sbrs	r24, 1
    1f46:	fd cf       	rjmp	.-6      	; 0x1f42 <En_RC32M+0xe>

    // Select the system clock source: 32 MHz Internal RC Osc.
    CCP = CCP_IOREG_gc;
    1f48:	88 ed       	ldi	r24, 0xD8	; 216
    1f4a:	84 bf       	out	0x34, r24	; 52
    CLK_CTRL = CLK_SCLKSEL_RC32M_gc;
    1f4c:	81 e0       	ldi	r24, 0x01	; 1
    1f4e:	80 93 40 00 	sts	0x0040, r24

    // Disable the unused oscillators: 2 MHz, internal 32 kHz, external clock/crystal oscillator, PLL
    OSC_CTRL &= ~(OSC_RC2MEN_bm | OSC_RC32KEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
    1f52:	e0 e5       	ldi	r30, 0x50	; 80
    1f54:	f0 e0       	ldi	r31, 0x00	; 0
    1f56:	80 81       	ld	r24, Z
    1f58:	82 7e       	andi	r24, 0xE2	; 226
    1f5a:	80 83       	st	Z, r24
    1f5c:	08 95       	ret

00001f5e <PORT_init>:
};

void PORT_init(void)
{
	
	PORTB_DIRSET = KCK_Charge_PIN_bm;
    1f5e:	80 e4       	ldi	r24, 0x40	; 64
    1f60:	80 93 21 06 	sts	0x0621, r24
	PORTC_DIRSET = KCK_Chip_PIN_bm | KCK_DIR_PIN_bm | Buzzer_PIN_bm | PIN2_bm ;
    1f64:	87 e4       	ldi	r24, 0x47	; 71
    1f66:	80 93 41 06 	sts	0x0641, r24
	PORTC_PIN3CTRL=PORT_ISC_BOTHEDGES_gc;
    1f6a:	10 92 53 06 	sts	0x0653, r1
	PORTC_INTCTRL = PORT_INT0LVL_LO_gc;
    1f6e:	81 e0       	ldi	r24, 0x01	; 1
    1f70:	80 93 49 06 	sts	0x0649, r24
	PORTC_INT0MASK = PIN3_bm;
    1f74:	98 e0       	ldi	r25, 0x08	; 8
    1f76:	90 93 4a 06 	sts	0x064A, r25
	
	PORTD_DIRSET = Gyro_SCL_PIN_bm | LED_White_PIN_bm | LED_Red_PIN_bm | LED_Green_PIN_bm;  //SDA TWI tuye pin ctrl tanzimat mikhad?!
    1f7a:	2e e2       	ldi	r18, 0x2E	; 46
    1f7c:	20 93 61 06 	sts	0x0661, r18
	//PORTD_PIN2CTRL = PORT_ISC_RISING_gc;  PORTD_PIN3CTRL= PORT_ISC_RISING_gc;  //KCK Sens1 , 2
	//PORTD_INTCTRL = PORT_INT0LVL_LO_gc;
	//PORTD_INT0MASK = KCK_Sens1_PIN_bm | KCK_Sens2_PIN_bm;
		
	
	PORTE_DIRSET = NRF24L01_L_CE_LINE | NRF24L01_L_CS_LINE | NRF24L01_L_MOSI_LINE | NRF24L01_L_SCK_LINE | PIN3_bm; // wireless module & programmer data & usart test
    1f80:	2a eb       	ldi	r18, 0xBA	; 186
    1f82:	20 93 81 06 	sts	0x0681, r18
	PORTE_PIN0CTRL |= PORT_ISC_FALLING_gc;
    1f86:	e0 e9       	ldi	r30, 0x90	; 144
    1f88:	f6 e0       	ldi	r31, 0x06	; 6
    1f8a:	20 81       	ld	r18, Z
    1f8c:	22 60       	ori	r18, 0x02	; 2
    1f8e:	20 83       	st	Z, r18
	PORTE_INTCTRL |= PORT_INT0LVL_LO_gc;
    1f90:	e9 e8       	ldi	r30, 0x89	; 137
    1f92:	f6 e0       	ldi	r31, 0x06	; 6
    1f94:	20 81       	ld	r18, Z
    1f96:	21 60       	ori	r18, 0x01	; 1
    1f98:	20 83       	st	Z, r18
	PORTE_INT0MASK |= PIN0_bm;
    1f9a:	ea e8       	ldi	r30, 0x8A	; 138
    1f9c:	f6 e0       	ldi	r31, 0x06	; 6
    1f9e:	20 81       	ld	r18, Z
    1fa0:	21 60       	ori	r18, 0x01	; 1
    1fa2:	20 83       	st	Z, r18
	//PORTF_PIN4CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN5CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN6CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_INTCTRL |= PORT_INT0LVL_LO_gc;
	//PORTF_INT0MASK = Menu_Cancel_PIN_bm | Menu_PIN3_bm | Menu_PIN2_bm | Menu_PIN1_bm | Menu_PIN0_bm;
	PORTF_INT0MASK = Menu_Cancel_PIN_bm;
    1fa4:	20 e1       	ldi	r18, 0x10	; 16
    1fa6:	20 93 aa 06 	sts	0x06AA, r18
   
   PORTF_DIRSET = PIN3_bm;
    1faa:	90 93 a1 06 	sts	0x06A1, r25
   PORTF_OUTSET = PIN3_bm;
    1fae:	90 93 a5 06 	sts	0x06A5, r25
   
   PORTK_DIR = 0xFF;//SegL
    1fb2:	2f ef       	ldi	r18, 0xFF	; 255
    1fb4:	20 93 20 07 	sts	0x0720, r18
   PORTJ_DIR = 0xFF;//SegR
    1fb8:	20 93 00 07 	sts	0x0700, r18
   
   PORTK_PIN0CTRL = PORT_ISC_RISING_gc;
    1fbc:	80 93 30 07 	sts	0x0730, r24
   PORTK_INTCTRL = PORT_INT0LVL_LO_gc;
    1fc0:	80 93 29 07 	sts	0x0729, r24
   PORTK_INT0MASK = Menu_Set_PIN_bm;
    1fc4:	20 e8       	ldi	r18, 0x80	; 128
    1fc6:	20 93 2a 07 	sts	0x072A, r18
   
   PORTQ_PIN0CTRL = PORT_ISC_BOTHEDGES_gc;
    1fca:	10 92 d0 07 	sts	0x07D0, r1
   PORTQ_PIN3CTRL = PORT_ISC_BOTHEDGES_gc;
    1fce:	10 92 d3 07 	sts	0x07D3, r1
   PORTQ_INTCTRL  = PORT_INT0LVL_LO_gc|PORT_INT1LVL_LO_gc;
    1fd2:	25 e0       	ldi	r18, 0x05	; 5
    1fd4:	20 93 c9 07 	sts	0x07C9, r18
   PORTQ_INT0MASK = PIN0_bm;
    1fd8:	80 93 ca 07 	sts	0x07CA, r24
   PORTQ_INT1MASK = PIN3_bm;
    1fdc:	90 93 cb 07 	sts	0x07CB, r25
   
   PORTH_PIN5CTRL = PORT_ISC_RISING_gc;
    1fe0:	80 93 f5 06 	sts	0x06F5, r24
   PORTH_INTCTRL  = PORT_INT0LVL_LO_gc;
    1fe4:	80 93 e9 06 	sts	0x06E9, r24
   PORTH_INT0MASK = PIN5_bm;
    1fe8:	80 e2       	ldi	r24, 0x20	; 32
    1fea:	80 93 ea 06 	sts	0x06EA, r24
    1fee:	08 95       	ret

00001ff0 <TimerC0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    1ff0:	e0 e0       	ldi	r30, 0x00	; 0
    1ff2:	f8 e0       	ldi	r31, 0x08	; 8
    1ff4:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    1ff6:	80 7f       	andi	r24, 0xF0	; 240
    1ff8:	86 60       	ori	r24, 0x06	; 6
    1ffa:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    1ffc:	81 81       	ldd	r24, Z+1	; 0x01
    1ffe:	88 7f       	andi	r24, 0xF8	; 248
    2000:	83 60       	ori	r24, 0x03	; 3
    2002:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2004:	8f ef       	ldi	r24, 0xFF	; 255
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	86 a3       	std	Z+38, r24	; 0x26
    200a:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    200c:	80 85       	ldd	r24, Z+8	; 0x08
    200e:	8e 6f       	ori	r24, 0xFE	; 254
    2010:	80 87       	std	Z+8, r24	; 0x08
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
    2012:	81 81       	ldd	r24, Z+1	; 0x01
    2014:	80 61       	ori	r24, 0x10	; 16
    2016:	81 83       	std	Z+1, r24	; 0x01
    2018:	81 81       	ldd	r24, Z+1	; 0x01
    201a:	80 62       	ori	r24, 0x20	; 32
    201c:	81 83       	std	Z+1, r24	; 0x01
	tc_set_wgm(&TCC0,TC_WG_SS);
	tc_write_period(&TCC0,0x00FF);
	tc_set_direction(&TCC0,TC_UP);
	tc_enable_cc_channels(&TCC0,TC_CCAEN);
	tc_enable_cc_channels(&TCC0,TC_CCBEN);
	tc_enable(&TCC0);
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	98 e0       	ldi	r25, 0x08	; 8
    2022:	d7 cd       	rjmp	.-1106   	; 0x1bd2 <tc_enable>
    2024:	08 95       	ret

00002026 <TimerD0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    2026:	e0 e0       	ldi	r30, 0x00	; 0
    2028:	f9 e0       	ldi	r31, 0x09	; 9
    202a:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    202c:	80 7f       	andi	r24, 0xF0	; 240
    202e:	86 60       	ori	r24, 0x06	; 6
    2030:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    2032:	81 81       	ldd	r24, Z+1	; 0x01
    2034:	88 7f       	andi	r24, 0xF8	; 248
    2036:	81 83       	std	Z+1, r24	; 0x01
 * \note  Configures OVFINTLVL in INTCTRLA
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
    2038:	86 81       	ldd	r24, Z+6	; 0x06
    203a:	8c 7f       	andi	r24, 0xFC	; 252
    203c:	86 83       	std	Z+6, r24	; 0x06
	((TC0_t *)tc)->INTCTRLA =
			((TC0_t *)tc)->INTCTRLA | (level << TC0_OVFINTLVL_gp);
    203e:	86 81       	ldd	r24, Z+6	; 0x06
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
	((TC0_t *)tc)->INTCTRLA =
    2040:	82 60       	ori	r24, 0x02	; 2
    2042:	86 83       	std	Z+6, r24	; 0x06
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2044:	8d e7       	ldi	r24, 0x7D	; 125
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	86 a3       	std	Z+38, r24	; 0x26
    204a:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    204c:	80 85       	ldd	r24, Z+8	; 0x08
    204e:	8e 6f       	ori	r24, 0xFE	; 254
    2050:	80 87       	std	Z+8, r24	; 0x08
	tc_write_clock_source(&TCD0,TC_CLKSEL_DIV256_gc);
	tc_set_wgm(&TCD0,TC_WG_NORMAL);
	tc_set_overflow_interrupt_level(&TCD0,TC_INT_LVL_MED);
	tc_write_period(&TCD0,TIMERD0_PER);
	tc_set_direction(&TCD0,TC_UP);
	tc_enable(&TCD0);
    2052:	80 e0       	ldi	r24, 0x00	; 0
    2054:	99 e0       	ldi	r25, 0x09	; 9
    2056:	bd cd       	rjmp	.-1158   	; 0x1bd2 <tc_enable>
    2058:	08 95       	ret

0000205a <SPI_Init>:
};

void SPI_Init(void)
{
    205a:	0f 93       	push	r16
    205c:	1f 93       	push	r17
	 spi_xmega_set_baud_div(&NRF24L01_L_SPI,8000000UL,F_CPU);
    205e:	00 e0       	ldi	r16, 0x00	; 0
    2060:	18 e4       	ldi	r17, 0x48	; 72
    2062:	28 ee       	ldi	r18, 0xE8	; 232
    2064:	31 e0       	ldi	r19, 0x01	; 1
    2066:	40 e0       	ldi	r20, 0x00	; 0
    2068:	52 e1       	ldi	r21, 0x12	; 18
    206a:	6a e7       	ldi	r22, 0x7A	; 122
    206c:	70 e0       	ldi	r23, 0x00	; 0
    206e:	80 ec       	ldi	r24, 0xC0	; 192
    2070:	9a e0       	ldi	r25, 0x0A	; 10
    2072:	0e 94 19 05 	call	0xa32	; 0xa32 <spi_xmega_set_baud_div>
 *
 * \warning This may cause data loss if used on a slave SPI.
 */
static inline void spi_enable_master_mode(SPI_t *spi)
{
	spi->CTRL |= SPI_MASTER_bm;
    2076:	e0 ec       	ldi	r30, 0xC0	; 192
    2078:	fa e0       	ldi	r31, 0x0A	; 10
    207a:	80 81       	ld	r24, Z
    207c:	80 61       	ori	r24, 0x10	; 16
    207e:	80 83       	st	Z, r24
 *
 * \param spi Base address of the SPI instance.
 */
static inline void spi_enable(SPI_t *spi)
{
	spi->CTRL |= SPI_ENABLE_bm;
    2080:	80 81       	ld	r24, Z
    2082:	80 64       	ori	r24, 0x40	; 64
    2084:	80 83       	st	Z, r24
	 spi_enable_master_mode(&NRF24L01_L_SPI);
	 spi_enable(&NRF24L01_L_SPI);
}
    2086:	1f 91       	pop	r17
    2088:	0f 91       	pop	r16
    208a:	08 95       	ret

0000208c <USARTE0_init>:

#define USARTE0_conf USARTE0
#define USARTE0_BUADRATE 19200
void USARTE0_init(void)
{
    208c:	0f 93       	push	r16
    208e:	1f 93       	push	r17
    2090:	cf 93       	push	r28
    2092:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2094:	c0 ea       	ldi	r28, 0xA0	; 160
    2096:	da e0       	ldi	r29, 0x0A	; 10
    2098:	8d 81       	ldd	r24, Y+5	; 0x05
    209a:	8f 73       	andi	r24, 0x3F	; 63
    209c:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    209e:	83 e0       	ldi	r24, 0x03	; 3
    20a0:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20a2:	8b 81       	ldd	r24, Y+3	; 0x03
    20a4:	8f 7c       	andi	r24, 0xCF	; 207
    20a6:	80 62       	ori	r24, 0x20	; 32
    20a8:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTE0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTE0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTE0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTE0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTE0_conf,USARTE0_BUADRATE,F_CPU);
    20aa:	00 e0       	ldi	r16, 0x00	; 0
    20ac:	18 e4       	ldi	r17, 0x48	; 72
    20ae:	28 ee       	ldi	r18, 0xE8	; 232
    20b0:	31 e0       	ldi	r19, 0x01	; 1
    20b2:	40 e0       	ldi	r20, 0x00	; 0
    20b4:	5b e4       	ldi	r21, 0x4B	; 75
    20b6:	60 e0       	ldi	r22, 0x00	; 0
    20b8:	70 e0       	ldi	r23, 0x00	; 0
    20ba:	80 ea       	ldi	r24, 0xA0	; 160
    20bc:	9a e0       	ldi	r25, 0x0A	; 10
    20be:	1a de       	rcall	.-972    	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    20c0:	8c 81       	ldd	r24, Y+4	; 0x04
    20c2:	88 60       	ori	r24, 0x08	; 8
    20c4:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTE0_conf);
	//usart_rx_enable(&USARTE0_conf);
}
    20c6:	df 91       	pop	r29
    20c8:	cf 91       	pop	r28
    20ca:	1f 91       	pop	r17
    20cc:	0f 91       	pop	r16
    20ce:	08 95       	ret

000020d0 <USARTF0_init>:


#define USARTF0_conf USARTF0
#define USARTF0_BUADRATE 9600
void USARTF0_init(void)
{
    20d0:	0f 93       	push	r16
    20d2:	1f 93       	push	r17
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    20d8:	c0 ea       	ldi	r28, 0xA0	; 160
    20da:	db e0       	ldi	r29, 0x0B	; 11
    20dc:	8d 81       	ldd	r24, Y+5	; 0x05
    20de:	8f 73       	andi	r24, 0x3F	; 63
    20e0:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    20e2:	83 e0       	ldi	r24, 0x03	; 3
    20e4:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20e6:	8b 81       	ldd	r24, Y+3	; 0x03
    20e8:	8f 7c       	andi	r24, 0xCF	; 207
    20ea:	80 62       	ori	r24, 0x20	; 32
    20ec:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTF0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTF0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF0_conf,USARTF0_BUADRATE,F_CPU);
    20ee:	00 e0       	ldi	r16, 0x00	; 0
    20f0:	18 e4       	ldi	r17, 0x48	; 72
    20f2:	28 ee       	ldi	r18, 0xE8	; 232
    20f4:	31 e0       	ldi	r19, 0x01	; 1
    20f6:	40 e8       	ldi	r20, 0x80	; 128
    20f8:	55 e2       	ldi	r21, 0x25	; 37
    20fa:	60 e0       	ldi	r22, 0x00	; 0
    20fc:	70 e0       	ldi	r23, 0x00	; 0
    20fe:	80 ea       	ldi	r24, 0xA0	; 160
    2100:	9b e0       	ldi	r25, 0x0B	; 11
    2102:	f8 dd       	rcall	.-1040   	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2104:	8c 81       	ldd	r24, Y+4	; 0x04
    2106:	88 60       	ori	r24, 0x08	; 8
    2108:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
    210a:	8c 81       	ldd	r24, Y+4	; 0x04
    210c:	80 61       	ori	r24, 0x10	; 16
    210e:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF0_conf);
	usart_rx_enable(&USARTF0_conf);
}
    2110:	df 91       	pop	r29
    2112:	cf 91       	pop	r28
    2114:	1f 91       	pop	r17
    2116:	0f 91       	pop	r16
    2118:	08 95       	ret

0000211a <USARTF1_init>:

#define USARTF1_conf USARTF1
#define USARTF1_BUADRATE 9600
void USARTF1_init(void)
{
    211a:	0f 93       	push	r16
    211c:	1f 93       	push	r17
    211e:	cf 93       	push	r28
    2120:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2122:	c0 eb       	ldi	r28, 0xB0	; 176
    2124:	db e0       	ldi	r29, 0x0B	; 11
    2126:	8d 81       	ldd	r24, Y+5	; 0x05
    2128:	8f 73       	andi	r24, 0x3F	; 63
    212a:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    212c:	83 e0       	ldi	r24, 0x03	; 3
    212e:	8d 83       	std	Y+5, r24	; 0x05
	usart_set_mode(&USARTF1_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF1_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	//usart_set_rx_interrupt_level(&USARTF1_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF1_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF1_conf,USARTF1_BUADRATE,F_CPU);
    2130:	00 e0       	ldi	r16, 0x00	; 0
    2132:	18 e4       	ldi	r17, 0x48	; 72
    2134:	28 ee       	ldi	r18, 0xE8	; 232
    2136:	31 e0       	ldi	r19, 0x01	; 1
    2138:	40 e8       	ldi	r20, 0x80	; 128
    213a:	55 e2       	ldi	r21, 0x25	; 37
    213c:	60 e0       	ldi	r22, 0x00	; 0
    213e:	70 e0       	ldi	r23, 0x00	; 0
    2140:	80 eb       	ldi	r24, 0xB0	; 176
    2142:	9b e0       	ldi	r25, 0x0B	; 11
    2144:	d7 dd       	rcall	.-1106   	; 0x1cf4 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2146:	8c 81       	ldd	r24, Y+4	; 0x04
    2148:	88 60       	ori	r24, 0x08	; 8
    214a:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF1_conf);
	//usart_rx_enable(&USARTF1_conf);
}
    214c:	df 91       	pop	r29
    214e:	cf 91       	pop	r28
    2150:	1f 91       	pop	r17
    2152:	0f 91       	pop	r16
    2154:	08 95       	ret

00002156 <ADCA_init>:

//KCK_CAP_VFB   -----> B7
#define CONFIG_ADC_INTLVL ADC_CH_INTLVL_LO_gc
void ADCA_init(void)
{
    2156:	cf 93       	push	r28
    2158:	df 93       	push	r29
    215a:	cd b7       	in	r28, 0x3d	; 61
    215c:	de b7       	in	r29, 0x3e	; 62
    215e:	2a 97       	sbiw	r28, 0x0a	; 10
    2160:	cd bf       	out	0x3d, r28	; 61
    2162:	de bf       	out	0x3e, r29	; 62
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
    2164:	61 e2       	ldi	r22, 0x21	; 33
    2166:	70 e0       	ldi	r23, 0x00	; 0
    2168:	82 e0       	ldi	r24, 0x02	; 2
    216a:	0e 94 0f 05 	call	0xa1e	; 0xa1e <nvm_read_byte>
    216e:	60 e2       	ldi	r22, 0x20	; 32
    2170:	70 e0       	ldi	r23, 0x00	; 0
    2172:	82 e0       	ldi	r24, 0x02	; 2
    2174:	0e 94 0f 05 	call	0xa1e	; 0xa1e <nvm_read_byte>
static inline void adc_set_conversion_parameters(struct adc_config *conf,
		enum adc_sign sign, enum adc_resolution res,
		enum adc_reference ref)
{
	// Preserve all but conversion and resolution config.
	conf->ctrlb &= ~(ADC_CONMODE_bm | ADC_RESOLUTION_gm);
    2178:	8a 81       	ldd	r24, Y+2	; 0x02
    217a:	89 7e       	andi	r24, 0xE9	; 233
	conf->ctrlb |= (uint8_t)res | (uint8_t)sign;

	conf->refctrl &= ~ADC_REFSEL_gm;
    217c:	9b 81       	ldd	r25, Y+3	; 0x03
    217e:	9f 7c       	andi	r25, 0xCF	; 207
	conf->refctrl |= ref;
    2180:	90 62       	ori	r25, 0x20	; 32
    2182:	9b 83       	std	Y+3, r25	; 0x03
		psc = ADC_PRESCALER_DIV256_gc;
	} else {
		psc = ADC_PRESCALER_DIV512_gc;
	}

	conf->prescaler = psc;
    2184:	92 e0       	ldi	r25, 0x02	; 2
    2186:	9d 83       	std	Y+5, r25	; 0x05
				(nr_of_ch << ADC_EVACT_gp);
		break;

#if XMEGA_A || XMEGA_AU
	case ADC_TRIG_FREERUN_SWEEP:
		conf->ctrlb |= ADC_FREERUN_bm;
    2188:	88 60       	ori	r24, 0x08	; 8
    218a:	8a 83       	std	Y+2, r24	; 0x02
		conf->evctrl = (nr_of_ch - 1) << ADC_SWEEP_gp;
    218c:	1c 82       	std	Y+4, r1	; 0x04
    adc_get_calibration_data(ADC_CAL_ADCA);
    adc_set_conversion_parameters(&adca_conf,ADC_SIGN_OFF,ADC_RES_12,ADC_REF_AREFA);
    adc_set_clock_rate(&adca_conf,125000UL);
    adc_set_conversion_trigger(&adca_conf,ADC_TRIG_FREERUN_SWEEP,1,0);
   // adc_set_config_compare_value(adcb_conf,KCK_MAX_CHARGE_AMP);
    adc_write_configuration(&ADCA,&adca_conf);
    218e:	be 01       	movw	r22, r28
    2190:	6f 5f       	subi	r22, 0xFF	; 255
    2192:	7f 4f       	sbci	r23, 0xFF	; 255
    2194:	80 e0       	ldi	r24, 0x00	; 0
    2196:	92 e0       	ldi	r25, 0x02	; 2
    2198:	0e 94 57 04 	call	0x8ae	; 0x8ae <adc_write_configuration>
    //
    ///* Configure ADC channel 0:
    //* - Input: ADCB4
    //* - interrupts disable
    //*/
    adcch_read_configuration(&ADCA,1, &adca_ch_conf);
    219c:	ae 01       	movw	r20, r28
    219e:	48 5f       	subi	r20, 0xF8	; 248
    21a0:	5f 4f       	sbci	r21, 0xFF	; 255
    21a2:	61 e0       	ldi	r22, 0x01	; 1
    21a4:	80 e0       	ldi	r24, 0x00	; 0
    21a6:	92 e0       	ldi	r25, 0x02	; 2
    21a8:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <adcch_read_configuration>

	// Configure for single-ended measurement.
	if (neg == ADCCH_NEG_NONE) {
		Assert(gain == 1);

		ch_conf->ctrl = ADC_CH_INPUTMODE_SINGLEENDED_gc;
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	88 87       	std	Y+8, r24	; 0x08
		ch_conf->muxctrl = pos << ADC_CH_MUXPOS_gp;
    21b0:	88 e1       	ldi	r24, 0x18	; 24
    21b2:	89 87       	std	Y+9, r24	; 0x09
    adcch_set_input(&adca_ch_conf,ADCCH_POS_PIN3,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    adcch_write_configuration(&ADCA,1,&adca_ch_conf);
    21b4:	ae 01       	movw	r20, r28
    21b6:	48 5f       	subi	r20, 0xF8	; 248
    21b8:	5f 4f       	sbci	r21, 0xFF	; 255
    21ba:	61 e0       	ldi	r22, 0x01	; 1
    21bc:	80 e0       	ldi	r24, 0x00	; 0
    21be:	92 e0       	ldi	r25, 0x02	; 2
    21c0:	0e 94 a8 04 	call	0x950	; 0x950 <adcch_write_configuration>
    //adcch_set_input(&adcb_ch_conf,ADCCH_POS_PIN7,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    //adcch_set_interrupt_mode(&adcb_ch_conf,ADCCH_MODE_ABOVE);
    //adcch_enable_interrupt(&adcb_ch_conf);
    //adcch_write_configuration(&ADCB,3,&adcb_ch_conf);
    //
    adc_enable(&ADCA);
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	92 e0       	ldi	r25, 0x02	; 2
    21c8:	0e 94 40 04 	call	0x880	; 0x880 <adc_enable>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    21cc:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    21ce:	f8 94       	cli
 * \note The ADC must be enabled for this function to have any effect.
 */
static inline void adc_start_conversion(ADC_t *adc, uint8_t ch_mask)
{
	irqflags_t flags = cpu_irq_save();
	adc->CTRLA |= ch_mask << ADC_CH0START_bp;
    21d0:	e0 e0       	ldi	r30, 0x00	; 0
    21d2:	f2 e0       	ldi	r31, 0x02	; 2
    21d4:	90 81       	ld	r25, Z
    21d6:	94 60       	ori	r25, 0x04	; 4
    21d8:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    21da:	8f bf       	out	0x3f, r24	; 63
    adc_start_conversion(&ADCA,ADC_CH0);
    //adc_start_conversion(&ADCB,ADC_CH1);
    //adc_start_conversion(&ADCB,ADC_CH2);
    ////adc_start_conversion(&ADCB,ADC_CH3);
}
    21dc:	2a 96       	adiw	r28, 0x0a	; 10
    21de:	cd bf       	out	0x3d, r28	; 61
    21e0:	de bf       	out	0x3e, r29	; 62
    21e2:	df 91       	pop	r29
    21e4:	cf 91       	pop	r28
    21e6:	08 95       	ret

000021e8 <main>:
        break;
    };

}
void get_MS(char rx)
{
    21e8:	cf 93       	push	r28
    21ea:	df 93       	push	r29
    21ec:	cd b7       	in	r28, 0x3d	; 61
    21ee:	de b7       	in	r29, 0x3e	; 62
    21f0:	c0 5f       	subi	r28, 0xF0	; 240
    21f2:	d1 09       	sbc	r29, r1
    21f4:	cd bf       	out	0x3d, r28	; 61
    21f6:	de bf       	out	0x3e, r29	; 62
    21f8:	9d de       	rcall	.-710    	; 0x1f34 <En_RC32M>
    21fa:	e2 ea       	ldi	r30, 0xA2	; 162
    21fc:	f0 e0       	ldi	r31, 0x00	; 0
    21fe:	80 81       	ld	r24, Z
    2200:	87 60       	ori	r24, 0x07	; 7
    2202:	80 83       	st	Z, r24
    2204:	ac de       	rcall	.-680    	; 0x1f5e <PORT_init>
    2206:	0f df       	rcall	.-482    	; 0x2026 <TimerD0_init>
    2208:	f3 de       	rcall	.-538    	; 0x1ff0 <TimerC0_init>
    220a:	62 df       	rcall	.-316    	; 0x20d0 <USARTF0_init>
    220c:	86 df       	rcall	.-244    	; 0x211a <USARTF1_init>
    220e:	3e df       	rcall	.-388    	; 0x208c <USARTE0_init>
    2210:	a2 df       	rcall	.-188    	; 0x2156 <ADCA_init>
    2212:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCDInit>
    2216:	78 94       	sei
    2218:	88 eb       	ldi	r24, 0xB8	; 184
    221a:	9b e0       	ldi	r25, 0x0B	; 11
    221c:	a0 e0       	ldi	r26, 0x00	; 0
    221e:	b0 e0       	ldi	r27, 0x00	; 0
    2220:	80 93 34 20 	sts	0x2034, r24
    2224:	90 93 35 20 	sts	0x2035, r25
    2228:	a0 93 36 20 	sts	0x2036, r26
    222c:	b0 93 37 20 	sts	0x2037, r27
    2230:	24 ef       	ldi	r18, 0xF4	; 244
    2232:	31 e0       	ldi	r19, 0x01	; 1
    2234:	20 93 cb 23 	sts	0x23CB, r18
    2238:	30 93 cc 23 	sts	0x23CC, r19
    223c:	80 93 38 20 	sts	0x2038, r24
    2240:	90 93 39 20 	sts	0x2039, r25
    2244:	a0 93 3a 20 	sts	0x203A, r26
    2248:	b0 93 3b 20 	sts	0x203B, r27
    224c:	84 e6       	ldi	r24, 0x64	; 100
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	80 93 e7 21 	sts	0x21E7, r24
    2254:	90 93 e8 21 	sts	0x21E8, r25
    2258:	88 ee       	ldi	r24, 0xE8	; 232
    225a:	93 e0       	ldi	r25, 0x03	; 3
    225c:	a0 e0       	ldi	r26, 0x00	; 0
    225e:	b0 e0       	ldi	r27, 0x00	; 0
    2260:	80 93 30 20 	sts	0x2030, r24
    2264:	90 93 31 20 	sts	0x2031, r25
    2268:	a0 93 32 20 	sts	0x2032, r26
    226c:	b0 93 33 20 	sts	0x2033, r27
    2270:	88 ec       	ldi	r24, 0xC8	; 200
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	80 93 f9 23 	sts	0x23F9, r24
    2278:	90 93 fa 23 	sts	0x23FA, r25
    227c:	80 ed       	ldi	r24, 0xD0	; 208
    227e:	97 e0       	ldi	r25, 0x07	; 7
    2280:	a0 e0       	ldi	r26, 0x00	; 0
    2282:	b0 e0       	ldi	r27, 0x00	; 0
    2284:	80 93 2c 20 	sts	0x202C, r24
    2288:	90 93 2d 20 	sts	0x202D, r25
    228c:	a0 93 2e 20 	sts	0x202E, r26
    2290:	b0 93 2f 20 	sts	0x202F, r27
    2294:	86 e9       	ldi	r24, 0x96	; 150
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	80 93 2f 22 	sts	0x222F, r24
    229c:	90 93 30 22 	sts	0x2230, r25
    22a0:	e8 e0       	ldi	r30, 0x08	; 8
    22a2:	f6 e0       	ldi	r31, 0x06	; 6
    22a4:	90 81       	ld	r25, Z
    22a6:	30 81       	ld	r19, Z
    22a8:	80 81       	ld	r24, Z
    22aa:	40 81       	ld	r20, Z
    22ac:	e3 e0       	ldi	r30, 0x03	; 3
    22ae:	f0 e2       	ldi	r31, 0x20	; 32
    22b0:	88 1f       	adc	r24, r24
    22b2:	88 27       	eor	r24, r24
    22b4:	88 1f       	adc	r24, r24
    22b6:	28 2f       	mov	r18, r24
    22b8:	22 0f       	add	r18, r18
    22ba:	22 0f       	add	r18, r18
    22bc:	96 fb       	bst	r25, 6
    22be:	88 27       	eor	r24, r24
    22c0:	80 f9       	bld	r24, 0
    22c2:	28 2b       	or	r18, r24
    22c4:	34 fb       	bst	r19, 4
    22c6:	88 24       	eor	r8, r8
    22c8:	80 f8       	bld	r8, 0
    22ca:	91 2c       	mov	r9, r1
    22cc:	c4 01       	movw	r24, r8
    22ce:	88 0f       	add	r24, r24
    22d0:	99 1f       	adc	r25, r25
    22d2:	28 2b       	or	r18, r24
    22d4:	45 fb       	bst	r20, 5
    22d6:	00 27       	eor	r16, r16
    22d8:	00 f9       	bld	r16, 0
    22da:	10 e0       	ldi	r17, 0x00	; 0
    22dc:	c8 01       	movw	r24, r16
    22de:	88 0f       	add	r24, r24
    22e0:	99 1f       	adc	r25, r25
    22e2:	88 0f       	add	r24, r24
    22e4:	99 1f       	adc	r25, r25
    22e6:	88 0f       	add	r24, r24
    22e8:	99 1f       	adc	r25, r25
    22ea:	82 2b       	or	r24, r18
    22ec:	90 81       	ld	r25, Z
    22ee:	89 0f       	add	r24, r25
    22f0:	80 83       	st	Z, r24
    22f2:	82 e0       	ldi	r24, 0x02	; 2
    22f4:	e0 e8       	ldi	r30, 0x80	; 128
    22f6:	f6 e0       	ldi	r31, 0x06	; 6
    22f8:	86 83       	std	Z+6, r24	; 0x06
    22fa:	af de       	rcall	.-674    	; 0x205a <SPI_Init>
    22fc:	1a e6       	ldi	r17, 0x6A	; 106
    22fe:	1a 95       	dec	r17
    2300:	f1 f7       	brne	.-4      	; 0x22fe <main+0x116>
    2302:	00 c0       	rjmp	.+0      	; 0x2304 <main+0x11c>
    2304:	2f ef       	ldi	r18, 0xFF	; 255
    2306:	33 ec       	ldi	r19, 0xC3	; 195
    2308:	49 e0       	ldi	r20, 0x09	; 9
    230a:	21 50       	subi	r18, 0x01	; 1
    230c:	30 40       	sbci	r19, 0x00	; 0
    230e:	40 40       	sbci	r20, 0x00	; 0
    2310:	e1 f7       	brne	.-8      	; 0x230a <main+0x122>
    2312:	00 c0       	rjmp	.+0      	; 0x2314 <main+0x12c>
    2314:	00 00       	nop
    2316:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <NRF24L01_L_Clear_Interrupts>
    231a:	0e 94 3a 2b 	call	0x5674	; 0x5674 <NRF24L01_L_Flush_TX>
    231e:	0e 94 48 2b 	call	0x5690	; 0x5690 <NRF24L01_L_Flush_RX>
    2322:	82 e0       	ldi	r24, 0x02	; 2
    2324:	e0 e8       	ldi	r30, 0x80	; 128
    2326:	f6 e0       	ldi	r31, 0x06	; 6
    2328:	86 83       	std	Z+6, r24	; 0x06
    232a:	e8 e0       	ldi	r30, 0x08	; 8
    232c:	f6 e0       	ldi	r31, 0x06	; 6
    232e:	20 81       	ld	r18, Z
    2330:	30 81       	ld	r19, Z
    2332:	80 81       	ld	r24, Z
    2334:	40 81       	ld	r20, Z
    2336:	88 1f       	adc	r24, r24
    2338:	88 27       	eor	r24, r24
    233a:	88 1f       	adc	r24, r24
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	88 0f       	add	r24, r24
    2340:	99 1f       	adc	r25, r25
    2342:	88 0f       	add	r24, r24
    2344:	99 1f       	adc	r25, r25
    2346:	26 fb       	bst	r18, 6
    2348:	ee 24       	eor	r14, r14
    234a:	e0 f8       	bld	r14, 0
    234c:	f1 2c       	mov	r15, r1
    234e:	e8 2a       	or	r14, r24
    2350:	f9 2a       	or	r15, r25
    2352:	34 fb       	bst	r19, 4
    2354:	cc 24       	eor	r12, r12
    2356:	c0 f8       	bld	r12, 0
    2358:	d1 2c       	mov	r13, r1
    235a:	c6 01       	movw	r24, r12
    235c:	88 0f       	add	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	e8 2a       	or	r14, r24
    2362:	f9 2a       	or	r15, r25
    2364:	45 fb       	bst	r20, 5
    2366:	aa 24       	eor	r10, r10
    2368:	a0 f8       	bld	r10, 0
    236a:	b1 2c       	mov	r11, r1
    236c:	c5 01       	movw	r24, r10
    236e:	88 0f       	add	r24, r24
    2370:	99 1f       	adc	r25, r25
    2372:	88 0f       	add	r24, r24
    2374:	99 1f       	adc	r25, r25
    2376:	88 0f       	add	r24, r24
    2378:	99 1f       	adc	r25, r25
    237a:	8e 29       	or	r24, r14
    237c:	9f 29       	or	r25, r15
    237e:	03 97       	sbiw	r24, 0x03	; 3
    2380:	84 f4       	brge	.+32     	; 0x23a2 <main+0x1ba>
    2382:	0f 2e       	mov	r0, r31
    2384:	f6 e0       	ldi	r31, 0x06	; 6
    2386:	cf 2e       	mov	r12, r31
    2388:	f0 2d       	mov	r31, r0
    238a:	68 94       	set
    238c:	ee 24       	eor	r14, r14
    238e:	e5 f8       	bld	r14, 5
    2390:	05 e0       	ldi	r16, 0x05	; 5
    2392:	23 e0       	ldi	r18, 0x03	; 3
    2394:	30 e2       	ldi	r19, 0x20	; 32
    2396:	48 e0       	ldi	r20, 0x08	; 8
    2398:	62 e3       	ldi	r22, 0x32	; 50
    239a:	80 e0       	ldi	r24, 0x00	; 0
    239c:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <NRF24L01_L_Init_milad>
    23a0:	0f c0       	rjmp	.+30     	; 0x23c0 <main+0x1d8>
    23a2:	0f 2e       	mov	r0, r31
    23a4:	f6 e0       	ldi	r31, 0x06	; 6
    23a6:	cf 2e       	mov	r12, r31
    23a8:	f0 2d       	mov	r31, r0
    23aa:	68 94       	set
    23ac:	ee 24       	eor	r14, r14
    23ae:	e5 f8       	bld	r14, 5
    23b0:	05 e0       	ldi	r16, 0x05	; 5
    23b2:	23 e0       	ldi	r18, 0x03	; 3
    23b4:	30 e2       	ldi	r19, 0x20	; 32
    23b6:	48 e0       	ldi	r20, 0x08	; 8
    23b8:	61 e0       	ldi	r22, 0x01	; 1
    23ba:	80 e0       	ldi	r24, 0x00	; 0
    23bc:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <NRF24L01_L_Init_milad>
    23c0:	61 e0       	ldi	r22, 0x01	; 1
    23c2:	8c e3       	ldi	r24, 0x3C	; 60
    23c4:	0e 94 4a 2a 	call	0x5494	; 0x5494 <NRF24L01_L_WriteReg>
    23c8:	66 e0       	ldi	r22, 0x06	; 6
    23ca:	8d e3       	ldi	r24, 0x3D	; 61
    23cc:	0e 94 4a 2a 	call	0x5494	; 0x5494 <NRF24L01_L_WriteReg>
    23d0:	82 e0       	ldi	r24, 0x02	; 2
    23d2:	e0 e8       	ldi	r30, 0x80	; 128
    23d4:	f6 e0       	ldi	r31, 0x06	; 6
    23d6:	85 83       	std	Z+5, r24	; 0x05
    23d8:	8f e0       	ldi	r24, 0x0F	; 15
    23da:	94 e0       	ldi	r25, 0x04	; 4
    23dc:	01 97       	sbiw	r24, 0x01	; 1
    23de:	f1 f7       	brne	.-4      	; 0x23dc <main+0x1f4>
    23e0:	00 c0       	rjmp	.+0      	; 0x23e2 <main+0x1fa>
    23e2:	00 00       	nop
    23e4:	0f 2e       	mov	r0, r31
    23e6:	f7 e7       	ldi	r31, 0x77	; 119
    23e8:	2f 2e       	mov	r2, r31
    23ea:	f3 e2       	ldi	r31, 0x23	; 35
    23ec:	3f 2e       	mov	r3, r31
    23ee:	f0 2d       	mov	r31, r0
    23f0:	a8 95       	wdr
    23f2:	80 91 9e 20 	lds	r24, 0x209E
    23f6:	88 23       	and	r24, r24
    23f8:	11 f4       	brne	.+4      	; 0x23fe <main+0x216>
    23fa:	0c 94 b3 22 	jmp	0x4566	; 0x4566 <__stack+0x567>
    23fe:	a9 e7       	ldi	r26, 0x79	; 121
    2400:	b3 e2       	ldi	r27, 0x23	; 35
    2402:	ad 90       	ld	r10, X+
    2404:	bc 90       	ld	r11, X
    2406:	eb e7       	ldi	r30, 0x7B	; 123
    2408:	f3 e2       	ldi	r31, 0x23	; 35
    240a:	a0 82       	st	Z, r10
    240c:	b1 82       	std	Z+1, r11	; 0x01
    240e:	d1 01       	movw	r26, r2
    2410:	8d 91       	ld	r24, X+
    2412:	9c 91       	ld	r25, X
    2414:	11 97       	sbiw	r26, 0x01	; 1
    2416:	0f 2e       	mov	r0, r31
    2418:	ff e0       	ldi	r31, 0x0F	; 15
    241a:	7f 2e       	mov	r7, r31
    241c:	f0 2d       	mov	r31, r0
    241e:	78 9e       	mul	r7, r24
    2420:	80 01       	movw	r16, r0
    2422:	79 9e       	mul	r7, r25
    2424:	10 0d       	add	r17, r0
    2426:	11 24       	eor	r1, r1
    2428:	1d 92       	st	X+, r1
    242a:	1c 92       	st	X, r1
    242c:	b5 01       	movw	r22, r10
    242e:	88 27       	eor	r24, r24
    2430:	77 fd       	sbrc	r23, 7
    2432:	80 95       	com	r24
    2434:	98 2f       	mov	r25, r24
    2436:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    243a:	6b 01       	movw	r12, r22
    243c:	7c 01       	movw	r14, r24
    243e:	0a 19       	sub	r16, r10
    2440:	1b 09       	sbc	r17, r11
    2442:	b8 01       	movw	r22, r16
    2444:	88 27       	eor	r24, r24
    2446:	77 fd       	sbrc	r23, 7
    2448:	80 95       	com	r24
    244a:	98 2f       	mov	r25, r24
    244c:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2450:	2e ea       	ldi	r18, 0xAE	; 174
    2452:	37 e4       	ldi	r19, 0x47	; 71
    2454:	41 ee       	ldi	r20, 0xE1	; 225
    2456:	5d e3       	ldi	r21, 0x3D	; 61
    2458:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    245c:	9b 01       	movw	r18, r22
    245e:	ac 01       	movw	r20, r24
    2460:	c7 01       	movw	r24, r14
    2462:	b6 01       	movw	r22, r12
    2464:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2468:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    246c:	4b 01       	movw	r8, r22
    246e:	5c 01       	movw	r10, r24
    2470:	e9 e7       	ldi	r30, 0x79	; 121
    2472:	f3 e2       	ldi	r31, 0x23	; 35
    2474:	60 83       	st	Z, r22
    2476:	71 83       	std	Z+1, r23	; 0x01
    2478:	ae ef       	ldi	r26, 0xFE	; 254
    247a:	b3 e2       	ldi	r27, 0x23	; 35
    247c:	0d 91       	ld	r16, X+
    247e:	1c 91       	ld	r17, X
    2480:	e0 e0       	ldi	r30, 0x00	; 0
    2482:	f4 e2       	ldi	r31, 0x24	; 36
    2484:	00 83       	st	Z, r16
    2486:	11 83       	std	Z+1, r17	; 0x01
    2488:	ac ef       	ldi	r26, 0xFC	; 252
    248a:	b3 e2       	ldi	r27, 0x23	; 35
    248c:	8d 91       	ld	r24, X+
    248e:	9c 91       	ld	r25, X
    2490:	11 97       	sbiw	r26, 0x01	; 1
    2492:	78 9e       	mul	r7, r24
    2494:	20 01       	movw	r4, r0
    2496:	79 9e       	mul	r7, r25
    2498:	50 0c       	add	r5, r0
    249a:	11 24       	eor	r1, r1
    249c:	1d 92       	st	X+, r1
    249e:	1c 92       	st	X, r1
    24a0:	b8 01       	movw	r22, r16
    24a2:	88 27       	eor	r24, r24
    24a4:	77 fd       	sbrc	r23, 7
    24a6:	80 95       	com	r24
    24a8:	98 2f       	mov	r25, r24
    24aa:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    24ae:	6b 01       	movw	r12, r22
    24b0:	7c 01       	movw	r14, r24
    24b2:	b2 01       	movw	r22, r4
    24b4:	60 1b       	sub	r22, r16
    24b6:	71 0b       	sbc	r23, r17
    24b8:	88 27       	eor	r24, r24
    24ba:	77 fd       	sbrc	r23, 7
    24bc:	80 95       	com	r24
    24be:	98 2f       	mov	r25, r24
    24c0:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    24c4:	2e ea       	ldi	r18, 0xAE	; 174
    24c6:	37 e4       	ldi	r19, 0x47	; 71
    24c8:	41 ee       	ldi	r20, 0xE1	; 225
    24ca:	5d e3       	ldi	r21, 0x3D	; 61
    24cc:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    24d0:	9b 01       	movw	r18, r22
    24d2:	ac 01       	movw	r20, r24
    24d4:	c7 01       	movw	r24, r14
    24d6:	b6 01       	movw	r22, r12
    24d8:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    24dc:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    24e0:	69 87       	std	Y+9, r22	; 0x09
    24e2:	7a 87       	std	Y+10, r23	; 0x0a
    24e4:	8b 87       	std	Y+11, r24	; 0x0b
    24e6:	9c 87       	std	Y+12, r25	; 0x0c
    24e8:	ee ef       	ldi	r30, 0xFE	; 254
    24ea:	f3 e2       	ldi	r31, 0x23	; 35
    24ec:	60 83       	st	Z, r22
    24ee:	71 83       	std	Z+1, r23	; 0x01
    24f0:	a2 e1       	ldi	r26, 0x12	; 18
    24f2:	b4 e2       	ldi	r27, 0x24	; 36
    24f4:	4d 90       	ld	r4, X+
    24f6:	5c 90       	ld	r5, X
    24f8:	e4 e1       	ldi	r30, 0x14	; 20
    24fa:	f4 e2       	ldi	r31, 0x24	; 36
    24fc:	40 82       	st	Z, r4
    24fe:	51 82       	std	Z+1, r5	; 0x01
    2500:	a0 e1       	ldi	r26, 0x10	; 16
    2502:	b4 e2       	ldi	r27, 0x24	; 36
    2504:	8d 91       	ld	r24, X+
    2506:	9c 91       	ld	r25, X
    2508:	11 97       	sbiw	r26, 0x01	; 1
    250a:	78 9e       	mul	r7, r24
    250c:	80 01       	movw	r16, r0
    250e:	79 9e       	mul	r7, r25
    2510:	10 0d       	add	r17, r0
    2512:	11 24       	eor	r1, r1
    2514:	1d 92       	st	X+, r1
    2516:	1c 92       	st	X, r1
    2518:	b2 01       	movw	r22, r4
    251a:	88 27       	eor	r24, r24
    251c:	77 fd       	sbrc	r23, 7
    251e:	80 95       	com	r24
    2520:	98 2f       	mov	r25, r24
    2522:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2526:	6b 01       	movw	r12, r22
    2528:	7c 01       	movw	r14, r24
    252a:	04 19       	sub	r16, r4
    252c:	15 09       	sbc	r17, r5
    252e:	b8 01       	movw	r22, r16
    2530:	88 27       	eor	r24, r24
    2532:	77 fd       	sbrc	r23, 7
    2534:	80 95       	com	r24
    2536:	98 2f       	mov	r25, r24
    2538:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    253c:	2e ea       	ldi	r18, 0xAE	; 174
    253e:	37 e4       	ldi	r19, 0x47	; 71
    2540:	41 ee       	ldi	r20, 0xE1	; 225
    2542:	5d e3       	ldi	r21, 0x3D	; 61
    2544:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2548:	9b 01       	movw	r18, r22
    254a:	ac 01       	movw	r20, r24
    254c:	c7 01       	movw	r24, r14
    254e:	b6 01       	movw	r22, r12
    2550:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2554:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2558:	6d 87       	std	Y+13, r22	; 0x0d
    255a:	7e 87       	std	Y+14, r23	; 0x0e
    255c:	8f 87       	std	Y+15, r24	; 0x0f
    255e:	98 8b       	std	Y+16, r25	; 0x10
    2560:	e2 e1       	ldi	r30, 0x12	; 18
    2562:	f4 e2       	ldi	r31, 0x24	; 36
    2564:	60 83       	st	Z, r22
    2566:	71 83       	std	Z+1, r23	; 0x01
    2568:	ab ea       	ldi	r26, 0xAB	; 171
    256a:	b3 e2       	ldi	r27, 0x23	; 35
    256c:	4d 90       	ld	r4, X+
    256e:	5c 90       	ld	r5, X
    2570:	ed ea       	ldi	r30, 0xAD	; 173
    2572:	f3 e2       	ldi	r31, 0x23	; 35
    2574:	40 82       	st	Z, r4
    2576:	51 82       	std	Z+1, r5	; 0x01
    2578:	a9 ea       	ldi	r26, 0xA9	; 169
    257a:	b3 e2       	ldi	r27, 0x23	; 35
    257c:	8d 91       	ld	r24, X+
    257e:	9c 91       	ld	r25, X
    2580:	11 97       	sbiw	r26, 0x01	; 1
    2582:	78 9e       	mul	r7, r24
    2584:	80 01       	movw	r16, r0
    2586:	79 9e       	mul	r7, r25
    2588:	10 0d       	add	r17, r0
    258a:	11 24       	eor	r1, r1
    258c:	1d 92       	st	X+, r1
    258e:	1c 92       	st	X, r1
    2590:	b2 01       	movw	r22, r4
    2592:	88 27       	eor	r24, r24
    2594:	77 fd       	sbrc	r23, 7
    2596:	80 95       	com	r24
    2598:	98 2f       	mov	r25, r24
    259a:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    259e:	6b 01       	movw	r12, r22
    25a0:	7c 01       	movw	r14, r24
    25a2:	b8 01       	movw	r22, r16
    25a4:	64 19       	sub	r22, r4
    25a6:	75 09       	sbc	r23, r5
    25a8:	88 27       	eor	r24, r24
    25aa:	77 fd       	sbrc	r23, 7
    25ac:	80 95       	com	r24
    25ae:	98 2f       	mov	r25, r24
    25b0:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    25b4:	2e ea       	ldi	r18, 0xAE	; 174
    25b6:	37 e4       	ldi	r19, 0x47	; 71
    25b8:	41 ee       	ldi	r20, 0xE1	; 225
    25ba:	5d e3       	ldi	r21, 0x3D	; 61
    25bc:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    25c0:	9b 01       	movw	r18, r22
    25c2:	ac 01       	movw	r20, r24
    25c4:	c7 01       	movw	r24, r14
    25c6:	b6 01       	movw	r22, r12
    25c8:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    25cc:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    25d0:	69 8b       	std	Y+17, r22	; 0x11
    25d2:	7a 8b       	std	Y+18, r23	; 0x12
    25d4:	8b 8b       	std	Y+19, r24	; 0x13
    25d6:	9c 8b       	std	Y+20, r25	; 0x14
    25d8:	eb ea       	ldi	r30, 0xAB	; 171
    25da:	f3 e2       	ldi	r31, 0x23	; 35
    25dc:	60 83       	st	Z, r22
    25de:	71 83       	std	Z+1, r23	; 0x01
    25e0:	0f 2e       	mov	r0, r31
    25e2:	f8 e0       	ldi	r31, 0x08	; 8
    25e4:	6f 2e       	mov	r6, r31
    25e6:	f6 e0       	ldi	r31, 0x06	; 6
    25e8:	7f 2e       	mov	r7, r31
    25ea:	f0 2d       	mov	r31, r0
    25ec:	d3 01       	movw	r26, r6
    25ee:	9c 91       	ld	r25, X
    25f0:	8c 91       	ld	r24, X
    25f2:	2c 91       	ld	r18, X
    25f4:	4c 91       	ld	r20, X
    25f6:	22 1f       	adc	r18, r18
    25f8:	22 27       	eor	r18, r18
    25fa:	22 1f       	adc	r18, r18
    25fc:	30 e0       	ldi	r19, 0x00	; 0
    25fe:	22 0f       	add	r18, r18
    2600:	33 1f       	adc	r19, r19
    2602:	22 0f       	add	r18, r18
    2604:	33 1f       	adc	r19, r19
    2606:	96 fb       	bst	r25, 6
    2608:	99 27       	eor	r25, r25
    260a:	90 f9       	bld	r25, 0
    260c:	9d 8b       	std	Y+21, r25	; 0x15
    260e:	1e 8a       	std	Y+22, r1	; 0x16
    2610:	ed 89       	ldd	r30, Y+21	; 0x15
    2612:	fe 89       	ldd	r31, Y+22	; 0x16
    2614:	2e 2b       	or	r18, r30
    2616:	3f 2b       	or	r19, r31
    2618:	82 95       	swap	r24
    261a:	81 70       	andi	r24, 0x01	; 1
    261c:	8f 8b       	std	Y+23, r24	; 0x17
    261e:	18 8e       	std	Y+24, r1	; 0x18
    2620:	8f 89       	ldd	r24, Y+23	; 0x17
    2622:	98 8d       	ldd	r25, Y+24	; 0x18
    2624:	88 0f       	add	r24, r24
    2626:	99 1f       	adc	r25, r25
    2628:	28 2b       	or	r18, r24
    262a:	39 2b       	or	r19, r25
    262c:	45 fb       	bst	r20, 5
    262e:	44 27       	eor	r20, r20
    2630:	40 f9       	bld	r20, 0
    2632:	49 8f       	std	Y+25, r20	; 0x19
    2634:	1a 8e       	std	Y+26, r1	; 0x1a
    2636:	89 8d       	ldd	r24, Y+25	; 0x19
    2638:	9a 8d       	ldd	r25, Y+26	; 0x1a
    263a:	88 0f       	add	r24, r24
    263c:	99 1f       	adc	r25, r25
    263e:	88 0f       	add	r24, r24
    2640:	99 1f       	adc	r25, r25
    2642:	88 0f       	add	r24, r24
    2644:	99 1f       	adc	r25, r25
    2646:	28 2b       	or	r18, r24
    2648:	39 2b       	or	r19, r25
    264a:	17 e1       	ldi	r17, 0x17	; 23
    264c:	12 9f       	mul	r17, r18
    264e:	c0 01       	movw	r24, r0
    2650:	13 9f       	mul	r17, r19
    2652:	90 0d       	add	r25, r0
    2654:	11 24       	eor	r1, r1
    2656:	fc 01       	movw	r30, r24
    2658:	ec 54       	subi	r30, 0x4C	; 76
    265a:	ff 4d       	sbci	r31, 0xDF	; 223
    265c:	64 89       	ldd	r22, Z+20	; 0x14
    265e:	70 e0       	ldi	r23, 0x00	; 0
    2660:	80 e0       	ldi	r24, 0x00	; 0
    2662:	90 e0       	ldi	r25, 0x00	; 0
    2664:	0e 94 7a 2c 	call	0x58f4	; 0x58f4 <__floatunsisf>
    2668:	20 e0       	ldi	r18, 0x00	; 0
    266a:	30 e0       	ldi	r19, 0x00	; 0
    266c:	48 ec       	ldi	r20, 0xC8	; 200
    266e:	52 e4       	ldi	r21, 0x42	; 66
    2670:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__divsf3>
    2674:	69 83       	std	Y+1, r22	; 0x01
    2676:	7a 83       	std	Y+2, r23	; 0x02
    2678:	8b 83       	std	Y+3, r24	; 0x03
    267a:	9c 83       	std	Y+4, r25	; 0x04
    267c:	60 93 22 24 	sts	0x2422, r22
    2680:	70 93 23 24 	sts	0x2423, r23
    2684:	80 93 24 24 	sts	0x2424, r24
    2688:	90 93 25 24 	sts	0x2425, r25
    268c:	d3 01       	movw	r26, r6
    268e:	9c 91       	ld	r25, X
    2690:	8c 91       	ld	r24, X
    2692:	2c 91       	ld	r18, X
    2694:	4c 91       	ld	r20, X
    2696:	22 1f       	adc	r18, r18
    2698:	22 27       	eor	r18, r18
    269a:	22 1f       	adc	r18, r18
    269c:	30 e0       	ldi	r19, 0x00	; 0
    269e:	22 0f       	add	r18, r18
    26a0:	33 1f       	adc	r19, r19
    26a2:	22 0f       	add	r18, r18
    26a4:	33 1f       	adc	r19, r19
    26a6:	96 fb       	bst	r25, 6
    26a8:	99 27       	eor	r25, r25
    26aa:	90 f9       	bld	r25, 0
    26ac:	9b 8f       	std	Y+27, r25	; 0x1b
    26ae:	1c 8e       	std	Y+28, r1	; 0x1c
    26b0:	eb 8d       	ldd	r30, Y+27	; 0x1b
    26b2:	fc 8d       	ldd	r31, Y+28	; 0x1c
    26b4:	2e 2b       	or	r18, r30
    26b6:	3f 2b       	or	r19, r31
    26b8:	82 95       	swap	r24
    26ba:	81 70       	andi	r24, 0x01	; 1
    26bc:	8d 8f       	std	Y+29, r24	; 0x1d
    26be:	1e 8e       	std	Y+30, r1	; 0x1e
    26c0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    26c2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    26c4:	88 0f       	add	r24, r24
    26c6:	99 1f       	adc	r25, r25
    26c8:	28 2b       	or	r18, r24
    26ca:	39 2b       	or	r19, r25
    26cc:	45 fb       	bst	r20, 5
    26ce:	44 27       	eor	r20, r20
    26d0:	40 f9       	bld	r20, 0
    26d2:	4f 8f       	std	Y+31, r20	; 0x1f
    26d4:	18 a2       	std	Y+32, r1	; 0x20
    26d6:	8f 8d       	ldd	r24, Y+31	; 0x1f
    26d8:	98 a1       	ldd	r25, Y+32	; 0x20
    26da:	88 0f       	add	r24, r24
    26dc:	99 1f       	adc	r25, r25
    26de:	88 0f       	add	r24, r24
    26e0:	99 1f       	adc	r25, r25
    26e2:	88 0f       	add	r24, r24
    26e4:	99 1f       	adc	r25, r25
    26e6:	28 2b       	or	r18, r24
    26e8:	39 2b       	or	r19, r25
    26ea:	12 9f       	mul	r17, r18
    26ec:	c0 01       	movw	r24, r0
    26ee:	13 9f       	mul	r17, r19
    26f0:	90 0d       	add	r25, r0
    26f2:	11 24       	eor	r1, r1
    26f4:	fc 01       	movw	r30, r24
    26f6:	ec 54       	subi	r30, 0x4C	; 76
    26f8:	ff 4d       	sbci	r31, 0xDF	; 223
    26fa:	65 89       	ldd	r22, Z+21	; 0x15
    26fc:	70 e0       	ldi	r23, 0x00	; 0
    26fe:	80 e0       	ldi	r24, 0x00	; 0
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	0e 94 7a 2c 	call	0x58f4	; 0x58f4 <__floatunsisf>
    2706:	20 e0       	ldi	r18, 0x00	; 0
    2708:	30 e0       	ldi	r19, 0x00	; 0
    270a:	48 ec       	ldi	r20, 0xC8	; 200
    270c:	52 e4       	ldi	r21, 0x42	; 66
    270e:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__divsf3>
    2712:	6b 01       	movw	r12, r22
    2714:	7c 01       	movw	r14, r24
    2716:	60 93 ba 23 	sts	0x23BA, r22
    271a:	70 93 bb 23 	sts	0x23BB, r23
    271e:	80 93 bc 23 	sts	0x23BC, r24
    2722:	90 93 bd 23 	sts	0x23BD, r25
    2726:	d3 01       	movw	r26, r6
    2728:	9c 91       	ld	r25, X
    272a:	8c 91       	ld	r24, X
    272c:	2c 91       	ld	r18, X
    272e:	4c 91       	ld	r20, X
    2730:	22 1f       	adc	r18, r18
    2732:	22 27       	eor	r18, r18
    2734:	22 1f       	adc	r18, r18
    2736:	30 e0       	ldi	r19, 0x00	; 0
    2738:	22 0f       	add	r18, r18
    273a:	33 1f       	adc	r19, r19
    273c:	22 0f       	add	r18, r18
    273e:	33 1f       	adc	r19, r19
    2740:	96 fb       	bst	r25, 6
    2742:	99 27       	eor	r25, r25
    2744:	90 f9       	bld	r25, 0
    2746:	99 a3       	std	Y+33, r25	; 0x21
    2748:	1a a2       	std	Y+34, r1	; 0x22
    274a:	e9 a1       	ldd	r30, Y+33	; 0x21
    274c:	fa a1       	ldd	r31, Y+34	; 0x22
    274e:	2e 2b       	or	r18, r30
    2750:	3f 2b       	or	r19, r31
    2752:	82 95       	swap	r24
    2754:	81 70       	andi	r24, 0x01	; 1
    2756:	8b a3       	std	Y+35, r24	; 0x23
    2758:	1c a2       	std	Y+36, r1	; 0x24
    275a:	8b a1       	ldd	r24, Y+35	; 0x23
    275c:	9c a1       	ldd	r25, Y+36	; 0x24
    275e:	88 0f       	add	r24, r24
    2760:	99 1f       	adc	r25, r25
    2762:	28 2b       	or	r18, r24
    2764:	39 2b       	or	r19, r25
    2766:	45 fb       	bst	r20, 5
    2768:	44 27       	eor	r20, r20
    276a:	40 f9       	bld	r20, 0
    276c:	4d a3       	std	Y+37, r20	; 0x25
    276e:	1e a2       	std	Y+38, r1	; 0x26
    2770:	8d a1       	ldd	r24, Y+37	; 0x25
    2772:	9e a1       	ldd	r25, Y+38	; 0x26
    2774:	88 0f       	add	r24, r24
    2776:	99 1f       	adc	r25, r25
    2778:	88 0f       	add	r24, r24
    277a:	99 1f       	adc	r25, r25
    277c:	88 0f       	add	r24, r24
    277e:	99 1f       	adc	r25, r25
    2780:	28 2b       	or	r18, r24
    2782:	39 2b       	or	r19, r25
    2784:	12 9f       	mul	r17, r18
    2786:	c0 01       	movw	r24, r0
    2788:	13 9f       	mul	r17, r19
    278a:	90 0d       	add	r25, r0
    278c:	11 24       	eor	r1, r1
    278e:	fc 01       	movw	r30, r24
    2790:	ec 54       	subi	r30, 0x4C	; 76
    2792:	ff 4d       	sbci	r31, 0xDF	; 223
    2794:	66 89       	ldd	r22, Z+22	; 0x16
    2796:	70 e0       	ldi	r23, 0x00	; 0
    2798:	80 e0       	ldi	r24, 0x00	; 0
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	0e 94 7a 2c 	call	0x58f4	; 0x58f4 <__floatunsisf>
    27a0:	20 e0       	ldi	r18, 0x00	; 0
    27a2:	30 e0       	ldi	r19, 0x00	; 0
    27a4:	48 ec       	ldi	r20, 0xC8	; 200
    27a6:	52 e4       	ldi	r21, 0x42	; 66
    27a8:	0e 94 e1 2b 	call	0x57c2	; 0x57c2 <__divsf3>
    27ac:	6d 83       	std	Y+5, r22	; 0x05
    27ae:	7e 83       	std	Y+6, r23	; 0x06
    27b0:	8f 83       	std	Y+7, r24	; 0x07
    27b2:	98 87       	std	Y+8, r25	; 0x08
    27b4:	60 93 ca 21 	sts	0x21CA, r22
    27b8:	70 93 cb 21 	sts	0x21CB, r23
    27bc:	80 93 cc 21 	sts	0x21CC, r24
    27c0:	90 93 cd 21 	sts	0x21CD, r25
    27c4:	10 92 9e 20 	sts	0x209E, r1
    27c8:	d3 01       	movw	r26, r6
    27ca:	6c 91       	ld	r22, X
    27cc:	5c 91       	ld	r21, X
    27ce:	7c 91       	ld	r23, X
    27d0:	4c 91       	ld	r20, X
    27d2:	9c 91       	ld	r25, X
    27d4:	8c 91       	ld	r24, X
    27d6:	2c 91       	ld	r18, X
    27d8:	ec 91       	ld	r30, X
    27da:	22 1f       	adc	r18, r18
    27dc:	22 27       	eor	r18, r18
    27de:	22 1f       	adc	r18, r18
    27e0:	30 e0       	ldi	r19, 0x00	; 0
    27e2:	22 0f       	add	r18, r18
    27e4:	33 1f       	adc	r19, r19
    27e6:	22 0f       	add	r18, r18
    27e8:	33 1f       	adc	r19, r19
    27ea:	96 fb       	bst	r25, 6
    27ec:	99 27       	eor	r25, r25
    27ee:	90 f9       	bld	r25, 0
    27f0:	9f a3       	std	Y+39, r25	; 0x27
    27f2:	18 a6       	std	Y+40, r1	; 0x28
    27f4:	af a1       	ldd	r26, Y+39	; 0x27
    27f6:	b8 a5       	ldd	r27, Y+40	; 0x28
    27f8:	2a 2b       	or	r18, r26
    27fa:	3b 2b       	or	r19, r27
    27fc:	82 95       	swap	r24
    27fe:	81 70       	andi	r24, 0x01	; 1
    2800:	89 a7       	std	Y+41, r24	; 0x29
    2802:	1a a6       	std	Y+42, r1	; 0x2a
    2804:	89 a5       	ldd	r24, Y+41	; 0x29
    2806:	9a a5       	ldd	r25, Y+42	; 0x2a
    2808:	88 0f       	add	r24, r24
    280a:	99 1f       	adc	r25, r25
    280c:	28 2b       	or	r18, r24
    280e:	39 2b       	or	r19, r25
    2810:	e5 fb       	bst	r30, 5
    2812:	ee 27       	eor	r30, r30
    2814:	e0 f9       	bld	r30, 0
    2816:	eb a7       	std	Y+43, r30	; 0x2b
    2818:	1c a6       	std	Y+44, r1	; 0x2c
    281a:	8b a5       	ldd	r24, Y+43	; 0x2b
    281c:	9c a5       	ldd	r25, Y+44	; 0x2c
    281e:	88 0f       	add	r24, r24
    2820:	99 1f       	adc	r25, r25
    2822:	88 0f       	add	r24, r24
    2824:	99 1f       	adc	r25, r25
    2826:	88 0f       	add	r24, r24
    2828:	99 1f       	adc	r25, r25
    282a:	28 2b       	or	r18, r24
    282c:	39 2b       	or	r19, r25
    282e:	12 9f       	mul	r17, r18
    2830:	c0 01       	movw	r24, r0
    2832:	13 9f       	mul	r17, r19
    2834:	90 0d       	add	r25, r0
    2836:	11 24       	eor	r1, r1
    2838:	fc 01       	movw	r30, r24
    283a:	ec 54       	subi	r30, 0x4C	; 76
    283c:	ff 4d       	sbci	r31, 0xDF	; 223
    283e:	b1 81       	ldd	r27, Z+1	; 0x01
    2840:	be a7       	std	Y+46, r27	; 0x2e
    2842:	1d a6       	std	Y+45, r1	; 0x2d
    2844:	77 1f       	adc	r23, r23
    2846:	77 27       	eor	r23, r23
    2848:	77 1f       	adc	r23, r23
    284a:	87 2f       	mov	r24, r23
    284c:	90 e0       	ldi	r25, 0x00	; 0
    284e:	88 0f       	add	r24, r24
    2850:	99 1f       	adc	r25, r25
    2852:	88 0f       	add	r24, r24
    2854:	99 1f       	adc	r25, r25
    2856:	66 fb       	bst	r22, 6
    2858:	66 27       	eor	r22, r22
    285a:	60 f9       	bld	r22, 0
    285c:	6f a7       	std	Y+47, r22	; 0x2f
    285e:	18 aa       	std	Y+48, r1	; 0x30
    2860:	ef a5       	ldd	r30, Y+47	; 0x2f
    2862:	f8 a9       	ldd	r31, Y+48	; 0x30
    2864:	8e 2b       	or	r24, r30
    2866:	9f 2b       	or	r25, r31
    2868:	52 95       	swap	r21
    286a:	51 70       	andi	r21, 0x01	; 1
    286c:	59 ab       	std	Y+49, r21	; 0x31
    286e:	1a aa       	std	Y+50, r1	; 0x32
    2870:	29 a9       	ldd	r18, Y+49	; 0x31
    2872:	3a a9       	ldd	r19, Y+50	; 0x32
    2874:	22 0f       	add	r18, r18
    2876:	33 1f       	adc	r19, r19
    2878:	82 2b       	or	r24, r18
    287a:	93 2b       	or	r25, r19
    287c:	45 fb       	bst	r20, 5
    287e:	44 27       	eor	r20, r20
    2880:	40 f9       	bld	r20, 0
    2882:	4b ab       	std	Y+51, r20	; 0x33
    2884:	1c aa       	std	Y+52, r1	; 0x34
    2886:	2b a9       	ldd	r18, Y+51	; 0x33
    2888:	3c a9       	ldd	r19, Y+52	; 0x34
    288a:	22 0f       	add	r18, r18
    288c:	33 1f       	adc	r19, r19
    288e:	22 0f       	add	r18, r18
    2890:	33 1f       	adc	r19, r19
    2892:	22 0f       	add	r18, r18
    2894:	33 1f       	adc	r19, r19
    2896:	82 2b       	or	r24, r18
    2898:	93 2b       	or	r25, r19
    289a:	18 9f       	mul	r17, r24
    289c:	90 01       	movw	r18, r0
    289e:	19 9f       	mul	r17, r25
    28a0:	30 0d       	add	r19, r0
    28a2:	11 24       	eor	r1, r1
    28a4:	f9 01       	movw	r30, r18
    28a6:	ec 54       	subi	r30, 0x4C	; 76
    28a8:	ff 4d       	sbci	r31, 0xDF	; 223
    28aa:	03 81       	ldd	r16, Z+3	; 0x03
    28ac:	14 81       	ldd	r17, Z+4	; 0x04
    28ae:	2d a5       	ldd	r18, Y+45	; 0x2d
    28b0:	3e a5       	ldd	r19, Y+46	; 0x2e
    28b2:	02 2b       	or	r16, r18
    28b4:	13 2b       	or	r17, r19
    28b6:	08 19       	sub	r16, r8
    28b8:	19 09       	sbc	r17, r9
    28ba:	d1 01       	movw	r26, r2
    28bc:	16 96       	adiw	r26, 0x06	; 6
    28be:	8d 91       	ld	r24, X+
    28c0:	9c 91       	ld	r25, X
    28c2:	17 97       	sbiw	r26, 0x07	; 7
    28c4:	f8 01       	movw	r30, r16
    28c6:	e8 1b       	sub	r30, r24
    28c8:	f9 0b       	sbc	r31, r25
    28ca:	cf 01       	movw	r24, r30
    28cc:	9f 01       	movw	r18, r30
    28ce:	22 0f       	add	r18, r18
    28d0:	33 1f       	adc	r19, r19
    28d2:	88 0f       	add	r24, r24
    28d4:	99 1f       	adc	r25, r25
    28d6:	88 0f       	add	r24, r24
    28d8:	99 1f       	adc	r25, r25
    28da:	88 0f       	add	r24, r24
    28dc:	99 1f       	adc	r25, r25
    28de:	ac 01       	movw	r20, r24
    28e0:	42 0f       	add	r20, r18
    28e2:	53 1f       	adc	r21, r19
    28e4:	c1 51       	subi	r28, 0x11	; 17
    28e6:	df 4f       	sbci	r29, 0xFF	; 255
    28e8:	48 83       	st	Y, r20
    28ea:	59 83       	std	Y+1, r21	; 0x01
    28ec:	cf 5e       	subi	r28, 0xEF	; 239
    28ee:	d0 40       	sbci	r29, 0x00	; 0
    28f0:	ca 01       	movw	r24, r20
    28f2:	c1 96       	adiw	r24, 0x31	; 49
    28f4:	83 36       	cpi	r24, 0x63	; 99
    28f6:	91 05       	cpc	r25, r1
    28f8:	40 f0       	brcs	.+16     	; 0x290a <main+0x722>
    28fa:	41 36       	cpi	r20, 0x61	; 97
    28fc:	69 e0       	ldi	r22, 0x09	; 9
    28fe:	56 07       	cpc	r21, r22
    2900:	5c f4       	brge	.+22     	; 0x2918 <main+0x730>
    2902:	40 3a       	cpi	r20, 0xA0	; 160
    2904:	56 4f       	sbci	r21, 0xF6	; 246
    2906:	7c f0       	brlt	.+30     	; 0x2926 <main+0x73e>
    2908:	14 c0       	rjmp	.+40     	; 0x2932 <main+0x74a>
    290a:	c1 51       	subi	r28, 0x11	; 17
    290c:	df 4f       	sbci	r29, 0xFF	; 255
    290e:	18 82       	st	Y, r1
    2910:	19 82       	std	Y+1, r1	; 0x01
    2912:	cf 5e       	subi	r28, 0xEF	; 239
    2914:	d0 40       	sbci	r29, 0x00	; 0
    2916:	0d c0       	rjmp	.+26     	; 0x2932 <main+0x74a>
    2918:	c1 51       	subi	r28, 0x11	; 17
    291a:	df 4f       	sbci	r29, 0xFF	; 255
    291c:	18 82       	st	Y, r1
    291e:	19 82       	std	Y+1, r1	; 0x01
    2920:	cf 5e       	subi	r28, 0xEF	; 239
    2922:	d0 40       	sbci	r29, 0x00	; 0
    2924:	06 c0       	rjmp	.+12     	; 0x2932 <main+0x74a>
    2926:	c1 51       	subi	r28, 0x11	; 17
    2928:	df 4f       	sbci	r29, 0xFF	; 255
    292a:	18 82       	st	Y, r1
    292c:	19 82       	std	Y+1, r1	; 0x01
    292e:	cf 5e       	subi	r28, 0xEF	; 239
    2930:	d0 40       	sbci	r29, 0x00	; 0
    2932:	b8 01       	movw	r22, r16
    2934:	88 27       	eor	r24, r24
    2936:	77 fd       	sbrc	r23, 7
    2938:	80 95       	com	r24
    293a:	98 2f       	mov	r25, r24
    293c:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2940:	4b 01       	movw	r8, r22
    2942:	5c 01       	movw	r10, r24
    2944:	9b 01       	movw	r18, r22
    2946:	ac 01       	movw	r20, r24
    2948:	69 81       	ldd	r22, Y+1	; 0x01
    294a:	7a 81       	ldd	r23, Y+2	; 0x02
    294c:	8b 81       	ldd	r24, Y+3	; 0x03
    294e:	9c 81       	ldd	r25, Y+4	; 0x04
    2950:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2954:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2958:	2b 01       	movw	r4, r22
    295a:	3c 01       	movw	r6, r24
    295c:	a5 01       	movw	r20, r10
    295e:	94 01       	movw	r18, r8
    2960:	c7 01       	movw	r24, r14
    2962:	b6 01       	movw	r22, r12
    2964:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2968:	2a e0       	ldi	r18, 0x0A	; 10
    296a:	37 ed       	ldi	r19, 0xD7	; 215
    296c:	43 ea       	ldi	r20, 0xA3	; 163
    296e:	5c e3       	ldi	r21, 0x3C	; 60
    2970:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2974:	d1 01       	movw	r26, r2
    2976:	1a 96       	adiw	r26, 0x0a	; 10
    2978:	2d 91       	ld	r18, X+
    297a:	3d 91       	ld	r19, X+
    297c:	4d 91       	ld	r20, X+
    297e:	5c 91       	ld	r21, X
    2980:	1d 97       	sbiw	r26, 0x0d	; 13
    2982:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2986:	4b 01       	movw	r8, r22
    2988:	5c 01       	movw	r10, r24
    298a:	f1 01       	movw	r30, r2
    298c:	62 87       	std	Z+10, r22	; 0x0a
    298e:	73 87       	std	Z+11, r23	; 0x0b
    2990:	84 87       	std	Z+12, r24	; 0x0c
    2992:	95 87       	std	Z+13, r25	; 0x0d
    2994:	20 e0       	ldi	r18, 0x00	; 0
    2996:	30 e0       	ldi	r19, 0x00	; 0
    2998:	40 ef       	ldi	r20, 0xF0	; 240
    299a:	52 e4       	ldi	r21, 0x42	; 66
    299c:	0e 94 2c 2d 	call	0x5a58	; 0x5a58 <__gesf2>
    29a0:	18 16       	cp	r1, r24
    29a2:	54 f4       	brge	.+20     	; 0x29b8 <main+0x7d0>
    29a4:	80 e0       	ldi	r24, 0x00	; 0
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	a0 ef       	ldi	r26, 0xF0	; 240
    29aa:	b2 e4       	ldi	r27, 0x42	; 66
    29ac:	f1 01       	movw	r30, r2
    29ae:	82 87       	std	Z+10, r24	; 0x0a
    29b0:	93 87       	std	Z+11, r25	; 0x0b
    29b2:	a4 87       	std	Z+12, r26	; 0x0c
    29b4:	b5 87       	std	Z+13, r27	; 0x0d
    29b6:	15 c0       	rjmp	.+42     	; 0x29e2 <main+0x7fa>
    29b8:	20 e0       	ldi	r18, 0x00	; 0
    29ba:	30 e0       	ldi	r19, 0x00	; 0
    29bc:	46 e9       	ldi	r20, 0x96	; 150
    29be:	54 ec       	ldi	r21, 0xC4	; 196
    29c0:	c5 01       	movw	r24, r10
    29c2:	b4 01       	movw	r22, r8
    29c4:	0e 94 dd 2b 	call	0x57ba	; 0x57ba <__cmpsf2>
    29c8:	88 23       	and	r24, r24
    29ca:	5c f4       	brge	.+22     	; 0x29e2 <main+0x7fa>
    29cc:	20 e0       	ldi	r18, 0x00	; 0
    29ce:	30 e0       	ldi	r19, 0x00	; 0
    29d0:	40 ef       	ldi	r20, 0xF0	; 240
    29d2:	52 ec       	ldi	r21, 0xC2	; 194
    29d4:	d1 01       	movw	r26, r2
    29d6:	1a 96       	adiw	r26, 0x0a	; 10
    29d8:	2d 93       	st	X+, r18
    29da:	3d 93       	st	X+, r19
    29dc:	4d 93       	st	X+, r20
    29de:	5c 93       	st	X, r21
    29e0:	1d 97       	sbiw	r26, 0x0d	; 13
    29e2:	c2 01       	movw	r24, r4
    29e4:	80 38       	cpi	r24, 0x80	; 128
    29e6:	91 05       	cpc	r25, r1
    29e8:	14 f0       	brlt	.+4      	; 0x29ee <main+0x806>
    29ea:	8f e7       	ldi	r24, 0x7F	; 127
    29ec:	90 e0       	ldi	r25, 0x00	; 0
    29ee:	bc 01       	movw	r22, r24
    29f0:	81 38       	cpi	r24, 0x81	; 129
    29f2:	bf ef       	ldi	r27, 0xFF	; 255
    29f4:	9b 07       	cpc	r25, r27
    29f6:	14 f4       	brge	.+4      	; 0x29fc <main+0x814>
    29f8:	61 e8       	ldi	r22, 0x81	; 129
    29fa:	7f ef       	ldi	r23, 0xFF	; 255
    29fc:	88 27       	eor	r24, r24
    29fe:	77 fd       	sbrc	r23, 7
    2a00:	80 95       	com	r24
    2a02:	98 2f       	mov	r25, r24
    2a04:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2a08:	f1 01       	movw	r30, r2
    2a0a:	22 85       	ldd	r18, Z+10	; 0x0a
    2a0c:	33 85       	ldd	r19, Z+11	; 0x0b
    2a0e:	44 85       	ldd	r20, Z+12	; 0x0c
    2a10:	55 85       	ldd	r21, Z+13	; 0x0d
    2a12:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2a16:	4b 01       	movw	r8, r22
    2a18:	5c 01       	movw	r10, r24
    2a1a:	c1 51       	subi	r28, 0x11	; 17
    2a1c:	df 4f       	sbci	r29, 0xFF	; 255
    2a1e:	28 81       	ld	r18, Y
    2a20:	39 81       	ldd	r19, Y+1	; 0x01
    2a22:	cf 5e       	subi	r28, 0xEF	; 239
    2a24:	d0 40       	sbci	r29, 0x00	; 0
    2a26:	b9 01       	movw	r22, r18
    2a28:	88 27       	eor	r24, r24
    2a2a:	77 fd       	sbrc	r23, 7
    2a2c:	80 95       	com	r24
    2a2e:	98 2f       	mov	r25, r24
    2a30:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2a34:	9b 01       	movw	r18, r22
    2a36:	ac 01       	movw	r20, r24
    2a38:	6d 81       	ldd	r22, Y+5	; 0x05
    2a3a:	7e 81       	ldd	r23, Y+6	; 0x06
    2a3c:	8f 81       	ldd	r24, Y+7	; 0x07
    2a3e:	98 85       	ldd	r25, Y+8	; 0x08
    2a40:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2a44:	9b 01       	movw	r18, r22
    2a46:	ac 01       	movw	r20, r24
    2a48:	c5 01       	movw	r24, r10
    2a4a:	b4 01       	movw	r22, r8
    2a4c:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2a50:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2a54:	60 38       	cpi	r22, 0x80	; 128
    2a56:	71 05       	cpc	r23, r1
    2a58:	14 f0       	brlt	.+4      	; 0x2a5e <main+0x876>
    2a5a:	6f e7       	ldi	r22, 0x7F	; 127
    2a5c:	70 e0       	ldi	r23, 0x00	; 0
    2a5e:	d1 01       	movw	r26, r2
    2a60:	16 96       	adiw	r26, 0x06	; 6
    2a62:	0d 93       	st	X+, r16
    2a64:	1c 93       	st	X, r17
    2a66:	17 97       	sbiw	r26, 0x07	; 7
    2a68:	c1 51       	subi	r28, 0x11	; 17
    2a6a:	df 4f       	sbci	r29, 0xFF	; 255
    2a6c:	e8 81       	ld	r30, Y
    2a6e:	f9 81       	ldd	r31, Y+1	; 0x01
    2a70:	cf 5e       	subi	r28, 0xEF	; 239
    2a72:	d0 40       	sbci	r29, 0x00	; 0
    2a74:	18 96       	adiw	r26, 0x08	; 8
    2a76:	ed 93       	st	X+, r30
    2a78:	fc 93       	st	X, r31
    2a7a:	19 97       	sbiw	r26, 0x09	; 9
    2a7c:	61 38       	cpi	r22, 0x81	; 129
    2a7e:	ff ef       	ldi	r31, 0xFF	; 255
    2a80:	7f 07       	cpc	r23, r31
    2a82:	14 f4       	brge	.+4      	; 0x2a88 <main+0x8a0>
    2a84:	61 e8       	ldi	r22, 0x81	; 129
    2a86:	7f ef       	ldi	r23, 0xFF	; 255
    2a88:	60 93 85 23 	sts	0x2385, r22
    2a8c:	e8 e0       	ldi	r30, 0x08	; 8
    2a8e:	f6 e0       	ldi	r31, 0x06	; 6
    2a90:	60 81       	ld	r22, Z
    2a92:	50 81       	ld	r21, Z
    2a94:	70 81       	ld	r23, Z
    2a96:	40 81       	ld	r20, Z
    2a98:	90 81       	ld	r25, Z
    2a9a:	80 81       	ld	r24, Z
    2a9c:	20 81       	ld	r18, Z
    2a9e:	e0 81       	ld	r30, Z
    2aa0:	22 1f       	adc	r18, r18
    2aa2:	22 27       	eor	r18, r18
    2aa4:	22 1f       	adc	r18, r18
    2aa6:	30 e0       	ldi	r19, 0x00	; 0
    2aa8:	22 0f       	add	r18, r18
    2aaa:	33 1f       	adc	r19, r19
    2aac:	22 0f       	add	r18, r18
    2aae:	33 1f       	adc	r19, r19
    2ab0:	96 fb       	bst	r25, 6
    2ab2:	99 27       	eor	r25, r25
    2ab4:	90 f9       	bld	r25, 0
    2ab6:	9d ab       	std	Y+53, r25	; 0x35
    2ab8:	1e aa       	std	Y+54, r1	; 0x36
    2aba:	ad a9       	ldd	r26, Y+53	; 0x35
    2abc:	be a9       	ldd	r27, Y+54	; 0x36
    2abe:	2a 2b       	or	r18, r26
    2ac0:	3b 2b       	or	r19, r27
    2ac2:	82 95       	swap	r24
    2ac4:	81 70       	andi	r24, 0x01	; 1
    2ac6:	8f ab       	std	Y+55, r24	; 0x37
    2ac8:	18 ae       	std	Y+56, r1	; 0x38
    2aca:	8f a9       	ldd	r24, Y+55	; 0x37
    2acc:	98 ad       	ldd	r25, Y+56	; 0x38
    2ace:	88 0f       	add	r24, r24
    2ad0:	99 1f       	adc	r25, r25
    2ad2:	28 2b       	or	r18, r24
    2ad4:	39 2b       	or	r19, r25
    2ad6:	e5 fb       	bst	r30, 5
    2ad8:	ee 27       	eor	r30, r30
    2ada:	e0 f9       	bld	r30, 0
    2adc:	e9 af       	std	Y+57, r30	; 0x39
    2ade:	1a ae       	std	Y+58, r1	; 0x3a
    2ae0:	89 ad       	ldd	r24, Y+57	; 0x39
    2ae2:	9a ad       	ldd	r25, Y+58	; 0x3a
    2ae4:	88 0f       	add	r24, r24
    2ae6:	99 1f       	adc	r25, r25
    2ae8:	88 0f       	add	r24, r24
    2aea:	99 1f       	adc	r25, r25
    2aec:	88 0f       	add	r24, r24
    2aee:	99 1f       	adc	r25, r25
    2af0:	28 2b       	or	r18, r24
    2af2:	39 2b       	or	r19, r25
    2af4:	f7 e1       	ldi	r31, 0x17	; 23
    2af6:	f2 9f       	mul	r31, r18
    2af8:	c0 01       	movw	r24, r0
    2afa:	f3 9f       	mul	r31, r19
    2afc:	90 0d       	add	r25, r0
    2afe:	11 24       	eor	r1, r1
    2b00:	dc 01       	movw	r26, r24
    2b02:	ac 54       	subi	r26, 0x4C	; 76
    2b04:	bf 4d       	sbci	r27, 0xDF	; 223
    2b06:	15 96       	adiw	r26, 0x05	; 5
    2b08:	ec 91       	ld	r30, X
    2b0a:	ec af       	std	Y+60, r30	; 0x3c
    2b0c:	1b ae       	std	Y+59, r1	; 0x3b
    2b0e:	77 1f       	adc	r23, r23
    2b10:	77 27       	eor	r23, r23
    2b12:	77 1f       	adc	r23, r23
    2b14:	87 2f       	mov	r24, r23
    2b16:	90 e0       	ldi	r25, 0x00	; 0
    2b18:	88 0f       	add	r24, r24
    2b1a:	99 1f       	adc	r25, r25
    2b1c:	88 0f       	add	r24, r24
    2b1e:	99 1f       	adc	r25, r25
    2b20:	66 fb       	bst	r22, 6
    2b22:	66 27       	eor	r22, r22
    2b24:	60 f9       	bld	r22, 0
    2b26:	6d af       	std	Y+61, r22	; 0x3d
    2b28:	1e ae       	std	Y+62, r1	; 0x3e
    2b2a:	2d ad       	ldd	r18, Y+61	; 0x3d
    2b2c:	3e ad       	ldd	r19, Y+62	; 0x3e
    2b2e:	82 2b       	or	r24, r18
    2b30:	93 2b       	or	r25, r19
    2b32:	52 95       	swap	r21
    2b34:	51 70       	andi	r21, 0x01	; 1
    2b36:	5f af       	std	Y+63, r21	; 0x3f
    2b38:	21 96       	adiw	r28, 0x01	; 1
    2b3a:	1f ae       	std	Y+63, r1	; 0x3f
    2b3c:	21 97       	sbiw	r28, 0x01	; 1
    2b3e:	21 96       	adiw	r28, 0x01	; 1
    2b40:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b42:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b44:	21 97       	sbiw	r28, 0x01	; 1
    2b46:	22 0f       	add	r18, r18
    2b48:	33 1f       	adc	r19, r19
    2b4a:	82 2b       	or	r24, r18
    2b4c:	93 2b       	or	r25, r19
    2b4e:	45 fb       	bst	r20, 5
    2b50:	44 27       	eor	r20, r20
    2b52:	40 f9       	bld	r20, 0
    2b54:	22 96       	adiw	r28, 0x02	; 2
    2b56:	4f af       	std	Y+63, r20	; 0x3f
    2b58:	22 97       	sbiw	r28, 0x02	; 2
    2b5a:	23 96       	adiw	r28, 0x03	; 3
    2b5c:	1f ae       	std	Y+63, r1	; 0x3f
    2b5e:	23 97       	sbiw	r28, 0x03	; 3
    2b60:	23 96       	adiw	r28, 0x03	; 3
    2b62:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b64:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b66:	23 97       	sbiw	r28, 0x03	; 3
    2b68:	22 0f       	add	r18, r18
    2b6a:	33 1f       	adc	r19, r19
    2b6c:	22 0f       	add	r18, r18
    2b6e:	33 1f       	adc	r19, r19
    2b70:	22 0f       	add	r18, r18
    2b72:	33 1f       	adc	r19, r19
    2b74:	82 2b       	or	r24, r18
    2b76:	93 2b       	or	r25, r19
    2b78:	f8 9f       	mul	r31, r24
    2b7a:	90 01       	movw	r18, r0
    2b7c:	f9 9f       	mul	r31, r25
    2b7e:	30 0d       	add	r19, r0
    2b80:	11 24       	eor	r1, r1
    2b82:	f9 01       	movw	r30, r18
    2b84:	ec 54       	subi	r30, 0x4C	; 76
    2b86:	ff 4d       	sbci	r31, 0xDF	; 223
    2b88:	07 81       	ldd	r16, Z+7	; 0x07
    2b8a:	10 85       	ldd	r17, Z+8	; 0x08
    2b8c:	4b ad       	ldd	r20, Y+59	; 0x3b
    2b8e:	5c ad       	ldd	r21, Y+60	; 0x3c
    2b90:	04 2b       	or	r16, r20
    2b92:	15 2b       	or	r17, r21
    2b94:	69 85       	ldd	r22, Y+9	; 0x09
    2b96:	7a 85       	ldd	r23, Y+10	; 0x0a
    2b98:	06 1b       	sub	r16, r22
    2b9a:	17 0b       	sbc	r17, r23
    2b9c:	80 91 02 24 	lds	r24, 0x2402
    2ba0:	90 91 03 24 	lds	r25, 0x2403
    2ba4:	d8 01       	movw	r26, r16
    2ba6:	a8 1b       	sub	r26, r24
    2ba8:	b9 0b       	sbc	r27, r25
    2baa:	cd 01       	movw	r24, r26
    2bac:	9d 01       	movw	r18, r26
    2bae:	22 0f       	add	r18, r18
    2bb0:	33 1f       	adc	r19, r19
    2bb2:	88 0f       	add	r24, r24
    2bb4:	99 1f       	adc	r25, r25
    2bb6:	88 0f       	add	r24, r24
    2bb8:	99 1f       	adc	r25, r25
    2bba:	88 0f       	add	r24, r24
    2bbc:	99 1f       	adc	r25, r25
    2bbe:	fc 01       	movw	r30, r24
    2bc0:	e2 0f       	add	r30, r18
    2bc2:	f3 1f       	adc	r31, r19
    2bc4:	e9 87       	std	Y+9, r30	; 0x09
    2bc6:	fa 87       	std	Y+10, r31	; 0x0a
    2bc8:	cf 01       	movw	r24, r30
    2bca:	c1 96       	adiw	r24, 0x31	; 49
    2bcc:	83 36       	cpi	r24, 0x63	; 99
    2bce:	91 05       	cpc	r25, r1
    2bd0:	40 f0       	brcs	.+16     	; 0x2be2 <main+0x9fa>
    2bd2:	e1 36       	cpi	r30, 0x61	; 97
    2bd4:	29 e0       	ldi	r18, 0x09	; 9
    2bd6:	f2 07       	cpc	r31, r18
    2bd8:	3c f4       	brge	.+14     	; 0x2be8 <main+0xa00>
    2bda:	e0 3a       	cpi	r30, 0xA0	; 160
    2bdc:	f6 4f       	sbci	r31, 0xF6	; 246
    2bde:	3c f0       	brlt	.+14     	; 0x2bee <main+0xa06>
    2be0:	08 c0       	rjmp	.+16     	; 0x2bf2 <main+0xa0a>
    2be2:	19 86       	std	Y+9, r1	; 0x09
    2be4:	1a 86       	std	Y+10, r1	; 0x0a
    2be6:	05 c0       	rjmp	.+10     	; 0x2bf2 <main+0xa0a>
    2be8:	19 86       	std	Y+9, r1	; 0x09
    2bea:	1a 86       	std	Y+10, r1	; 0x0a
    2bec:	02 c0       	rjmp	.+4      	; 0x2bf2 <main+0xa0a>
    2bee:	19 86       	std	Y+9, r1	; 0x09
    2bf0:	1a 86       	std	Y+10, r1	; 0x0a
    2bf2:	b8 01       	movw	r22, r16
    2bf4:	88 27       	eor	r24, r24
    2bf6:	77 fd       	sbrc	r23, 7
    2bf8:	80 95       	com	r24
    2bfa:	98 2f       	mov	r25, r24
    2bfc:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2c00:	4b 01       	movw	r8, r22
    2c02:	5c 01       	movw	r10, r24
    2c04:	9b 01       	movw	r18, r22
    2c06:	ac 01       	movw	r20, r24
    2c08:	69 81       	ldd	r22, Y+1	; 0x01
    2c0a:	7a 81       	ldd	r23, Y+2	; 0x02
    2c0c:	8b 81       	ldd	r24, Y+3	; 0x03
    2c0e:	9c 81       	ldd	r25, Y+4	; 0x04
    2c10:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2c14:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2c18:	2b 01       	movw	r4, r22
    2c1a:	3c 01       	movw	r6, r24
    2c1c:	a5 01       	movw	r20, r10
    2c1e:	94 01       	movw	r18, r8
    2c20:	c7 01       	movw	r24, r14
    2c22:	b6 01       	movw	r22, r12
    2c24:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2c28:	2a e0       	ldi	r18, 0x0A	; 10
    2c2a:	37 ed       	ldi	r19, 0xD7	; 215
    2c2c:	43 ea       	ldi	r20, 0xA3	; 163
    2c2e:	5c e3       	ldi	r21, 0x3C	; 60
    2c30:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2c34:	20 91 06 24 	lds	r18, 0x2406
    2c38:	30 91 07 24 	lds	r19, 0x2407
    2c3c:	40 91 08 24 	lds	r20, 0x2408
    2c40:	50 91 09 24 	lds	r21, 0x2409
    2c44:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2c48:	4b 01       	movw	r8, r22
    2c4a:	5c 01       	movw	r10, r24
    2c4c:	60 93 06 24 	sts	0x2406, r22
    2c50:	70 93 07 24 	sts	0x2407, r23
    2c54:	80 93 08 24 	sts	0x2408, r24
    2c58:	90 93 09 24 	sts	0x2409, r25
    2c5c:	20 e0       	ldi	r18, 0x00	; 0
    2c5e:	30 e0       	ldi	r19, 0x00	; 0
    2c60:	40 ef       	ldi	r20, 0xF0	; 240
    2c62:	52 e4       	ldi	r21, 0x42	; 66
    2c64:	0e 94 2c 2d 	call	0x5a58	; 0x5a58 <__gesf2>
    2c68:	18 16       	cp	r1, r24
    2c6a:	6c f4       	brge	.+26     	; 0x2c86 <main+0xa9e>
    2c6c:	80 e0       	ldi	r24, 0x00	; 0
    2c6e:	90 e0       	ldi	r25, 0x00	; 0
    2c70:	a0 ef       	ldi	r26, 0xF0	; 240
    2c72:	b2 e4       	ldi	r27, 0x42	; 66
    2c74:	80 93 06 24 	sts	0x2406, r24
    2c78:	90 93 07 24 	sts	0x2407, r25
    2c7c:	a0 93 08 24 	sts	0x2408, r26
    2c80:	b0 93 09 24 	sts	0x2409, r27
    2c84:	16 c0       	rjmp	.+44     	; 0x2cb2 <main+0xaca>
    2c86:	20 e0       	ldi	r18, 0x00	; 0
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	46 e9       	ldi	r20, 0x96	; 150
    2c8c:	54 ec       	ldi	r21, 0xC4	; 196
    2c8e:	c5 01       	movw	r24, r10
    2c90:	b4 01       	movw	r22, r8
    2c92:	0e 94 dd 2b 	call	0x57ba	; 0x57ba <__cmpsf2>
    2c96:	88 23       	and	r24, r24
    2c98:	64 f4       	brge	.+24     	; 0x2cb2 <main+0xaca>
    2c9a:	40 e0       	ldi	r20, 0x00	; 0
    2c9c:	50 e0       	ldi	r21, 0x00	; 0
    2c9e:	60 ef       	ldi	r22, 0xF0	; 240
    2ca0:	72 ec       	ldi	r23, 0xC2	; 194
    2ca2:	40 93 06 24 	sts	0x2406, r20
    2ca6:	50 93 07 24 	sts	0x2407, r21
    2caa:	60 93 08 24 	sts	0x2408, r22
    2cae:	70 93 09 24 	sts	0x2409, r23
    2cb2:	c2 01       	movw	r24, r4
    2cb4:	80 38       	cpi	r24, 0x80	; 128
    2cb6:	91 05       	cpc	r25, r1
    2cb8:	14 f0       	brlt	.+4      	; 0x2cbe <main+0xad6>
    2cba:	8f e7       	ldi	r24, 0x7F	; 127
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	bc 01       	movw	r22, r24
    2cc0:	81 38       	cpi	r24, 0x81	; 129
    2cc2:	5f ef       	ldi	r21, 0xFF	; 255
    2cc4:	95 07       	cpc	r25, r21
    2cc6:	14 f4       	brge	.+4      	; 0x2ccc <main+0xae4>
    2cc8:	61 e8       	ldi	r22, 0x81	; 129
    2cca:	7f ef       	ldi	r23, 0xFF	; 255
    2ccc:	88 27       	eor	r24, r24
    2cce:	77 fd       	sbrc	r23, 7
    2cd0:	80 95       	com	r24
    2cd2:	98 2f       	mov	r25, r24
    2cd4:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2cd8:	20 91 06 24 	lds	r18, 0x2406
    2cdc:	30 91 07 24 	lds	r19, 0x2407
    2ce0:	40 91 08 24 	lds	r20, 0x2408
    2ce4:	50 91 09 24 	lds	r21, 0x2409
    2ce8:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2cec:	4b 01       	movw	r8, r22
    2cee:	5c 01       	movw	r10, r24
    2cf0:	a9 85       	ldd	r26, Y+9	; 0x09
    2cf2:	ba 85       	ldd	r27, Y+10	; 0x0a
    2cf4:	bd 01       	movw	r22, r26
    2cf6:	88 27       	eor	r24, r24
    2cf8:	77 fd       	sbrc	r23, 7
    2cfa:	80 95       	com	r24
    2cfc:	98 2f       	mov	r25, r24
    2cfe:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2d02:	9b 01       	movw	r18, r22
    2d04:	ac 01       	movw	r20, r24
    2d06:	6d 81       	ldd	r22, Y+5	; 0x05
    2d08:	7e 81       	ldd	r23, Y+6	; 0x06
    2d0a:	8f 81       	ldd	r24, Y+7	; 0x07
    2d0c:	98 85       	ldd	r25, Y+8	; 0x08
    2d0e:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2d12:	9b 01       	movw	r18, r22
    2d14:	ac 01       	movw	r20, r24
    2d16:	c5 01       	movw	r24, r10
    2d18:	b4 01       	movw	r22, r8
    2d1a:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2d1e:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2d22:	60 38       	cpi	r22, 0x80	; 128
    2d24:	71 05       	cpc	r23, r1
    2d26:	14 f0       	brlt	.+4      	; 0x2d2c <main+0xb44>
    2d28:	6f e7       	ldi	r22, 0x7F	; 127
    2d2a:	70 e0       	ldi	r23, 0x00	; 0
    2d2c:	00 93 02 24 	sts	0x2402, r16
    2d30:	10 93 03 24 	sts	0x2403, r17
    2d34:	e9 85       	ldd	r30, Y+9	; 0x09
    2d36:	fa 85       	ldd	r31, Y+10	; 0x0a
    2d38:	e0 93 04 24 	sts	0x2404, r30
    2d3c:	f0 93 05 24 	sts	0x2405, r31
    2d40:	61 38       	cpi	r22, 0x81	; 129
    2d42:	ff ef       	ldi	r31, 0xFF	; 255
    2d44:	7f 07       	cpc	r23, r31
    2d46:	14 f4       	brge	.+4      	; 0x2d4c <main+0xb64>
    2d48:	61 e8       	ldi	r22, 0x81	; 129
    2d4a:	7f ef       	ldi	r23, 0xFF	; 255
    2d4c:	60 93 0a 24 	sts	0x240A, r22
    2d50:	e8 e0       	ldi	r30, 0x08	; 8
    2d52:	f6 e0       	ldi	r31, 0x06	; 6
    2d54:	60 81       	ld	r22, Z
    2d56:	50 81       	ld	r21, Z
    2d58:	70 81       	ld	r23, Z
    2d5a:	40 81       	ld	r20, Z
    2d5c:	90 81       	ld	r25, Z
    2d5e:	80 81       	ld	r24, Z
    2d60:	20 81       	ld	r18, Z
    2d62:	e0 81       	ld	r30, Z
    2d64:	22 1f       	adc	r18, r18
    2d66:	22 27       	eor	r18, r18
    2d68:	22 1f       	adc	r18, r18
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	22 0f       	add	r18, r18
    2d6e:	33 1f       	adc	r19, r19
    2d70:	22 0f       	add	r18, r18
    2d72:	33 1f       	adc	r19, r19
    2d74:	96 fb       	bst	r25, 6
    2d76:	99 27       	eor	r25, r25
    2d78:	90 f9       	bld	r25, 0
    2d7a:	24 96       	adiw	r28, 0x04	; 4
    2d7c:	9f af       	std	Y+63, r25	; 0x3f
    2d7e:	24 97       	sbiw	r28, 0x04	; 4
    2d80:	25 96       	adiw	r28, 0x05	; 5
    2d82:	1f ae       	std	Y+63, r1	; 0x3f
    2d84:	25 97       	sbiw	r28, 0x05	; 5
    2d86:	25 96       	adiw	r28, 0x05	; 5
    2d88:	ae ad       	ldd	r26, Y+62	; 0x3e
    2d8a:	bf ad       	ldd	r27, Y+63	; 0x3f
    2d8c:	25 97       	sbiw	r28, 0x05	; 5
    2d8e:	2a 2b       	or	r18, r26
    2d90:	3b 2b       	or	r19, r27
    2d92:	82 95       	swap	r24
    2d94:	81 70       	andi	r24, 0x01	; 1
    2d96:	26 96       	adiw	r28, 0x06	; 6
    2d98:	8f af       	std	Y+63, r24	; 0x3f
    2d9a:	26 97       	sbiw	r28, 0x06	; 6
    2d9c:	27 96       	adiw	r28, 0x07	; 7
    2d9e:	1f ae       	std	Y+63, r1	; 0x3f
    2da0:	27 97       	sbiw	r28, 0x07	; 7
    2da2:	27 96       	adiw	r28, 0x07	; 7
    2da4:	8e ad       	ldd	r24, Y+62	; 0x3e
    2da6:	9f ad       	ldd	r25, Y+63	; 0x3f
    2da8:	27 97       	sbiw	r28, 0x07	; 7
    2daa:	88 0f       	add	r24, r24
    2dac:	99 1f       	adc	r25, r25
    2dae:	28 2b       	or	r18, r24
    2db0:	39 2b       	or	r19, r25
    2db2:	e5 fb       	bst	r30, 5
    2db4:	ee 27       	eor	r30, r30
    2db6:	e0 f9       	bld	r30, 0
    2db8:	28 96       	adiw	r28, 0x08	; 8
    2dba:	ef af       	std	Y+63, r30	; 0x3f
    2dbc:	28 97       	sbiw	r28, 0x08	; 8
    2dbe:	29 96       	adiw	r28, 0x09	; 9
    2dc0:	1f ae       	std	Y+63, r1	; 0x3f
    2dc2:	29 97       	sbiw	r28, 0x09	; 9
    2dc4:	29 96       	adiw	r28, 0x09	; 9
    2dc6:	8e ad       	ldd	r24, Y+62	; 0x3e
    2dc8:	9f ad       	ldd	r25, Y+63	; 0x3f
    2dca:	29 97       	sbiw	r28, 0x09	; 9
    2dcc:	88 0f       	add	r24, r24
    2dce:	99 1f       	adc	r25, r25
    2dd0:	88 0f       	add	r24, r24
    2dd2:	99 1f       	adc	r25, r25
    2dd4:	88 0f       	add	r24, r24
    2dd6:	99 1f       	adc	r25, r25
    2dd8:	28 2b       	or	r18, r24
    2dda:	39 2b       	or	r19, r25
    2ddc:	f7 e1       	ldi	r31, 0x17	; 23
    2dde:	f2 9f       	mul	r31, r18
    2de0:	c0 01       	movw	r24, r0
    2de2:	f3 9f       	mul	r31, r19
    2de4:	90 0d       	add	r25, r0
    2de6:	11 24       	eor	r1, r1
    2de8:	dc 01       	movw	r26, r24
    2dea:	ac 54       	subi	r26, 0x4C	; 76
    2dec:	bf 4d       	sbci	r27, 0xDF	; 223
    2dee:	19 96       	adiw	r26, 0x09	; 9
    2df0:	ec 91       	ld	r30, X
    2df2:	2b 96       	adiw	r28, 0x0b	; 11
    2df4:	ef af       	std	Y+63, r30	; 0x3f
    2df6:	2b 97       	sbiw	r28, 0x0b	; 11
    2df8:	2a 96       	adiw	r28, 0x0a	; 10
    2dfa:	1f ae       	std	Y+63, r1	; 0x3f
    2dfc:	2a 97       	sbiw	r28, 0x0a	; 10
    2dfe:	77 1f       	adc	r23, r23
    2e00:	77 27       	eor	r23, r23
    2e02:	77 1f       	adc	r23, r23
    2e04:	87 2f       	mov	r24, r23
    2e06:	90 e0       	ldi	r25, 0x00	; 0
    2e08:	88 0f       	add	r24, r24
    2e0a:	99 1f       	adc	r25, r25
    2e0c:	88 0f       	add	r24, r24
    2e0e:	99 1f       	adc	r25, r25
    2e10:	66 fb       	bst	r22, 6
    2e12:	66 27       	eor	r22, r22
    2e14:	60 f9       	bld	r22, 0
    2e16:	2c 96       	adiw	r28, 0x0c	; 12
    2e18:	6f af       	std	Y+63, r22	; 0x3f
    2e1a:	2c 97       	sbiw	r28, 0x0c	; 12
    2e1c:	2d 96       	adiw	r28, 0x0d	; 13
    2e1e:	1f ae       	std	Y+63, r1	; 0x3f
    2e20:	2d 97       	sbiw	r28, 0x0d	; 13
    2e22:	2d 96       	adiw	r28, 0x0d	; 13
    2e24:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e26:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e28:	2d 97       	sbiw	r28, 0x0d	; 13
    2e2a:	82 2b       	or	r24, r18
    2e2c:	93 2b       	or	r25, r19
    2e2e:	52 95       	swap	r21
    2e30:	51 70       	andi	r21, 0x01	; 1
    2e32:	2e 96       	adiw	r28, 0x0e	; 14
    2e34:	5f af       	std	Y+63, r21	; 0x3f
    2e36:	2e 97       	sbiw	r28, 0x0e	; 14
    2e38:	2f 96       	adiw	r28, 0x0f	; 15
    2e3a:	1f ae       	std	Y+63, r1	; 0x3f
    2e3c:	2f 97       	sbiw	r28, 0x0f	; 15
    2e3e:	2f 96       	adiw	r28, 0x0f	; 15
    2e40:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e42:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e44:	2f 97       	sbiw	r28, 0x0f	; 15
    2e46:	22 0f       	add	r18, r18
    2e48:	33 1f       	adc	r19, r19
    2e4a:	82 2b       	or	r24, r18
    2e4c:	93 2b       	or	r25, r19
    2e4e:	45 fb       	bst	r20, 5
    2e50:	44 27       	eor	r20, r20
    2e52:	40 f9       	bld	r20, 0
    2e54:	60 96       	adiw	r28, 0x10	; 16
    2e56:	4f af       	std	Y+63, r20	; 0x3f
    2e58:	60 97       	sbiw	r28, 0x10	; 16
    2e5a:	61 96       	adiw	r28, 0x11	; 17
    2e5c:	1f ae       	std	Y+63, r1	; 0x3f
    2e5e:	61 97       	sbiw	r28, 0x11	; 17
    2e60:	61 96       	adiw	r28, 0x11	; 17
    2e62:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e64:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e66:	61 97       	sbiw	r28, 0x11	; 17
    2e68:	22 0f       	add	r18, r18
    2e6a:	33 1f       	adc	r19, r19
    2e6c:	22 0f       	add	r18, r18
    2e6e:	33 1f       	adc	r19, r19
    2e70:	22 0f       	add	r18, r18
    2e72:	33 1f       	adc	r19, r19
    2e74:	82 2b       	or	r24, r18
    2e76:	93 2b       	or	r25, r19
    2e78:	f8 9f       	mul	r31, r24
    2e7a:	90 01       	movw	r18, r0
    2e7c:	f9 9f       	mul	r31, r25
    2e7e:	30 0d       	add	r19, r0
    2e80:	11 24       	eor	r1, r1
    2e82:	f9 01       	movw	r30, r18
    2e84:	ec 54       	subi	r30, 0x4C	; 76
    2e86:	ff 4d       	sbci	r31, 0xDF	; 223
    2e88:	03 85       	ldd	r16, Z+11	; 0x0b
    2e8a:	14 85       	ldd	r17, Z+12	; 0x0c
    2e8c:	2b 96       	adiw	r28, 0x0b	; 11
    2e8e:	4e ad       	ldd	r20, Y+62	; 0x3e
    2e90:	5f ad       	ldd	r21, Y+63	; 0x3f
    2e92:	2b 97       	sbiw	r28, 0x0b	; 11
    2e94:	04 2b       	or	r16, r20
    2e96:	15 2b       	or	r17, r21
    2e98:	6d 85       	ldd	r22, Y+13	; 0x0d
    2e9a:	7e 85       	ldd	r23, Y+14	; 0x0e
    2e9c:	06 1b       	sub	r16, r22
    2e9e:	17 0b       	sbc	r17, r23
    2ea0:	80 91 16 24 	lds	r24, 0x2416
    2ea4:	90 91 17 24 	lds	r25, 0x2417
    2ea8:	d8 01       	movw	r26, r16
    2eaa:	a8 1b       	sub	r26, r24
    2eac:	b9 0b       	sbc	r27, r25
    2eae:	cd 01       	movw	r24, r26
    2eb0:	9d 01       	movw	r18, r26
    2eb2:	22 0f       	add	r18, r18
    2eb4:	33 1f       	adc	r19, r19
    2eb6:	88 0f       	add	r24, r24
    2eb8:	99 1f       	adc	r25, r25
    2eba:	88 0f       	add	r24, r24
    2ebc:	99 1f       	adc	r25, r25
    2ebe:	88 0f       	add	r24, r24
    2ec0:	99 1f       	adc	r25, r25
    2ec2:	fc 01       	movw	r30, r24
    2ec4:	e2 0f       	add	r30, r18
    2ec6:	f3 1f       	adc	r31, r19
    2ec8:	e9 87       	std	Y+9, r30	; 0x09
    2eca:	fa 87       	std	Y+10, r31	; 0x0a
    2ecc:	cf 01       	movw	r24, r30
    2ece:	c1 96       	adiw	r24, 0x31	; 49
    2ed0:	83 36       	cpi	r24, 0x63	; 99
    2ed2:	91 05       	cpc	r25, r1
    2ed4:	40 f0       	brcs	.+16     	; 0x2ee6 <main+0xcfe>
    2ed6:	e1 36       	cpi	r30, 0x61	; 97
    2ed8:	29 e0       	ldi	r18, 0x09	; 9
    2eda:	f2 07       	cpc	r31, r18
    2edc:	3c f4       	brge	.+14     	; 0x2eec <main+0xd04>
    2ede:	e0 3a       	cpi	r30, 0xA0	; 160
    2ee0:	f6 4f       	sbci	r31, 0xF6	; 246
    2ee2:	3c f0       	brlt	.+14     	; 0x2ef2 <main+0xd0a>
    2ee4:	08 c0       	rjmp	.+16     	; 0x2ef6 <main+0xd0e>
    2ee6:	19 86       	std	Y+9, r1	; 0x09
    2ee8:	1a 86       	std	Y+10, r1	; 0x0a
    2eea:	05 c0       	rjmp	.+10     	; 0x2ef6 <main+0xd0e>
    2eec:	19 86       	std	Y+9, r1	; 0x09
    2eee:	1a 86       	std	Y+10, r1	; 0x0a
    2ef0:	02 c0       	rjmp	.+4      	; 0x2ef6 <main+0xd0e>
    2ef2:	19 86       	std	Y+9, r1	; 0x09
    2ef4:	1a 86       	std	Y+10, r1	; 0x0a
    2ef6:	b8 01       	movw	r22, r16
    2ef8:	88 27       	eor	r24, r24
    2efa:	77 fd       	sbrc	r23, 7
    2efc:	80 95       	com	r24
    2efe:	98 2f       	mov	r25, r24
    2f00:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2f04:	4b 01       	movw	r8, r22
    2f06:	5c 01       	movw	r10, r24
    2f08:	9b 01       	movw	r18, r22
    2f0a:	ac 01       	movw	r20, r24
    2f0c:	69 81       	ldd	r22, Y+1	; 0x01
    2f0e:	7a 81       	ldd	r23, Y+2	; 0x02
    2f10:	8b 81       	ldd	r24, Y+3	; 0x03
    2f12:	9c 81       	ldd	r25, Y+4	; 0x04
    2f14:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2f18:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    2f1c:	2b 01       	movw	r4, r22
    2f1e:	3c 01       	movw	r6, r24
    2f20:	a5 01       	movw	r20, r10
    2f22:	94 01       	movw	r18, r8
    2f24:	c7 01       	movw	r24, r14
    2f26:	b6 01       	movw	r22, r12
    2f28:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2f2c:	2a e0       	ldi	r18, 0x0A	; 10
    2f2e:	37 ed       	ldi	r19, 0xD7	; 215
    2f30:	43 ea       	ldi	r20, 0xA3	; 163
    2f32:	5c e3       	ldi	r21, 0x3C	; 60
    2f34:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    2f38:	20 91 1a 24 	lds	r18, 0x241A
    2f3c:	30 91 1b 24 	lds	r19, 0x241B
    2f40:	40 91 1c 24 	lds	r20, 0x241C
    2f44:	50 91 1d 24 	lds	r21, 0x241D
    2f48:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2f4c:	4b 01       	movw	r8, r22
    2f4e:	5c 01       	movw	r10, r24
    2f50:	60 93 1a 24 	sts	0x241A, r22
    2f54:	70 93 1b 24 	sts	0x241B, r23
    2f58:	80 93 1c 24 	sts	0x241C, r24
    2f5c:	90 93 1d 24 	sts	0x241D, r25
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	30 e0       	ldi	r19, 0x00	; 0
    2f64:	40 ef       	ldi	r20, 0xF0	; 240
    2f66:	52 e4       	ldi	r21, 0x42	; 66
    2f68:	0e 94 2c 2d 	call	0x5a58	; 0x5a58 <__gesf2>
    2f6c:	18 16       	cp	r1, r24
    2f6e:	6c f4       	brge	.+26     	; 0x2f8a <main+0xda2>
    2f70:	80 e0       	ldi	r24, 0x00	; 0
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	a0 ef       	ldi	r26, 0xF0	; 240
    2f76:	b2 e4       	ldi	r27, 0x42	; 66
    2f78:	80 93 1a 24 	sts	0x241A, r24
    2f7c:	90 93 1b 24 	sts	0x241B, r25
    2f80:	a0 93 1c 24 	sts	0x241C, r26
    2f84:	b0 93 1d 24 	sts	0x241D, r27
    2f88:	16 c0       	rjmp	.+44     	; 0x2fb6 <main+0xdce>
    2f8a:	20 e0       	ldi	r18, 0x00	; 0
    2f8c:	30 e0       	ldi	r19, 0x00	; 0
    2f8e:	46 e9       	ldi	r20, 0x96	; 150
    2f90:	54 ec       	ldi	r21, 0xC4	; 196
    2f92:	c5 01       	movw	r24, r10
    2f94:	b4 01       	movw	r22, r8
    2f96:	0e 94 dd 2b 	call	0x57ba	; 0x57ba <__cmpsf2>
    2f9a:	88 23       	and	r24, r24
    2f9c:	64 f4       	brge	.+24     	; 0x2fb6 <main+0xdce>
    2f9e:	40 e0       	ldi	r20, 0x00	; 0
    2fa0:	50 e0       	ldi	r21, 0x00	; 0
    2fa2:	60 ef       	ldi	r22, 0xF0	; 240
    2fa4:	72 ec       	ldi	r23, 0xC2	; 194
    2fa6:	40 93 1a 24 	sts	0x241A, r20
    2faa:	50 93 1b 24 	sts	0x241B, r21
    2fae:	60 93 1c 24 	sts	0x241C, r22
    2fb2:	70 93 1d 24 	sts	0x241D, r23
    2fb6:	c2 01       	movw	r24, r4
    2fb8:	80 38       	cpi	r24, 0x80	; 128
    2fba:	91 05       	cpc	r25, r1
    2fbc:	14 f0       	brlt	.+4      	; 0x2fc2 <main+0xdda>
    2fbe:	8f e7       	ldi	r24, 0x7F	; 127
    2fc0:	90 e0       	ldi	r25, 0x00	; 0
    2fc2:	bc 01       	movw	r22, r24
    2fc4:	81 38       	cpi	r24, 0x81	; 129
    2fc6:	5f ef       	ldi	r21, 0xFF	; 255
    2fc8:	95 07       	cpc	r25, r21
    2fca:	14 f4       	brge	.+4      	; 0x2fd0 <main+0xde8>
    2fcc:	61 e8       	ldi	r22, 0x81	; 129
    2fce:	7f ef       	ldi	r23, 0xFF	; 255
    2fd0:	88 27       	eor	r24, r24
    2fd2:	77 fd       	sbrc	r23, 7
    2fd4:	80 95       	com	r24
    2fd6:	98 2f       	mov	r25, r24
    2fd8:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    2fdc:	20 91 1a 24 	lds	r18, 0x241A
    2fe0:	30 91 1b 24 	lds	r19, 0x241B
    2fe4:	40 91 1c 24 	lds	r20, 0x241C
    2fe8:	50 91 1d 24 	lds	r21, 0x241D
    2fec:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    2ff0:	4b 01       	movw	r8, r22
    2ff2:	5c 01       	movw	r10, r24
    2ff4:	a9 85       	ldd	r26, Y+9	; 0x09
    2ff6:	ba 85       	ldd	r27, Y+10	; 0x0a
    2ff8:	bd 01       	movw	r22, r26
    2ffa:	88 27       	eor	r24, r24
    2ffc:	77 fd       	sbrc	r23, 7
    2ffe:	80 95       	com	r24
    3000:	98 2f       	mov	r25, r24
    3002:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    3006:	9b 01       	movw	r18, r22
    3008:	ac 01       	movw	r20, r24
    300a:	6d 81       	ldd	r22, Y+5	; 0x05
    300c:	7e 81       	ldd	r23, Y+6	; 0x06
    300e:	8f 81       	ldd	r24, Y+7	; 0x07
    3010:	98 85       	ldd	r25, Y+8	; 0x08
    3012:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    3016:	9b 01       	movw	r18, r22
    3018:	ac 01       	movw	r20, r24
    301a:	c5 01       	movw	r24, r10
    301c:	b4 01       	movw	r22, r8
    301e:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    3022:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    3026:	60 38       	cpi	r22, 0x80	; 128
    3028:	71 05       	cpc	r23, r1
    302a:	14 f0       	brlt	.+4      	; 0x3030 <main+0xe48>
    302c:	6f e7       	ldi	r22, 0x7F	; 127
    302e:	70 e0       	ldi	r23, 0x00	; 0
    3030:	00 93 16 24 	sts	0x2416, r16
    3034:	10 93 17 24 	sts	0x2417, r17
    3038:	e9 85       	ldd	r30, Y+9	; 0x09
    303a:	fa 85       	ldd	r31, Y+10	; 0x0a
    303c:	e0 93 18 24 	sts	0x2418, r30
    3040:	f0 93 19 24 	sts	0x2419, r31
    3044:	61 38       	cpi	r22, 0x81	; 129
    3046:	ff ef       	ldi	r31, 0xFF	; 255
    3048:	7f 07       	cpc	r23, r31
    304a:	14 f4       	brge	.+4      	; 0x3050 <main+0xe68>
    304c:	61 e8       	ldi	r22, 0x81	; 129
    304e:	7f ef       	ldi	r23, 0xFF	; 255
    3050:	60 93 1e 24 	sts	0x241E, r22
    3054:	e8 e0       	ldi	r30, 0x08	; 8
    3056:	f6 e0       	ldi	r31, 0x06	; 6
    3058:	60 81       	ld	r22, Z
    305a:	50 81       	ld	r21, Z
    305c:	70 81       	ld	r23, Z
    305e:	40 81       	ld	r20, Z
    3060:	90 81       	ld	r25, Z
    3062:	80 81       	ld	r24, Z
    3064:	20 81       	ld	r18, Z
    3066:	e0 81       	ld	r30, Z
    3068:	22 1f       	adc	r18, r18
    306a:	22 27       	eor	r18, r18
    306c:	22 1f       	adc	r18, r18
    306e:	30 e0       	ldi	r19, 0x00	; 0
    3070:	22 0f       	add	r18, r18
    3072:	33 1f       	adc	r19, r19
    3074:	22 0f       	add	r18, r18
    3076:	33 1f       	adc	r19, r19
    3078:	96 fb       	bst	r25, 6
    307a:	99 27       	eor	r25, r25
    307c:	90 f9       	bld	r25, 0
    307e:	62 96       	adiw	r28, 0x12	; 18
    3080:	9f af       	std	Y+63, r25	; 0x3f
    3082:	62 97       	sbiw	r28, 0x12	; 18
    3084:	63 96       	adiw	r28, 0x13	; 19
    3086:	1f ae       	std	Y+63, r1	; 0x3f
    3088:	63 97       	sbiw	r28, 0x13	; 19
    308a:	63 96       	adiw	r28, 0x13	; 19
    308c:	ae ad       	ldd	r26, Y+62	; 0x3e
    308e:	bf ad       	ldd	r27, Y+63	; 0x3f
    3090:	63 97       	sbiw	r28, 0x13	; 19
    3092:	2a 2b       	or	r18, r26
    3094:	3b 2b       	or	r19, r27
    3096:	82 95       	swap	r24
    3098:	81 70       	andi	r24, 0x01	; 1
    309a:	64 96       	adiw	r28, 0x14	; 20
    309c:	8f af       	std	Y+63, r24	; 0x3f
    309e:	64 97       	sbiw	r28, 0x14	; 20
    30a0:	65 96       	adiw	r28, 0x15	; 21
    30a2:	1f ae       	std	Y+63, r1	; 0x3f
    30a4:	65 97       	sbiw	r28, 0x15	; 21
    30a6:	65 96       	adiw	r28, 0x15	; 21
    30a8:	8e ad       	ldd	r24, Y+62	; 0x3e
    30aa:	9f ad       	ldd	r25, Y+63	; 0x3f
    30ac:	65 97       	sbiw	r28, 0x15	; 21
    30ae:	88 0f       	add	r24, r24
    30b0:	99 1f       	adc	r25, r25
    30b2:	28 2b       	or	r18, r24
    30b4:	39 2b       	or	r19, r25
    30b6:	e5 fb       	bst	r30, 5
    30b8:	ee 27       	eor	r30, r30
    30ba:	e0 f9       	bld	r30, 0
    30bc:	66 96       	adiw	r28, 0x16	; 22
    30be:	ef af       	std	Y+63, r30	; 0x3f
    30c0:	66 97       	sbiw	r28, 0x16	; 22
    30c2:	67 96       	adiw	r28, 0x17	; 23
    30c4:	1f ae       	std	Y+63, r1	; 0x3f
    30c6:	67 97       	sbiw	r28, 0x17	; 23
    30c8:	67 96       	adiw	r28, 0x17	; 23
    30ca:	8e ad       	ldd	r24, Y+62	; 0x3e
    30cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    30ce:	67 97       	sbiw	r28, 0x17	; 23
    30d0:	88 0f       	add	r24, r24
    30d2:	99 1f       	adc	r25, r25
    30d4:	88 0f       	add	r24, r24
    30d6:	99 1f       	adc	r25, r25
    30d8:	88 0f       	add	r24, r24
    30da:	99 1f       	adc	r25, r25
    30dc:	28 2b       	or	r18, r24
    30de:	39 2b       	or	r19, r25
    30e0:	f7 e1       	ldi	r31, 0x17	; 23
    30e2:	f2 9f       	mul	r31, r18
    30e4:	c0 01       	movw	r24, r0
    30e6:	f3 9f       	mul	r31, r19
    30e8:	90 0d       	add	r25, r0
    30ea:	11 24       	eor	r1, r1
    30ec:	dc 01       	movw	r26, r24
    30ee:	ac 54       	subi	r26, 0x4C	; 76
    30f0:	bf 4d       	sbci	r27, 0xDF	; 223
    30f2:	1d 96       	adiw	r26, 0x0d	; 13
    30f4:	ec 91       	ld	r30, X
    30f6:	69 96       	adiw	r28, 0x19	; 25
    30f8:	ef af       	std	Y+63, r30	; 0x3f
    30fa:	69 97       	sbiw	r28, 0x19	; 25
    30fc:	68 96       	adiw	r28, 0x18	; 24
    30fe:	1f ae       	std	Y+63, r1	; 0x3f
    3100:	68 97       	sbiw	r28, 0x18	; 24
    3102:	77 1f       	adc	r23, r23
    3104:	77 27       	eor	r23, r23
    3106:	77 1f       	adc	r23, r23
    3108:	87 2f       	mov	r24, r23
    310a:	90 e0       	ldi	r25, 0x00	; 0
    310c:	88 0f       	add	r24, r24
    310e:	99 1f       	adc	r25, r25
    3110:	88 0f       	add	r24, r24
    3112:	99 1f       	adc	r25, r25
    3114:	66 fb       	bst	r22, 6
    3116:	66 27       	eor	r22, r22
    3118:	60 f9       	bld	r22, 0
    311a:	6a 96       	adiw	r28, 0x1a	; 26
    311c:	6f af       	std	Y+63, r22	; 0x3f
    311e:	6a 97       	sbiw	r28, 0x1a	; 26
    3120:	6b 96       	adiw	r28, 0x1b	; 27
    3122:	1f ae       	std	Y+63, r1	; 0x3f
    3124:	6b 97       	sbiw	r28, 0x1b	; 27
    3126:	6b 96       	adiw	r28, 0x1b	; 27
    3128:	2e ad       	ldd	r18, Y+62	; 0x3e
    312a:	3f ad       	ldd	r19, Y+63	; 0x3f
    312c:	6b 97       	sbiw	r28, 0x1b	; 27
    312e:	82 2b       	or	r24, r18
    3130:	93 2b       	or	r25, r19
    3132:	52 95       	swap	r21
    3134:	51 70       	andi	r21, 0x01	; 1
    3136:	6c 96       	adiw	r28, 0x1c	; 28
    3138:	5f af       	std	Y+63, r21	; 0x3f
    313a:	6c 97       	sbiw	r28, 0x1c	; 28
    313c:	6d 96       	adiw	r28, 0x1d	; 29
    313e:	1f ae       	std	Y+63, r1	; 0x3f
    3140:	6d 97       	sbiw	r28, 0x1d	; 29
    3142:	6d 96       	adiw	r28, 0x1d	; 29
    3144:	2e ad       	ldd	r18, Y+62	; 0x3e
    3146:	3f ad       	ldd	r19, Y+63	; 0x3f
    3148:	6d 97       	sbiw	r28, 0x1d	; 29
    314a:	22 0f       	add	r18, r18
    314c:	33 1f       	adc	r19, r19
    314e:	82 2b       	or	r24, r18
    3150:	93 2b       	or	r25, r19
    3152:	45 fb       	bst	r20, 5
    3154:	44 27       	eor	r20, r20
    3156:	40 f9       	bld	r20, 0
    3158:	6e 96       	adiw	r28, 0x1e	; 30
    315a:	4f af       	std	Y+63, r20	; 0x3f
    315c:	6e 97       	sbiw	r28, 0x1e	; 30
    315e:	6f 96       	adiw	r28, 0x1f	; 31
    3160:	1f ae       	std	Y+63, r1	; 0x3f
    3162:	6f 97       	sbiw	r28, 0x1f	; 31
    3164:	6f 96       	adiw	r28, 0x1f	; 31
    3166:	2e ad       	ldd	r18, Y+62	; 0x3e
    3168:	3f ad       	ldd	r19, Y+63	; 0x3f
    316a:	6f 97       	sbiw	r28, 0x1f	; 31
    316c:	22 0f       	add	r18, r18
    316e:	33 1f       	adc	r19, r19
    3170:	22 0f       	add	r18, r18
    3172:	33 1f       	adc	r19, r19
    3174:	22 0f       	add	r18, r18
    3176:	33 1f       	adc	r19, r19
    3178:	82 2b       	or	r24, r18
    317a:	93 2b       	or	r25, r19
    317c:	f8 9f       	mul	r31, r24
    317e:	90 01       	movw	r18, r0
    3180:	f9 9f       	mul	r31, r25
    3182:	30 0d       	add	r19, r0
    3184:	11 24       	eor	r1, r1
    3186:	f9 01       	movw	r30, r18
    3188:	ec 54       	subi	r30, 0x4C	; 76
    318a:	ff 4d       	sbci	r31, 0xDF	; 223
    318c:	07 85       	ldd	r16, Z+15	; 0x0f
    318e:	10 89       	ldd	r17, Z+16	; 0x10
    3190:	69 96       	adiw	r28, 0x19	; 25
    3192:	4e ad       	ldd	r20, Y+62	; 0x3e
    3194:	5f ad       	ldd	r21, Y+63	; 0x3f
    3196:	69 97       	sbiw	r28, 0x19	; 25
    3198:	04 2b       	or	r16, r20
    319a:	15 2b       	or	r17, r21
    319c:	69 89       	ldd	r22, Y+17	; 0x11
    319e:	7a 89       	ldd	r23, Y+18	; 0x12
    31a0:	06 1b       	sub	r16, r22
    31a2:	17 0b       	sbc	r17, r23
    31a4:	80 91 af 23 	lds	r24, 0x23AF
    31a8:	90 91 b0 23 	lds	r25, 0x23B0
    31ac:	d8 01       	movw	r26, r16
    31ae:	a8 1b       	sub	r26, r24
    31b0:	b9 0b       	sbc	r27, r25
    31b2:	cd 01       	movw	r24, r26
    31b4:	9d 01       	movw	r18, r26
    31b6:	22 0f       	add	r18, r18
    31b8:	33 1f       	adc	r19, r19
    31ba:	88 0f       	add	r24, r24
    31bc:	99 1f       	adc	r25, r25
    31be:	88 0f       	add	r24, r24
    31c0:	99 1f       	adc	r25, r25
    31c2:	88 0f       	add	r24, r24
    31c4:	99 1f       	adc	r25, r25
    31c6:	fc 01       	movw	r30, r24
    31c8:	e2 0f       	add	r30, r18
    31ca:	f3 1f       	adc	r31, r19
    31cc:	e9 87       	std	Y+9, r30	; 0x09
    31ce:	fa 87       	std	Y+10, r31	; 0x0a
    31d0:	cf 01       	movw	r24, r30
    31d2:	c1 96       	adiw	r24, 0x31	; 49
    31d4:	83 36       	cpi	r24, 0x63	; 99
    31d6:	91 05       	cpc	r25, r1
    31d8:	40 f0       	brcs	.+16     	; 0x31ea <main+0x1002>
    31da:	e1 36       	cpi	r30, 0x61	; 97
    31dc:	29 e0       	ldi	r18, 0x09	; 9
    31de:	f2 07       	cpc	r31, r18
    31e0:	3c f4       	brge	.+14     	; 0x31f0 <main+0x1008>
    31e2:	e0 3a       	cpi	r30, 0xA0	; 160
    31e4:	f6 4f       	sbci	r31, 0xF6	; 246
    31e6:	3c f0       	brlt	.+14     	; 0x31f6 <main+0x100e>
    31e8:	08 c0       	rjmp	.+16     	; 0x31fa <main+0x1012>
    31ea:	19 86       	std	Y+9, r1	; 0x09
    31ec:	1a 86       	std	Y+10, r1	; 0x0a
    31ee:	05 c0       	rjmp	.+10     	; 0x31fa <main+0x1012>
    31f0:	19 86       	std	Y+9, r1	; 0x09
    31f2:	1a 86       	std	Y+10, r1	; 0x0a
    31f4:	02 c0       	rjmp	.+4      	; 0x31fa <main+0x1012>
    31f6:	19 86       	std	Y+9, r1	; 0x09
    31f8:	1a 86       	std	Y+10, r1	; 0x0a
    31fa:	b8 01       	movw	r22, r16
    31fc:	88 27       	eor	r24, r24
    31fe:	77 fd       	sbrc	r23, 7
    3200:	80 95       	com	r24
    3202:	98 2f       	mov	r25, r24
    3204:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    3208:	4b 01       	movw	r8, r22
    320a:	5c 01       	movw	r10, r24
    320c:	9b 01       	movw	r18, r22
    320e:	ac 01       	movw	r20, r24
    3210:	69 81       	ldd	r22, Y+1	; 0x01
    3212:	7a 81       	ldd	r23, Y+2	; 0x02
    3214:	8b 81       	ldd	r24, Y+3	; 0x03
    3216:	9c 81       	ldd	r25, Y+4	; 0x04
    3218:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    321c:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    3220:	2b 01       	movw	r4, r22
    3222:	3c 01       	movw	r6, r24
    3224:	a5 01       	movw	r20, r10
    3226:	94 01       	movw	r18, r8
    3228:	c7 01       	movw	r24, r14
    322a:	b6 01       	movw	r22, r12
    322c:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    3230:	2a e0       	ldi	r18, 0x0A	; 10
    3232:	37 ed       	ldi	r19, 0xD7	; 215
    3234:	43 ea       	ldi	r20, 0xA3	; 163
    3236:	5c e3       	ldi	r21, 0x3C	; 60
    3238:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    323c:	20 91 b3 23 	lds	r18, 0x23B3
    3240:	30 91 b4 23 	lds	r19, 0x23B4
    3244:	40 91 b5 23 	lds	r20, 0x23B5
    3248:	50 91 b6 23 	lds	r21, 0x23B6
    324c:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    3250:	6b 01       	movw	r12, r22
    3252:	7c 01       	movw	r14, r24
    3254:	60 93 b3 23 	sts	0x23B3, r22
    3258:	70 93 b4 23 	sts	0x23B4, r23
    325c:	80 93 b5 23 	sts	0x23B5, r24
    3260:	90 93 b6 23 	sts	0x23B6, r25
    3264:	20 e0       	ldi	r18, 0x00	; 0
    3266:	30 e0       	ldi	r19, 0x00	; 0
    3268:	40 ef       	ldi	r20, 0xF0	; 240
    326a:	52 e4       	ldi	r21, 0x42	; 66
    326c:	0e 94 2c 2d 	call	0x5a58	; 0x5a58 <__gesf2>
    3270:	18 16       	cp	r1, r24
    3272:	6c f4       	brge	.+26     	; 0x328e <main+0x10a6>
    3274:	80 e0       	ldi	r24, 0x00	; 0
    3276:	90 e0       	ldi	r25, 0x00	; 0
    3278:	a0 ef       	ldi	r26, 0xF0	; 240
    327a:	b2 e4       	ldi	r27, 0x42	; 66
    327c:	80 93 b3 23 	sts	0x23B3, r24
    3280:	90 93 b4 23 	sts	0x23B4, r25
    3284:	a0 93 b5 23 	sts	0x23B5, r26
    3288:	b0 93 b6 23 	sts	0x23B6, r27
    328c:	16 c0       	rjmp	.+44     	; 0x32ba <main+0x10d2>
    328e:	20 e0       	ldi	r18, 0x00	; 0
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	46 e9       	ldi	r20, 0x96	; 150
    3294:	54 ec       	ldi	r21, 0xC4	; 196
    3296:	c7 01       	movw	r24, r14
    3298:	b6 01       	movw	r22, r12
    329a:	0e 94 dd 2b 	call	0x57ba	; 0x57ba <__cmpsf2>
    329e:	88 23       	and	r24, r24
    32a0:	64 f4       	brge	.+24     	; 0x32ba <main+0x10d2>
    32a2:	40 e0       	ldi	r20, 0x00	; 0
    32a4:	50 e0       	ldi	r21, 0x00	; 0
    32a6:	60 ef       	ldi	r22, 0xF0	; 240
    32a8:	72 ec       	ldi	r23, 0xC2	; 194
    32aa:	40 93 b3 23 	sts	0x23B3, r20
    32ae:	50 93 b4 23 	sts	0x23B4, r21
    32b2:	60 93 b5 23 	sts	0x23B5, r22
    32b6:	70 93 b6 23 	sts	0x23B6, r23
    32ba:	c2 01       	movw	r24, r4
    32bc:	80 38       	cpi	r24, 0x80	; 128
    32be:	91 05       	cpc	r25, r1
    32c0:	14 f0       	brlt	.+4      	; 0x32c6 <main+0x10de>
    32c2:	8f e7       	ldi	r24, 0x7F	; 127
    32c4:	90 e0       	ldi	r25, 0x00	; 0
    32c6:	81 38       	cpi	r24, 0x81	; 129
    32c8:	5f ef       	ldi	r21, 0xFF	; 255
    32ca:	95 07       	cpc	r25, r21
    32cc:	14 f4       	brge	.+4      	; 0x32d2 <main+0x10ea>
    32ce:	81 e8       	ldi	r24, 0x81	; 129
    32d0:	9f ef       	ldi	r25, 0xFF	; 255
    32d2:	bc 01       	movw	r22, r24
    32d4:	88 27       	eor	r24, r24
    32d6:	77 fd       	sbrc	r23, 7
    32d8:	80 95       	com	r24
    32da:	98 2f       	mov	r25, r24
    32dc:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    32e0:	20 91 b3 23 	lds	r18, 0x23B3
    32e4:	30 91 b4 23 	lds	r19, 0x23B4
    32e8:	40 91 b5 23 	lds	r20, 0x23B5
    32ec:	50 91 b6 23 	lds	r21, 0x23B6
    32f0:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    32f4:	6b 01       	movw	r12, r22
    32f6:	7c 01       	movw	r14, r24
    32f8:	a9 85       	ldd	r26, Y+9	; 0x09
    32fa:	ba 85       	ldd	r27, Y+10	; 0x0a
    32fc:	bd 01       	movw	r22, r26
    32fe:	88 27       	eor	r24, r24
    3300:	77 fd       	sbrc	r23, 7
    3302:	80 95       	com	r24
    3304:	98 2f       	mov	r25, r24
    3306:	0e 94 7c 2c 	call	0x58f8	; 0x58f8 <__floatsisf>
    330a:	9b 01       	movw	r18, r22
    330c:	ac 01       	movw	r20, r24
    330e:	6d 81       	ldd	r22, Y+5	; 0x05
    3310:	7e 81       	ldd	r23, Y+6	; 0x06
    3312:	8f 81       	ldd	r24, Y+7	; 0x07
    3314:	98 85       	ldd	r25, Y+8	; 0x08
    3316:	0e 94 30 2d 	call	0x5a60	; 0x5a60 <__mulsf3>
    331a:	9b 01       	movw	r18, r22
    331c:	ac 01       	movw	r20, r24
    331e:	c7 01       	movw	r24, r14
    3320:	b6 01       	movw	r22, r12
    3322:	0e 94 79 2b 	call	0x56f2	; 0x56f2 <__addsf3>
    3326:	0e 94 49 2c 	call	0x5892	; 0x5892 <__fixsfsi>
    332a:	cb 01       	movw	r24, r22
    332c:	60 38       	cpi	r22, 0x80	; 128
    332e:	71 05       	cpc	r23, r1
    3330:	14 f0       	brlt	.+4      	; 0x3336 <main+0x114e>
    3332:	8f e7       	ldi	r24, 0x7F	; 127
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	00 93 af 23 	sts	0x23AF, r16
    333a:	10 93 b0 23 	sts	0x23B0, r17
    333e:	e9 85       	ldd	r30, Y+9	; 0x09
    3340:	fa 85       	ldd	r31, Y+10	; 0x0a
    3342:	e0 93 b1 23 	sts	0x23B1, r30
    3346:	f0 93 b2 23 	sts	0x23B2, r31
    334a:	81 38       	cpi	r24, 0x81	; 129
    334c:	ff ef       	ldi	r31, 0xFF	; 255
    334e:	9f 07       	cpc	r25, r31
    3350:	14 f4       	brge	.+4      	; 0x3356 <main+0x116e>
    3352:	81 e8       	ldi	r24, 0x81	; 129
    3354:	9f ef       	ldi	r25, 0xFF	; 255
    3356:	80 93 b7 23 	sts	0x23B7, r24
    335a:	6a e2       	ldi	r22, 0x2A	; 42
    335c:	80 ea       	ldi	r24, 0xA0	; 160
    335e:	9b e0       	ldi	r25, 0x0B	; 11
    3360:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3364:	6e e7       	ldi	r22, 0x7E	; 126
    3366:	80 ea       	ldi	r24, 0xA0	; 160
    3368:	9b e0       	ldi	r25, 0x0B	; 11
    336a:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    336e:	60 91 85 23 	lds	r22, 0x2385
    3372:	80 ea       	ldi	r24, 0xA0	; 160
    3374:	9b e0       	ldi	r25, 0x0B	; 11
    3376:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    337a:	60 91 0a 24 	lds	r22, 0x240A
    337e:	80 ea       	ldi	r24, 0xA0	; 160
    3380:	9b e0       	ldi	r25, 0x0B	; 11
    3382:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3386:	60 91 1e 24 	lds	r22, 0x241E
    338a:	80 ea       	ldi	r24, 0xA0	; 160
    338c:	9b e0       	ldi	r25, 0x0B	; 11
    338e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    3392:	60 91 b7 23 	lds	r22, 0x23B7
    3396:	80 ea       	ldi	r24, 0xA0	; 160
    3398:	9b e0       	ldi	r25, 0x0B	; 11
    339a:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    339e:	63 e2       	ldi	r22, 0x23	; 35
    33a0:	80 ea       	ldi	r24, 0xA0	; 160
    33a2:	9b e0       	ldi	r25, 0x0B	; 11
    33a4:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    33a8:	2f b7       	in	r18, 0x3f	; 63
    33aa:	f8 94       	cli
    33ac:	e0 e0       	ldi	r30, 0x00	; 0
    33ae:	f2 e0       	ldi	r31, 0x02	; 2
    33b0:	84 a1       	ldd	r24, Z+36	; 0x24
    33b2:	95 a1       	ldd	r25, Z+37	; 0x25
    33b4:	2f bf       	out	0x3f, r18	; 63
    33b6:	80 93 a7 20 	sts	0x20A7, r24
    33ba:	90 93 a8 20 	sts	0x20A8, r25
    33be:	89 3d       	cpi	r24, 0xD9	; 217
    33c0:	94 40       	sbci	r25, 0x04	; 4
    33c2:	3c f4       	brge	.+14     	; 0x33d2 <main+0x11ea>
    33c4:	e0 e4       	ldi	r30, 0x40	; 64
    33c6:	f6 e0       	ldi	r31, 0x06	; 6
    33c8:	80 e4       	ldi	r24, 0x40	; 64
    33ca:	85 83       	std	Z+5, r24	; 0x05
    33cc:	84 e0       	ldi	r24, 0x04	; 4
    33ce:	85 83       	std	Z+5, r24	; 0x05
    33d0:	06 c0       	rjmp	.+12     	; 0x33de <main+0x11f6>
    33d2:	e0 e4       	ldi	r30, 0x40	; 64
    33d4:	f6 e0       	ldi	r31, 0x06	; 6
    33d6:	80 e4       	ldi	r24, 0x40	; 64
    33d8:	86 83       	std	Z+6, r24	; 0x06
    33da:	84 e0       	ldi	r24, 0x04	; 4
    33dc:	86 83       	std	Z+6, r24	; 0x06
    33de:	60 e0       	ldi	r22, 0x00	; 0
    33e0:	80 e0       	ldi	r24, 0x00	; 0
    33e2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    33e6:	0f 2e       	mov	r0, r31
    33e8:	f8 e0       	ldi	r31, 0x08	; 8
    33ea:	cf 2e       	mov	r12, r31
    33ec:	f6 e0       	ldi	r31, 0x06	; 6
    33ee:	df 2e       	mov	r13, r31
    33f0:	f0 2d       	mov	r31, r0
    33f2:	d6 01       	movw	r26, r12
    33f4:	6c 91       	ld	r22, X
    33f6:	5c 91       	ld	r21, X
    33f8:	7c 91       	ld	r23, X
    33fa:	4c 91       	ld	r20, X
    33fc:	1c 91       	ld	r17, X
    33fe:	fc 91       	ld	r31, X
    3400:	8c 91       	ld	r24, X
    3402:	ec 91       	ld	r30, X
    3404:	90 91 85 23 	lds	r25, 0x2385
    3408:	29 2f       	mov	r18, r25
    340a:	33 27       	eor	r19, r19
    340c:	27 fd       	sbrc	r18, 7
    340e:	30 95       	com	r19
    3410:	3f 93       	push	r19
    3412:	9f 93       	push	r25
    3414:	88 1f       	adc	r24, r24
    3416:	88 27       	eor	r24, r24
    3418:	88 1f       	adc	r24, r24
    341a:	90 e0       	ldi	r25, 0x00	; 0
    341c:	88 0f       	add	r24, r24
    341e:	99 1f       	adc	r25, r25
    3420:	88 0f       	add	r24, r24
    3422:	99 1f       	adc	r25, r25
    3424:	16 fb       	bst	r17, 6
    3426:	11 27       	eor	r17, r17
    3428:	10 f9       	bld	r17, 0
    342a:	a0 96       	adiw	r28, 0x20	; 32
    342c:	1f af       	std	Y+63, r17	; 0x3f
    342e:	a0 97       	sbiw	r28, 0x20	; 32
    3430:	a1 96       	adiw	r28, 0x21	; 33
    3432:	1f ae       	std	Y+63, r1	; 0x3f
    3434:	a1 97       	sbiw	r28, 0x21	; 33
    3436:	a1 96       	adiw	r28, 0x21	; 33
    3438:	2e ad       	ldd	r18, Y+62	; 0x3e
    343a:	3f ad       	ldd	r19, Y+63	; 0x3f
    343c:	a1 97       	sbiw	r28, 0x21	; 33
    343e:	82 2b       	or	r24, r18
    3440:	93 2b       	or	r25, r19
    3442:	f2 95       	swap	r31
    3444:	f1 70       	andi	r31, 0x01	; 1
    3446:	a2 96       	adiw	r28, 0x22	; 34
    3448:	ff af       	std	Y+63, r31	; 0x3f
    344a:	a2 97       	sbiw	r28, 0x22	; 34
    344c:	a3 96       	adiw	r28, 0x23	; 35
    344e:	1f ae       	std	Y+63, r1	; 0x3f
    3450:	a3 97       	sbiw	r28, 0x23	; 35
    3452:	a3 96       	adiw	r28, 0x23	; 35
    3454:	2e ad       	ldd	r18, Y+62	; 0x3e
    3456:	3f ad       	ldd	r19, Y+63	; 0x3f
    3458:	a3 97       	sbiw	r28, 0x23	; 35
    345a:	22 0f       	add	r18, r18
    345c:	33 1f       	adc	r19, r19
    345e:	82 2b       	or	r24, r18
    3460:	93 2b       	or	r25, r19
    3462:	e5 fb       	bst	r30, 5
    3464:	ee 27       	eor	r30, r30
    3466:	e0 f9       	bld	r30, 0
    3468:	a4 96       	adiw	r28, 0x24	; 36
    346a:	ef af       	std	Y+63, r30	; 0x3f
    346c:	a4 97       	sbiw	r28, 0x24	; 36
    346e:	a5 96       	adiw	r28, 0x25	; 37
    3470:	1f ae       	std	Y+63, r1	; 0x3f
    3472:	a5 97       	sbiw	r28, 0x25	; 37
    3474:	a5 96       	adiw	r28, 0x25	; 37
    3476:	2e ad       	ldd	r18, Y+62	; 0x3e
    3478:	3f ad       	ldd	r19, Y+63	; 0x3f
    347a:	a5 97       	sbiw	r28, 0x25	; 37
    347c:	22 0f       	add	r18, r18
    347e:	33 1f       	adc	r19, r19
    3480:	22 0f       	add	r18, r18
    3482:	33 1f       	adc	r19, r19
    3484:	22 0f       	add	r18, r18
    3486:	33 1f       	adc	r19, r19
    3488:	82 2b       	or	r24, r18
    348a:	93 2b       	or	r25, r19
    348c:	0f 2e       	mov	r0, r31
    348e:	f7 e1       	ldi	r31, 0x17	; 23
    3490:	ff 2e       	mov	r15, r31
    3492:	f0 2d       	mov	r31, r0
    3494:	f8 9e       	mul	r15, r24
    3496:	f0 01       	movw	r30, r0
    3498:	f9 9e       	mul	r15, r25
    349a:	f0 0d       	add	r31, r0
    349c:	11 24       	eor	r1, r1
    349e:	ec 54       	subi	r30, 0x4C	; 76
    34a0:	ff 4d       	sbci	r31, 0xDF	; 223
    34a2:	31 81       	ldd	r19, Z+1	; 0x01
    34a4:	a7 96       	adiw	r28, 0x27	; 39
    34a6:	3f af       	std	Y+63, r19	; 0x3f
    34a8:	a7 97       	sbiw	r28, 0x27	; 39
    34aa:	a6 96       	adiw	r28, 0x26	; 38
    34ac:	1f ae       	std	Y+63, r1	; 0x3f
    34ae:	a6 97       	sbiw	r28, 0x26	; 38
    34b0:	77 1f       	adc	r23, r23
    34b2:	77 27       	eor	r23, r23
    34b4:	77 1f       	adc	r23, r23
    34b6:	87 2f       	mov	r24, r23
    34b8:	90 e0       	ldi	r25, 0x00	; 0
    34ba:	88 0f       	add	r24, r24
    34bc:	99 1f       	adc	r25, r25
    34be:	88 0f       	add	r24, r24
    34c0:	99 1f       	adc	r25, r25
    34c2:	66 fb       	bst	r22, 6
    34c4:	66 27       	eor	r22, r22
    34c6:	60 f9       	bld	r22, 0
    34c8:	a8 96       	adiw	r28, 0x28	; 40
    34ca:	6f af       	std	Y+63, r22	; 0x3f
    34cc:	a8 97       	sbiw	r28, 0x28	; 40
    34ce:	a9 96       	adiw	r28, 0x29	; 41
    34d0:	1f ae       	std	Y+63, r1	; 0x3f
    34d2:	a9 97       	sbiw	r28, 0x29	; 41
    34d4:	a9 96       	adiw	r28, 0x29	; 41
    34d6:	6e ad       	ldd	r22, Y+62	; 0x3e
    34d8:	7f ad       	ldd	r23, Y+63	; 0x3f
    34da:	a9 97       	sbiw	r28, 0x29	; 41
    34dc:	86 2b       	or	r24, r22
    34de:	97 2b       	or	r25, r23
    34e0:	52 95       	swap	r21
    34e2:	51 70       	andi	r21, 0x01	; 1
    34e4:	aa 96       	adiw	r28, 0x2a	; 42
    34e6:	5f af       	std	Y+63, r21	; 0x3f
    34e8:	aa 97       	sbiw	r28, 0x2a	; 42
    34ea:	ab 96       	adiw	r28, 0x2b	; 43
    34ec:	1f ae       	std	Y+63, r1	; 0x3f
    34ee:	ab 97       	sbiw	r28, 0x2b	; 43
    34f0:	ab 96       	adiw	r28, 0x2b	; 43
    34f2:	2e ad       	ldd	r18, Y+62	; 0x3e
    34f4:	3f ad       	ldd	r19, Y+63	; 0x3f
    34f6:	ab 97       	sbiw	r28, 0x2b	; 43
    34f8:	22 0f       	add	r18, r18
    34fa:	33 1f       	adc	r19, r19
    34fc:	82 2b       	or	r24, r18
    34fe:	93 2b       	or	r25, r19
    3500:	45 fb       	bst	r20, 5
    3502:	44 27       	eor	r20, r20
    3504:	40 f9       	bld	r20, 0
    3506:	ac 96       	adiw	r28, 0x2c	; 44
    3508:	4f af       	std	Y+63, r20	; 0x3f
    350a:	ac 97       	sbiw	r28, 0x2c	; 44
    350c:	ad 96       	adiw	r28, 0x2d	; 45
    350e:	1f ae       	std	Y+63, r1	; 0x3f
    3510:	ad 97       	sbiw	r28, 0x2d	; 45
    3512:	ad 96       	adiw	r28, 0x2d	; 45
    3514:	2e ad       	ldd	r18, Y+62	; 0x3e
    3516:	3f ad       	ldd	r19, Y+63	; 0x3f
    3518:	ad 97       	sbiw	r28, 0x2d	; 45
    351a:	22 0f       	add	r18, r18
    351c:	33 1f       	adc	r19, r19
    351e:	22 0f       	add	r18, r18
    3520:	33 1f       	adc	r19, r19
    3522:	22 0f       	add	r18, r18
    3524:	33 1f       	adc	r19, r19
    3526:	82 2b       	or	r24, r18
    3528:	93 2b       	or	r25, r19
    352a:	f8 9e       	mul	r15, r24
    352c:	a0 01       	movw	r20, r0
    352e:	f9 9e       	mul	r15, r25
    3530:	50 0d       	add	r21, r0
    3532:	11 24       	eor	r1, r1
    3534:	fa 01       	movw	r30, r20
    3536:	ec 54       	subi	r30, 0x4C	; 76
    3538:	ff 4d       	sbci	r31, 0xDF	; 223
    353a:	83 81       	ldd	r24, Z+3	; 0x03
    353c:	94 81       	ldd	r25, Z+4	; 0x04
    353e:	a7 96       	adiw	r28, 0x27	; 39
    3540:	ae ad       	ldd	r26, Y+62	; 0x3e
    3542:	bf ad       	ldd	r27, Y+63	; 0x3f
    3544:	a7 97       	sbiw	r28, 0x27	; 39
    3546:	8a 2b       	or	r24, r26
    3548:	9b 2b       	or	r25, r27
    354a:	9f 93       	push	r25
    354c:	8f 93       	push	r24
    354e:	8c e3       	ldi	r24, 0x3C	; 60
    3550:	90 e2       	ldi	r25, 0x20	; 32
    3552:	9f 93       	push	r25
    3554:	8f 93       	push	r24
    3556:	0f ec       	ldi	r16, 0xCF	; 207
    3558:	13 e2       	ldi	r17, 0x23	; 35
    355a:	1f 93       	push	r17
    355c:	0f 93       	push	r16
    355e:	0e 94 93 2d 	call	0x5b26	; 0x5b26 <sprintf>
    3562:	c8 01       	movw	r24, r16
    3564:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    3568:	61 e0       	ldi	r22, 0x01	; 1
    356a:	80 e0       	ldi	r24, 0x00	; 0
    356c:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    3570:	80 91 7a 23 	lds	r24, 0x237A
    3574:	8f 93       	push	r24
    3576:	e9 e7       	ldi	r30, 0x79	; 121
    3578:	f3 e2       	ldi	r31, 0x23	; 35
    357a:	80 81       	ld	r24, Z
    357c:	8f 93       	push	r24
    357e:	84 e4       	ldi	r24, 0x44	; 68
    3580:	90 e2       	ldi	r25, 0x20	; 32
    3582:	9f 93       	push	r25
    3584:	8f 93       	push	r24
    3586:	1f 93       	push	r17
    3588:	0f 93       	push	r16
    358a:	0e 94 93 2d 	call	0x5b26	; 0x5b26 <sprintf>
    358e:	c8 01       	movw	r24, r16
    3590:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    3594:	d6 01       	movw	r26, r12
    3596:	9c 91       	ld	r25, X
    3598:	8c 91       	ld	r24, X
    359a:	2c 91       	ld	r18, X
    359c:	4c 91       	ld	r20, X
    359e:	22 1f       	adc	r18, r18
    35a0:	22 27       	eor	r18, r18
    35a2:	22 1f       	adc	r18, r18
    35a4:	30 e0       	ldi	r19, 0x00	; 0
    35a6:	22 0f       	add	r18, r18
    35a8:	33 1f       	adc	r19, r19
    35aa:	22 0f       	add	r18, r18
    35ac:	33 1f       	adc	r19, r19
    35ae:	96 fb       	bst	r25, 6
    35b0:	99 27       	eor	r25, r25
    35b2:	90 f9       	bld	r25, 0
    35b4:	ae 96       	adiw	r28, 0x2e	; 46
    35b6:	9f af       	std	Y+63, r25	; 0x3f
    35b8:	ae 97       	sbiw	r28, 0x2e	; 46
    35ba:	af 96       	adiw	r28, 0x2f	; 47
    35bc:	1f ae       	std	Y+63, r1	; 0x3f
    35be:	af 97       	sbiw	r28, 0x2f	; 47
    35c0:	af 96       	adiw	r28, 0x2f	; 47
    35c2:	ee ad       	ldd	r30, Y+62	; 0x3e
    35c4:	ff ad       	ldd	r31, Y+63	; 0x3f
    35c6:	af 97       	sbiw	r28, 0x2f	; 47
    35c8:	2e 2b       	or	r18, r30
    35ca:	3f 2b       	or	r19, r31
    35cc:	82 95       	swap	r24
    35ce:	81 70       	andi	r24, 0x01	; 1
    35d0:	e0 96       	adiw	r28, 0x30	; 48
    35d2:	8f af       	std	Y+63, r24	; 0x3f
    35d4:	e0 97       	sbiw	r28, 0x30	; 48
    35d6:	e1 96       	adiw	r28, 0x31	; 49
    35d8:	1f ae       	std	Y+63, r1	; 0x3f
    35da:	e1 97       	sbiw	r28, 0x31	; 49
    35dc:	e1 96       	adiw	r28, 0x31	; 49
    35de:	8e ad       	ldd	r24, Y+62	; 0x3e
    35e0:	9f ad       	ldd	r25, Y+63	; 0x3f
    35e2:	e1 97       	sbiw	r28, 0x31	; 49
    35e4:	88 0f       	add	r24, r24
    35e6:	99 1f       	adc	r25, r25
    35e8:	28 2b       	or	r18, r24
    35ea:	39 2b       	or	r19, r25
    35ec:	45 fb       	bst	r20, 5
    35ee:	44 27       	eor	r20, r20
    35f0:	40 f9       	bld	r20, 0
    35f2:	e2 96       	adiw	r28, 0x32	; 50
    35f4:	4f af       	std	Y+63, r20	; 0x3f
    35f6:	e2 97       	sbiw	r28, 0x32	; 50
    35f8:	e3 96       	adiw	r28, 0x33	; 51
    35fa:	1f ae       	std	Y+63, r1	; 0x3f
    35fc:	e3 97       	sbiw	r28, 0x33	; 51
    35fe:	e3 96       	adiw	r28, 0x33	; 51
    3600:	8e ad       	ldd	r24, Y+62	; 0x3e
    3602:	9f ad       	ldd	r25, Y+63	; 0x3f
    3604:	e3 97       	sbiw	r28, 0x33	; 51
    3606:	88 0f       	add	r24, r24
    3608:	99 1f       	adc	r25, r25
    360a:	88 0f       	add	r24, r24
    360c:	99 1f       	adc	r25, r25
    360e:	88 0f       	add	r24, r24
    3610:	99 1f       	adc	r25, r25
    3612:	28 2b       	or	r18, r24
    3614:	39 2b       	or	r19, r25
    3616:	f2 9e       	mul	r15, r18
    3618:	c0 01       	movw	r24, r0
    361a:	f3 9e       	mul	r15, r19
    361c:	90 0d       	add	r25, r0
    361e:	11 24       	eor	r1, r1
    3620:	fc 01       	movw	r30, r24
    3622:	ec 54       	subi	r30, 0x4C	; 76
    3624:	ff 4d       	sbci	r31, 0xDF	; 223
    3626:	cd bf       	out	0x3d, r28	; 61
    3628:	de bf       	out	0x3e, r29	; 62
    362a:	81 89       	ldd	r24, Z+17	; 0x11
    362c:	88 23       	and	r24, r24
    362e:	09 f4       	brne	.+2      	; 0x3632 <main+0x144a>
    3630:	63 c0       	rjmp	.+198    	; 0x36f8 <main+0x1510>
    3632:	e8 e0       	ldi	r30, 0x08	; 8
    3634:	f6 e0       	ldi	r31, 0x06	; 6
    3636:	90 81       	ld	r25, Z
    3638:	80 81       	ld	r24, Z
    363a:	20 81       	ld	r18, Z
    363c:	40 81       	ld	r20, Z
    363e:	22 1f       	adc	r18, r18
    3640:	22 27       	eor	r18, r18
    3642:	22 1f       	adc	r18, r18
    3644:	30 e0       	ldi	r19, 0x00	; 0
    3646:	22 0f       	add	r18, r18
    3648:	33 1f       	adc	r19, r19
    364a:	22 0f       	add	r18, r18
    364c:	33 1f       	adc	r19, r19
    364e:	96 fb       	bst	r25, 6
    3650:	99 27       	eor	r25, r25
    3652:	90 f9       	bld	r25, 0
    3654:	c7 51       	subi	r28, 0x17	; 23
    3656:	df 4f       	sbci	r29, 0xFF	; 255
    3658:	98 83       	st	Y, r25
    365a:	c9 5e       	subi	r28, 0xE9	; 233
    365c:	d0 40       	sbci	r29, 0x00	; 0
    365e:	c6 51       	subi	r28, 0x16	; 22
    3660:	df 4f       	sbci	r29, 0xFF	; 255
    3662:	18 82       	st	Y, r1
    3664:	ca 5e       	subi	r28, 0xEA	; 234
    3666:	d0 40       	sbci	r29, 0x00	; 0
    3668:	c7 51       	subi	r28, 0x17	; 23
    366a:	df 4f       	sbci	r29, 0xFF	; 255
    366c:	68 81       	ld	r22, Y
    366e:	79 81       	ldd	r23, Y+1	; 0x01
    3670:	c9 5e       	subi	r28, 0xE9	; 233
    3672:	d0 40       	sbci	r29, 0x00	; 0
    3674:	26 2b       	or	r18, r22
    3676:	37 2b       	or	r19, r23
    3678:	82 95       	swap	r24
    367a:	81 70       	andi	r24, 0x01	; 1
    367c:	c5 51       	subi	r28, 0x15	; 21
    367e:	df 4f       	sbci	r29, 0xFF	; 255
    3680:	88 83       	st	Y, r24
    3682:	cb 5e       	subi	r28, 0xEB	; 235
    3684:	d0 40       	sbci	r29, 0x00	; 0
    3686:	c4 51       	subi	r28, 0x14	; 20
    3688:	df 4f       	sbci	r29, 0xFF	; 255
    368a:	18 82       	st	Y, r1
    368c:	cc 5e       	subi	r28, 0xEC	; 236
    368e:	d0 40       	sbci	r29, 0x00	; 0
    3690:	c5 51       	subi	r28, 0x15	; 21
    3692:	df 4f       	sbci	r29, 0xFF	; 255
    3694:	88 81       	ld	r24, Y
    3696:	99 81       	ldd	r25, Y+1	; 0x01
    3698:	cb 5e       	subi	r28, 0xEB	; 235
    369a:	d0 40       	sbci	r29, 0x00	; 0
    369c:	88 0f       	add	r24, r24
    369e:	99 1f       	adc	r25, r25
    36a0:	28 2b       	or	r18, r24
    36a2:	39 2b       	or	r19, r25
    36a4:	45 fb       	bst	r20, 5
    36a6:	44 27       	eor	r20, r20
    36a8:	40 f9       	bld	r20, 0
    36aa:	c3 51       	subi	r28, 0x13	; 19
    36ac:	df 4f       	sbci	r29, 0xFF	; 255
    36ae:	48 83       	st	Y, r20
    36b0:	cd 5e       	subi	r28, 0xED	; 237
    36b2:	d0 40       	sbci	r29, 0x00	; 0
    36b4:	c2 51       	subi	r28, 0x12	; 18
    36b6:	df 4f       	sbci	r29, 0xFF	; 255
    36b8:	18 82       	st	Y, r1
    36ba:	ce 5e       	subi	r28, 0xEE	; 238
    36bc:	d0 40       	sbci	r29, 0x00	; 0
    36be:	c3 51       	subi	r28, 0x13	; 19
    36c0:	df 4f       	sbci	r29, 0xFF	; 255
    36c2:	88 81       	ld	r24, Y
    36c4:	99 81       	ldd	r25, Y+1	; 0x01
    36c6:	cd 5e       	subi	r28, 0xED	; 237
    36c8:	d0 40       	sbci	r29, 0x00	; 0
    36ca:	88 0f       	add	r24, r24
    36cc:	99 1f       	adc	r25, r25
    36ce:	88 0f       	add	r24, r24
    36d0:	99 1f       	adc	r25, r25
    36d2:	88 0f       	add	r24, r24
    36d4:	99 1f       	adc	r25, r25
    36d6:	28 2b       	or	r18, r24
    36d8:	39 2b       	or	r19, r25
    36da:	47 e1       	ldi	r20, 0x17	; 23
    36dc:	42 9f       	mul	r20, r18
    36de:	c0 01       	movw	r24, r0
    36e0:	43 9f       	mul	r20, r19
    36e2:	90 0d       	add	r25, r0
    36e4:	11 24       	eor	r1, r1
    36e6:	fc 01       	movw	r30, r24
    36e8:	ec 54       	subi	r30, 0x4C	; 76
    36ea:	ff 4d       	sbci	r31, 0xDF	; 223
    36ec:	81 89       	ldd	r24, Z+17	; 0x11
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	80 93 a5 20 	sts	0x20A5, r24
    36f4:	90 93 a6 20 	sts	0x20A6, r25
    36f8:	e8 e0       	ldi	r30, 0x08	; 8
    36fa:	f6 e0       	ldi	r31, 0x06	; 6
    36fc:	90 81       	ld	r25, Z
    36fe:	80 81       	ld	r24, Z
    3700:	20 81       	ld	r18, Z
    3702:	40 81       	ld	r20, Z
    3704:	22 1f       	adc	r18, r18
    3706:	22 27       	eor	r18, r18
    3708:	22 1f       	adc	r18, r18
    370a:	30 e0       	ldi	r19, 0x00	; 0
    370c:	22 0f       	add	r18, r18
    370e:	33 1f       	adc	r19, r19
    3710:	22 0f       	add	r18, r18
    3712:	33 1f       	adc	r19, r19
    3714:	96 fb       	bst	r25, 6
    3716:	99 27       	eor	r25, r25
    3718:	90 f9       	bld	r25, 0
    371a:	e4 96       	adiw	r28, 0x34	; 52
    371c:	9f af       	std	Y+63, r25	; 0x3f
    371e:	e4 97       	sbiw	r28, 0x34	; 52
    3720:	e5 96       	adiw	r28, 0x35	; 53
    3722:	1f ae       	std	Y+63, r1	; 0x3f
    3724:	e5 97       	sbiw	r28, 0x35	; 53
    3726:	e5 96       	adiw	r28, 0x35	; 53
    3728:	ae ad       	ldd	r26, Y+62	; 0x3e
    372a:	bf ad       	ldd	r27, Y+63	; 0x3f
    372c:	e5 97       	sbiw	r28, 0x35	; 53
    372e:	2a 2b       	or	r18, r26
    3730:	3b 2b       	or	r19, r27
    3732:	82 95       	swap	r24
    3734:	81 70       	andi	r24, 0x01	; 1
    3736:	e6 96       	adiw	r28, 0x36	; 54
    3738:	8f af       	std	Y+63, r24	; 0x3f
    373a:	e6 97       	sbiw	r28, 0x36	; 54
    373c:	e7 96       	adiw	r28, 0x37	; 55
    373e:	1f ae       	std	Y+63, r1	; 0x3f
    3740:	e7 97       	sbiw	r28, 0x37	; 55
    3742:	e7 96       	adiw	r28, 0x37	; 55
    3744:	8e ad       	ldd	r24, Y+62	; 0x3e
    3746:	9f ad       	ldd	r25, Y+63	; 0x3f
    3748:	e7 97       	sbiw	r28, 0x37	; 55
    374a:	88 0f       	add	r24, r24
    374c:	99 1f       	adc	r25, r25
    374e:	28 2b       	or	r18, r24
    3750:	39 2b       	or	r19, r25
    3752:	45 fb       	bst	r20, 5
    3754:	44 27       	eor	r20, r20
    3756:	40 f9       	bld	r20, 0
    3758:	e8 96       	adiw	r28, 0x38	; 56
    375a:	4f af       	std	Y+63, r20	; 0x3f
    375c:	e8 97       	sbiw	r28, 0x38	; 56
    375e:	e9 96       	adiw	r28, 0x39	; 57
    3760:	1f ae       	std	Y+63, r1	; 0x3f
    3762:	e9 97       	sbiw	r28, 0x39	; 57
    3764:	e9 96       	adiw	r28, 0x39	; 57
    3766:	8e ad       	ldd	r24, Y+62	; 0x3e
    3768:	9f ad       	ldd	r25, Y+63	; 0x3f
    376a:	e9 97       	sbiw	r28, 0x39	; 57
    376c:	88 0f       	add	r24, r24
    376e:	99 1f       	adc	r25, r25
    3770:	88 0f       	add	r24, r24
    3772:	99 1f       	adc	r25, r25
    3774:	88 0f       	add	r24, r24
    3776:	99 1f       	adc	r25, r25
    3778:	28 2b       	or	r18, r24
    377a:	39 2b       	or	r19, r25
    377c:	47 e1       	ldi	r20, 0x17	; 23
    377e:	42 9f       	mul	r20, r18
    3780:	c0 01       	movw	r24, r0
    3782:	43 9f       	mul	r20, r19
    3784:	90 0d       	add	r25, r0
    3786:	11 24       	eor	r1, r1
    3788:	fc 01       	movw	r30, r24
    378a:	ec 54       	subi	r30, 0x4C	; 76
    378c:	ff 4d       	sbci	r31, 0xDF	; 223
    378e:	82 89       	ldd	r24, Z+18	; 0x12
    3790:	88 23       	and	r24, r24
    3792:	19 f0       	breq	.+6      	; 0x379a <main+0x15b2>
    3794:	e0 e6       	ldi	r30, 0x60	; 96
    3796:	f6 e0       	ldi	r31, 0x06	; 6
    3798:	80 85       	ldd	r24, Z+8	; 0x08
    379a:	e0 e0       	ldi	r30, 0x00	; 0
    379c:	f6 e0       	ldi	r31, 0x06	; 6
    379e:	80 85       	ldd	r24, Z+8	; 0x08
    37a0:	82 ff       	sbrs	r24, 2
    37a2:	18 c0       	rjmp	.+48     	; 0x37d4 <main+0x15ec>
    37a4:	e0 e2       	ldi	r30, 0x20	; 32
    37a6:	f6 e0       	ldi	r31, 0x06	; 6
    37a8:	84 81       	ldd	r24, Z+4	; 0x04
    37aa:	80 64       	ori	r24, 0x40	; 64
    37ac:	84 83       	std	Z+4, r24	; 0x04
    37ae:	84 e6       	ldi	r24, 0x64	; 100
    37b0:	90 e0       	ldi	r25, 0x00	; 0
    37b2:	80 93 2a 08 	sts	0x082A, r24
    37b6:	90 93 2b 08 	sts	0x082B, r25
    37ba:	bf ef       	ldi	r27, 0xFF	; 255
    37bc:	e3 ec       	ldi	r30, 0xC3	; 195
    37be:	f9 e0       	ldi	r31, 0x09	; 9
    37c0:	b1 50       	subi	r27, 0x01	; 1
    37c2:	e0 40       	sbci	r30, 0x00	; 0
    37c4:	f0 40       	sbci	r31, 0x00	; 0
    37c6:	e1 f7       	brne	.-8      	; 0x37c0 <main+0x15d8>
    37c8:	00 c0       	rjmp	.+0      	; 0x37ca <main+0x15e2>
    37ca:	00 00       	nop
    37cc:	10 92 2a 08 	sts	0x082A, r1
    37d0:	10 92 2b 08 	sts	0x082B, r1
    37d4:	e8 e0       	ldi	r30, 0x08	; 8
    37d6:	f6 e0       	ldi	r31, 0x06	; 6
    37d8:	70 81       	ld	r23, Z
    37da:	60 81       	ld	r22, Z
    37dc:	10 81       	ld	r17, Z
    37de:	50 81       	ld	r21, Z
    37e0:	30 81       	ld	r19, Z
    37e2:	20 81       	ld	r18, Z
    37e4:	80 81       	ld	r24, Z
    37e6:	40 81       	ld	r20, Z
    37e8:	88 1f       	adc	r24, r24
    37ea:	88 27       	eor	r24, r24
    37ec:	88 1f       	adc	r24, r24
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	88 0f       	add	r24, r24
    37f2:	99 1f       	adc	r25, r25
    37f4:	88 0f       	add	r24, r24
    37f6:	99 1f       	adc	r25, r25
    37f8:	36 fb       	bst	r19, 6
    37fa:	33 27       	eor	r19, r19
    37fc:	30 f9       	bld	r19, 0
    37fe:	ea 96       	adiw	r28, 0x3a	; 58
    3800:	3f af       	std	Y+63, r19	; 0x3f
    3802:	ea 97       	sbiw	r28, 0x3a	; 58
    3804:	eb 96       	adiw	r28, 0x3b	; 59
    3806:	1f ae       	std	Y+63, r1	; 0x3f
    3808:	eb 97       	sbiw	r28, 0x3b	; 59
    380a:	eb 96       	adiw	r28, 0x3b	; 59
    380c:	ae ad       	ldd	r26, Y+62	; 0x3e
    380e:	bf ad       	ldd	r27, Y+63	; 0x3f
    3810:	eb 97       	sbiw	r28, 0x3b	; 59
    3812:	8a 2b       	or	r24, r26
    3814:	9b 2b       	or	r25, r27
    3816:	22 95       	swap	r18
    3818:	21 70       	andi	r18, 0x01	; 1
    381a:	ec 96       	adiw	r28, 0x3c	; 60
    381c:	2f af       	std	Y+63, r18	; 0x3f
    381e:	ec 97       	sbiw	r28, 0x3c	; 60
    3820:	ed 96       	adiw	r28, 0x3d	; 61
    3822:	1f ae       	std	Y+63, r1	; 0x3f
    3824:	ed 97       	sbiw	r28, 0x3d	; 61
    3826:	ed 96       	adiw	r28, 0x3d	; 61
    3828:	2e ad       	ldd	r18, Y+62	; 0x3e
    382a:	3f ad       	ldd	r19, Y+63	; 0x3f
    382c:	ed 97       	sbiw	r28, 0x3d	; 61
    382e:	22 0f       	add	r18, r18
    3830:	33 1f       	adc	r19, r19
    3832:	82 2b       	or	r24, r18
    3834:	93 2b       	or	r25, r19
    3836:	45 fb       	bst	r20, 5
    3838:	44 27       	eor	r20, r20
    383a:	40 f9       	bld	r20, 0
    383c:	ee 96       	adiw	r28, 0x3e	; 62
    383e:	4f af       	std	Y+63, r20	; 0x3f
    3840:	ee 97       	sbiw	r28, 0x3e	; 62
    3842:	ef 96       	adiw	r28, 0x3f	; 63
    3844:	1f ae       	std	Y+63, r1	; 0x3f
    3846:	ef 97       	sbiw	r28, 0x3f	; 63
    3848:	ef 96       	adiw	r28, 0x3f	; 63
    384a:	2e ad       	ldd	r18, Y+62	; 0x3e
    384c:	3f ad       	ldd	r19, Y+63	; 0x3f
    384e:	ef 97       	sbiw	r28, 0x3f	; 63
    3850:	22 0f       	add	r18, r18
    3852:	33 1f       	adc	r19, r19
    3854:	22 0f       	add	r18, r18
    3856:	33 1f       	adc	r19, r19
    3858:	22 0f       	add	r18, r18
    385a:	33 1f       	adc	r19, r19
    385c:	82 2b       	or	r24, r18
    385e:	93 2b       	or	r25, r19
    3860:	47 e1       	ldi	r20, 0x17	; 23
    3862:	48 9f       	mul	r20, r24
    3864:	d0 01       	movw	r26, r0
    3866:	49 9f       	mul	r20, r25
    3868:	b0 0d       	add	r27, r0
    386a:	11 24       	eor	r1, r1
    386c:	9d 01       	movw	r18, r26
    386e:	2c 54       	subi	r18, 0x4C	; 76
    3870:	3f 4d       	sbci	r19, 0xDF	; 223
    3872:	d9 01       	movw	r26, r18
    3874:	11 96       	adiw	r26, 0x01	; 1
    3876:	bc 91       	ld	r27, X
    3878:	c0 58       	subi	r28, 0x80	; 128
    387a:	df 4f       	sbci	r29, 0xFF	; 255
    387c:	b8 83       	st	Y, r27
    387e:	c0 58       	subi	r28, 0x80	; 128
    3880:	d0 40       	sbci	r29, 0x00	; 0
    3882:	c1 58       	subi	r28, 0x81	; 129
    3884:	df 4f       	sbci	r29, 0xFF	; 255
    3886:	18 82       	st	Y, r1
    3888:	cf 57       	subi	r28, 0x7F	; 127
    388a:	d0 40       	sbci	r29, 0x00	; 0
    388c:	11 1f       	adc	r17, r17
    388e:	11 27       	eor	r17, r17
    3890:	11 1f       	adc	r17, r17
    3892:	81 2f       	mov	r24, r17
    3894:	90 e0       	ldi	r25, 0x00	; 0
    3896:	9c 01       	movw	r18, r24
    3898:	22 0f       	add	r18, r18
    389a:	33 1f       	adc	r19, r19
    389c:	22 0f       	add	r18, r18
    389e:	33 1f       	adc	r19, r19
    38a0:	76 fb       	bst	r23, 6
    38a2:	77 27       	eor	r23, r23
    38a4:	70 f9       	bld	r23, 0
    38a6:	cf 57       	subi	r28, 0x7F	; 127
    38a8:	df 4f       	sbci	r29, 0xFF	; 255
    38aa:	78 83       	st	Y, r23
    38ac:	c1 58       	subi	r28, 0x81	; 129
    38ae:	d0 40       	sbci	r29, 0x00	; 0
    38b0:	ce 57       	subi	r28, 0x7E	; 126
    38b2:	df 4f       	sbci	r29, 0xFF	; 255
    38b4:	18 82       	st	Y, r1
    38b6:	c2 58       	subi	r28, 0x82	; 130
    38b8:	d0 40       	sbci	r29, 0x00	; 0
    38ba:	cf 57       	subi	r28, 0x7F	; 127
    38bc:	df 4f       	sbci	r29, 0xFF	; 255
    38be:	88 81       	ld	r24, Y
    38c0:	99 81       	ldd	r25, Y+1	; 0x01
    38c2:	c1 58       	subi	r28, 0x81	; 129
    38c4:	d0 40       	sbci	r29, 0x00	; 0
    38c6:	28 2b       	or	r18, r24
    38c8:	39 2b       	or	r19, r25
    38ca:	62 95       	swap	r22
    38cc:	61 70       	andi	r22, 0x01	; 1
    38ce:	cd 57       	subi	r28, 0x7D	; 125
    38d0:	df 4f       	sbci	r29, 0xFF	; 255
    38d2:	68 83       	st	Y, r22
    38d4:	c3 58       	subi	r28, 0x83	; 131
    38d6:	d0 40       	sbci	r29, 0x00	; 0
    38d8:	cc 57       	subi	r28, 0x7C	; 124
    38da:	df 4f       	sbci	r29, 0xFF	; 255
    38dc:	18 82       	st	Y, r1
    38de:	c4 58       	subi	r28, 0x84	; 132
    38e0:	d0 40       	sbci	r29, 0x00	; 0
    38e2:	cd 57       	subi	r28, 0x7D	; 125
    38e4:	df 4f       	sbci	r29, 0xFF	; 255
    38e6:	88 81       	ld	r24, Y
    38e8:	99 81       	ldd	r25, Y+1	; 0x01
    38ea:	c3 58       	subi	r28, 0x83	; 131
    38ec:	d0 40       	sbci	r29, 0x00	; 0
    38ee:	88 0f       	add	r24, r24
    38f0:	99 1f       	adc	r25, r25
    38f2:	28 2b       	or	r18, r24
    38f4:	39 2b       	or	r19, r25
    38f6:	55 fb       	bst	r21, 5
    38f8:	55 27       	eor	r21, r21
    38fa:	50 f9       	bld	r21, 0
    38fc:	cb 57       	subi	r28, 0x7B	; 123
    38fe:	df 4f       	sbci	r29, 0xFF	; 255
    3900:	58 83       	st	Y, r21
    3902:	c5 58       	subi	r28, 0x85	; 133
    3904:	d0 40       	sbci	r29, 0x00	; 0
    3906:	ca 57       	subi	r28, 0x7A	; 122
    3908:	df 4f       	sbci	r29, 0xFF	; 255
    390a:	18 82       	st	Y, r1
    390c:	c6 58       	subi	r28, 0x86	; 134
    390e:	d0 40       	sbci	r29, 0x00	; 0
    3910:	cb 57       	subi	r28, 0x7B	; 123
    3912:	df 4f       	sbci	r29, 0xFF	; 255
    3914:	88 81       	ld	r24, Y
    3916:	99 81       	ldd	r25, Y+1	; 0x01
    3918:	c5 58       	subi	r28, 0x85	; 133
    391a:	d0 40       	sbci	r29, 0x00	; 0
    391c:	88 0f       	add	r24, r24
    391e:	99 1f       	adc	r25, r25
    3920:	88 0f       	add	r24, r24
    3922:	99 1f       	adc	r25, r25
    3924:	88 0f       	add	r24, r24
    3926:	99 1f       	adc	r25, r25
    3928:	82 2b       	or	r24, r18
    392a:	93 2b       	or	r25, r19
    392c:	48 9f       	mul	r20, r24
    392e:	90 01       	movw	r18, r0
    3930:	49 9f       	mul	r20, r25
    3932:	30 0d       	add	r19, r0
    3934:	11 24       	eor	r1, r1
    3936:	d9 01       	movw	r26, r18
    3938:	ac 54       	subi	r26, 0x4C	; 76
    393a:	bf 4d       	sbci	r27, 0xDF	; 223
    393c:	13 96       	adiw	r26, 0x03	; 3
    393e:	8d 91       	ld	r24, X+
    3940:	9c 91       	ld	r25, X
    3942:	14 97       	sbiw	r26, 0x04	; 4
    3944:	c1 58       	subi	r28, 0x81	; 129
    3946:	df 4f       	sbci	r29, 0xFF	; 255
    3948:	a8 81       	ld	r26, Y
    394a:	b9 81       	ldd	r27, Y+1	; 0x01
    394c:	cf 57       	subi	r28, 0x7F	; 127
    394e:	d0 40       	sbci	r29, 0x00	; 0
    3950:	8a 2b       	or	r24, r26
    3952:	9b 2b       	or	r25, r27
    3954:	58 e2       	ldi	r21, 0x28	; 40
    3956:	85 9f       	mul	r24, r21
    3958:	80 2d       	mov	r24, r0
    395a:	11 24       	eor	r1, r1
    395c:	80 93 87 23 	sts	0x2387, r24
    3960:	00 81       	ld	r16, Z
    3962:	70 81       	ld	r23, Z
    3964:	10 81       	ld	r17, Z
    3966:	60 81       	ld	r22, Z
    3968:	30 81       	ld	r19, Z
    396a:	20 81       	ld	r18, Z
    396c:	80 81       	ld	r24, Z
    396e:	f0 80       	ld	r15, Z
    3970:	88 1f       	adc	r24, r24
    3972:	88 27       	eor	r24, r24
    3974:	88 1f       	adc	r24, r24
    3976:	90 e0       	ldi	r25, 0x00	; 0
    3978:	88 0f       	add	r24, r24
    397a:	99 1f       	adc	r25, r25
    397c:	88 0f       	add	r24, r24
    397e:	99 1f       	adc	r25, r25
    3980:	36 fb       	bst	r19, 6
    3982:	33 27       	eor	r19, r19
    3984:	30 f9       	bld	r19, 0
    3986:	c9 57       	subi	r28, 0x79	; 121
    3988:	df 4f       	sbci	r29, 0xFF	; 255
    398a:	38 83       	st	Y, r19
    398c:	c7 58       	subi	r28, 0x87	; 135
    398e:	d0 40       	sbci	r29, 0x00	; 0
    3990:	c8 57       	subi	r28, 0x78	; 120
    3992:	df 4f       	sbci	r29, 0xFF	; 255
    3994:	18 82       	st	Y, r1
    3996:	c8 58       	subi	r28, 0x88	; 136
    3998:	d0 40       	sbci	r29, 0x00	; 0
    399a:	c9 57       	subi	r28, 0x79	; 121
    399c:	df 4f       	sbci	r29, 0xFF	; 255
    399e:	a8 81       	ld	r26, Y
    39a0:	b9 81       	ldd	r27, Y+1	; 0x01
    39a2:	c7 58       	subi	r28, 0x87	; 135
    39a4:	d0 40       	sbci	r29, 0x00	; 0
    39a6:	8a 2b       	or	r24, r26
    39a8:	9b 2b       	or	r25, r27
    39aa:	22 95       	swap	r18
    39ac:	21 70       	andi	r18, 0x01	; 1
    39ae:	c7 57       	subi	r28, 0x77	; 119
    39b0:	df 4f       	sbci	r29, 0xFF	; 255
    39b2:	28 83       	st	Y, r18
    39b4:	c9 58       	subi	r28, 0x89	; 137
    39b6:	d0 40       	sbci	r29, 0x00	; 0
    39b8:	c6 57       	subi	r28, 0x76	; 118
    39ba:	df 4f       	sbci	r29, 0xFF	; 255
    39bc:	18 82       	st	Y, r1
    39be:	ca 58       	subi	r28, 0x8A	; 138
    39c0:	d0 40       	sbci	r29, 0x00	; 0
    39c2:	c7 57       	subi	r28, 0x77	; 119
    39c4:	df 4f       	sbci	r29, 0xFF	; 255
    39c6:	28 81       	ld	r18, Y
    39c8:	39 81       	ldd	r19, Y+1	; 0x01
    39ca:	c9 58       	subi	r28, 0x89	; 137
    39cc:	d0 40       	sbci	r29, 0x00	; 0
    39ce:	22 0f       	add	r18, r18
    39d0:	33 1f       	adc	r19, r19
    39d2:	82 2b       	or	r24, r18
    39d4:	93 2b       	or	r25, r19
    39d6:	f5 fa       	bst	r15, 5
    39d8:	ff 24       	eor	r15, r15
    39da:	f0 f8       	bld	r15, 0
    39dc:	c5 57       	subi	r28, 0x75	; 117
    39de:	df 4f       	sbci	r29, 0xFF	; 255
    39e0:	f8 82       	st	Y, r15
    39e2:	cb 58       	subi	r28, 0x8B	; 139
    39e4:	d0 40       	sbci	r29, 0x00	; 0
    39e6:	c4 57       	subi	r28, 0x74	; 116
    39e8:	df 4f       	sbci	r29, 0xFF	; 255
    39ea:	18 82       	st	Y, r1
    39ec:	cc 58       	subi	r28, 0x8C	; 140
    39ee:	d0 40       	sbci	r29, 0x00	; 0
    39f0:	c5 57       	subi	r28, 0x75	; 117
    39f2:	df 4f       	sbci	r29, 0xFF	; 255
    39f4:	28 81       	ld	r18, Y
    39f6:	39 81       	ldd	r19, Y+1	; 0x01
    39f8:	cb 58       	subi	r28, 0x8B	; 139
    39fa:	d0 40       	sbci	r29, 0x00	; 0
    39fc:	22 0f       	add	r18, r18
    39fe:	33 1f       	adc	r19, r19
    3a00:	22 0f       	add	r18, r18
    3a02:	33 1f       	adc	r19, r19
    3a04:	22 0f       	add	r18, r18
    3a06:	33 1f       	adc	r19, r19
    3a08:	82 2b       	or	r24, r18
    3a0a:	93 2b       	or	r25, r19
    3a0c:	48 9f       	mul	r20, r24
    3a0e:	d0 01       	movw	r26, r0
    3a10:	49 9f       	mul	r20, r25
    3a12:	b0 0d       	add	r27, r0
    3a14:	11 24       	eor	r1, r1
    3a16:	9d 01       	movw	r18, r26
    3a18:	2c 54       	subi	r18, 0x4C	; 76
    3a1a:	3f 4d       	sbci	r19, 0xDF	; 223
    3a1c:	d9 01       	movw	r26, r18
    3a1e:	11 96       	adiw	r26, 0x01	; 1
    3a20:	bc 91       	ld	r27, X
    3a22:	c2 57       	subi	r28, 0x72	; 114
    3a24:	df 4f       	sbci	r29, 0xFF	; 255
    3a26:	b8 83       	st	Y, r27
    3a28:	ce 58       	subi	r28, 0x8E	; 142
    3a2a:	d0 40       	sbci	r29, 0x00	; 0
    3a2c:	c3 57       	subi	r28, 0x73	; 115
    3a2e:	df 4f       	sbci	r29, 0xFF	; 255
    3a30:	18 82       	st	Y, r1
    3a32:	cd 58       	subi	r28, 0x8D	; 141
    3a34:	d0 40       	sbci	r29, 0x00	; 0
    3a36:	11 1f       	adc	r17, r17
    3a38:	11 27       	eor	r17, r17
    3a3a:	11 1f       	adc	r17, r17
    3a3c:	21 2f       	mov	r18, r17
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	22 0f       	add	r18, r18
    3a42:	33 1f       	adc	r19, r19
    3a44:	22 0f       	add	r18, r18
    3a46:	33 1f       	adc	r19, r19
    3a48:	06 fb       	bst	r16, 6
    3a4a:	00 27       	eor	r16, r16
    3a4c:	00 f9       	bld	r16, 0
    3a4e:	c1 57       	subi	r28, 0x71	; 113
    3a50:	df 4f       	sbci	r29, 0xFF	; 255
    3a52:	08 83       	st	Y, r16
    3a54:	cf 58       	subi	r28, 0x8F	; 143
    3a56:	d0 40       	sbci	r29, 0x00	; 0
    3a58:	c0 57       	subi	r28, 0x70	; 112
    3a5a:	df 4f       	sbci	r29, 0xFF	; 255
    3a5c:	18 82       	st	Y, r1
    3a5e:	c0 59       	subi	r28, 0x90	; 144
    3a60:	d0 40       	sbci	r29, 0x00	; 0
    3a62:	c1 57       	subi	r28, 0x71	; 113
    3a64:	df 4f       	sbci	r29, 0xFF	; 255
    3a66:	88 81       	ld	r24, Y
    3a68:	99 81       	ldd	r25, Y+1	; 0x01
    3a6a:	cf 58       	subi	r28, 0x8F	; 143
    3a6c:	d0 40       	sbci	r29, 0x00	; 0
    3a6e:	28 2b       	or	r18, r24
    3a70:	39 2b       	or	r19, r25
    3a72:	72 95       	swap	r23
    3a74:	71 70       	andi	r23, 0x01	; 1
    3a76:	cf 56       	subi	r28, 0x6F	; 111
    3a78:	df 4f       	sbci	r29, 0xFF	; 255
    3a7a:	78 83       	st	Y, r23
    3a7c:	c1 59       	subi	r28, 0x91	; 145
    3a7e:	d0 40       	sbci	r29, 0x00	; 0
    3a80:	ce 56       	subi	r28, 0x6E	; 110
    3a82:	df 4f       	sbci	r29, 0xFF	; 255
    3a84:	18 82       	st	Y, r1
    3a86:	c2 59       	subi	r28, 0x92	; 146
    3a88:	d0 40       	sbci	r29, 0x00	; 0
    3a8a:	cf 56       	subi	r28, 0x6F	; 111
    3a8c:	df 4f       	sbci	r29, 0xFF	; 255
    3a8e:	88 81       	ld	r24, Y
    3a90:	99 81       	ldd	r25, Y+1	; 0x01
    3a92:	c1 59       	subi	r28, 0x91	; 145
    3a94:	d0 40       	sbci	r29, 0x00	; 0
    3a96:	88 0f       	add	r24, r24
    3a98:	99 1f       	adc	r25, r25
    3a9a:	82 2b       	or	r24, r18
    3a9c:	93 2b       	or	r25, r19
    3a9e:	65 fb       	bst	r22, 5
    3aa0:	66 27       	eor	r22, r22
    3aa2:	60 f9       	bld	r22, 0
    3aa4:	cd 56       	subi	r28, 0x6D	; 109
    3aa6:	df 4f       	sbci	r29, 0xFF	; 255
    3aa8:	68 83       	st	Y, r22
    3aaa:	c3 59       	subi	r28, 0x93	; 147
    3aac:	d0 40       	sbci	r29, 0x00	; 0
    3aae:	cc 56       	subi	r28, 0x6C	; 108
    3ab0:	df 4f       	sbci	r29, 0xFF	; 255
    3ab2:	18 82       	st	Y, r1
    3ab4:	c4 59       	subi	r28, 0x94	; 148
    3ab6:	d0 40       	sbci	r29, 0x00	; 0
    3ab8:	cd 56       	subi	r28, 0x6D	; 109
    3aba:	df 4f       	sbci	r29, 0xFF	; 255
    3abc:	28 81       	ld	r18, Y
    3abe:	39 81       	ldd	r19, Y+1	; 0x01
    3ac0:	c3 59       	subi	r28, 0x93	; 147
    3ac2:	d0 40       	sbci	r29, 0x00	; 0
    3ac4:	22 0f       	add	r18, r18
    3ac6:	33 1f       	adc	r19, r19
    3ac8:	22 0f       	add	r18, r18
    3aca:	33 1f       	adc	r19, r19
    3acc:	22 0f       	add	r18, r18
    3ace:	33 1f       	adc	r19, r19
    3ad0:	82 2b       	or	r24, r18
    3ad2:	93 2b       	or	r25, r19
    3ad4:	48 9f       	mul	r20, r24
    3ad6:	b0 01       	movw	r22, r0
    3ad8:	49 9f       	mul	r20, r25
    3ada:	70 0d       	add	r23, r0
    3adc:	11 24       	eor	r1, r1
    3ade:	db 01       	movw	r26, r22
    3ae0:	ac 54       	subi	r26, 0x4C	; 76
    3ae2:	bf 4d       	sbci	r27, 0xDF	; 223
    3ae4:	13 96       	adiw	r26, 0x03	; 3
    3ae6:	2d 91       	ld	r18, X+
    3ae8:	3c 91       	ld	r19, X
    3aea:	14 97       	sbiw	r26, 0x04	; 4
    3aec:	c3 57       	subi	r28, 0x73	; 115
    3aee:	df 4f       	sbci	r29, 0xFF	; 255
    3af0:	a8 81       	ld	r26, Y
    3af2:	b9 81       	ldd	r27, Y+1	; 0x01
    3af4:	cd 58       	subi	r28, 0x8D	; 141
    3af6:	d0 40       	sbci	r29, 0x00	; 0
    3af8:	2a 2b       	or	r18, r26
    3afa:	3b 2b       	or	r19, r27
    3afc:	52 9f       	mul	r21, r18
    3afe:	c0 01       	movw	r24, r0
    3b00:	53 9f       	mul	r21, r19
    3b02:	90 0d       	add	r25, r0
    3b04:	11 24       	eor	r1, r1
    3b06:	90 93 88 23 	sts	0x2388, r25
    3b0a:	00 81       	ld	r16, Z
    3b0c:	70 81       	ld	r23, Z
    3b0e:	10 81       	ld	r17, Z
    3b10:	60 81       	ld	r22, Z
    3b12:	30 81       	ld	r19, Z
    3b14:	20 81       	ld	r18, Z
    3b16:	80 81       	ld	r24, Z
    3b18:	f0 80       	ld	r15, Z
    3b1a:	88 1f       	adc	r24, r24
    3b1c:	88 27       	eor	r24, r24
    3b1e:	88 1f       	adc	r24, r24
    3b20:	90 e0       	ldi	r25, 0x00	; 0
    3b22:	88 0f       	add	r24, r24
    3b24:	99 1f       	adc	r25, r25
    3b26:	88 0f       	add	r24, r24
    3b28:	99 1f       	adc	r25, r25
    3b2a:	36 fb       	bst	r19, 6
    3b2c:	33 27       	eor	r19, r19
    3b2e:	30 f9       	bld	r19, 0
    3b30:	cb 56       	subi	r28, 0x6B	; 107
    3b32:	df 4f       	sbci	r29, 0xFF	; 255
    3b34:	38 83       	st	Y, r19
    3b36:	c5 59       	subi	r28, 0x95	; 149
    3b38:	d0 40       	sbci	r29, 0x00	; 0
    3b3a:	ca 56       	subi	r28, 0x6A	; 106
    3b3c:	df 4f       	sbci	r29, 0xFF	; 255
    3b3e:	18 82       	st	Y, r1
    3b40:	c6 59       	subi	r28, 0x96	; 150
    3b42:	d0 40       	sbci	r29, 0x00	; 0
    3b44:	cb 56       	subi	r28, 0x6B	; 107
    3b46:	df 4f       	sbci	r29, 0xFF	; 255
    3b48:	a8 81       	ld	r26, Y
    3b4a:	b9 81       	ldd	r27, Y+1	; 0x01
    3b4c:	c5 59       	subi	r28, 0x95	; 149
    3b4e:	d0 40       	sbci	r29, 0x00	; 0
    3b50:	8a 2b       	or	r24, r26
    3b52:	9b 2b       	or	r25, r27
    3b54:	22 95       	swap	r18
    3b56:	21 70       	andi	r18, 0x01	; 1
    3b58:	c9 56       	subi	r28, 0x69	; 105
    3b5a:	df 4f       	sbci	r29, 0xFF	; 255
    3b5c:	28 83       	st	Y, r18
    3b5e:	c7 59       	subi	r28, 0x97	; 151
    3b60:	d0 40       	sbci	r29, 0x00	; 0
    3b62:	c8 56       	subi	r28, 0x68	; 104
    3b64:	df 4f       	sbci	r29, 0xFF	; 255
    3b66:	18 82       	st	Y, r1
    3b68:	c8 59       	subi	r28, 0x98	; 152
    3b6a:	d0 40       	sbci	r29, 0x00	; 0
    3b6c:	c9 56       	subi	r28, 0x69	; 105
    3b6e:	df 4f       	sbci	r29, 0xFF	; 255
    3b70:	28 81       	ld	r18, Y
    3b72:	39 81       	ldd	r19, Y+1	; 0x01
    3b74:	c7 59       	subi	r28, 0x97	; 151
    3b76:	d0 40       	sbci	r29, 0x00	; 0
    3b78:	22 0f       	add	r18, r18
    3b7a:	33 1f       	adc	r19, r19
    3b7c:	82 2b       	or	r24, r18
    3b7e:	93 2b       	or	r25, r19
    3b80:	f5 fa       	bst	r15, 5
    3b82:	ff 24       	eor	r15, r15
    3b84:	f0 f8       	bld	r15, 0
    3b86:	c7 56       	subi	r28, 0x67	; 103
    3b88:	df 4f       	sbci	r29, 0xFF	; 255
    3b8a:	f8 82       	st	Y, r15
    3b8c:	c9 59       	subi	r28, 0x99	; 153
    3b8e:	d0 40       	sbci	r29, 0x00	; 0
    3b90:	c6 56       	subi	r28, 0x66	; 102
    3b92:	df 4f       	sbci	r29, 0xFF	; 255
    3b94:	18 82       	st	Y, r1
    3b96:	ca 59       	subi	r28, 0x9A	; 154
    3b98:	d0 40       	sbci	r29, 0x00	; 0
    3b9a:	c7 56       	subi	r28, 0x67	; 103
    3b9c:	df 4f       	sbci	r29, 0xFF	; 255
    3b9e:	28 81       	ld	r18, Y
    3ba0:	39 81       	ldd	r19, Y+1	; 0x01
    3ba2:	c9 59       	subi	r28, 0x99	; 153
    3ba4:	d0 40       	sbci	r29, 0x00	; 0
    3ba6:	22 0f       	add	r18, r18
    3ba8:	33 1f       	adc	r19, r19
    3baa:	22 0f       	add	r18, r18
    3bac:	33 1f       	adc	r19, r19
    3bae:	22 0f       	add	r18, r18
    3bb0:	33 1f       	adc	r19, r19
    3bb2:	82 2b       	or	r24, r18
    3bb4:	93 2b       	or	r25, r19
    3bb6:	48 9f       	mul	r20, r24
    3bb8:	d0 01       	movw	r26, r0
    3bba:	49 9f       	mul	r20, r25
    3bbc:	b0 0d       	add	r27, r0
    3bbe:	11 24       	eor	r1, r1
    3bc0:	9d 01       	movw	r18, r26
    3bc2:	2c 54       	subi	r18, 0x4C	; 76
    3bc4:	3f 4d       	sbci	r19, 0xDF	; 223
    3bc6:	d9 01       	movw	r26, r18
    3bc8:	15 96       	adiw	r26, 0x05	; 5
    3bca:	bc 91       	ld	r27, X
    3bcc:	c4 56       	subi	r28, 0x64	; 100
    3bce:	df 4f       	sbci	r29, 0xFF	; 255
    3bd0:	b8 83       	st	Y, r27
    3bd2:	cc 59       	subi	r28, 0x9C	; 156
    3bd4:	d0 40       	sbci	r29, 0x00	; 0
    3bd6:	c5 56       	subi	r28, 0x65	; 101
    3bd8:	df 4f       	sbci	r29, 0xFF	; 255
    3bda:	18 82       	st	Y, r1
    3bdc:	cb 59       	subi	r28, 0x9B	; 155
    3bde:	d0 40       	sbci	r29, 0x00	; 0
    3be0:	11 1f       	adc	r17, r17
    3be2:	11 27       	eor	r17, r17
    3be4:	11 1f       	adc	r17, r17
    3be6:	21 2f       	mov	r18, r17
    3be8:	30 e0       	ldi	r19, 0x00	; 0
    3bea:	22 0f       	add	r18, r18
    3bec:	33 1f       	adc	r19, r19
    3bee:	22 0f       	add	r18, r18
    3bf0:	33 1f       	adc	r19, r19
    3bf2:	06 fb       	bst	r16, 6
    3bf4:	00 27       	eor	r16, r16
    3bf6:	00 f9       	bld	r16, 0
    3bf8:	c3 56       	subi	r28, 0x63	; 99
    3bfa:	df 4f       	sbci	r29, 0xFF	; 255
    3bfc:	08 83       	st	Y, r16
    3bfe:	cd 59       	subi	r28, 0x9D	; 157
    3c00:	d0 40       	sbci	r29, 0x00	; 0
    3c02:	c2 56       	subi	r28, 0x62	; 98
    3c04:	df 4f       	sbci	r29, 0xFF	; 255
    3c06:	18 82       	st	Y, r1
    3c08:	ce 59       	subi	r28, 0x9E	; 158
    3c0a:	d0 40       	sbci	r29, 0x00	; 0
    3c0c:	c3 56       	subi	r28, 0x63	; 99
    3c0e:	df 4f       	sbci	r29, 0xFF	; 255
    3c10:	88 81       	ld	r24, Y
    3c12:	99 81       	ldd	r25, Y+1	; 0x01
    3c14:	cd 59       	subi	r28, 0x9D	; 157
    3c16:	d0 40       	sbci	r29, 0x00	; 0
    3c18:	28 2b       	or	r18, r24
    3c1a:	39 2b       	or	r19, r25
    3c1c:	72 95       	swap	r23
    3c1e:	71 70       	andi	r23, 0x01	; 1
    3c20:	c1 56       	subi	r28, 0x61	; 97
    3c22:	df 4f       	sbci	r29, 0xFF	; 255
    3c24:	78 83       	st	Y, r23
    3c26:	cf 59       	subi	r28, 0x9F	; 159
    3c28:	d0 40       	sbci	r29, 0x00	; 0
    3c2a:	c0 56       	subi	r28, 0x60	; 96
    3c2c:	df 4f       	sbci	r29, 0xFF	; 255
    3c2e:	18 82       	st	Y, r1
    3c30:	c0 5a       	subi	r28, 0xA0	; 160
    3c32:	d0 40       	sbci	r29, 0x00	; 0
    3c34:	c1 56       	subi	r28, 0x61	; 97
    3c36:	df 4f       	sbci	r29, 0xFF	; 255
    3c38:	88 81       	ld	r24, Y
    3c3a:	99 81       	ldd	r25, Y+1	; 0x01
    3c3c:	cf 59       	subi	r28, 0x9F	; 159
    3c3e:	d0 40       	sbci	r29, 0x00	; 0
    3c40:	88 0f       	add	r24, r24
    3c42:	99 1f       	adc	r25, r25
    3c44:	82 2b       	or	r24, r18
    3c46:	93 2b       	or	r25, r19
    3c48:	65 fb       	bst	r22, 5
    3c4a:	66 27       	eor	r22, r22
    3c4c:	60 f9       	bld	r22, 0
    3c4e:	cf 55       	subi	r28, 0x5F	; 95
    3c50:	df 4f       	sbci	r29, 0xFF	; 255
    3c52:	68 83       	st	Y, r22
    3c54:	c1 5a       	subi	r28, 0xA1	; 161
    3c56:	d0 40       	sbci	r29, 0x00	; 0
    3c58:	ce 55       	subi	r28, 0x5E	; 94
    3c5a:	df 4f       	sbci	r29, 0xFF	; 255
    3c5c:	18 82       	st	Y, r1
    3c5e:	c2 5a       	subi	r28, 0xA2	; 162
    3c60:	d0 40       	sbci	r29, 0x00	; 0
    3c62:	cf 55       	subi	r28, 0x5F	; 95
    3c64:	df 4f       	sbci	r29, 0xFF	; 255
    3c66:	28 81       	ld	r18, Y
    3c68:	39 81       	ldd	r19, Y+1	; 0x01
    3c6a:	c1 5a       	subi	r28, 0xA1	; 161
    3c6c:	d0 40       	sbci	r29, 0x00	; 0
    3c6e:	22 0f       	add	r18, r18
    3c70:	33 1f       	adc	r19, r19
    3c72:	22 0f       	add	r18, r18
    3c74:	33 1f       	adc	r19, r19
    3c76:	22 0f       	add	r18, r18
    3c78:	33 1f       	adc	r19, r19
    3c7a:	82 2b       	or	r24, r18
    3c7c:	93 2b       	or	r25, r19
    3c7e:	48 9f       	mul	r20, r24
    3c80:	b0 01       	movw	r22, r0
    3c82:	49 9f       	mul	r20, r25
    3c84:	70 0d       	add	r23, r0
    3c86:	11 24       	eor	r1, r1
    3c88:	db 01       	movw	r26, r22
    3c8a:	ac 54       	subi	r26, 0x4C	; 76
    3c8c:	bf 4d       	sbci	r27, 0xDF	; 223
    3c8e:	17 96       	adiw	r26, 0x07	; 7
    3c90:	8d 91       	ld	r24, X+
    3c92:	9c 91       	ld	r25, X
    3c94:	18 97       	sbiw	r26, 0x08	; 8
    3c96:	c5 56       	subi	r28, 0x65	; 101
    3c98:	df 4f       	sbci	r29, 0xFF	; 255
    3c9a:	a8 81       	ld	r26, Y
    3c9c:	b9 81       	ldd	r27, Y+1	; 0x01
    3c9e:	cb 59       	subi	r28, 0x9B	; 155
    3ca0:	d0 40       	sbci	r29, 0x00	; 0
    3ca2:	8a 2b       	or	r24, r26
    3ca4:	9b 2b       	or	r25, r27
    3ca6:	85 9f       	mul	r24, r21
    3ca8:	80 2d       	mov	r24, r0
    3caa:	11 24       	eor	r1, r1
    3cac:	80 93 89 23 	sts	0x2389, r24
    3cb0:	00 81       	ld	r16, Z
    3cb2:	70 81       	ld	r23, Z
    3cb4:	10 81       	ld	r17, Z
    3cb6:	60 81       	ld	r22, Z
    3cb8:	30 81       	ld	r19, Z
    3cba:	20 81       	ld	r18, Z
    3cbc:	80 81       	ld	r24, Z
    3cbe:	f0 80       	ld	r15, Z
    3cc0:	88 1f       	adc	r24, r24
    3cc2:	88 27       	eor	r24, r24
    3cc4:	88 1f       	adc	r24, r24
    3cc6:	90 e0       	ldi	r25, 0x00	; 0
    3cc8:	88 0f       	add	r24, r24
    3cca:	99 1f       	adc	r25, r25
    3ccc:	88 0f       	add	r24, r24
    3cce:	99 1f       	adc	r25, r25
    3cd0:	36 fb       	bst	r19, 6
    3cd2:	33 27       	eor	r19, r19
    3cd4:	30 f9       	bld	r19, 0
    3cd6:	cd 55       	subi	r28, 0x5D	; 93
    3cd8:	df 4f       	sbci	r29, 0xFF	; 255
    3cda:	38 83       	st	Y, r19
    3cdc:	c3 5a       	subi	r28, 0xA3	; 163
    3cde:	d0 40       	sbci	r29, 0x00	; 0
    3ce0:	cc 55       	subi	r28, 0x5C	; 92
    3ce2:	df 4f       	sbci	r29, 0xFF	; 255
    3ce4:	18 82       	st	Y, r1
    3ce6:	c4 5a       	subi	r28, 0xA4	; 164
    3ce8:	d0 40       	sbci	r29, 0x00	; 0
    3cea:	cd 55       	subi	r28, 0x5D	; 93
    3cec:	df 4f       	sbci	r29, 0xFF	; 255
    3cee:	a8 81       	ld	r26, Y
    3cf0:	b9 81       	ldd	r27, Y+1	; 0x01
    3cf2:	c3 5a       	subi	r28, 0xA3	; 163
    3cf4:	d0 40       	sbci	r29, 0x00	; 0
    3cf6:	8a 2b       	or	r24, r26
    3cf8:	9b 2b       	or	r25, r27
    3cfa:	22 95       	swap	r18
    3cfc:	21 70       	andi	r18, 0x01	; 1
    3cfe:	cb 55       	subi	r28, 0x5B	; 91
    3d00:	df 4f       	sbci	r29, 0xFF	; 255
    3d02:	28 83       	st	Y, r18
    3d04:	c5 5a       	subi	r28, 0xA5	; 165
    3d06:	d0 40       	sbci	r29, 0x00	; 0
    3d08:	ca 55       	subi	r28, 0x5A	; 90
    3d0a:	df 4f       	sbci	r29, 0xFF	; 255
    3d0c:	18 82       	st	Y, r1
    3d0e:	c6 5a       	subi	r28, 0xA6	; 166
    3d10:	d0 40       	sbci	r29, 0x00	; 0
    3d12:	cb 55       	subi	r28, 0x5B	; 91
    3d14:	df 4f       	sbci	r29, 0xFF	; 255
    3d16:	28 81       	ld	r18, Y
    3d18:	39 81       	ldd	r19, Y+1	; 0x01
    3d1a:	c5 5a       	subi	r28, 0xA5	; 165
    3d1c:	d0 40       	sbci	r29, 0x00	; 0
    3d1e:	22 0f       	add	r18, r18
    3d20:	33 1f       	adc	r19, r19
    3d22:	82 2b       	or	r24, r18
    3d24:	93 2b       	or	r25, r19
    3d26:	f5 fa       	bst	r15, 5
    3d28:	ff 24       	eor	r15, r15
    3d2a:	f0 f8       	bld	r15, 0
    3d2c:	c9 55       	subi	r28, 0x59	; 89
    3d2e:	df 4f       	sbci	r29, 0xFF	; 255
    3d30:	f8 82       	st	Y, r15
    3d32:	c7 5a       	subi	r28, 0xA7	; 167
    3d34:	d0 40       	sbci	r29, 0x00	; 0
    3d36:	c8 55       	subi	r28, 0x58	; 88
    3d38:	df 4f       	sbci	r29, 0xFF	; 255
    3d3a:	18 82       	st	Y, r1
    3d3c:	c8 5a       	subi	r28, 0xA8	; 168
    3d3e:	d0 40       	sbci	r29, 0x00	; 0
    3d40:	c9 55       	subi	r28, 0x59	; 89
    3d42:	df 4f       	sbci	r29, 0xFF	; 255
    3d44:	28 81       	ld	r18, Y
    3d46:	39 81       	ldd	r19, Y+1	; 0x01
    3d48:	c7 5a       	subi	r28, 0xA7	; 167
    3d4a:	d0 40       	sbci	r29, 0x00	; 0
    3d4c:	22 0f       	add	r18, r18
    3d4e:	33 1f       	adc	r19, r19
    3d50:	22 0f       	add	r18, r18
    3d52:	33 1f       	adc	r19, r19
    3d54:	22 0f       	add	r18, r18
    3d56:	33 1f       	adc	r19, r19
    3d58:	82 2b       	or	r24, r18
    3d5a:	93 2b       	or	r25, r19
    3d5c:	48 9f       	mul	r20, r24
    3d5e:	d0 01       	movw	r26, r0
    3d60:	49 9f       	mul	r20, r25
    3d62:	b0 0d       	add	r27, r0
    3d64:	11 24       	eor	r1, r1
    3d66:	9d 01       	movw	r18, r26
    3d68:	2c 54       	subi	r18, 0x4C	; 76
    3d6a:	3f 4d       	sbci	r19, 0xDF	; 223
    3d6c:	d9 01       	movw	r26, r18
    3d6e:	15 96       	adiw	r26, 0x05	; 5
    3d70:	bc 91       	ld	r27, X
    3d72:	c6 55       	subi	r28, 0x56	; 86
    3d74:	df 4f       	sbci	r29, 0xFF	; 255
    3d76:	b8 83       	st	Y, r27
    3d78:	ca 5a       	subi	r28, 0xAA	; 170
    3d7a:	d0 40       	sbci	r29, 0x00	; 0
    3d7c:	c7 55       	subi	r28, 0x57	; 87
    3d7e:	df 4f       	sbci	r29, 0xFF	; 255
    3d80:	18 82       	st	Y, r1
    3d82:	c9 5a       	subi	r28, 0xA9	; 169
    3d84:	d0 40       	sbci	r29, 0x00	; 0
    3d86:	11 1f       	adc	r17, r17
    3d88:	11 27       	eor	r17, r17
    3d8a:	11 1f       	adc	r17, r17
    3d8c:	21 2f       	mov	r18, r17
    3d8e:	30 e0       	ldi	r19, 0x00	; 0
    3d90:	22 0f       	add	r18, r18
    3d92:	33 1f       	adc	r19, r19
    3d94:	22 0f       	add	r18, r18
    3d96:	33 1f       	adc	r19, r19
    3d98:	06 fb       	bst	r16, 6
    3d9a:	00 27       	eor	r16, r16
    3d9c:	00 f9       	bld	r16, 0
    3d9e:	c5 55       	subi	r28, 0x55	; 85
    3da0:	df 4f       	sbci	r29, 0xFF	; 255
    3da2:	08 83       	st	Y, r16
    3da4:	cb 5a       	subi	r28, 0xAB	; 171
    3da6:	d0 40       	sbci	r29, 0x00	; 0
    3da8:	c4 55       	subi	r28, 0x54	; 84
    3daa:	df 4f       	sbci	r29, 0xFF	; 255
    3dac:	18 82       	st	Y, r1
    3dae:	cc 5a       	subi	r28, 0xAC	; 172
    3db0:	d0 40       	sbci	r29, 0x00	; 0
    3db2:	c5 55       	subi	r28, 0x55	; 85
    3db4:	df 4f       	sbci	r29, 0xFF	; 255
    3db6:	88 81       	ld	r24, Y
    3db8:	99 81       	ldd	r25, Y+1	; 0x01
    3dba:	cb 5a       	subi	r28, 0xAB	; 171
    3dbc:	d0 40       	sbci	r29, 0x00	; 0
    3dbe:	28 2b       	or	r18, r24
    3dc0:	39 2b       	or	r19, r25
    3dc2:	72 95       	swap	r23
    3dc4:	71 70       	andi	r23, 0x01	; 1
    3dc6:	c3 55       	subi	r28, 0x53	; 83
    3dc8:	df 4f       	sbci	r29, 0xFF	; 255
    3dca:	78 83       	st	Y, r23
    3dcc:	cd 5a       	subi	r28, 0xAD	; 173
    3dce:	d0 40       	sbci	r29, 0x00	; 0
    3dd0:	c2 55       	subi	r28, 0x52	; 82
    3dd2:	df 4f       	sbci	r29, 0xFF	; 255
    3dd4:	18 82       	st	Y, r1
    3dd6:	ce 5a       	subi	r28, 0xAE	; 174
    3dd8:	d0 40       	sbci	r29, 0x00	; 0
    3dda:	c3 55       	subi	r28, 0x53	; 83
    3ddc:	df 4f       	sbci	r29, 0xFF	; 255
    3dde:	88 81       	ld	r24, Y
    3de0:	99 81       	ldd	r25, Y+1	; 0x01
    3de2:	cd 5a       	subi	r28, 0xAD	; 173
    3de4:	d0 40       	sbci	r29, 0x00	; 0
    3de6:	88 0f       	add	r24, r24
    3de8:	99 1f       	adc	r25, r25
    3dea:	82 2b       	or	r24, r18
    3dec:	93 2b       	or	r25, r19
    3dee:	65 fb       	bst	r22, 5
    3df0:	66 27       	eor	r22, r22
    3df2:	60 f9       	bld	r22, 0
    3df4:	c1 55       	subi	r28, 0x51	; 81
    3df6:	df 4f       	sbci	r29, 0xFF	; 255
    3df8:	68 83       	st	Y, r22
    3dfa:	cf 5a       	subi	r28, 0xAF	; 175
    3dfc:	d0 40       	sbci	r29, 0x00	; 0
    3dfe:	c0 55       	subi	r28, 0x50	; 80
    3e00:	df 4f       	sbci	r29, 0xFF	; 255
    3e02:	18 82       	st	Y, r1
    3e04:	c0 5b       	subi	r28, 0xB0	; 176
    3e06:	d0 40       	sbci	r29, 0x00	; 0
    3e08:	c1 55       	subi	r28, 0x51	; 81
    3e0a:	df 4f       	sbci	r29, 0xFF	; 255
    3e0c:	28 81       	ld	r18, Y
    3e0e:	39 81       	ldd	r19, Y+1	; 0x01
    3e10:	cf 5a       	subi	r28, 0xAF	; 175
    3e12:	d0 40       	sbci	r29, 0x00	; 0
    3e14:	22 0f       	add	r18, r18
    3e16:	33 1f       	adc	r19, r19
    3e18:	22 0f       	add	r18, r18
    3e1a:	33 1f       	adc	r19, r19
    3e1c:	22 0f       	add	r18, r18
    3e1e:	33 1f       	adc	r19, r19
    3e20:	82 2b       	or	r24, r18
    3e22:	93 2b       	or	r25, r19
    3e24:	48 9f       	mul	r20, r24
    3e26:	b0 01       	movw	r22, r0
    3e28:	49 9f       	mul	r20, r25
    3e2a:	70 0d       	add	r23, r0
    3e2c:	11 24       	eor	r1, r1
    3e2e:	db 01       	movw	r26, r22
    3e30:	ac 54       	subi	r26, 0x4C	; 76
    3e32:	bf 4d       	sbci	r27, 0xDF	; 223
    3e34:	17 96       	adiw	r26, 0x07	; 7
    3e36:	2d 91       	ld	r18, X+
    3e38:	3c 91       	ld	r19, X
    3e3a:	18 97       	sbiw	r26, 0x08	; 8
    3e3c:	c7 55       	subi	r28, 0x57	; 87
    3e3e:	df 4f       	sbci	r29, 0xFF	; 255
    3e40:	a8 81       	ld	r26, Y
    3e42:	b9 81       	ldd	r27, Y+1	; 0x01
    3e44:	c9 5a       	subi	r28, 0xA9	; 169
    3e46:	d0 40       	sbci	r29, 0x00	; 0
    3e48:	2a 2b       	or	r18, r26
    3e4a:	3b 2b       	or	r19, r27
    3e4c:	52 9f       	mul	r21, r18
    3e4e:	c0 01       	movw	r24, r0
    3e50:	53 9f       	mul	r21, r19
    3e52:	90 0d       	add	r25, r0
    3e54:	11 24       	eor	r1, r1
    3e56:	90 93 8a 23 	sts	0x238A, r25
    3e5a:	00 81       	ld	r16, Z
    3e5c:	70 81       	ld	r23, Z
    3e5e:	10 81       	ld	r17, Z
    3e60:	60 81       	ld	r22, Z
    3e62:	30 81       	ld	r19, Z
    3e64:	20 81       	ld	r18, Z
    3e66:	80 81       	ld	r24, Z
    3e68:	f0 80       	ld	r15, Z
    3e6a:	88 1f       	adc	r24, r24
    3e6c:	88 27       	eor	r24, r24
    3e6e:	88 1f       	adc	r24, r24
    3e70:	90 e0       	ldi	r25, 0x00	; 0
    3e72:	88 0f       	add	r24, r24
    3e74:	99 1f       	adc	r25, r25
    3e76:	88 0f       	add	r24, r24
    3e78:	99 1f       	adc	r25, r25
    3e7a:	36 fb       	bst	r19, 6
    3e7c:	33 27       	eor	r19, r19
    3e7e:	30 f9       	bld	r19, 0
    3e80:	cf 54       	subi	r28, 0x4F	; 79
    3e82:	df 4f       	sbci	r29, 0xFF	; 255
    3e84:	38 83       	st	Y, r19
    3e86:	c1 5b       	subi	r28, 0xB1	; 177
    3e88:	d0 40       	sbci	r29, 0x00	; 0
    3e8a:	ce 54       	subi	r28, 0x4E	; 78
    3e8c:	df 4f       	sbci	r29, 0xFF	; 255
    3e8e:	18 82       	st	Y, r1
    3e90:	c2 5b       	subi	r28, 0xB2	; 178
    3e92:	d0 40       	sbci	r29, 0x00	; 0
    3e94:	cf 54       	subi	r28, 0x4F	; 79
    3e96:	df 4f       	sbci	r29, 0xFF	; 255
    3e98:	a8 81       	ld	r26, Y
    3e9a:	b9 81       	ldd	r27, Y+1	; 0x01
    3e9c:	c1 5b       	subi	r28, 0xB1	; 177
    3e9e:	d0 40       	sbci	r29, 0x00	; 0
    3ea0:	8a 2b       	or	r24, r26
    3ea2:	9b 2b       	or	r25, r27
    3ea4:	22 95       	swap	r18
    3ea6:	21 70       	andi	r18, 0x01	; 1
    3ea8:	cd 54       	subi	r28, 0x4D	; 77
    3eaa:	df 4f       	sbci	r29, 0xFF	; 255
    3eac:	28 83       	st	Y, r18
    3eae:	c3 5b       	subi	r28, 0xB3	; 179
    3eb0:	d0 40       	sbci	r29, 0x00	; 0
    3eb2:	cc 54       	subi	r28, 0x4C	; 76
    3eb4:	df 4f       	sbci	r29, 0xFF	; 255
    3eb6:	18 82       	st	Y, r1
    3eb8:	c4 5b       	subi	r28, 0xB4	; 180
    3eba:	d0 40       	sbci	r29, 0x00	; 0
    3ebc:	cd 54       	subi	r28, 0x4D	; 77
    3ebe:	df 4f       	sbci	r29, 0xFF	; 255
    3ec0:	28 81       	ld	r18, Y
    3ec2:	39 81       	ldd	r19, Y+1	; 0x01
    3ec4:	c3 5b       	subi	r28, 0xB3	; 179
    3ec6:	d0 40       	sbci	r29, 0x00	; 0
    3ec8:	22 0f       	add	r18, r18
    3eca:	33 1f       	adc	r19, r19
    3ecc:	82 2b       	or	r24, r18
    3ece:	93 2b       	or	r25, r19
    3ed0:	f5 fa       	bst	r15, 5
    3ed2:	ff 24       	eor	r15, r15
    3ed4:	f0 f8       	bld	r15, 0
    3ed6:	cb 54       	subi	r28, 0x4B	; 75
    3ed8:	df 4f       	sbci	r29, 0xFF	; 255
    3eda:	f8 82       	st	Y, r15
    3edc:	c5 5b       	subi	r28, 0xB5	; 181
    3ede:	d0 40       	sbci	r29, 0x00	; 0
    3ee0:	ca 54       	subi	r28, 0x4A	; 74
    3ee2:	df 4f       	sbci	r29, 0xFF	; 255
    3ee4:	18 82       	st	Y, r1
    3ee6:	c6 5b       	subi	r28, 0xB6	; 182
    3ee8:	d0 40       	sbci	r29, 0x00	; 0
    3eea:	cb 54       	subi	r28, 0x4B	; 75
    3eec:	df 4f       	sbci	r29, 0xFF	; 255
    3eee:	28 81       	ld	r18, Y
    3ef0:	39 81       	ldd	r19, Y+1	; 0x01
    3ef2:	c5 5b       	subi	r28, 0xB5	; 181
    3ef4:	d0 40       	sbci	r29, 0x00	; 0
    3ef6:	22 0f       	add	r18, r18
    3ef8:	33 1f       	adc	r19, r19
    3efa:	22 0f       	add	r18, r18
    3efc:	33 1f       	adc	r19, r19
    3efe:	22 0f       	add	r18, r18
    3f00:	33 1f       	adc	r19, r19
    3f02:	82 2b       	or	r24, r18
    3f04:	93 2b       	or	r25, r19
    3f06:	48 9f       	mul	r20, r24
    3f08:	d0 01       	movw	r26, r0
    3f0a:	49 9f       	mul	r20, r25
    3f0c:	b0 0d       	add	r27, r0
    3f0e:	11 24       	eor	r1, r1
    3f10:	9d 01       	movw	r18, r26
    3f12:	2c 54       	subi	r18, 0x4C	; 76
    3f14:	3f 4d       	sbci	r19, 0xDF	; 223
    3f16:	d9 01       	movw	r26, r18
    3f18:	19 96       	adiw	r26, 0x09	; 9
    3f1a:	bc 91       	ld	r27, X
    3f1c:	c8 54       	subi	r28, 0x48	; 72
    3f1e:	df 4f       	sbci	r29, 0xFF	; 255
    3f20:	b8 83       	st	Y, r27
    3f22:	c8 5b       	subi	r28, 0xB8	; 184
    3f24:	d0 40       	sbci	r29, 0x00	; 0
    3f26:	c9 54       	subi	r28, 0x49	; 73
    3f28:	df 4f       	sbci	r29, 0xFF	; 255
    3f2a:	18 82       	st	Y, r1
    3f2c:	c7 5b       	subi	r28, 0xB7	; 183
    3f2e:	d0 40       	sbci	r29, 0x00	; 0
    3f30:	11 1f       	adc	r17, r17
    3f32:	11 27       	eor	r17, r17
    3f34:	11 1f       	adc	r17, r17
    3f36:	21 2f       	mov	r18, r17
    3f38:	30 e0       	ldi	r19, 0x00	; 0
    3f3a:	22 0f       	add	r18, r18
    3f3c:	33 1f       	adc	r19, r19
    3f3e:	22 0f       	add	r18, r18
    3f40:	33 1f       	adc	r19, r19
    3f42:	06 fb       	bst	r16, 6
    3f44:	00 27       	eor	r16, r16
    3f46:	00 f9       	bld	r16, 0
    3f48:	c7 54       	subi	r28, 0x47	; 71
    3f4a:	df 4f       	sbci	r29, 0xFF	; 255
    3f4c:	08 83       	st	Y, r16
    3f4e:	c9 5b       	subi	r28, 0xB9	; 185
    3f50:	d0 40       	sbci	r29, 0x00	; 0
    3f52:	c6 54       	subi	r28, 0x46	; 70
    3f54:	df 4f       	sbci	r29, 0xFF	; 255
    3f56:	18 82       	st	Y, r1
    3f58:	ca 5b       	subi	r28, 0xBA	; 186
    3f5a:	d0 40       	sbci	r29, 0x00	; 0
    3f5c:	c7 54       	subi	r28, 0x47	; 71
    3f5e:	df 4f       	sbci	r29, 0xFF	; 255
    3f60:	88 81       	ld	r24, Y
    3f62:	99 81       	ldd	r25, Y+1	; 0x01
    3f64:	c9 5b       	subi	r28, 0xB9	; 185
    3f66:	d0 40       	sbci	r29, 0x00	; 0
    3f68:	28 2b       	or	r18, r24
    3f6a:	39 2b       	or	r19, r25
    3f6c:	72 95       	swap	r23
    3f6e:	71 70       	andi	r23, 0x01	; 1
    3f70:	c5 54       	subi	r28, 0x45	; 69
    3f72:	df 4f       	sbci	r29, 0xFF	; 255
    3f74:	78 83       	st	Y, r23
    3f76:	cb 5b       	subi	r28, 0xBB	; 187
    3f78:	d0 40       	sbci	r29, 0x00	; 0
    3f7a:	c4 54       	subi	r28, 0x44	; 68
    3f7c:	df 4f       	sbci	r29, 0xFF	; 255
    3f7e:	18 82       	st	Y, r1
    3f80:	cc 5b       	subi	r28, 0xBC	; 188
    3f82:	d0 40       	sbci	r29, 0x00	; 0
    3f84:	c5 54       	subi	r28, 0x45	; 69
    3f86:	df 4f       	sbci	r29, 0xFF	; 255
    3f88:	88 81       	ld	r24, Y
    3f8a:	99 81       	ldd	r25, Y+1	; 0x01
    3f8c:	cb 5b       	subi	r28, 0xBB	; 187
    3f8e:	d0 40       	sbci	r29, 0x00	; 0
    3f90:	88 0f       	add	r24, r24
    3f92:	99 1f       	adc	r25, r25
    3f94:	82 2b       	or	r24, r18
    3f96:	93 2b       	or	r25, r19
    3f98:	65 fb       	bst	r22, 5
    3f9a:	66 27       	eor	r22, r22
    3f9c:	60 f9       	bld	r22, 0
    3f9e:	c3 54       	subi	r28, 0x43	; 67
    3fa0:	df 4f       	sbci	r29, 0xFF	; 255
    3fa2:	68 83       	st	Y, r22
    3fa4:	cd 5b       	subi	r28, 0xBD	; 189
    3fa6:	d0 40       	sbci	r29, 0x00	; 0
    3fa8:	c2 54       	subi	r28, 0x42	; 66
    3faa:	df 4f       	sbci	r29, 0xFF	; 255
    3fac:	18 82       	st	Y, r1
    3fae:	ce 5b       	subi	r28, 0xBE	; 190
    3fb0:	d0 40       	sbci	r29, 0x00	; 0
    3fb2:	c3 54       	subi	r28, 0x43	; 67
    3fb4:	df 4f       	sbci	r29, 0xFF	; 255
    3fb6:	28 81       	ld	r18, Y
    3fb8:	39 81       	ldd	r19, Y+1	; 0x01
    3fba:	cd 5b       	subi	r28, 0xBD	; 189
    3fbc:	d0 40       	sbci	r29, 0x00	; 0
    3fbe:	22 0f       	add	r18, r18
    3fc0:	33 1f       	adc	r19, r19
    3fc2:	22 0f       	add	r18, r18
    3fc4:	33 1f       	adc	r19, r19
    3fc6:	22 0f       	add	r18, r18
    3fc8:	33 1f       	adc	r19, r19
    3fca:	82 2b       	or	r24, r18
    3fcc:	93 2b       	or	r25, r19
    3fce:	48 9f       	mul	r20, r24
    3fd0:	b0 01       	movw	r22, r0
    3fd2:	49 9f       	mul	r20, r25
    3fd4:	70 0d       	add	r23, r0
    3fd6:	11 24       	eor	r1, r1
    3fd8:	db 01       	movw	r26, r22
    3fda:	ac 54       	subi	r26, 0x4C	; 76
    3fdc:	bf 4d       	sbci	r27, 0xDF	; 223
    3fde:	1b 96       	adiw	r26, 0x0b	; 11
    3fe0:	8d 91       	ld	r24, X+
    3fe2:	9c 91       	ld	r25, X
    3fe4:	1c 97       	sbiw	r26, 0x0c	; 12
    3fe6:	c9 54       	subi	r28, 0x49	; 73
    3fe8:	df 4f       	sbci	r29, 0xFF	; 255
    3fea:	a8 81       	ld	r26, Y
    3fec:	b9 81       	ldd	r27, Y+1	; 0x01
    3fee:	c7 5b       	subi	r28, 0xB7	; 183
    3ff0:	d0 40       	sbci	r29, 0x00	; 0
    3ff2:	8a 2b       	or	r24, r26
    3ff4:	9b 2b       	or	r25, r27
    3ff6:	85 9f       	mul	r24, r21
    3ff8:	80 2d       	mov	r24, r0
    3ffa:	11 24       	eor	r1, r1
    3ffc:	80 93 8b 23 	sts	0x238B, r24
    4000:	00 81       	ld	r16, Z
    4002:	70 81       	ld	r23, Z
    4004:	10 81       	ld	r17, Z
    4006:	60 81       	ld	r22, Z
    4008:	30 81       	ld	r19, Z
    400a:	20 81       	ld	r18, Z
    400c:	80 81       	ld	r24, Z
    400e:	f0 80       	ld	r15, Z
    4010:	88 1f       	adc	r24, r24
    4012:	88 27       	eor	r24, r24
    4014:	88 1f       	adc	r24, r24
    4016:	90 e0       	ldi	r25, 0x00	; 0
    4018:	88 0f       	add	r24, r24
    401a:	99 1f       	adc	r25, r25
    401c:	88 0f       	add	r24, r24
    401e:	99 1f       	adc	r25, r25
    4020:	36 fb       	bst	r19, 6
    4022:	33 27       	eor	r19, r19
    4024:	30 f9       	bld	r19, 0
    4026:	c1 54       	subi	r28, 0x41	; 65
    4028:	df 4f       	sbci	r29, 0xFF	; 255
    402a:	38 83       	st	Y, r19
    402c:	cf 5b       	subi	r28, 0xBF	; 191
    402e:	d0 40       	sbci	r29, 0x00	; 0
    4030:	c0 54       	subi	r28, 0x40	; 64
    4032:	df 4f       	sbci	r29, 0xFF	; 255
    4034:	18 82       	st	Y, r1
    4036:	c0 5c       	subi	r28, 0xC0	; 192
    4038:	d0 40       	sbci	r29, 0x00	; 0
    403a:	c1 54       	subi	r28, 0x41	; 65
    403c:	df 4f       	sbci	r29, 0xFF	; 255
    403e:	a8 81       	ld	r26, Y
    4040:	b9 81       	ldd	r27, Y+1	; 0x01
    4042:	cf 5b       	subi	r28, 0xBF	; 191
    4044:	d0 40       	sbci	r29, 0x00	; 0
    4046:	8a 2b       	or	r24, r26
    4048:	9b 2b       	or	r25, r27
    404a:	22 95       	swap	r18
    404c:	21 70       	andi	r18, 0x01	; 1
    404e:	cf 53       	subi	r28, 0x3F	; 63
    4050:	df 4f       	sbci	r29, 0xFF	; 255
    4052:	28 83       	st	Y, r18
    4054:	c1 5c       	subi	r28, 0xC1	; 193
    4056:	d0 40       	sbci	r29, 0x00	; 0
    4058:	ce 53       	subi	r28, 0x3E	; 62
    405a:	df 4f       	sbci	r29, 0xFF	; 255
    405c:	18 82       	st	Y, r1
    405e:	c2 5c       	subi	r28, 0xC2	; 194
    4060:	d0 40       	sbci	r29, 0x00	; 0
    4062:	cf 53       	subi	r28, 0x3F	; 63
    4064:	df 4f       	sbci	r29, 0xFF	; 255
    4066:	28 81       	ld	r18, Y
    4068:	39 81       	ldd	r19, Y+1	; 0x01
    406a:	c1 5c       	subi	r28, 0xC1	; 193
    406c:	d0 40       	sbci	r29, 0x00	; 0
    406e:	22 0f       	add	r18, r18
    4070:	33 1f       	adc	r19, r19
    4072:	82 2b       	or	r24, r18
    4074:	93 2b       	or	r25, r19
    4076:	f5 fa       	bst	r15, 5
    4078:	ff 24       	eor	r15, r15
    407a:	f0 f8       	bld	r15, 0
    407c:	cd 53       	subi	r28, 0x3D	; 61
    407e:	df 4f       	sbci	r29, 0xFF	; 255
    4080:	f8 82       	st	Y, r15
    4082:	c3 5c       	subi	r28, 0xC3	; 195
    4084:	d0 40       	sbci	r29, 0x00	; 0
    4086:	cc 53       	subi	r28, 0x3C	; 60
    4088:	df 4f       	sbci	r29, 0xFF	; 255
    408a:	18 82       	st	Y, r1
    408c:	c4 5c       	subi	r28, 0xC4	; 196
    408e:	d0 40       	sbci	r29, 0x00	; 0
    4090:	cd 53       	subi	r28, 0x3D	; 61
    4092:	df 4f       	sbci	r29, 0xFF	; 255
    4094:	28 81       	ld	r18, Y
    4096:	39 81       	ldd	r19, Y+1	; 0x01
    4098:	c3 5c       	subi	r28, 0xC3	; 195
    409a:	d0 40       	sbci	r29, 0x00	; 0
    409c:	22 0f       	add	r18, r18
    409e:	33 1f       	adc	r19, r19
    40a0:	22 0f       	add	r18, r18
    40a2:	33 1f       	adc	r19, r19
    40a4:	22 0f       	add	r18, r18
    40a6:	33 1f       	adc	r19, r19
    40a8:	82 2b       	or	r24, r18
    40aa:	93 2b       	or	r25, r19
    40ac:	48 9f       	mul	r20, r24
    40ae:	d0 01       	movw	r26, r0
    40b0:	49 9f       	mul	r20, r25
    40b2:	b0 0d       	add	r27, r0
    40b4:	11 24       	eor	r1, r1
    40b6:	9d 01       	movw	r18, r26
    40b8:	2c 54       	subi	r18, 0x4C	; 76
    40ba:	3f 4d       	sbci	r19, 0xDF	; 223
    40bc:	d9 01       	movw	r26, r18
    40be:	19 96       	adiw	r26, 0x09	; 9
    40c0:	bc 91       	ld	r27, X
    40c2:	ca 53       	subi	r28, 0x3A	; 58
    40c4:	df 4f       	sbci	r29, 0xFF	; 255
    40c6:	b8 83       	st	Y, r27
    40c8:	c6 5c       	subi	r28, 0xC6	; 198
    40ca:	d0 40       	sbci	r29, 0x00	; 0
    40cc:	cb 53       	subi	r28, 0x3B	; 59
    40ce:	df 4f       	sbci	r29, 0xFF	; 255
    40d0:	18 82       	st	Y, r1
    40d2:	c5 5c       	subi	r28, 0xC5	; 197
    40d4:	d0 40       	sbci	r29, 0x00	; 0
    40d6:	11 1f       	adc	r17, r17
    40d8:	11 27       	eor	r17, r17
    40da:	11 1f       	adc	r17, r17
    40dc:	21 2f       	mov	r18, r17
    40de:	30 e0       	ldi	r19, 0x00	; 0
    40e0:	22 0f       	add	r18, r18
    40e2:	33 1f       	adc	r19, r19
    40e4:	22 0f       	add	r18, r18
    40e6:	33 1f       	adc	r19, r19
    40e8:	06 fb       	bst	r16, 6
    40ea:	00 27       	eor	r16, r16
    40ec:	00 f9       	bld	r16, 0
    40ee:	c9 53       	subi	r28, 0x39	; 57
    40f0:	df 4f       	sbci	r29, 0xFF	; 255
    40f2:	08 83       	st	Y, r16
    40f4:	c7 5c       	subi	r28, 0xC7	; 199
    40f6:	d0 40       	sbci	r29, 0x00	; 0
    40f8:	c8 53       	subi	r28, 0x38	; 56
    40fa:	df 4f       	sbci	r29, 0xFF	; 255
    40fc:	18 82       	st	Y, r1
    40fe:	c8 5c       	subi	r28, 0xC8	; 200
    4100:	d0 40       	sbci	r29, 0x00	; 0
    4102:	c9 53       	subi	r28, 0x39	; 57
    4104:	df 4f       	sbci	r29, 0xFF	; 255
    4106:	88 81       	ld	r24, Y
    4108:	99 81       	ldd	r25, Y+1	; 0x01
    410a:	c7 5c       	subi	r28, 0xC7	; 199
    410c:	d0 40       	sbci	r29, 0x00	; 0
    410e:	28 2b       	or	r18, r24
    4110:	39 2b       	or	r19, r25
    4112:	72 95       	swap	r23
    4114:	71 70       	andi	r23, 0x01	; 1
    4116:	c7 53       	subi	r28, 0x37	; 55
    4118:	df 4f       	sbci	r29, 0xFF	; 255
    411a:	78 83       	st	Y, r23
    411c:	c9 5c       	subi	r28, 0xC9	; 201
    411e:	d0 40       	sbci	r29, 0x00	; 0
    4120:	c6 53       	subi	r28, 0x36	; 54
    4122:	df 4f       	sbci	r29, 0xFF	; 255
    4124:	18 82       	st	Y, r1
    4126:	ca 5c       	subi	r28, 0xCA	; 202
    4128:	d0 40       	sbci	r29, 0x00	; 0
    412a:	c7 53       	subi	r28, 0x37	; 55
    412c:	df 4f       	sbci	r29, 0xFF	; 255
    412e:	88 81       	ld	r24, Y
    4130:	99 81       	ldd	r25, Y+1	; 0x01
    4132:	c9 5c       	subi	r28, 0xC9	; 201
    4134:	d0 40       	sbci	r29, 0x00	; 0
    4136:	88 0f       	add	r24, r24
    4138:	99 1f       	adc	r25, r25
    413a:	82 2b       	or	r24, r18
    413c:	93 2b       	or	r25, r19
    413e:	65 fb       	bst	r22, 5
    4140:	66 27       	eor	r22, r22
    4142:	60 f9       	bld	r22, 0
    4144:	c5 53       	subi	r28, 0x35	; 53
    4146:	df 4f       	sbci	r29, 0xFF	; 255
    4148:	68 83       	st	Y, r22
    414a:	cb 5c       	subi	r28, 0xCB	; 203
    414c:	d0 40       	sbci	r29, 0x00	; 0
    414e:	c4 53       	subi	r28, 0x34	; 52
    4150:	df 4f       	sbci	r29, 0xFF	; 255
    4152:	18 82       	st	Y, r1
    4154:	cc 5c       	subi	r28, 0xCC	; 204
    4156:	d0 40       	sbci	r29, 0x00	; 0
    4158:	c5 53       	subi	r28, 0x35	; 53
    415a:	df 4f       	sbci	r29, 0xFF	; 255
    415c:	28 81       	ld	r18, Y
    415e:	39 81       	ldd	r19, Y+1	; 0x01
    4160:	cb 5c       	subi	r28, 0xCB	; 203
    4162:	d0 40       	sbci	r29, 0x00	; 0
    4164:	22 0f       	add	r18, r18
    4166:	33 1f       	adc	r19, r19
    4168:	22 0f       	add	r18, r18
    416a:	33 1f       	adc	r19, r19
    416c:	22 0f       	add	r18, r18
    416e:	33 1f       	adc	r19, r19
    4170:	82 2b       	or	r24, r18
    4172:	93 2b       	or	r25, r19
    4174:	48 9f       	mul	r20, r24
    4176:	b0 01       	movw	r22, r0
    4178:	49 9f       	mul	r20, r25
    417a:	70 0d       	add	r23, r0
    417c:	11 24       	eor	r1, r1
    417e:	db 01       	movw	r26, r22
    4180:	ac 54       	subi	r26, 0x4C	; 76
    4182:	bf 4d       	sbci	r27, 0xDF	; 223
    4184:	1b 96       	adiw	r26, 0x0b	; 11
    4186:	2d 91       	ld	r18, X+
    4188:	3c 91       	ld	r19, X
    418a:	1c 97       	sbiw	r26, 0x0c	; 12
    418c:	cb 53       	subi	r28, 0x3B	; 59
    418e:	df 4f       	sbci	r29, 0xFF	; 255
    4190:	a8 81       	ld	r26, Y
    4192:	b9 81       	ldd	r27, Y+1	; 0x01
    4194:	c5 5c       	subi	r28, 0xC5	; 197
    4196:	d0 40       	sbci	r29, 0x00	; 0
    4198:	2a 2b       	or	r18, r26
    419a:	3b 2b       	or	r19, r27
    419c:	52 9f       	mul	r21, r18
    419e:	c0 01       	movw	r24, r0
    41a0:	53 9f       	mul	r21, r19
    41a2:	90 0d       	add	r25, r0
    41a4:	11 24       	eor	r1, r1
    41a6:	90 93 8c 23 	sts	0x238C, r25
    41aa:	00 81       	ld	r16, Z
    41ac:	70 81       	ld	r23, Z
    41ae:	10 81       	ld	r17, Z
    41b0:	60 81       	ld	r22, Z
    41b2:	30 81       	ld	r19, Z
    41b4:	20 81       	ld	r18, Z
    41b6:	80 81       	ld	r24, Z
    41b8:	f0 80       	ld	r15, Z
    41ba:	88 1f       	adc	r24, r24
    41bc:	88 27       	eor	r24, r24
    41be:	88 1f       	adc	r24, r24
    41c0:	90 e0       	ldi	r25, 0x00	; 0
    41c2:	88 0f       	add	r24, r24
    41c4:	99 1f       	adc	r25, r25
    41c6:	88 0f       	add	r24, r24
    41c8:	99 1f       	adc	r25, r25
    41ca:	36 fb       	bst	r19, 6
    41cc:	33 27       	eor	r19, r19
    41ce:	30 f9       	bld	r19, 0
    41d0:	c3 53       	subi	r28, 0x33	; 51
    41d2:	df 4f       	sbci	r29, 0xFF	; 255
    41d4:	38 83       	st	Y, r19
    41d6:	cd 5c       	subi	r28, 0xCD	; 205
    41d8:	d0 40       	sbci	r29, 0x00	; 0
    41da:	c2 53       	subi	r28, 0x32	; 50
    41dc:	df 4f       	sbci	r29, 0xFF	; 255
    41de:	18 82       	st	Y, r1
    41e0:	ce 5c       	subi	r28, 0xCE	; 206
    41e2:	d0 40       	sbci	r29, 0x00	; 0
    41e4:	c3 53       	subi	r28, 0x33	; 51
    41e6:	df 4f       	sbci	r29, 0xFF	; 255
    41e8:	a8 81       	ld	r26, Y
    41ea:	b9 81       	ldd	r27, Y+1	; 0x01
    41ec:	cd 5c       	subi	r28, 0xCD	; 205
    41ee:	d0 40       	sbci	r29, 0x00	; 0
    41f0:	8a 2b       	or	r24, r26
    41f2:	9b 2b       	or	r25, r27
    41f4:	22 95       	swap	r18
    41f6:	21 70       	andi	r18, 0x01	; 1
    41f8:	c1 53       	subi	r28, 0x31	; 49
    41fa:	df 4f       	sbci	r29, 0xFF	; 255
    41fc:	28 83       	st	Y, r18
    41fe:	cf 5c       	subi	r28, 0xCF	; 207
    4200:	d0 40       	sbci	r29, 0x00	; 0
    4202:	c0 53       	subi	r28, 0x30	; 48
    4204:	df 4f       	sbci	r29, 0xFF	; 255
    4206:	18 82       	st	Y, r1
    4208:	c0 5d       	subi	r28, 0xD0	; 208
    420a:	d0 40       	sbci	r29, 0x00	; 0
    420c:	c1 53       	subi	r28, 0x31	; 49
    420e:	df 4f       	sbci	r29, 0xFF	; 255
    4210:	28 81       	ld	r18, Y
    4212:	39 81       	ldd	r19, Y+1	; 0x01
    4214:	cf 5c       	subi	r28, 0xCF	; 207
    4216:	d0 40       	sbci	r29, 0x00	; 0
    4218:	22 0f       	add	r18, r18
    421a:	33 1f       	adc	r19, r19
    421c:	82 2b       	or	r24, r18
    421e:	93 2b       	or	r25, r19
    4220:	f5 fa       	bst	r15, 5
    4222:	ff 24       	eor	r15, r15
    4224:	f0 f8       	bld	r15, 0
    4226:	cf 52       	subi	r28, 0x2F	; 47
    4228:	df 4f       	sbci	r29, 0xFF	; 255
    422a:	f8 82       	st	Y, r15
    422c:	c1 5d       	subi	r28, 0xD1	; 209
    422e:	d0 40       	sbci	r29, 0x00	; 0
    4230:	ce 52       	subi	r28, 0x2E	; 46
    4232:	df 4f       	sbci	r29, 0xFF	; 255
    4234:	18 82       	st	Y, r1
    4236:	c2 5d       	subi	r28, 0xD2	; 210
    4238:	d0 40       	sbci	r29, 0x00	; 0
    423a:	cf 52       	subi	r28, 0x2F	; 47
    423c:	df 4f       	sbci	r29, 0xFF	; 255
    423e:	28 81       	ld	r18, Y
    4240:	39 81       	ldd	r19, Y+1	; 0x01
    4242:	c1 5d       	subi	r28, 0xD1	; 209
    4244:	d0 40       	sbci	r29, 0x00	; 0
    4246:	22 0f       	add	r18, r18
    4248:	33 1f       	adc	r19, r19
    424a:	22 0f       	add	r18, r18
    424c:	33 1f       	adc	r19, r19
    424e:	22 0f       	add	r18, r18
    4250:	33 1f       	adc	r19, r19
    4252:	82 2b       	or	r24, r18
    4254:	93 2b       	or	r25, r19
    4256:	48 9f       	mul	r20, r24
    4258:	d0 01       	movw	r26, r0
    425a:	49 9f       	mul	r20, r25
    425c:	b0 0d       	add	r27, r0
    425e:	11 24       	eor	r1, r1
    4260:	9d 01       	movw	r18, r26
    4262:	2c 54       	subi	r18, 0x4C	; 76
    4264:	3f 4d       	sbci	r19, 0xDF	; 223
    4266:	d9 01       	movw	r26, r18
    4268:	1d 96       	adiw	r26, 0x0d	; 13
    426a:	bc 91       	ld	r27, X
    426c:	cc 52       	subi	r28, 0x2C	; 44
    426e:	df 4f       	sbci	r29, 0xFF	; 255
    4270:	b8 83       	st	Y, r27
    4272:	c4 5d       	subi	r28, 0xD4	; 212
    4274:	d0 40       	sbci	r29, 0x00	; 0
    4276:	cd 52       	subi	r28, 0x2D	; 45
    4278:	df 4f       	sbci	r29, 0xFF	; 255
    427a:	18 82       	st	Y, r1
    427c:	c3 5d       	subi	r28, 0xD3	; 211
    427e:	d0 40       	sbci	r29, 0x00	; 0
    4280:	11 1f       	adc	r17, r17
    4282:	11 27       	eor	r17, r17
    4284:	11 1f       	adc	r17, r17
    4286:	21 2f       	mov	r18, r17
    4288:	30 e0       	ldi	r19, 0x00	; 0
    428a:	22 0f       	add	r18, r18
    428c:	33 1f       	adc	r19, r19
    428e:	22 0f       	add	r18, r18
    4290:	33 1f       	adc	r19, r19
    4292:	06 fb       	bst	r16, 6
    4294:	00 27       	eor	r16, r16
    4296:	00 f9       	bld	r16, 0
    4298:	cb 52       	subi	r28, 0x2B	; 43
    429a:	df 4f       	sbci	r29, 0xFF	; 255
    429c:	08 83       	st	Y, r16
    429e:	c5 5d       	subi	r28, 0xD5	; 213
    42a0:	d0 40       	sbci	r29, 0x00	; 0
    42a2:	ca 52       	subi	r28, 0x2A	; 42
    42a4:	df 4f       	sbci	r29, 0xFF	; 255
    42a6:	18 82       	st	Y, r1
    42a8:	c6 5d       	subi	r28, 0xD6	; 214
    42aa:	d0 40       	sbci	r29, 0x00	; 0
    42ac:	cb 52       	subi	r28, 0x2B	; 43
    42ae:	df 4f       	sbci	r29, 0xFF	; 255
    42b0:	88 81       	ld	r24, Y
    42b2:	99 81       	ldd	r25, Y+1	; 0x01
    42b4:	c5 5d       	subi	r28, 0xD5	; 213
    42b6:	d0 40       	sbci	r29, 0x00	; 0
    42b8:	28 2b       	or	r18, r24
    42ba:	39 2b       	or	r19, r25
    42bc:	72 95       	swap	r23
    42be:	71 70       	andi	r23, 0x01	; 1
    42c0:	c9 52       	subi	r28, 0x29	; 41
    42c2:	df 4f       	sbci	r29, 0xFF	; 255
    42c4:	78 83       	st	Y, r23
    42c6:	c7 5d       	subi	r28, 0xD7	; 215
    42c8:	d0 40       	sbci	r29, 0x00	; 0
    42ca:	c8 52       	subi	r28, 0x28	; 40
    42cc:	df 4f       	sbci	r29, 0xFF	; 255
    42ce:	18 82       	st	Y, r1
    42d0:	c8 5d       	subi	r28, 0xD8	; 216
    42d2:	d0 40       	sbci	r29, 0x00	; 0
    42d4:	c9 52       	subi	r28, 0x29	; 41
    42d6:	df 4f       	sbci	r29, 0xFF	; 255
    42d8:	88 81       	ld	r24, Y
    42da:	99 81       	ldd	r25, Y+1	; 0x01
    42dc:	c7 5d       	subi	r28, 0xD7	; 215
    42de:	d0 40       	sbci	r29, 0x00	; 0
    42e0:	88 0f       	add	r24, r24
    42e2:	99 1f       	adc	r25, r25
    42e4:	82 2b       	or	r24, r18
    42e6:	93 2b       	or	r25, r19
    42e8:	65 fb       	bst	r22, 5
    42ea:	66 27       	eor	r22, r22
    42ec:	60 f9       	bld	r22, 0
    42ee:	c7 52       	subi	r28, 0x27	; 39
    42f0:	df 4f       	sbci	r29, 0xFF	; 255
    42f2:	68 83       	st	Y, r22
    42f4:	c9 5d       	subi	r28, 0xD9	; 217
    42f6:	d0 40       	sbci	r29, 0x00	; 0
    42f8:	c6 52       	subi	r28, 0x26	; 38
    42fa:	df 4f       	sbci	r29, 0xFF	; 255
    42fc:	18 82       	st	Y, r1
    42fe:	ca 5d       	subi	r28, 0xDA	; 218
    4300:	d0 40       	sbci	r29, 0x00	; 0
    4302:	c7 52       	subi	r28, 0x27	; 39
    4304:	df 4f       	sbci	r29, 0xFF	; 255
    4306:	28 81       	ld	r18, Y
    4308:	39 81       	ldd	r19, Y+1	; 0x01
    430a:	c9 5d       	subi	r28, 0xD9	; 217
    430c:	d0 40       	sbci	r29, 0x00	; 0
    430e:	22 0f       	add	r18, r18
    4310:	33 1f       	adc	r19, r19
    4312:	22 0f       	add	r18, r18
    4314:	33 1f       	adc	r19, r19
    4316:	22 0f       	add	r18, r18
    4318:	33 1f       	adc	r19, r19
    431a:	82 2b       	or	r24, r18
    431c:	93 2b       	or	r25, r19
    431e:	48 9f       	mul	r20, r24
    4320:	b0 01       	movw	r22, r0
    4322:	49 9f       	mul	r20, r25
    4324:	70 0d       	add	r23, r0
    4326:	11 24       	eor	r1, r1
    4328:	db 01       	movw	r26, r22
    432a:	ac 54       	subi	r26, 0x4C	; 76
    432c:	bf 4d       	sbci	r27, 0xDF	; 223
    432e:	1f 96       	adiw	r26, 0x0f	; 15
    4330:	8d 91       	ld	r24, X+
    4332:	9c 91       	ld	r25, X
    4334:	50 97       	sbiw	r26, 0x10	; 16
    4336:	cd 52       	subi	r28, 0x2D	; 45
    4338:	df 4f       	sbci	r29, 0xFF	; 255
    433a:	a8 81       	ld	r26, Y
    433c:	b9 81       	ldd	r27, Y+1	; 0x01
    433e:	c3 5d       	subi	r28, 0xD3	; 211
    4340:	d0 40       	sbci	r29, 0x00	; 0
    4342:	8a 2b       	or	r24, r26
    4344:	9b 2b       	or	r25, r27
    4346:	85 9f       	mul	r24, r21
    4348:	80 2d       	mov	r24, r0
    434a:	11 24       	eor	r1, r1
    434c:	80 93 8d 23 	sts	0x238D, r24
    4350:	10 81       	ld	r17, Z
    4352:	70 81       	ld	r23, Z
    4354:	00 81       	ld	r16, Z
    4356:	60 81       	ld	r22, Z
    4358:	90 81       	ld	r25, Z
    435a:	80 81       	ld	r24, Z
    435c:	20 81       	ld	r18, Z
    435e:	a0 81       	ld	r26, Z
    4360:	22 1f       	adc	r18, r18
    4362:	22 27       	eor	r18, r18
    4364:	22 1f       	adc	r18, r18
    4366:	30 e0       	ldi	r19, 0x00	; 0
    4368:	22 0f       	add	r18, r18
    436a:	33 1f       	adc	r19, r19
    436c:	22 0f       	add	r18, r18
    436e:	33 1f       	adc	r19, r19
    4370:	96 fb       	bst	r25, 6
    4372:	99 27       	eor	r25, r25
    4374:	90 f9       	bld	r25, 0
    4376:	c5 52       	subi	r28, 0x25	; 37
    4378:	df 4f       	sbci	r29, 0xFF	; 255
    437a:	98 83       	st	Y, r25
    437c:	cb 5d       	subi	r28, 0xDB	; 219
    437e:	d0 40       	sbci	r29, 0x00	; 0
    4380:	c4 52       	subi	r28, 0x24	; 36
    4382:	df 4f       	sbci	r29, 0xFF	; 255
    4384:	18 82       	st	Y, r1
    4386:	cc 5d       	subi	r28, 0xDC	; 220
    4388:	d0 40       	sbci	r29, 0x00	; 0
    438a:	c5 52       	subi	r28, 0x25	; 37
    438c:	df 4f       	sbci	r29, 0xFF	; 255
    438e:	e8 81       	ld	r30, Y
    4390:	f9 81       	ldd	r31, Y+1	; 0x01
    4392:	cb 5d       	subi	r28, 0xDB	; 219
    4394:	d0 40       	sbci	r29, 0x00	; 0
    4396:	2e 2b       	or	r18, r30
    4398:	3f 2b       	or	r19, r31
    439a:	82 95       	swap	r24
    439c:	81 70       	andi	r24, 0x01	; 1
    439e:	c3 52       	subi	r28, 0x23	; 35
    43a0:	df 4f       	sbci	r29, 0xFF	; 255
    43a2:	88 83       	st	Y, r24
    43a4:	cd 5d       	subi	r28, 0xDD	; 221
    43a6:	d0 40       	sbci	r29, 0x00	; 0
    43a8:	c2 52       	subi	r28, 0x22	; 34
    43aa:	df 4f       	sbci	r29, 0xFF	; 255
    43ac:	18 82       	st	Y, r1
    43ae:	ce 5d       	subi	r28, 0xDE	; 222
    43b0:	d0 40       	sbci	r29, 0x00	; 0
    43b2:	c3 52       	subi	r28, 0x23	; 35
    43b4:	df 4f       	sbci	r29, 0xFF	; 255
    43b6:	88 81       	ld	r24, Y
    43b8:	99 81       	ldd	r25, Y+1	; 0x01
    43ba:	cd 5d       	subi	r28, 0xDD	; 221
    43bc:	d0 40       	sbci	r29, 0x00	; 0
    43be:	88 0f       	add	r24, r24
    43c0:	99 1f       	adc	r25, r25
    43c2:	28 2b       	or	r18, r24
    43c4:	39 2b       	or	r19, r25
    43c6:	a5 fb       	bst	r26, 5
    43c8:	aa 27       	eor	r26, r26
    43ca:	a0 f9       	bld	r26, 0
    43cc:	c1 52       	subi	r28, 0x21	; 33
    43ce:	df 4f       	sbci	r29, 0xFF	; 255
    43d0:	a8 83       	st	Y, r26
    43d2:	cf 5d       	subi	r28, 0xDF	; 223
    43d4:	d0 40       	sbci	r29, 0x00	; 0
    43d6:	c0 52       	subi	r28, 0x20	; 32
    43d8:	df 4f       	sbci	r29, 0xFF	; 255
    43da:	18 82       	st	Y, r1
    43dc:	c0 5e       	subi	r28, 0xE0	; 224
    43de:	d0 40       	sbci	r29, 0x00	; 0
    43e0:	c1 52       	subi	r28, 0x21	; 33
    43e2:	df 4f       	sbci	r29, 0xFF	; 255
    43e4:	88 81       	ld	r24, Y
    43e6:	99 81       	ldd	r25, Y+1	; 0x01
    43e8:	cf 5d       	subi	r28, 0xDF	; 223
    43ea:	d0 40       	sbci	r29, 0x00	; 0
    43ec:	88 0f       	add	r24, r24
    43ee:	99 1f       	adc	r25, r25
    43f0:	88 0f       	add	r24, r24
    43f2:	99 1f       	adc	r25, r25
    43f4:	88 0f       	add	r24, r24
    43f6:	99 1f       	adc	r25, r25
    43f8:	28 2b       	or	r18, r24
    43fa:	39 2b       	or	r19, r25
    43fc:	42 9f       	mul	r20, r18
    43fe:	c0 01       	movw	r24, r0
    4400:	43 9f       	mul	r20, r19
    4402:	90 0d       	add	r25, r0
    4404:	11 24       	eor	r1, r1
    4406:	fc 01       	movw	r30, r24
    4408:	ec 54       	subi	r30, 0x4C	; 76
    440a:	ff 4d       	sbci	r31, 0xDF	; 223
    440c:	25 85       	ldd	r18, Z+13	; 0x0d
    440e:	ce 51       	subi	r28, 0x1E	; 30
    4410:	df 4f       	sbci	r29, 0xFF	; 255
    4412:	28 83       	st	Y, r18
    4414:	c2 5e       	subi	r28, 0xE2	; 226
    4416:	d0 40       	sbci	r29, 0x00	; 0
    4418:	cf 51       	subi	r28, 0x1F	; 31
    441a:	df 4f       	sbci	r29, 0xFF	; 255
    441c:	18 82       	st	Y, r1
    441e:	c1 5e       	subi	r28, 0xE1	; 225
    4420:	d0 40       	sbci	r29, 0x00	; 0
    4422:	b0 2f       	mov	r27, r16
    4424:	bb 1f       	adc	r27, r27
    4426:	bb 27       	eor	r27, r27
    4428:	bb 1f       	adc	r27, r27
    442a:	2b 2f       	mov	r18, r27
    442c:	30 e0       	ldi	r19, 0x00	; 0
    442e:	22 0f       	add	r18, r18
    4430:	33 1f       	adc	r19, r19
    4432:	22 0f       	add	r18, r18
    4434:	33 1f       	adc	r19, r19
    4436:	16 fb       	bst	r17, 6
    4438:	11 27       	eor	r17, r17
    443a:	10 f9       	bld	r17, 0
    443c:	cd 51       	subi	r28, 0x1D	; 29
    443e:	df 4f       	sbci	r29, 0xFF	; 255
    4440:	18 83       	st	Y, r17
    4442:	c3 5e       	subi	r28, 0xE3	; 227
    4444:	d0 40       	sbci	r29, 0x00	; 0
    4446:	cc 51       	subi	r28, 0x1C	; 28
    4448:	df 4f       	sbci	r29, 0xFF	; 255
    444a:	18 82       	st	Y, r1
    444c:	c4 5e       	subi	r28, 0xE4	; 228
    444e:	d0 40       	sbci	r29, 0x00	; 0
    4450:	cd 51       	subi	r28, 0x1D	; 29
    4452:	df 4f       	sbci	r29, 0xFF	; 255
    4454:	88 81       	ld	r24, Y
    4456:	99 81       	ldd	r25, Y+1	; 0x01
    4458:	c3 5e       	subi	r28, 0xE3	; 227
    445a:	d0 40       	sbci	r29, 0x00	; 0
    445c:	28 2b       	or	r18, r24
    445e:	39 2b       	or	r19, r25
    4460:	72 95       	swap	r23
    4462:	71 70       	andi	r23, 0x01	; 1
    4464:	cb 51       	subi	r28, 0x1B	; 27
    4466:	df 4f       	sbci	r29, 0xFF	; 255
    4468:	78 83       	st	Y, r23
    446a:	c5 5e       	subi	r28, 0xE5	; 229
    446c:	d0 40       	sbci	r29, 0x00	; 0
    446e:	ca 51       	subi	r28, 0x1A	; 26
    4470:	df 4f       	sbci	r29, 0xFF	; 255
    4472:	18 82       	st	Y, r1
    4474:	c6 5e       	subi	r28, 0xE6	; 230
    4476:	d0 40       	sbci	r29, 0x00	; 0
    4478:	cb 51       	subi	r28, 0x1B	; 27
    447a:	df 4f       	sbci	r29, 0xFF	; 255
    447c:	88 81       	ld	r24, Y
    447e:	99 81       	ldd	r25, Y+1	; 0x01
    4480:	c5 5e       	subi	r28, 0xE5	; 229
    4482:	d0 40       	sbci	r29, 0x00	; 0
    4484:	88 0f       	add	r24, r24
    4486:	99 1f       	adc	r25, r25
    4488:	82 2b       	or	r24, r18
    448a:	93 2b       	or	r25, r19
    448c:	65 fb       	bst	r22, 5
    448e:	66 27       	eor	r22, r22
    4490:	60 f9       	bld	r22, 0
    4492:	c9 51       	subi	r28, 0x19	; 25
    4494:	df 4f       	sbci	r29, 0xFF	; 255
    4496:	68 83       	st	Y, r22
    4498:	c7 5e       	subi	r28, 0xE7	; 231
    449a:	d0 40       	sbci	r29, 0x00	; 0
    449c:	c8 51       	subi	r28, 0x18	; 24
    449e:	df 4f       	sbci	r29, 0xFF	; 255
    44a0:	18 82       	st	Y, r1
    44a2:	c8 5e       	subi	r28, 0xE8	; 232
    44a4:	d0 40       	sbci	r29, 0x00	; 0
    44a6:	c9 51       	subi	r28, 0x19	; 25
    44a8:	df 4f       	sbci	r29, 0xFF	; 255
    44aa:	28 81       	ld	r18, Y
    44ac:	39 81       	ldd	r19, Y+1	; 0x01
    44ae:	c7 5e       	subi	r28, 0xE7	; 231
    44b0:	d0 40       	sbci	r29, 0x00	; 0
    44b2:	22 0f       	add	r18, r18
    44b4:	33 1f       	adc	r19, r19
    44b6:	22 0f       	add	r18, r18
    44b8:	33 1f       	adc	r19, r19
    44ba:	22 0f       	add	r18, r18
    44bc:	33 1f       	adc	r19, r19
    44be:	82 2b       	or	r24, r18
    44c0:	93 2b       	or	r25, r19
    44c2:	48 9f       	mul	r20, r24
    44c4:	b0 01       	movw	r22, r0
    44c6:	49 9f       	mul	r20, r25
    44c8:	70 0d       	add	r23, r0
    44ca:	11 24       	eor	r1, r1
    44cc:	fb 01       	movw	r30, r22
    44ce:	ec 54       	subi	r30, 0x4C	; 76
    44d0:	ff 4d       	sbci	r31, 0xDF	; 223
    44d2:	27 85       	ldd	r18, Z+15	; 0x0f
    44d4:	30 89       	ldd	r19, Z+16	; 0x10
    44d6:	cf 51       	subi	r28, 0x1F	; 31
    44d8:	df 4f       	sbci	r29, 0xFF	; 255
    44da:	a8 81       	ld	r26, Y
    44dc:	b9 81       	ldd	r27, Y+1	; 0x01
    44de:	c1 5e       	subi	r28, 0xE1	; 225
    44e0:	d0 40       	sbci	r29, 0x00	; 0
    44e2:	2a 2b       	or	r18, r26
    44e4:	3b 2b       	or	r19, r27
    44e6:	52 9f       	mul	r21, r18
    44e8:	c0 01       	movw	r24, r0
    44ea:	53 9f       	mul	r21, r19
    44ec:	90 0d       	add	r25, r0
    44ee:	11 24       	eor	r1, r1
    44f0:	90 93 8e 23 	sts	0x238E, r25
    44f4:	e9 e7       	ldi	r30, 0x79	; 121
    44f6:	f3 e2       	ldi	r31, 0x23	; 35
    44f8:	90 81       	ld	r25, Z
    44fa:	80 91 7a 23 	lds	r24, 0x237A
    44fe:	90 93 8f 23 	sts	0x238F, r25
    4502:	80 93 90 23 	sts	0x2390, r24
    4506:	ae ef       	ldi	r26, 0xFE	; 254
    4508:	b3 e2       	ldi	r27, 0x23	; 35
    450a:	9c 91       	ld	r25, X
    450c:	80 91 ff 23 	lds	r24, 0x23FF
    4510:	90 93 91 23 	sts	0x2391, r25
    4514:	80 93 92 23 	sts	0x2392, r24
    4518:	e2 e1       	ldi	r30, 0x12	; 18
    451a:	f4 e2       	ldi	r31, 0x24	; 36
    451c:	90 81       	ld	r25, Z
    451e:	80 91 13 24 	lds	r24, 0x2413
    4522:	90 93 93 23 	sts	0x2393, r25
    4526:	80 93 94 23 	sts	0x2394, r24
    452a:	ab ea       	ldi	r26, 0xAB	; 171
    452c:	b3 e2       	ldi	r27, 0x23	; 35
    452e:	9c 91       	ld	r25, X
    4530:	80 91 ac 23 	lds	r24, 0x23AC
    4534:	90 93 95 23 	sts	0x2395, r25
    4538:	80 93 96 23 	sts	0x2396, r24
    453c:	80 91 a7 20 	lds	r24, 0x20A7
    4540:	90 91 a8 20 	lds	r25, 0x20A8
    4544:	95 95       	asr	r25
    4546:	87 95       	ror	r24
    4548:	95 95       	asr	r25
    454a:	87 95       	ror	r24
    454c:	95 95       	asr	r25
    454e:	87 95       	ror	r24
    4550:	95 95       	asr	r25
    4552:	87 95       	ror	r24
    4554:	80 93 97 23 	sts	0x2397, r24
    4558:	60 e2       	ldi	r22, 0x20	; 32
    455a:	70 e0       	ldi	r23, 0x00	; 0
    455c:	87 e8       	ldi	r24, 0x87	; 135
    455e:	93 e2       	ldi	r25, 0x23	; 35
    4560:	0e 94 35 2b 	call	0x566a	; 0x566a <NRF24L01_L_Write_TX_Buf>
    4564:	72 d7       	rcall	.+3812   	; 0x544a <NRF24L01_L_RF_TX>
    4566:	ba e0       	ldi	r27, 0x0A	; 10
    4568:	ba 95       	dec	r27
    456a:	f1 f7       	brne	.-4      	; 0x4568 <__stack+0x569>
    456c:	00 c0       	rjmp	.+0      	; 0x456e <__stack+0x56f>
    456e:	0c 94 f8 11 	jmp	0x23f0	; 0x23f0 <main+0x208>

00004572 <__vector_43>:
    4572:	1f 92       	push	r1
    4574:	0f 92       	push	r0
    4576:	0f b6       	in	r0, 0x3f	; 63
    4578:	0f 92       	push	r0
    457a:	11 24       	eor	r1, r1
    457c:	08 b6       	in	r0, 0x38	; 56
    457e:	0f 92       	push	r0
    4580:	18 be       	out	0x38, r1	; 56
    4582:	09 b6       	in	r0, 0x39	; 57
    4584:	0f 92       	push	r0
    4586:	19 be       	out	0x39, r1	; 57
    4588:	0a b6       	in	r0, 0x3a	; 58
    458a:	0f 92       	push	r0
    458c:	1a be       	out	0x3a, r1	; 58
    458e:	0b b6       	in	r0, 0x3b	; 59
    4590:	0f 92       	push	r0
    4592:	1b be       	out	0x3b, r1	; 59
    4594:	2f 92       	push	r2
    4596:	3f 92       	push	r3
    4598:	4f 92       	push	r4
    459a:	5f 92       	push	r5
    459c:	7f 92       	push	r7
    459e:	8f 92       	push	r8
    45a0:	9f 92       	push	r9
    45a2:	af 92       	push	r10
    45a4:	bf 92       	push	r11
    45a6:	cf 92       	push	r12
    45a8:	df 92       	push	r13
    45aa:	ef 92       	push	r14
    45ac:	ff 92       	push	r15
    45ae:	0f 93       	push	r16
    45b0:	1f 93       	push	r17
    45b2:	2f 93       	push	r18
    45b4:	3f 93       	push	r19
    45b6:	4f 93       	push	r20
    45b8:	5f 93       	push	r21
    45ba:	6f 93       	push	r22
    45bc:	7f 93       	push	r23
    45be:	8f 93       	push	r24
    45c0:	9f 93       	push	r25
    45c2:	af 93       	push	r26
    45c4:	bf 93       	push	r27
    45c6:	ef 93       	push	r30
    45c8:	ff 93       	push	r31
    45ca:	cf 93       	push	r28
    45cc:	df 93       	push	r29
    45ce:	cd b7       	in	r28, 0x3d	; 61
    45d0:	de b7       	in	r29, 0x3e	; 62
    45d2:	c4 55       	subi	r28, 0x54	; 84
    45d4:	d1 09       	sbc	r29, r1
    45d6:	cd bf       	out	0x3d, r28	; 61
    45d8:	de bf       	out	0x3e, r29	; 62
    45da:	60 e7       	ldi	r22, 0x70	; 112
    45dc:	87 e2       	ldi	r24, 0x27	; 39
    45de:	5a d7       	rcall	.+3764   	; 0x5494 <NRF24L01_L_WriteReg>
    45e0:	78 2e       	mov	r7, r24
    45e2:	86 ff       	sbrs	r24, 6
    45e4:	f6 c3       	rjmp	.+2028   	; 0x4dd2 <__vector_43+0x860>
    45e6:	88 e0       	ldi	r24, 0x08	; 8
    45e8:	e0 e6       	ldi	r30, 0x60	; 96
    45ea:	f6 e0       	ldi	r31, 0x06	; 6
    45ec:	87 83       	std	Z+7, r24	; 0x07
    45ee:	60 e2       	ldi	r22, 0x20	; 32
    45f0:	70 e0       	ldi	r23, 0x00	; 0
    45f2:	87 e4       	ldi	r24, 0x47	; 71
    45f4:	93 e2       	ldi	r25, 0x23	; 35
    45f6:	a3 d7       	rcall	.+3910   	; 0x553e <NRF24L01_L_Read_RX_Buf>
    45f8:	0f 2e       	mov	r0, r31
    45fa:	f7 e4       	ldi	r31, 0x47	; 71
    45fc:	8f 2e       	mov	r8, r31
    45fe:	f3 e2       	ldi	r31, 0x23	; 35
    4600:	9f 2e       	mov	r9, r31
    4602:	f0 2d       	mov	r31, r0
    4604:	d4 01       	movw	r26, r8
    4606:	6d 91       	ld	r22, X+
    4608:	4d 01       	movw	r8, r26
    460a:	80 ea       	ldi	r24, 0xA0	; 160
    460c:	9a e0       	ldi	r25, 0x0A	; 10
    460e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <usart_putchar>
    4612:	b7 e6       	ldi	r27, 0x67	; 103
    4614:	8b 16       	cp	r8, r27
    4616:	b3 e2       	ldi	r27, 0x23	; 35
    4618:	9b 06       	cpc	r9, r27
    461a:	a1 f7       	brne	.-24     	; 0x4604 <__vector_43+0x92>
    461c:	40 91 47 23 	lds	r20, 0x2347
    4620:	e8 e0       	ldi	r30, 0x08	; 8
    4622:	f6 e0       	ldi	r31, 0x06	; 6
    4624:	70 81       	ld	r23, Z
    4626:	60 81       	ld	r22, Z
    4628:	20 81       	ld	r18, Z
    462a:	50 81       	ld	r21, Z
    462c:	84 2f       	mov	r24, r20
    462e:	90 e0       	ldi	r25, 0x00	; 0
    4630:	22 1f       	adc	r18, r18
    4632:	22 27       	eor	r18, r18
    4634:	22 1f       	adc	r18, r18
    4636:	30 e0       	ldi	r19, 0x00	; 0
    4638:	22 0f       	add	r18, r18
    463a:	33 1f       	adc	r19, r19
    463c:	22 0f       	add	r18, r18
    463e:	33 1f       	adc	r19, r19
    4640:	76 fb       	bst	r23, 6
    4642:	cc 24       	eor	r12, r12
    4644:	c0 f8       	bld	r12, 0
    4646:	d1 2c       	mov	r13, r1
    4648:	c2 2a       	or	r12, r18
    464a:	d3 2a       	or	r13, r19
    464c:	64 fb       	bst	r22, 4
    464e:	ee 24       	eor	r14, r14
    4650:	e0 f8       	bld	r14, 0
    4652:	f1 2c       	mov	r15, r1
    4654:	ee 0c       	add	r14, r14
    4656:	ff 1c       	adc	r15, r15
    4658:	ce 28       	or	r12, r14
    465a:	df 28       	or	r13, r15
    465c:	55 fb       	bst	r21, 5
    465e:	00 27       	eor	r16, r16
    4660:	00 f9       	bld	r16, 0
    4662:	10 e0       	ldi	r17, 0x00	; 0
    4664:	98 01       	movw	r18, r16
    4666:	22 0f       	add	r18, r18
    4668:	33 1f       	adc	r19, r19
    466a:	22 0f       	add	r18, r18
    466c:	33 1f       	adc	r19, r19
    466e:	22 0f       	add	r18, r18
    4670:	33 1f       	adc	r19, r19
    4672:	86 01       	movw	r16, r12
    4674:	02 2b       	or	r16, r18
    4676:	13 2b       	or	r17, r19
    4678:	80 17       	cp	r24, r16
    467a:	91 07       	cpc	r25, r17
    467c:	09 f0       	breq	.+2      	; 0x4680 <__vector_43+0x10e>
    467e:	a9 c3       	rjmp	.+1874   	; 0x4dd2 <__vector_43+0x860>
    4680:	10 92 a9 20 	sts	0x20A9, r1
    4684:	10 92 aa 20 	sts	0x20AA, r1
    4688:	50 81       	ld	r21, Z
    468a:	30 81       	ld	r19, Z
    468c:	80 81       	ld	r24, Z
    468e:	20 81       	ld	r18, Z
    4690:	88 1f       	adc	r24, r24
    4692:	88 27       	eor	r24, r24
    4694:	88 1f       	adc	r24, r24
    4696:	90 e0       	ldi	r25, 0x00	; 0
    4698:	88 0f       	add	r24, r24
    469a:	99 1f       	adc	r25, r25
    469c:	88 0f       	add	r24, r24
    469e:	99 1f       	adc	r25, r25
    46a0:	56 fb       	bst	r21, 6
    46a2:	aa 24       	eor	r10, r10
    46a4:	a0 f8       	bld	r10, 0
    46a6:	b1 2c       	mov	r11, r1
    46a8:	a8 2a       	or	r10, r24
    46aa:	b9 2a       	or	r11, r25
    46ac:	32 95       	swap	r19
    46ae:	31 70       	andi	r19, 0x01	; 1
    46b0:	39 83       	std	Y+1, r19	; 0x01
    46b2:	1a 82       	std	Y+2, r1	; 0x02
    46b4:	89 81       	ldd	r24, Y+1	; 0x01
    46b6:	9a 81       	ldd	r25, Y+2	; 0x02
    46b8:	88 0f       	add	r24, r24
    46ba:	99 1f       	adc	r25, r25
    46bc:	a8 2a       	or	r10, r24
    46be:	b9 2a       	or	r11, r25
    46c0:	25 fb       	bst	r18, 5
    46c2:	44 24       	eor	r4, r4
    46c4:	40 f8       	bld	r4, 0
    46c6:	51 2c       	mov	r5, r1
    46c8:	c2 01       	movw	r24, r4
    46ca:	88 0f       	add	r24, r24
    46cc:	99 1f       	adc	r25, r25
    46ce:	88 0f       	add	r24, r24
    46d0:	99 1f       	adc	r25, r25
    46d2:	88 0f       	add	r24, r24
    46d4:	99 1f       	adc	r25, r25
    46d6:	25 01       	movw	r4, r10
    46d8:	48 2a       	or	r4, r24
    46da:	59 2a       	or	r5, r25
    46dc:	57 e1       	ldi	r21, 0x17	; 23
    46de:	54 9d       	mul	r21, r4
    46e0:	d0 01       	movw	r26, r0
    46e2:	55 9d       	mul	r21, r5
    46e4:	b0 0d       	add	r27, r0
    46e6:	11 24       	eor	r1, r1
    46e8:	ac 54       	subi	r26, 0x4C	; 76
    46ea:	bf 4d       	sbci	r27, 0xDF	; 223
    46ec:	4c 93       	st	X, r20
    46ee:	40 81       	ld	r20, Z
    46f0:	30 81       	ld	r19, Z
    46f2:	80 81       	ld	r24, Z
    46f4:	20 81       	ld	r18, Z
    46f6:	88 1f       	adc	r24, r24
    46f8:	88 27       	eor	r24, r24
    46fa:	88 1f       	adc	r24, r24
    46fc:	90 e0       	ldi	r25, 0x00	; 0
    46fe:	88 0f       	add	r24, r24
    4700:	99 1f       	adc	r25, r25
    4702:	88 0f       	add	r24, r24
    4704:	99 1f       	adc	r25, r25
    4706:	46 fb       	bst	r20, 6
    4708:	22 24       	eor	r2, r2
    470a:	20 f8       	bld	r2, 0
    470c:	31 2c       	mov	r3, r1
    470e:	28 2a       	or	r2, r24
    4710:	39 2a       	or	r3, r25
    4712:	32 95       	swap	r19
    4714:	31 70       	andi	r19, 0x01	; 1
    4716:	3b 83       	std	Y+3, r19	; 0x03
    4718:	1c 82       	std	Y+4, r1	; 0x04
    471a:	8b 81       	ldd	r24, Y+3	; 0x03
    471c:	9c 81       	ldd	r25, Y+4	; 0x04
    471e:	88 0f       	add	r24, r24
    4720:	99 1f       	adc	r25, r25
    4722:	28 2a       	or	r2, r24
    4724:	39 2a       	or	r3, r25
    4726:	25 fb       	bst	r18, 5
    4728:	22 27       	eor	r18, r18
    472a:	20 f9       	bld	r18, 0
    472c:	2d 83       	std	Y+5, r18	; 0x05
    472e:	1e 82       	std	Y+6, r1	; 0x06
    4730:	8d 81       	ldd	r24, Y+5	; 0x05
    4732:	9e 81       	ldd	r25, Y+6	; 0x06
    4734:	88 0f       	add	r24, r24
    4736:	99 1f       	adc	r25, r25
    4738:	88 0f       	add	r24, r24
    473a:	99 1f       	adc	r25, r25
    473c:	88 0f       	add	r24, r24
    473e:	99 1f       	adc	r25, r25
    4740:	28 2a       	or	r2, r24
    4742:	39 2a       	or	r3, r25
    4744:	52 9d       	mul	r21, r2
    4746:	d0 01       	movw	r26, r0
    4748:	53 9d       	mul	r21, r3
    474a:	b0 0d       	add	r27, r0
    474c:	11 24       	eor	r1, r1
    474e:	ac 54       	subi	r26, 0x4C	; 76
    4750:	bf 4d       	sbci	r27, 0xDF	; 223
    4752:	80 91 48 23 	lds	r24, 0x2348
    4756:	90 e0       	ldi	r25, 0x00	; 0
    4758:	11 96       	adiw	r26, 0x01	; 1
    475a:	8d 93       	st	X+, r24
    475c:	9c 93       	st	X, r25
    475e:	12 97       	sbiw	r26, 0x02	; 2
    4760:	30 81       	ld	r19, Z
    4762:	20 81       	ld	r18, Z
    4764:	80 81       	ld	r24, Z
    4766:	40 81       	ld	r20, Z
    4768:	88 1f       	adc	r24, r24
    476a:	88 27       	eor	r24, r24
    476c:	88 1f       	adc	r24, r24
    476e:	90 e0       	ldi	r25, 0x00	; 0
    4770:	88 0f       	add	r24, r24
    4772:	99 1f       	adc	r25, r25
    4774:	88 0f       	add	r24, r24
    4776:	99 1f       	adc	r25, r25
    4778:	36 fb       	bst	r19, 6
    477a:	33 27       	eor	r19, r19
    477c:	30 f9       	bld	r19, 0
    477e:	3f 83       	std	Y+7, r19	; 0x07
    4780:	18 86       	std	Y+8, r1	; 0x08
    4782:	6f 81       	ldd	r22, Y+7	; 0x07
    4784:	78 85       	ldd	r23, Y+8	; 0x08
    4786:	86 2b       	or	r24, r22
    4788:	97 2b       	or	r25, r23
    478a:	22 95       	swap	r18
    478c:	21 70       	andi	r18, 0x01	; 1
    478e:	29 87       	std	Y+9, r18	; 0x09
    4790:	1a 86       	std	Y+10, r1	; 0x0a
    4792:	29 85       	ldd	r18, Y+9	; 0x09
    4794:	3a 85       	ldd	r19, Y+10	; 0x0a
    4796:	22 0f       	add	r18, r18
    4798:	33 1f       	adc	r19, r19
    479a:	82 2b       	or	r24, r18
    479c:	93 2b       	or	r25, r19
    479e:	45 fb       	bst	r20, 5
    47a0:	44 27       	eor	r20, r20
    47a2:	40 f9       	bld	r20, 0
    47a4:	4b 87       	std	Y+11, r20	; 0x0b
    47a6:	1c 86       	std	Y+12, r1	; 0x0c
    47a8:	2b 85       	ldd	r18, Y+11	; 0x0b
    47aa:	3c 85       	ldd	r19, Y+12	; 0x0c
    47ac:	22 0f       	add	r18, r18
    47ae:	33 1f       	adc	r19, r19
    47b0:	22 0f       	add	r18, r18
    47b2:	33 1f       	adc	r19, r19
    47b4:	22 0f       	add	r18, r18
    47b6:	33 1f       	adc	r19, r19
    47b8:	82 2b       	or	r24, r18
    47ba:	93 2b       	or	r25, r19
    47bc:	58 9f       	mul	r21, r24
    47be:	d0 01       	movw	r26, r0
    47c0:	59 9f       	mul	r21, r25
    47c2:	b0 0d       	add	r27, r0
    47c4:	11 24       	eor	r1, r1
    47c6:	ac 54       	subi	r26, 0x4C	; 76
    47c8:	bf 4d       	sbci	r27, 0xDF	; 223
    47ca:	80 91 49 23 	lds	r24, 0x2349
    47ce:	90 e0       	ldi	r25, 0x00	; 0
    47d0:	13 96       	adiw	r26, 0x03	; 3
    47d2:	8d 93       	st	X+, r24
    47d4:	9c 93       	st	X, r25
    47d6:	14 97       	sbiw	r26, 0x04	; 4
    47d8:	30 81       	ld	r19, Z
    47da:	20 81       	ld	r18, Z
    47dc:	80 81       	ld	r24, Z
    47de:	40 81       	ld	r20, Z
    47e0:	88 1f       	adc	r24, r24
    47e2:	88 27       	eor	r24, r24
    47e4:	88 1f       	adc	r24, r24
    47e6:	90 e0       	ldi	r25, 0x00	; 0
    47e8:	88 0f       	add	r24, r24
    47ea:	99 1f       	adc	r25, r25
    47ec:	88 0f       	add	r24, r24
    47ee:	99 1f       	adc	r25, r25
    47f0:	36 fb       	bst	r19, 6
    47f2:	33 27       	eor	r19, r19
    47f4:	30 f9       	bld	r19, 0
    47f6:	3d 87       	std	Y+13, r19	; 0x0d
    47f8:	1e 86       	std	Y+14, r1	; 0x0e
    47fa:	ad 85       	ldd	r26, Y+13	; 0x0d
    47fc:	be 85       	ldd	r27, Y+14	; 0x0e
    47fe:	8a 2b       	or	r24, r26
    4800:	9b 2b       	or	r25, r27
    4802:	22 95       	swap	r18
    4804:	21 70       	andi	r18, 0x01	; 1
    4806:	2f 87       	std	Y+15, r18	; 0x0f
    4808:	18 8a       	std	Y+16, r1	; 0x10
    480a:	2f 85       	ldd	r18, Y+15	; 0x0f
    480c:	38 89       	ldd	r19, Y+16	; 0x10
    480e:	22 0f       	add	r18, r18
    4810:	33 1f       	adc	r19, r19
    4812:	82 2b       	or	r24, r18
    4814:	93 2b       	or	r25, r19
    4816:	45 fb       	bst	r20, 5
    4818:	44 27       	eor	r20, r20
    481a:	40 f9       	bld	r20, 0
    481c:	49 8b       	std	Y+17, r20	; 0x11
    481e:	1a 8a       	std	Y+18, r1	; 0x12
    4820:	29 89       	ldd	r18, Y+17	; 0x11
    4822:	3a 89       	ldd	r19, Y+18	; 0x12
    4824:	22 0f       	add	r18, r18
    4826:	33 1f       	adc	r19, r19
    4828:	22 0f       	add	r18, r18
    482a:	33 1f       	adc	r19, r19
    482c:	22 0f       	add	r18, r18
    482e:	33 1f       	adc	r19, r19
    4830:	82 2b       	or	r24, r18
    4832:	93 2b       	or	r25, r19
    4834:	58 9f       	mul	r21, r24
    4836:	d0 01       	movw	r26, r0
    4838:	59 9f       	mul	r21, r25
    483a:	b0 0d       	add	r27, r0
    483c:	11 24       	eor	r1, r1
    483e:	ac 54       	subi	r26, 0x4C	; 76
    4840:	bf 4d       	sbci	r27, 0xDF	; 223
    4842:	80 91 4a 23 	lds	r24, 0x234A
    4846:	90 e0       	ldi	r25, 0x00	; 0
    4848:	15 96       	adiw	r26, 0x05	; 5
    484a:	8d 93       	st	X+, r24
    484c:	9c 93       	st	X, r25
    484e:	16 97       	sbiw	r26, 0x06	; 6
    4850:	30 81       	ld	r19, Z
    4852:	20 81       	ld	r18, Z
    4854:	80 81       	ld	r24, Z
    4856:	40 81       	ld	r20, Z
    4858:	88 1f       	adc	r24, r24
    485a:	88 27       	eor	r24, r24
    485c:	88 1f       	adc	r24, r24
    485e:	90 e0       	ldi	r25, 0x00	; 0
    4860:	88 0f       	add	r24, r24
    4862:	99 1f       	adc	r25, r25
    4864:	88 0f       	add	r24, r24
    4866:	99 1f       	adc	r25, r25
    4868:	36 fb       	bst	r19, 6
    486a:	33 27       	eor	r19, r19
    486c:	30 f9       	bld	r19, 0
    486e:	3b 8b       	std	Y+19, r19	; 0x13
    4870:	1c 8a       	std	Y+20, r1	; 0x14
    4872:	6b 89       	ldd	r22, Y+19	; 0x13
    4874:	7c 89       	ldd	r23, Y+20	; 0x14
    4876:	86 2b       	or	r24, r22
    4878:	97 2b       	or	r25, r23
    487a:	22 95       	swap	r18
    487c:	21 70       	andi	r18, 0x01	; 1
    487e:	2d 8b       	std	Y+21, r18	; 0x15
    4880:	1e 8a       	std	Y+22, r1	; 0x16
    4882:	2d 89       	ldd	r18, Y+21	; 0x15
    4884:	3e 89       	ldd	r19, Y+22	; 0x16
    4886:	22 0f       	add	r18, r18
    4888:	33 1f       	adc	r19, r19
    488a:	82 2b       	or	r24, r18
    488c:	93 2b       	or	r25, r19
    488e:	45 fb       	bst	r20, 5
    4890:	44 27       	eor	r20, r20
    4892:	40 f9       	bld	r20, 0
    4894:	4f 8b       	std	Y+23, r20	; 0x17
    4896:	18 8e       	std	Y+24, r1	; 0x18
    4898:	2f 89       	ldd	r18, Y+23	; 0x17
    489a:	38 8d       	ldd	r19, Y+24	; 0x18
    489c:	22 0f       	add	r18, r18
    489e:	33 1f       	adc	r19, r19
    48a0:	22 0f       	add	r18, r18
    48a2:	33 1f       	adc	r19, r19
    48a4:	22 0f       	add	r18, r18
    48a6:	33 1f       	adc	r19, r19
    48a8:	82 2b       	or	r24, r18
    48aa:	93 2b       	or	r25, r19
    48ac:	58 9f       	mul	r21, r24
    48ae:	d0 01       	movw	r26, r0
    48b0:	59 9f       	mul	r21, r25
    48b2:	b0 0d       	add	r27, r0
    48b4:	11 24       	eor	r1, r1
    48b6:	ac 54       	subi	r26, 0x4C	; 76
    48b8:	bf 4d       	sbci	r27, 0xDF	; 223
    48ba:	80 91 4b 23 	lds	r24, 0x234B
    48be:	90 e0       	ldi	r25, 0x00	; 0
    48c0:	17 96       	adiw	r26, 0x07	; 7
    48c2:	8d 93       	st	X+, r24
    48c4:	9c 93       	st	X, r25
    48c6:	18 97       	sbiw	r26, 0x08	; 8
    48c8:	30 81       	ld	r19, Z
    48ca:	20 81       	ld	r18, Z
    48cc:	80 81       	ld	r24, Z
    48ce:	40 81       	ld	r20, Z
    48d0:	88 1f       	adc	r24, r24
    48d2:	88 27       	eor	r24, r24
    48d4:	88 1f       	adc	r24, r24
    48d6:	90 e0       	ldi	r25, 0x00	; 0
    48d8:	88 0f       	add	r24, r24
    48da:	99 1f       	adc	r25, r25
    48dc:	88 0f       	add	r24, r24
    48de:	99 1f       	adc	r25, r25
    48e0:	36 fb       	bst	r19, 6
    48e2:	33 27       	eor	r19, r19
    48e4:	30 f9       	bld	r19, 0
    48e6:	39 8f       	std	Y+25, r19	; 0x19
    48e8:	1a 8e       	std	Y+26, r1	; 0x1a
    48ea:	a9 8d       	ldd	r26, Y+25	; 0x19
    48ec:	ba 8d       	ldd	r27, Y+26	; 0x1a
    48ee:	8a 2b       	or	r24, r26
    48f0:	9b 2b       	or	r25, r27
    48f2:	22 95       	swap	r18
    48f4:	21 70       	andi	r18, 0x01	; 1
    48f6:	2b 8f       	std	Y+27, r18	; 0x1b
    48f8:	1c 8e       	std	Y+28, r1	; 0x1c
    48fa:	2b 8d       	ldd	r18, Y+27	; 0x1b
    48fc:	3c 8d       	ldd	r19, Y+28	; 0x1c
    48fe:	22 0f       	add	r18, r18
    4900:	33 1f       	adc	r19, r19
    4902:	82 2b       	or	r24, r18
    4904:	93 2b       	or	r25, r19
    4906:	45 fb       	bst	r20, 5
    4908:	44 27       	eor	r20, r20
    490a:	40 f9       	bld	r20, 0
    490c:	4d 8f       	std	Y+29, r20	; 0x1d
    490e:	1e 8e       	std	Y+30, r1	; 0x1e
    4910:	2d 8d       	ldd	r18, Y+29	; 0x1d
    4912:	3e 8d       	ldd	r19, Y+30	; 0x1e
    4914:	22 0f       	add	r18, r18
    4916:	33 1f       	adc	r19, r19
    4918:	22 0f       	add	r18, r18
    491a:	33 1f       	adc	r19, r19
    491c:	22 0f       	add	r18, r18
    491e:	33 1f       	adc	r19, r19
    4920:	82 2b       	or	r24, r18
    4922:	93 2b       	or	r25, r19
    4924:	58 9f       	mul	r21, r24
    4926:	d0 01       	movw	r26, r0
    4928:	59 9f       	mul	r21, r25
    492a:	b0 0d       	add	r27, r0
    492c:	11 24       	eor	r1, r1
    492e:	ac 54       	subi	r26, 0x4C	; 76
    4930:	bf 4d       	sbci	r27, 0xDF	; 223
    4932:	80 91 4c 23 	lds	r24, 0x234C
    4936:	90 e0       	ldi	r25, 0x00	; 0
    4938:	19 96       	adiw	r26, 0x09	; 9
    493a:	8d 93       	st	X+, r24
    493c:	9c 93       	st	X, r25
    493e:	1a 97       	sbiw	r26, 0x0a	; 10
    4940:	30 81       	ld	r19, Z
    4942:	20 81       	ld	r18, Z
    4944:	80 81       	ld	r24, Z
    4946:	40 81       	ld	r20, Z
    4948:	88 1f       	adc	r24, r24
    494a:	88 27       	eor	r24, r24
    494c:	88 1f       	adc	r24, r24
    494e:	90 e0       	ldi	r25, 0x00	; 0
    4950:	88 0f       	add	r24, r24
    4952:	99 1f       	adc	r25, r25
    4954:	88 0f       	add	r24, r24
    4956:	99 1f       	adc	r25, r25
    4958:	36 fb       	bst	r19, 6
    495a:	33 27       	eor	r19, r19
    495c:	30 f9       	bld	r19, 0
    495e:	3f 8f       	std	Y+31, r19	; 0x1f
    4960:	18 a2       	std	Y+32, r1	; 0x20
    4962:	6f 8d       	ldd	r22, Y+31	; 0x1f
    4964:	78 a1       	ldd	r23, Y+32	; 0x20
    4966:	86 2b       	or	r24, r22
    4968:	97 2b       	or	r25, r23
    496a:	22 95       	swap	r18
    496c:	21 70       	andi	r18, 0x01	; 1
    496e:	29 a3       	std	Y+33, r18	; 0x21
    4970:	1a a2       	std	Y+34, r1	; 0x22
    4972:	29 a1       	ldd	r18, Y+33	; 0x21
    4974:	3a a1       	ldd	r19, Y+34	; 0x22
    4976:	22 0f       	add	r18, r18
    4978:	33 1f       	adc	r19, r19
    497a:	82 2b       	or	r24, r18
    497c:	93 2b       	or	r25, r19
    497e:	45 fb       	bst	r20, 5
    4980:	44 27       	eor	r20, r20
    4982:	40 f9       	bld	r20, 0
    4984:	4b a3       	std	Y+35, r20	; 0x23
    4986:	1c a2       	std	Y+36, r1	; 0x24
    4988:	2b a1       	ldd	r18, Y+35	; 0x23
    498a:	3c a1       	ldd	r19, Y+36	; 0x24
    498c:	22 0f       	add	r18, r18
    498e:	33 1f       	adc	r19, r19
    4990:	22 0f       	add	r18, r18
    4992:	33 1f       	adc	r19, r19
    4994:	22 0f       	add	r18, r18
    4996:	33 1f       	adc	r19, r19
    4998:	82 2b       	or	r24, r18
    499a:	93 2b       	or	r25, r19
    499c:	58 9f       	mul	r21, r24
    499e:	d0 01       	movw	r26, r0
    49a0:	59 9f       	mul	r21, r25
    49a2:	b0 0d       	add	r27, r0
    49a4:	11 24       	eor	r1, r1
    49a6:	ac 54       	subi	r26, 0x4C	; 76
    49a8:	bf 4d       	sbci	r27, 0xDF	; 223
    49aa:	80 91 4d 23 	lds	r24, 0x234D
    49ae:	90 e0       	ldi	r25, 0x00	; 0
    49b0:	1b 96       	adiw	r26, 0x0b	; 11
    49b2:	8d 93       	st	X+, r24
    49b4:	9c 93       	st	X, r25
    49b6:	1c 97       	sbiw	r26, 0x0c	; 12
    49b8:	30 81       	ld	r19, Z
    49ba:	20 81       	ld	r18, Z
    49bc:	80 81       	ld	r24, Z
    49be:	40 81       	ld	r20, Z
    49c0:	88 1f       	adc	r24, r24
    49c2:	88 27       	eor	r24, r24
    49c4:	88 1f       	adc	r24, r24
    49c6:	90 e0       	ldi	r25, 0x00	; 0
    49c8:	88 0f       	add	r24, r24
    49ca:	99 1f       	adc	r25, r25
    49cc:	88 0f       	add	r24, r24
    49ce:	99 1f       	adc	r25, r25
    49d0:	36 fb       	bst	r19, 6
    49d2:	33 27       	eor	r19, r19
    49d4:	30 f9       	bld	r19, 0
    49d6:	3d a3       	std	Y+37, r19	; 0x25
    49d8:	1e a2       	std	Y+38, r1	; 0x26
    49da:	ad a1       	ldd	r26, Y+37	; 0x25
    49dc:	be a1       	ldd	r27, Y+38	; 0x26
    49de:	8a 2b       	or	r24, r26
    49e0:	9b 2b       	or	r25, r27
    49e2:	22 95       	swap	r18
    49e4:	21 70       	andi	r18, 0x01	; 1
    49e6:	2f a3       	std	Y+39, r18	; 0x27
    49e8:	18 a6       	std	Y+40, r1	; 0x28
    49ea:	2f a1       	ldd	r18, Y+39	; 0x27
    49ec:	38 a5       	ldd	r19, Y+40	; 0x28
    49ee:	22 0f       	add	r18, r18
    49f0:	33 1f       	adc	r19, r19
    49f2:	82 2b       	or	r24, r18
    49f4:	93 2b       	or	r25, r19
    49f6:	45 fb       	bst	r20, 5
    49f8:	44 27       	eor	r20, r20
    49fa:	40 f9       	bld	r20, 0
    49fc:	49 a7       	std	Y+41, r20	; 0x29
    49fe:	1a a6       	std	Y+42, r1	; 0x2a
    4a00:	29 a5       	ldd	r18, Y+41	; 0x29
    4a02:	3a a5       	ldd	r19, Y+42	; 0x2a
    4a04:	22 0f       	add	r18, r18
    4a06:	33 1f       	adc	r19, r19
    4a08:	22 0f       	add	r18, r18
    4a0a:	33 1f       	adc	r19, r19
    4a0c:	22 0f       	add	r18, r18
    4a0e:	33 1f       	adc	r19, r19
    4a10:	82 2b       	or	r24, r18
    4a12:	93 2b       	or	r25, r19
    4a14:	58 9f       	mul	r21, r24
    4a16:	d0 01       	movw	r26, r0
    4a18:	59 9f       	mul	r21, r25
    4a1a:	b0 0d       	add	r27, r0
    4a1c:	11 24       	eor	r1, r1
    4a1e:	ac 54       	subi	r26, 0x4C	; 76
    4a20:	bf 4d       	sbci	r27, 0xDF	; 223
    4a22:	80 91 4e 23 	lds	r24, 0x234E
    4a26:	90 e0       	ldi	r25, 0x00	; 0
    4a28:	1d 96       	adiw	r26, 0x0d	; 13
    4a2a:	8d 93       	st	X+, r24
    4a2c:	9c 93       	st	X, r25
    4a2e:	1e 97       	sbiw	r26, 0x0e	; 14
    4a30:	30 81       	ld	r19, Z
    4a32:	20 81       	ld	r18, Z
    4a34:	80 81       	ld	r24, Z
    4a36:	40 81       	ld	r20, Z
    4a38:	88 1f       	adc	r24, r24
    4a3a:	88 27       	eor	r24, r24
    4a3c:	88 1f       	adc	r24, r24
    4a3e:	90 e0       	ldi	r25, 0x00	; 0
    4a40:	88 0f       	add	r24, r24
    4a42:	99 1f       	adc	r25, r25
    4a44:	88 0f       	add	r24, r24
    4a46:	99 1f       	adc	r25, r25
    4a48:	36 fb       	bst	r19, 6
    4a4a:	33 27       	eor	r19, r19
    4a4c:	30 f9       	bld	r19, 0
    4a4e:	3b a7       	std	Y+43, r19	; 0x2b
    4a50:	1c a6       	std	Y+44, r1	; 0x2c
    4a52:	6b a5       	ldd	r22, Y+43	; 0x2b
    4a54:	7c a5       	ldd	r23, Y+44	; 0x2c
    4a56:	86 2b       	or	r24, r22
    4a58:	97 2b       	or	r25, r23
    4a5a:	22 95       	swap	r18
    4a5c:	21 70       	andi	r18, 0x01	; 1
    4a5e:	2d a7       	std	Y+45, r18	; 0x2d
    4a60:	1e a6       	std	Y+46, r1	; 0x2e
    4a62:	2d a5       	ldd	r18, Y+45	; 0x2d
    4a64:	3e a5       	ldd	r19, Y+46	; 0x2e
    4a66:	22 0f       	add	r18, r18
    4a68:	33 1f       	adc	r19, r19
    4a6a:	82 2b       	or	r24, r18
    4a6c:	93 2b       	or	r25, r19
    4a6e:	45 fb       	bst	r20, 5
    4a70:	44 27       	eor	r20, r20
    4a72:	40 f9       	bld	r20, 0
    4a74:	4f a7       	std	Y+47, r20	; 0x2f
    4a76:	18 aa       	std	Y+48, r1	; 0x30
    4a78:	2f a5       	ldd	r18, Y+47	; 0x2f
    4a7a:	38 a9       	ldd	r19, Y+48	; 0x30
    4a7c:	22 0f       	add	r18, r18
    4a7e:	33 1f       	adc	r19, r19
    4a80:	22 0f       	add	r18, r18
    4a82:	33 1f       	adc	r19, r19
    4a84:	22 0f       	add	r18, r18
    4a86:	33 1f       	adc	r19, r19
    4a88:	82 2b       	or	r24, r18
    4a8a:	93 2b       	or	r25, r19
    4a8c:	58 9f       	mul	r21, r24
    4a8e:	d0 01       	movw	r26, r0
    4a90:	59 9f       	mul	r21, r25
    4a92:	b0 0d       	add	r27, r0
    4a94:	11 24       	eor	r1, r1
    4a96:	ac 54       	subi	r26, 0x4C	; 76
    4a98:	bf 4d       	sbci	r27, 0xDF	; 223
    4a9a:	80 91 4f 23 	lds	r24, 0x234F
    4a9e:	90 e0       	ldi	r25, 0x00	; 0
    4aa0:	1f 96       	adiw	r26, 0x0f	; 15
    4aa2:	8d 93       	st	X+, r24
    4aa4:	9c 93       	st	X, r25
    4aa6:	50 97       	sbiw	r26, 0x10	; 16
    4aa8:	30 81       	ld	r19, Z
    4aaa:	20 81       	ld	r18, Z
    4aac:	80 81       	ld	r24, Z
    4aae:	40 81       	ld	r20, Z
    4ab0:	88 1f       	adc	r24, r24
    4ab2:	88 27       	eor	r24, r24
    4ab4:	88 1f       	adc	r24, r24
    4ab6:	90 e0       	ldi	r25, 0x00	; 0
    4ab8:	88 0f       	add	r24, r24
    4aba:	99 1f       	adc	r25, r25
    4abc:	88 0f       	add	r24, r24
    4abe:	99 1f       	adc	r25, r25
    4ac0:	36 fb       	bst	r19, 6
    4ac2:	33 27       	eor	r19, r19
    4ac4:	30 f9       	bld	r19, 0
    4ac6:	39 ab       	std	Y+49, r19	; 0x31
    4ac8:	1a aa       	std	Y+50, r1	; 0x32
    4aca:	a9 a9       	ldd	r26, Y+49	; 0x31
    4acc:	ba a9       	ldd	r27, Y+50	; 0x32
    4ace:	8a 2b       	or	r24, r26
    4ad0:	9b 2b       	or	r25, r27
    4ad2:	22 95       	swap	r18
    4ad4:	21 70       	andi	r18, 0x01	; 1
    4ad6:	2b ab       	std	Y+51, r18	; 0x33
    4ad8:	1c aa       	std	Y+52, r1	; 0x34
    4ada:	2b a9       	ldd	r18, Y+51	; 0x33
    4adc:	3c a9       	ldd	r19, Y+52	; 0x34
    4ade:	22 0f       	add	r18, r18
    4ae0:	33 1f       	adc	r19, r19
    4ae2:	82 2b       	or	r24, r18
    4ae4:	93 2b       	or	r25, r19
    4ae6:	45 fb       	bst	r20, 5
    4ae8:	44 27       	eor	r20, r20
    4aea:	40 f9       	bld	r20, 0
    4aec:	4d ab       	std	Y+53, r20	; 0x35
    4aee:	1e aa       	std	Y+54, r1	; 0x36
    4af0:	2d a9       	ldd	r18, Y+53	; 0x35
    4af2:	3e a9       	ldd	r19, Y+54	; 0x36
    4af4:	22 0f       	add	r18, r18
    4af6:	33 1f       	adc	r19, r19
    4af8:	22 0f       	add	r18, r18
    4afa:	33 1f       	adc	r19, r19
    4afc:	22 0f       	add	r18, r18
    4afe:	33 1f       	adc	r19, r19
    4b00:	82 2b       	or	r24, r18
    4b02:	93 2b       	or	r25, r19
    4b04:	58 9f       	mul	r21, r24
    4b06:	d0 01       	movw	r26, r0
    4b08:	59 9f       	mul	r21, r25
    4b0a:	b0 0d       	add	r27, r0
    4b0c:	11 24       	eor	r1, r1
    4b0e:	ac 54       	subi	r26, 0x4C	; 76
    4b10:	bf 4d       	sbci	r27, 0xDF	; 223
    4b12:	80 91 50 23 	lds	r24, 0x2350
    4b16:	51 96       	adiw	r26, 0x11	; 17
    4b18:	8c 93       	st	X, r24
    4b1a:	30 81       	ld	r19, Z
    4b1c:	20 81       	ld	r18, Z
    4b1e:	80 81       	ld	r24, Z
    4b20:	40 81       	ld	r20, Z
    4b22:	88 1f       	adc	r24, r24
    4b24:	88 27       	eor	r24, r24
    4b26:	88 1f       	adc	r24, r24
    4b28:	90 e0       	ldi	r25, 0x00	; 0
    4b2a:	88 0f       	add	r24, r24
    4b2c:	99 1f       	adc	r25, r25
    4b2e:	88 0f       	add	r24, r24
    4b30:	99 1f       	adc	r25, r25
    4b32:	36 fb       	bst	r19, 6
    4b34:	33 27       	eor	r19, r19
    4b36:	30 f9       	bld	r19, 0
    4b38:	3f ab       	std	Y+55, r19	; 0x37
    4b3a:	18 ae       	std	Y+56, r1	; 0x38
    4b3c:	6f a9       	ldd	r22, Y+55	; 0x37
    4b3e:	78 ad       	ldd	r23, Y+56	; 0x38
    4b40:	86 2b       	or	r24, r22
    4b42:	97 2b       	or	r25, r23
    4b44:	22 95       	swap	r18
    4b46:	21 70       	andi	r18, 0x01	; 1
    4b48:	29 af       	std	Y+57, r18	; 0x39
    4b4a:	1a ae       	std	Y+58, r1	; 0x3a
    4b4c:	29 ad       	ldd	r18, Y+57	; 0x39
    4b4e:	3a ad       	ldd	r19, Y+58	; 0x3a
    4b50:	22 0f       	add	r18, r18
    4b52:	33 1f       	adc	r19, r19
    4b54:	82 2b       	or	r24, r18
    4b56:	93 2b       	or	r25, r19
    4b58:	45 fb       	bst	r20, 5
    4b5a:	44 27       	eor	r20, r20
    4b5c:	40 f9       	bld	r20, 0
    4b5e:	4b af       	std	Y+59, r20	; 0x3b
    4b60:	1c ae       	std	Y+60, r1	; 0x3c
    4b62:	2b ad       	ldd	r18, Y+59	; 0x3b
    4b64:	3c ad       	ldd	r19, Y+60	; 0x3c
    4b66:	22 0f       	add	r18, r18
    4b68:	33 1f       	adc	r19, r19
    4b6a:	22 0f       	add	r18, r18
    4b6c:	33 1f       	adc	r19, r19
    4b6e:	22 0f       	add	r18, r18
    4b70:	33 1f       	adc	r19, r19
    4b72:	82 2b       	or	r24, r18
    4b74:	93 2b       	or	r25, r19
    4b76:	58 9f       	mul	r21, r24
    4b78:	d0 01       	movw	r26, r0
    4b7a:	59 9f       	mul	r21, r25
    4b7c:	b0 0d       	add	r27, r0
    4b7e:	11 24       	eor	r1, r1
    4b80:	ac 54       	subi	r26, 0x4C	; 76
    4b82:	bf 4d       	sbci	r27, 0xDF	; 223
    4b84:	80 91 51 23 	lds	r24, 0x2351
    4b88:	52 96       	adiw	r26, 0x12	; 18
    4b8a:	8c 93       	st	X, r24
    4b8c:	30 81       	ld	r19, Z
    4b8e:	20 81       	ld	r18, Z
    4b90:	80 81       	ld	r24, Z
    4b92:	40 81       	ld	r20, Z
    4b94:	88 1f       	adc	r24, r24
    4b96:	88 27       	eor	r24, r24
    4b98:	88 1f       	adc	r24, r24
    4b9a:	90 e0       	ldi	r25, 0x00	; 0
    4b9c:	88 0f       	add	r24, r24
    4b9e:	99 1f       	adc	r25, r25
    4ba0:	88 0f       	add	r24, r24
    4ba2:	99 1f       	adc	r25, r25
    4ba4:	36 fb       	bst	r19, 6
    4ba6:	33 27       	eor	r19, r19
    4ba8:	30 f9       	bld	r19, 0
    4baa:	3d af       	std	Y+61, r19	; 0x3d
    4bac:	1e ae       	std	Y+62, r1	; 0x3e
    4bae:	ad ad       	ldd	r26, Y+61	; 0x3d
    4bb0:	be ad       	ldd	r27, Y+62	; 0x3e
    4bb2:	8a 2b       	or	r24, r26
    4bb4:	9b 2b       	or	r25, r27
    4bb6:	22 95       	swap	r18
    4bb8:	21 70       	andi	r18, 0x01	; 1
    4bba:	2f af       	std	Y+63, r18	; 0x3f
    4bbc:	21 96       	adiw	r28, 0x01	; 1
    4bbe:	1f ae       	std	Y+63, r1	; 0x3f
    4bc0:	21 97       	sbiw	r28, 0x01	; 1
    4bc2:	21 96       	adiw	r28, 0x01	; 1
    4bc4:	2e ad       	ldd	r18, Y+62	; 0x3e
    4bc6:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bc8:	21 97       	sbiw	r28, 0x01	; 1
    4bca:	22 0f       	add	r18, r18
    4bcc:	33 1f       	adc	r19, r19
    4bce:	82 2b       	or	r24, r18
    4bd0:	93 2b       	or	r25, r19
    4bd2:	45 fb       	bst	r20, 5
    4bd4:	44 27       	eor	r20, r20
    4bd6:	40 f9       	bld	r20, 0
    4bd8:	22 96       	adiw	r28, 0x02	; 2
    4bda:	4f af       	std	Y+63, r20	; 0x3f
    4bdc:	22 97       	sbiw	r28, 0x02	; 2
    4bde:	23 96       	adiw	r28, 0x03	; 3
    4be0:	1f ae       	std	Y+63, r1	; 0x3f
    4be2:	23 97       	sbiw	r28, 0x03	; 3
    4be4:	23 96       	adiw	r28, 0x03	; 3
    4be6:	2e ad       	ldd	r18, Y+62	; 0x3e
    4be8:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bea:	23 97       	sbiw	r28, 0x03	; 3
    4bec:	22 0f       	add	r18, r18
    4bee:	33 1f       	adc	r19, r19
    4bf0:	22 0f       	add	r18, r18
    4bf2:	33 1f       	adc	r19, r19
    4bf4:	22 0f       	add	r18, r18
    4bf6:	33 1f       	adc	r19, r19
    4bf8:	82 2b       	or	r24, r18
    4bfa:	93 2b       	or	r25, r19
    4bfc:	58 9f       	mul	r21, r24
    4bfe:	d0 01       	movw	r26, r0
    4c00:	59 9f       	mul	r21, r25
    4c02:	b0 0d       	add	r27, r0
    4c04:	11 24       	eor	r1, r1
    4c06:	ac 54       	subi	r26, 0x4C	; 76
    4c08:	bf 4d       	sbci	r27, 0xDF	; 223
    4c0a:	80 91 52 23 	lds	r24, 0x2352
    4c0e:	53 96       	adiw	r26, 0x13	; 19
    4c10:	8c 93       	st	X, r24
    4c12:	30 81       	ld	r19, Z
    4c14:	20 81       	ld	r18, Z
    4c16:	80 81       	ld	r24, Z
    4c18:	40 81       	ld	r20, Z
    4c1a:	88 1f       	adc	r24, r24
    4c1c:	88 27       	eor	r24, r24
    4c1e:	88 1f       	adc	r24, r24
    4c20:	90 e0       	ldi	r25, 0x00	; 0
    4c22:	88 0f       	add	r24, r24
    4c24:	99 1f       	adc	r25, r25
    4c26:	88 0f       	add	r24, r24
    4c28:	99 1f       	adc	r25, r25
    4c2a:	36 fb       	bst	r19, 6
    4c2c:	33 27       	eor	r19, r19
    4c2e:	30 f9       	bld	r19, 0
    4c30:	24 96       	adiw	r28, 0x04	; 4
    4c32:	3f af       	std	Y+63, r19	; 0x3f
    4c34:	24 97       	sbiw	r28, 0x04	; 4
    4c36:	25 96       	adiw	r28, 0x05	; 5
    4c38:	1f ae       	std	Y+63, r1	; 0x3f
    4c3a:	25 97       	sbiw	r28, 0x05	; 5
    4c3c:	25 96       	adiw	r28, 0x05	; 5
    4c3e:	6e ad       	ldd	r22, Y+62	; 0x3e
    4c40:	7f ad       	ldd	r23, Y+63	; 0x3f
    4c42:	25 97       	sbiw	r28, 0x05	; 5
    4c44:	86 2b       	or	r24, r22
    4c46:	97 2b       	or	r25, r23
    4c48:	22 95       	swap	r18
    4c4a:	21 70       	andi	r18, 0x01	; 1
    4c4c:	26 96       	adiw	r28, 0x06	; 6
    4c4e:	2f af       	std	Y+63, r18	; 0x3f
    4c50:	26 97       	sbiw	r28, 0x06	; 6
    4c52:	27 96       	adiw	r28, 0x07	; 7
    4c54:	1f ae       	std	Y+63, r1	; 0x3f
    4c56:	27 97       	sbiw	r28, 0x07	; 7
    4c58:	27 96       	adiw	r28, 0x07	; 7
    4c5a:	2e ad       	ldd	r18, Y+62	; 0x3e
    4c5c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c5e:	27 97       	sbiw	r28, 0x07	; 7
    4c60:	22 0f       	add	r18, r18
    4c62:	33 1f       	adc	r19, r19
    4c64:	82 2b       	or	r24, r18
    4c66:	93 2b       	or	r25, r19
    4c68:	45 fb       	bst	r20, 5
    4c6a:	44 27       	eor	r20, r20
    4c6c:	40 f9       	bld	r20, 0
    4c6e:	28 96       	adiw	r28, 0x08	; 8
    4c70:	4f af       	std	Y+63, r20	; 0x3f
    4c72:	28 97       	sbiw	r28, 0x08	; 8
    4c74:	29 96       	adiw	r28, 0x09	; 9
    4c76:	1f ae       	std	Y+63, r1	; 0x3f
    4c78:	29 97       	sbiw	r28, 0x09	; 9
    4c7a:	29 96       	adiw	r28, 0x09	; 9
    4c7c:	2e ad       	ldd	r18, Y+62	; 0x3e
    4c7e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4c80:	29 97       	sbiw	r28, 0x09	; 9
    4c82:	22 0f       	add	r18, r18
    4c84:	33 1f       	adc	r19, r19
    4c86:	22 0f       	add	r18, r18
    4c88:	33 1f       	adc	r19, r19
    4c8a:	22 0f       	add	r18, r18
    4c8c:	33 1f       	adc	r19, r19
    4c8e:	82 2b       	or	r24, r18
    4c90:	93 2b       	or	r25, r19
    4c92:	58 9f       	mul	r21, r24
    4c94:	d0 01       	movw	r26, r0
    4c96:	59 9f       	mul	r21, r25
    4c98:	b0 0d       	add	r27, r0
    4c9a:	11 24       	eor	r1, r1
    4c9c:	ac 54       	subi	r26, 0x4C	; 76
    4c9e:	bf 4d       	sbci	r27, 0xDF	; 223
    4ca0:	80 91 53 23 	lds	r24, 0x2353
    4ca4:	54 96       	adiw	r26, 0x14	; 20
    4ca6:	8c 93       	st	X, r24
    4ca8:	30 81       	ld	r19, Z
    4caa:	20 81       	ld	r18, Z
    4cac:	80 81       	ld	r24, Z
    4cae:	40 81       	ld	r20, Z
    4cb0:	88 1f       	adc	r24, r24
    4cb2:	88 27       	eor	r24, r24
    4cb4:	88 1f       	adc	r24, r24
    4cb6:	90 e0       	ldi	r25, 0x00	; 0
    4cb8:	88 0f       	add	r24, r24
    4cba:	99 1f       	adc	r25, r25
    4cbc:	88 0f       	add	r24, r24
    4cbe:	99 1f       	adc	r25, r25
    4cc0:	36 fb       	bst	r19, 6
    4cc2:	33 27       	eor	r19, r19
    4cc4:	30 f9       	bld	r19, 0
    4cc6:	2a 96       	adiw	r28, 0x0a	; 10
    4cc8:	3f af       	std	Y+63, r19	; 0x3f
    4cca:	2a 97       	sbiw	r28, 0x0a	; 10
    4ccc:	2b 96       	adiw	r28, 0x0b	; 11
    4cce:	1f ae       	std	Y+63, r1	; 0x3f
    4cd0:	2b 97       	sbiw	r28, 0x0b	; 11
    4cd2:	2b 96       	adiw	r28, 0x0b	; 11
    4cd4:	ae ad       	ldd	r26, Y+62	; 0x3e
    4cd6:	bf ad       	ldd	r27, Y+63	; 0x3f
    4cd8:	2b 97       	sbiw	r28, 0x0b	; 11
    4cda:	8a 2b       	or	r24, r26
    4cdc:	9b 2b       	or	r25, r27
    4cde:	22 95       	swap	r18
    4ce0:	21 70       	andi	r18, 0x01	; 1
    4ce2:	2c 96       	adiw	r28, 0x0c	; 12
    4ce4:	2f af       	std	Y+63, r18	; 0x3f
    4ce6:	2c 97       	sbiw	r28, 0x0c	; 12
    4ce8:	2d 96       	adiw	r28, 0x0d	; 13
    4cea:	1f ae       	std	Y+63, r1	; 0x3f
    4cec:	2d 97       	sbiw	r28, 0x0d	; 13
    4cee:	2d 96       	adiw	r28, 0x0d	; 13
    4cf0:	2e ad       	ldd	r18, Y+62	; 0x3e
    4cf2:	3f ad       	ldd	r19, Y+63	; 0x3f
    4cf4:	2d 97       	sbiw	r28, 0x0d	; 13
    4cf6:	22 0f       	add	r18, r18
    4cf8:	33 1f       	adc	r19, r19
    4cfa:	82 2b       	or	r24, r18
    4cfc:	93 2b       	or	r25, r19
    4cfe:	45 fb       	bst	r20, 5
    4d00:	44 27       	eor	r20, r20
    4d02:	40 f9       	bld	r20, 0
    4d04:	2e 96       	adiw	r28, 0x0e	; 14
    4d06:	4f af       	std	Y+63, r20	; 0x3f
    4d08:	2e 97       	sbiw	r28, 0x0e	; 14
    4d0a:	2f 96       	adiw	r28, 0x0f	; 15
    4d0c:	1f ae       	std	Y+63, r1	; 0x3f
    4d0e:	2f 97       	sbiw	r28, 0x0f	; 15
    4d10:	2f 96       	adiw	r28, 0x0f	; 15
    4d12:	2e ad       	ldd	r18, Y+62	; 0x3e
    4d14:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d16:	2f 97       	sbiw	r28, 0x0f	; 15
    4d18:	22 0f       	add	r18, r18
    4d1a:	33 1f       	adc	r19, r19
    4d1c:	22 0f       	add	r18, r18
    4d1e:	33 1f       	adc	r19, r19
    4d20:	22 0f       	add	r18, r18
    4d22:	33 1f       	adc	r19, r19
    4d24:	82 2b       	or	r24, r18
    4d26:	93 2b       	or	r25, r19
    4d28:	58 9f       	mul	r21, r24
    4d2a:	d0 01       	movw	r26, r0
    4d2c:	59 9f       	mul	r21, r25
    4d2e:	b0 0d       	add	r27, r0
    4d30:	11 24       	eor	r1, r1
    4d32:	ac 54       	subi	r26, 0x4C	; 76
    4d34:	bf 4d       	sbci	r27, 0xDF	; 223
    4d36:	80 91 54 23 	lds	r24, 0x2354
    4d3a:	55 96       	adiw	r26, 0x15	; 21
    4d3c:	8c 93       	st	X, r24
    4d3e:	30 81       	ld	r19, Z
    4d40:	20 81       	ld	r18, Z
    4d42:	80 81       	ld	r24, Z
    4d44:	40 81       	ld	r20, Z
    4d46:	88 1f       	adc	r24, r24
    4d48:	88 27       	eor	r24, r24
    4d4a:	88 1f       	adc	r24, r24
    4d4c:	90 e0       	ldi	r25, 0x00	; 0
    4d4e:	88 0f       	add	r24, r24
    4d50:	99 1f       	adc	r25, r25
    4d52:	88 0f       	add	r24, r24
    4d54:	99 1f       	adc	r25, r25
    4d56:	36 fb       	bst	r19, 6
    4d58:	33 27       	eor	r19, r19
    4d5a:	30 f9       	bld	r19, 0
    4d5c:	60 96       	adiw	r28, 0x10	; 16
    4d5e:	3f af       	std	Y+63, r19	; 0x3f
    4d60:	60 97       	sbiw	r28, 0x10	; 16
    4d62:	61 96       	adiw	r28, 0x11	; 17
    4d64:	1f ae       	std	Y+63, r1	; 0x3f
    4d66:	61 97       	sbiw	r28, 0x11	; 17
    4d68:	61 96       	adiw	r28, 0x11	; 17
    4d6a:	ee ad       	ldd	r30, Y+62	; 0x3e
    4d6c:	ff ad       	ldd	r31, Y+63	; 0x3f
    4d6e:	61 97       	sbiw	r28, 0x11	; 17
    4d70:	8e 2b       	or	r24, r30
    4d72:	9f 2b       	or	r25, r31
    4d74:	22 95       	swap	r18
    4d76:	21 70       	andi	r18, 0x01	; 1
    4d78:	62 96       	adiw	r28, 0x12	; 18
    4d7a:	2f af       	std	Y+63, r18	; 0x3f
    4d7c:	62 97       	sbiw	r28, 0x12	; 18
    4d7e:	63 96       	adiw	r28, 0x13	; 19
    4d80:	1f ae       	std	Y+63, r1	; 0x3f
    4d82:	63 97       	sbiw	r28, 0x13	; 19
    4d84:	63 96       	adiw	r28, 0x13	; 19
    4d86:	2e ad       	ldd	r18, Y+62	; 0x3e
    4d88:	3f ad       	ldd	r19, Y+63	; 0x3f
    4d8a:	63 97       	sbiw	r28, 0x13	; 19
    4d8c:	22 0f       	add	r18, r18
    4d8e:	33 1f       	adc	r19, r19
    4d90:	82 2b       	or	r24, r18
    4d92:	93 2b       	or	r25, r19
    4d94:	45 fb       	bst	r20, 5
    4d96:	44 27       	eor	r20, r20
    4d98:	40 f9       	bld	r20, 0
    4d9a:	64 96       	adiw	r28, 0x14	; 20
    4d9c:	4f af       	std	Y+63, r20	; 0x3f
    4d9e:	64 97       	sbiw	r28, 0x14	; 20
    4da0:	65 96       	adiw	r28, 0x15	; 21
    4da2:	1f ae       	std	Y+63, r1	; 0x3f
    4da4:	65 97       	sbiw	r28, 0x15	; 21
    4da6:	65 96       	adiw	r28, 0x15	; 21
    4da8:	2e ad       	ldd	r18, Y+62	; 0x3e
    4daa:	3f ad       	ldd	r19, Y+63	; 0x3f
    4dac:	65 97       	sbiw	r28, 0x15	; 21
    4dae:	22 0f       	add	r18, r18
    4db0:	33 1f       	adc	r19, r19
    4db2:	22 0f       	add	r18, r18
    4db4:	33 1f       	adc	r19, r19
    4db6:	22 0f       	add	r18, r18
    4db8:	33 1f       	adc	r19, r19
    4dba:	82 2b       	or	r24, r18
    4dbc:	93 2b       	or	r25, r19
    4dbe:	58 9f       	mul	r21, r24
    4dc0:	f0 01       	movw	r30, r0
    4dc2:	59 9f       	mul	r21, r25
    4dc4:	f0 0d       	add	r31, r0
    4dc6:	11 24       	eor	r1, r1
    4dc8:	ec 54       	subi	r30, 0x4C	; 76
    4dca:	ff 4d       	sbci	r31, 0xDF	; 223
    4dcc:	80 91 55 23 	lds	r24, 0x2355
    4dd0:	86 8b       	std	Z+22, r24	; 0x16
    4dd2:	75 fe       	sbrs	r7, 5
    4dd4:	04 c0       	rjmp	.+8      	; 0x4dde <__vector_43+0x86c>
    4dd6:	80 e2       	ldi	r24, 0x20	; 32
    4dd8:	e0 e6       	ldi	r30, 0x60	; 96
    4dda:	f6 e0       	ldi	r31, 0x06	; 6
    4ddc:	87 83       	std	Z+7, r24	; 0x07
    4dde:	74 fe       	sbrs	r7, 4
    4de0:	05 c0       	rjmp	.+10     	; 0x4dec <__vector_43+0x87a>
    4de2:	84 e0       	ldi	r24, 0x04	; 4
    4de4:	e0 e6       	ldi	r30, 0x60	; 96
    4de6:	f6 e0       	ldi	r31, 0x06	; 6
    4de8:	87 83       	std	Z+7, r24	; 0x07
    4dea:	44 d4       	rcall	.+2184   	; 0x5674 <NRF24L01_L_Flush_TX>
    4dec:	cc 5a       	subi	r28, 0xAC	; 172
    4dee:	df 4f       	sbci	r29, 0xFF	; 255
    4df0:	cd bf       	out	0x3d, r28	; 61
    4df2:	de bf       	out	0x3e, r29	; 62
    4df4:	df 91       	pop	r29
    4df6:	cf 91       	pop	r28
    4df8:	ff 91       	pop	r31
    4dfa:	ef 91       	pop	r30
    4dfc:	bf 91       	pop	r27
    4dfe:	af 91       	pop	r26
    4e00:	9f 91       	pop	r25
    4e02:	8f 91       	pop	r24
    4e04:	7f 91       	pop	r23
    4e06:	6f 91       	pop	r22
    4e08:	5f 91       	pop	r21
    4e0a:	4f 91       	pop	r20
    4e0c:	3f 91       	pop	r19
    4e0e:	2f 91       	pop	r18
    4e10:	1f 91       	pop	r17
    4e12:	0f 91       	pop	r16
    4e14:	ff 90       	pop	r15
    4e16:	ef 90       	pop	r14
    4e18:	df 90       	pop	r13
    4e1a:	cf 90       	pop	r12
    4e1c:	bf 90       	pop	r11
    4e1e:	af 90       	pop	r10
    4e20:	9f 90       	pop	r9
    4e22:	8f 90       	pop	r8
    4e24:	7f 90       	pop	r7
    4e26:	5f 90       	pop	r5
    4e28:	4f 90       	pop	r4
    4e2a:	3f 90       	pop	r3
    4e2c:	2f 90       	pop	r2
    4e2e:	0f 90       	pop	r0
    4e30:	0b be       	out	0x3b, r0	; 59
    4e32:	0f 90       	pop	r0
    4e34:	0a be       	out	0x3a, r0	; 58
    4e36:	0f 90       	pop	r0
    4e38:	09 be       	out	0x39, r0	; 57
    4e3a:	0f 90       	pop	r0
    4e3c:	08 be       	out	0x38, r0	; 56
    4e3e:	0f 90       	pop	r0
    4e40:	0f be       	out	0x3f, r0	; 63
    4e42:	0f 90       	pop	r0
    4e44:	1f 90       	pop	r1
    4e46:	18 95       	reti

00004e48 <__vector_77>:
    4e48:	1f 92       	push	r1
    4e4a:	0f 92       	push	r0
    4e4c:	0f b6       	in	r0, 0x3f	; 63
    4e4e:	0f 92       	push	r0
    4e50:	11 24       	eor	r1, r1
    4e52:	08 b6       	in	r0, 0x38	; 56
    4e54:	0f 92       	push	r0
    4e56:	18 be       	out	0x38, r1	; 56
    4e58:	09 b6       	in	r0, 0x39	; 57
    4e5a:	0f 92       	push	r0
    4e5c:	19 be       	out	0x39, r1	; 57
    4e5e:	0a b6       	in	r0, 0x3a	; 58
    4e60:	0f 92       	push	r0
    4e62:	1a be       	out	0x3a, r1	; 58
    4e64:	0b b6       	in	r0, 0x3b	; 59
    4e66:	0f 92       	push	r0
    4e68:	1b be       	out	0x3b, r1	; 59
    4e6a:	af 92       	push	r10
    4e6c:	bf 92       	push	r11
    4e6e:	df 92       	push	r13
    4e70:	ef 92       	push	r14
    4e72:	ff 92       	push	r15
    4e74:	0f 93       	push	r16
    4e76:	1f 93       	push	r17
    4e78:	2f 93       	push	r18
    4e7a:	3f 93       	push	r19
    4e7c:	4f 93       	push	r20
    4e7e:	5f 93       	push	r21
    4e80:	6f 93       	push	r22
    4e82:	7f 93       	push	r23
    4e84:	8f 93       	push	r24
    4e86:	9f 93       	push	r25
    4e88:	af 93       	push	r26
    4e8a:	bf 93       	push	r27
    4e8c:	cf 93       	push	r28
    4e8e:	df 93       	push	r29
    4e90:	ef 93       	push	r30
    4e92:	ff 93       	push	r31
    4e94:	a8 95       	wdr
    4e96:	80 91 6b 23 	lds	r24, 0x236B
    4e9a:	8f 5f       	subi	r24, 0xFF	; 255
    4e9c:	80 93 6b 23 	sts	0x236B, r24
    4ea0:	84 31       	cpi	r24, 0x14	; 20
    4ea2:	74 f0       	brlt	.+28     	; 0x4ec0 <__vector_77+0x78>
    4ea4:	81 e0       	ldi	r24, 0x01	; 1
    4ea6:	80 93 9e 20 	sts	0x209E, r24
    4eaa:	10 92 6b 23 	sts	0x236B, r1
    4eae:	80 91 a3 20 	lds	r24, 0x20A3
    4eb2:	90 91 a4 20 	lds	r25, 0x20A4
    4eb6:	01 96       	adiw	r24, 0x01	; 1
    4eb8:	80 93 a3 20 	sts	0x20A3, r24
    4ebc:	90 93 a4 20 	sts	0x20A4, r25
    4ec0:	80 91 9f 20 	lds	r24, 0x209F
    4ec4:	90 91 a0 20 	lds	r25, 0x20A0
    4ec8:	a0 91 a1 20 	lds	r26, 0x20A1
    4ecc:	b0 91 a2 20 	lds	r27, 0x20A2
    4ed0:	01 96       	adiw	r24, 0x01	; 1
    4ed2:	a1 1d       	adc	r26, r1
    4ed4:	b1 1d       	adc	r27, r1
    4ed6:	80 93 9f 20 	sts	0x209F, r24
    4eda:	90 93 a0 20 	sts	0x20A0, r25
    4ede:	a0 93 a1 20 	sts	0x20A1, r26
    4ee2:	b0 93 a2 20 	sts	0x20A2, r27
    4ee6:	e0 90 a5 20 	lds	r14, 0x20A5
    4eea:	f0 90 a6 20 	lds	r15, 0x20A6
    4eee:	e1 14       	cp	r14, r1
    4ef0:	f1 04       	cpc	r15, r1
    4ef2:	09 f4       	brne	.+2      	; 0x4ef6 <__vector_77+0xae>
    4ef4:	5c c0       	rjmp	.+184    	; 0x4fae <__vector_77+0x166>
    4ef6:	80 91 ce 21 	lds	r24, 0x21CE
    4efa:	90 91 cf 21 	lds	r25, 0x21CF
    4efe:	a0 91 d0 21 	lds	r26, 0x21D0
    4f02:	b0 91 d1 21 	lds	r27, 0x21D1
    4f06:	01 96       	adiw	r24, 0x01	; 1
    4f08:	a1 1d       	adc	r26, r1
    4f0a:	b1 1d       	adc	r27, r1
    4f0c:	80 93 ce 21 	sts	0x21CE, r24
    4f10:	90 93 cf 21 	sts	0x21CF, r25
    4f14:	a0 93 d0 21 	sts	0x21D0, r26
    4f18:	b0 93 d1 21 	sts	0x21D1, r27
    4f1c:	84 36       	cpi	r24, 0x64	; 100
    4f1e:	91 05       	cpc	r25, r1
    4f20:	a1 05       	cpc	r26, r1
    4f22:	b1 05       	cpc	r27, r1
    4f24:	e0 f4       	brcc	.+56     	; 0x4f5e <__vector_77+0x116>
    4f26:	a0 e2       	ldi	r26, 0x20	; 32
    4f28:	b6 e0       	ldi	r27, 0x06	; 6
    4f2a:	14 96       	adiw	r26, 0x04	; 4
    4f2c:	8c 91       	ld	r24, X
    4f2e:	14 97       	sbiw	r26, 0x04	; 4
    4f30:	80 64       	ori	r24, 0x40	; 64
    4f32:	14 96       	adiw	r26, 0x04	; 4
    4f34:	8c 93       	st	X, r24
    4f36:	14 97       	sbiw	r26, 0x04	; 4
    4f38:	e0 92 2a 08 	sts	0x082A, r14
    4f3c:	f0 92 2b 08 	sts	0x082B, r15
    4f40:	14 96       	adiw	r26, 0x04	; 4
    4f42:	8c 91       	ld	r24, X
    4f44:	14 97       	sbiw	r26, 0x04	; 4
    4f46:	80 64       	ori	r24, 0x40	; 64
    4f48:	14 96       	adiw	r26, 0x04	; 4
    4f4a:	8c 93       	st	X, r24
    4f4c:	80 91 a5 20 	lds	r24, 0x20A5
    4f50:	90 91 a6 20 	lds	r25, 0x20A6
    4f54:	80 93 28 08 	sts	0x0828, r24
    4f58:	90 93 29 08 	sts	0x0829, r25
    4f5c:	28 c0       	rjmp	.+80     	; 0x4fae <__vector_77+0x166>
    4f5e:	89 3b       	cpi	r24, 0xB9	; 185
    4f60:	9b 40       	sbci	r25, 0x0B	; 11
    4f62:	a1 05       	cpc	r26, r1
    4f64:	b1 05       	cpc	r27, r1
    4f66:	60 f0       	brcs	.+24     	; 0x4f80 <__vector_77+0x138>
    4f68:	10 92 ce 21 	sts	0x21CE, r1
    4f6c:	10 92 cf 21 	sts	0x21CF, r1
    4f70:	10 92 d0 21 	sts	0x21D0, r1
    4f74:	10 92 d1 21 	sts	0x21D1, r1
    4f78:	10 92 a5 20 	sts	0x20A5, r1
    4f7c:	10 92 a6 20 	sts	0x20A6, r1
    4f80:	10 92 2a 08 	sts	0x082A, r1
    4f84:	10 92 2b 08 	sts	0x082B, r1
    4f88:	a0 e2       	ldi	r26, 0x20	; 32
    4f8a:	b6 e0       	ldi	r27, 0x06	; 6
    4f8c:	14 96       	adiw	r26, 0x04	; 4
    4f8e:	8c 91       	ld	r24, X
    4f90:	14 97       	sbiw	r26, 0x04	; 4
    4f92:	8f 7b       	andi	r24, 0xBF	; 191
    4f94:	14 96       	adiw	r26, 0x04	; 4
    4f96:	8c 93       	st	X, r24
    4f98:	14 97       	sbiw	r26, 0x04	; 4
    4f9a:	10 92 28 08 	sts	0x0828, r1
    4f9e:	10 92 29 08 	sts	0x0829, r1
    4fa2:	14 96       	adiw	r26, 0x04	; 4
    4fa4:	8c 91       	ld	r24, X
    4fa6:	14 97       	sbiw	r26, 0x04	; 4
    4fa8:	8f 7b       	andi	r24, 0xBF	; 191
    4faa:	14 96       	adiw	r26, 0x04	; 4
    4fac:	8c 93       	st	X, r24
    4fae:	80 91 a9 20 	lds	r24, 0x20A9
    4fb2:	90 91 aa 20 	lds	r25, 0x20AA
    4fb6:	01 96       	adiw	r24, 0x01	; 1
    4fb8:	80 93 a9 20 	sts	0x20A9, r24
    4fbc:	90 93 aa 20 	sts	0x20AA, r25
    4fc0:	80 91 48 20 	lds	r24, 0x2048
    4fc4:	90 91 49 20 	lds	r25, 0x2049
    4fc8:	81 30       	cpi	r24, 0x01	; 1
    4fca:	91 05       	cpc	r25, r1
    4fcc:	81 f4       	brne	.+32     	; 0x4fee <__vector_77+0x1a6>
    4fce:	10 92 ab 20 	sts	0x20AB, r1
    4fd2:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    4fd6:	0e 94 c4 02 	call	0x588	; 0x588 <Menu_Reset>
    4fda:	80 91 48 20 	lds	r24, 0x2048
    4fde:	90 91 49 20 	lds	r25, 0x2049
    4fe2:	01 97       	sbiw	r24, 0x01	; 1
    4fe4:	80 93 48 20 	sts	0x2048, r24
    4fe8:	90 93 49 20 	sts	0x2049, r25
    4fec:	87 c0       	rjmp	.+270    	; 0x50fc <__vector_77+0x2b4>
    4fee:	82 30       	cpi	r24, 0x02	; 2
    4ff0:	91 05       	cpc	r25, r1
    4ff2:	08 f1       	brcs	.+66     	; 0x5036 <__vector_77+0x1ee>
    4ff4:	01 97       	sbiw	r24, 0x01	; 1
    4ff6:	80 93 48 20 	sts	0x2048, r24
    4ffa:	90 93 49 20 	sts	0x2049, r25
    4ffe:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <menu_check_status>
    5002:	80 91 48 20 	lds	r24, 0x2048
    5006:	90 91 49 20 	lds	r25, 0x2049
    500a:	88 3b       	cpi	r24, 0xB8	; 184
    500c:	2b e0       	ldi	r18, 0x0B	; 11
    500e:	92 07       	cpc	r25, r18
    5010:	08 f0       	brcs	.+2      	; 0x5014 <__vector_77+0x1cc>
    5012:	74 c0       	rjmp	.+232    	; 0x50fc <__vector_77+0x2b4>
    5014:	a0 e0       	ldi	r26, 0x00	; 0
    5016:	b0 e0       	ldi	r27, 0x00	; 0
    5018:	80 93 2c 20 	sts	0x202C, r24
    501c:	90 93 2d 20 	sts	0x202D, r25
    5020:	a0 93 2e 20 	sts	0x202E, r26
    5024:	b0 93 2f 20 	sts	0x202F, r27
    5028:	88 ec       	ldi	r24, 0xC8	; 200
    502a:	90 e0       	ldi	r25, 0x00	; 0
    502c:	80 93 2f 22 	sts	0x222F, r24
    5030:	90 93 30 22 	sts	0x2230, r25
    5034:	63 c0       	rjmp	.+198    	; 0x50fc <__vector_77+0x2b4>
    5036:	a8 e0       	ldi	r26, 0x08	; 8
    5038:	b6 e0       	ldi	r27, 0x06	; 6
    503a:	dc 90       	ld	r13, X
    503c:	ec 90       	ld	r14, X
    503e:	8c 91       	ld	r24, X
    5040:	fc 90       	ld	r15, X
    5042:	88 1f       	adc	r24, r24
    5044:	88 27       	eor	r24, r24
    5046:	88 1f       	adc	r24, r24
    5048:	90 e0       	ldi	r25, 0x00	; 0
    504a:	88 0f       	add	r24, r24
    504c:	99 1f       	adc	r25, r25
    504e:	88 0f       	add	r24, r24
    5050:	99 1f       	adc	r25, r25
    5052:	d6 fa       	bst	r13, 6
    5054:	00 27       	eor	r16, r16
    5056:	00 f9       	bld	r16, 0
    5058:	10 e0       	ldi	r17, 0x00	; 0
    505a:	08 2b       	or	r16, r24
    505c:	19 2b       	or	r17, r25
    505e:	e4 fa       	bst	r14, 4
    5060:	ee 24       	eor	r14, r14
    5062:	e0 f8       	bld	r14, 0
    5064:	ce 2d       	mov	r28, r14
    5066:	80 e0       	ldi	r24, 0x00	; 0
    5068:	d8 2f       	mov	r29, r24
    506a:	cc 0f       	add	r28, r28
    506c:	dd 1f       	adc	r29, r29
    506e:	0c 2b       	or	r16, r28
    5070:	1d 2b       	or	r17, r29
    5072:	f5 fa       	bst	r15, 5
    5074:	ee 27       	eor	r30, r30
    5076:	e0 f9       	bld	r30, 0
    5078:	f0 e0       	ldi	r31, 0x00	; 0
    507a:	cf 01       	movw	r24, r30
    507c:	88 0f       	add	r24, r24
    507e:	99 1f       	adc	r25, r25
    5080:	88 0f       	add	r24, r24
    5082:	99 1f       	adc	r25, r25
    5084:	88 0f       	add	r24, r24
    5086:	99 1f       	adc	r25, r25
    5088:	f8 01       	movw	r30, r16
    508a:	e8 2b       	or	r30, r24
    508c:	f9 2b       	or	r31, r25
    508e:	ee 0f       	add	r30, r30
    5090:	ff 1f       	adc	r31, r31
    5092:	e8 5f       	subi	r30, 0xF8	; 248
    5094:	ff 4d       	sbci	r31, 0xDF	; 223
    5096:	80 81       	ld	r24, Z
    5098:	e0 e0       	ldi	r30, 0x00	; 0
    509a:	f7 e0       	ldi	r31, 0x07	; 7
    509c:	84 83       	std	Z+4, r24	; 0x04
    509e:	cc 91       	ld	r28, X
    50a0:	9c 91       	ld	r25, X
    50a2:	ec 91       	ld	r30, X
    50a4:	8c 91       	ld	r24, X
    50a6:	ee 1f       	adc	r30, r30
    50a8:	ee 27       	eor	r30, r30
    50aa:	ee 1f       	adc	r30, r30
    50ac:	f0 e0       	ldi	r31, 0x00	; 0
    50ae:	ee 0f       	add	r30, r30
    50b0:	ff 1f       	adc	r31, r31
    50b2:	ee 0f       	add	r30, r30
    50b4:	ff 1f       	adc	r31, r31
    50b6:	c6 fb       	bst	r28, 6
    50b8:	66 27       	eor	r22, r22
    50ba:	60 f9       	bld	r22, 0
    50bc:	70 e0       	ldi	r23, 0x00	; 0
    50be:	e6 2b       	or	r30, r22
    50c0:	f7 2b       	or	r31, r23
    50c2:	94 fb       	bst	r25, 4
    50c4:	44 27       	eor	r20, r20
    50c6:	40 f9       	bld	r20, 0
    50c8:	50 e0       	ldi	r21, 0x00	; 0
    50ca:	44 0f       	add	r20, r20
    50cc:	55 1f       	adc	r21, r21
    50ce:	e4 2b       	or	r30, r20
    50d0:	f5 2b       	or	r31, r21
    50d2:	85 fb       	bst	r24, 5
    50d4:	aa 24       	eor	r10, r10
    50d6:	a0 f8       	bld	r10, 0
    50d8:	b1 2c       	mov	r11, r1
    50da:	95 01       	movw	r18, r10
    50dc:	22 0f       	add	r18, r18
    50de:	33 1f       	adc	r19, r19
    50e0:	22 0f       	add	r18, r18
    50e2:	33 1f       	adc	r19, r19
    50e4:	22 0f       	add	r18, r18
    50e6:	33 1f       	adc	r19, r19
    50e8:	e2 2b       	or	r30, r18
    50ea:	f3 2b       	or	r31, r19
    50ec:	ee 0f       	add	r30, r30
    50ee:	ff 1f       	adc	r31, r31
    50f0:	e8 5f       	subi	r30, 0xF8	; 248
    50f2:	ff 4d       	sbci	r31, 0xDF	; 223
    50f4:	80 81       	ld	r24, Z
    50f6:	e0 ee       	ldi	r30, 0xE0	; 224
    50f8:	f6 e0       	ldi	r31, 0x06	; 6
    50fa:	84 83       	std	Z+4, r24	; 0x04
    50fc:	ff 91       	pop	r31
    50fe:	ef 91       	pop	r30
    5100:	df 91       	pop	r29
    5102:	cf 91       	pop	r28
    5104:	bf 91       	pop	r27
    5106:	af 91       	pop	r26
    5108:	9f 91       	pop	r25
    510a:	8f 91       	pop	r24
    510c:	7f 91       	pop	r23
    510e:	6f 91       	pop	r22
    5110:	5f 91       	pop	r21
    5112:	4f 91       	pop	r20
    5114:	3f 91       	pop	r19
    5116:	2f 91       	pop	r18
    5118:	1f 91       	pop	r17
    511a:	0f 91       	pop	r16
    511c:	ff 90       	pop	r15
    511e:	ef 90       	pop	r14
    5120:	df 90       	pop	r13
    5122:	bf 90       	pop	r11
    5124:	af 90       	pop	r10
    5126:	0f 90       	pop	r0
    5128:	0b be       	out	0x3b, r0	; 59
    512a:	0f 90       	pop	r0
    512c:	0a be       	out	0x3a, r0	; 58
    512e:	0f 90       	pop	r0
    5130:	09 be       	out	0x39, r0	; 57
    5132:	0f 90       	pop	r0
    5134:	08 be       	out	0x38, r0	; 56
    5136:	0f 90       	pop	r0
    5138:	0f be       	out	0x3f, r0	; 63
    513a:	0f 90       	pop	r0
    513c:	1f 90       	pop	r1
    513e:	18 95       	reti

00005140 <__vector_104>:
    5140:	1f 92       	push	r1
    5142:	0f 92       	push	r0
    5144:	0f b6       	in	r0, 0x3f	; 63
    5146:	0f 92       	push	r0
    5148:	11 24       	eor	r1, r1
    514a:	08 b6       	in	r0, 0x38	; 56
    514c:	0f 92       	push	r0
    514e:	18 be       	out	0x38, r1	; 56
    5150:	0f 90       	pop	r0
    5152:	08 be       	out	0x38, r0	; 56
    5154:	0f 90       	pop	r0
    5156:	0f be       	out	0x3f, r0	; 63
    5158:	0f 90       	pop	r0
    515a:	1f 90       	pop	r1
    515c:	18 95       	reti

0000515e <__vector_94>:
    515e:	1f 92       	push	r1
    5160:	0f 92       	push	r0
    5162:	0f b6       	in	r0, 0x3f	; 63
    5164:	0f 92       	push	r0
    5166:	11 24       	eor	r1, r1
    5168:	08 b6       	in	r0, 0x38	; 56
    516a:	0f 92       	push	r0
    516c:	18 be       	out	0x38, r1	; 56
    516e:	2f 93       	push	r18
    5170:	3f 93       	push	r19
    5172:	8f 93       	push	r24
    5174:	9f 93       	push	r25
    5176:	20 91 fc 23 	lds	r18, 0x23FC
    517a:	30 91 fd 23 	lds	r19, 0x23FD
    517e:	80 91 c8 07 	lds	r24, 0x07C8
    5182:	81 ff       	sbrs	r24, 1
    5184:	03 c0       	rjmp	.+6      	; 0x518c <__vector_94+0x2e>
    5186:	8f ef       	ldi	r24, 0xFF	; 255
    5188:	9f ef       	ldi	r25, 0xFF	; 255
    518a:	02 c0       	rjmp	.+4      	; 0x5190 <__vector_94+0x32>
    518c:	81 e0       	ldi	r24, 0x01	; 1
    518e:	90 e0       	ldi	r25, 0x00	; 0
    5190:	82 0f       	add	r24, r18
    5192:	93 1f       	adc	r25, r19
    5194:	80 93 fc 23 	sts	0x23FC, r24
    5198:	90 93 fd 23 	sts	0x23FD, r25
    519c:	9f 91       	pop	r25
    519e:	8f 91       	pop	r24
    51a0:	3f 91       	pop	r19
    51a2:	2f 91       	pop	r18
    51a4:	0f 90       	pop	r0
    51a6:	08 be       	out	0x38, r0	; 56
    51a8:	0f 90       	pop	r0
    51aa:	0f be       	out	0x3f, r0	; 63
    51ac:	0f 90       	pop	r0
    51ae:	1f 90       	pop	r1
    51b0:	18 95       	reti

000051b2 <__vector_96>:
    51b2:	1f 92       	push	r1
    51b4:	0f 92       	push	r0
    51b6:	0f b6       	in	r0, 0x3f	; 63
    51b8:	0f 92       	push	r0
    51ba:	11 24       	eor	r1, r1
    51bc:	08 b6       	in	r0, 0x38	; 56
    51be:	0f 92       	push	r0
    51c0:	18 be       	out	0x38, r1	; 56
    51c2:	2f 93       	push	r18
    51c4:	3f 93       	push	r19
    51c6:	8f 93       	push	r24
    51c8:	9f 93       	push	r25
    51ca:	20 91 77 23 	lds	r18, 0x2377
    51ce:	30 91 78 23 	lds	r19, 0x2378
    51d2:	80 91 e8 06 	lds	r24, 0x06E8
    51d6:	84 ff       	sbrs	r24, 4
    51d8:	03 c0       	rjmp	.+6      	; 0x51e0 <__vector_96+0x2e>
    51da:	8f ef       	ldi	r24, 0xFF	; 255
    51dc:	9f ef       	ldi	r25, 0xFF	; 255
    51de:	02 c0       	rjmp	.+4      	; 0x51e4 <__vector_96+0x32>
    51e0:	81 e0       	ldi	r24, 0x01	; 1
    51e2:	90 e0       	ldi	r25, 0x00	; 0
    51e4:	82 0f       	add	r24, r18
    51e6:	93 1f       	adc	r25, r19
    51e8:	80 93 77 23 	sts	0x2377, r24
    51ec:	90 93 78 23 	sts	0x2378, r25
    51f0:	9f 91       	pop	r25
    51f2:	8f 91       	pop	r24
    51f4:	3f 91       	pop	r19
    51f6:	2f 91       	pop	r18
    51f8:	0f 90       	pop	r0
    51fa:	08 be       	out	0x38, r0	; 56
    51fc:	0f 90       	pop	r0
    51fe:	0f be       	out	0x3f, r0	; 63
    5200:	0f 90       	pop	r0
    5202:	1f 90       	pop	r1
    5204:	18 95       	reti

00005206 <__vector_2>:
    5206:	1f 92       	push	r1
    5208:	0f 92       	push	r0
    520a:	0f b6       	in	r0, 0x3f	; 63
    520c:	0f 92       	push	r0
    520e:	11 24       	eor	r1, r1
    5210:	08 b6       	in	r0, 0x38	; 56
    5212:	0f 92       	push	r0
    5214:	18 be       	out	0x38, r1	; 56
    5216:	2f 93       	push	r18
    5218:	3f 93       	push	r19
    521a:	8f 93       	push	r24
    521c:	9f 93       	push	r25
    521e:	20 91 a9 23 	lds	r18, 0x23A9
    5222:	30 91 aa 23 	lds	r19, 0x23AA
    5226:	80 91 48 06 	lds	r24, 0x0648
    522a:	84 ff       	sbrs	r24, 4
    522c:	03 c0       	rjmp	.+6      	; 0x5234 <__vector_2+0x2e>
    522e:	8f ef       	ldi	r24, 0xFF	; 255
    5230:	9f ef       	ldi	r25, 0xFF	; 255
    5232:	02 c0       	rjmp	.+4      	; 0x5238 <__vector_2+0x32>
    5234:	81 e0       	ldi	r24, 0x01	; 1
    5236:	90 e0       	ldi	r25, 0x00	; 0
    5238:	82 0f       	add	r24, r18
    523a:	93 1f       	adc	r25, r19
    523c:	80 93 a9 23 	sts	0x23A9, r24
    5240:	90 93 aa 23 	sts	0x23AA, r25
    5244:	9f 91       	pop	r25
    5246:	8f 91       	pop	r24
    5248:	3f 91       	pop	r19
    524a:	2f 91       	pop	r18
    524c:	0f 90       	pop	r0
    524e:	08 be       	out	0x38, r0	; 56
    5250:	0f 90       	pop	r0
    5252:	0f be       	out	0x3f, r0	; 63
    5254:	0f 90       	pop	r0
    5256:	1f 90       	pop	r1
    5258:	18 95       	reti

0000525a <__vector_95>:
    525a:	1f 92       	push	r1
    525c:	0f 92       	push	r0
    525e:	0f b6       	in	r0, 0x3f	; 63
    5260:	0f 92       	push	r0
    5262:	11 24       	eor	r1, r1
    5264:	08 b6       	in	r0, 0x38	; 56
    5266:	0f 92       	push	r0
    5268:	18 be       	out	0x38, r1	; 56
    526a:	2f 93       	push	r18
    526c:	3f 93       	push	r19
    526e:	8f 93       	push	r24
    5270:	9f 93       	push	r25
    5272:	20 91 10 24 	lds	r18, 0x2410
    5276:	30 91 11 24 	lds	r19, 0x2411
    527a:	80 91 c8 07 	lds	r24, 0x07C8
    527e:	82 ff       	sbrs	r24, 2
    5280:	03 c0       	rjmp	.+6      	; 0x5288 <__vector_95+0x2e>
    5282:	8f ef       	ldi	r24, 0xFF	; 255
    5284:	9f ef       	ldi	r25, 0xFF	; 255
    5286:	02 c0       	rjmp	.+4      	; 0x528c <__vector_95+0x32>
    5288:	81 e0       	ldi	r24, 0x01	; 1
    528a:	90 e0       	ldi	r25, 0x00	; 0
    528c:	82 0f       	add	r24, r18
    528e:	93 1f       	adc	r25, r19
    5290:	80 93 10 24 	sts	0x2410, r24
    5294:	90 93 11 24 	sts	0x2411, r25
    5298:	9f 91       	pop	r25
    529a:	8f 91       	pop	r24
    529c:	3f 91       	pop	r19
    529e:	2f 91       	pop	r18
    52a0:	0f 90       	pop	r0
    52a2:	08 be       	out	0x38, r0	; 56
    52a4:	0f 90       	pop	r0
    52a6:	0f be       	out	0x3f, r0	; 63
    52a8:	0f 90       	pop	r0
    52aa:	1f 90       	pop	r1
    52ac:	18 95       	reti

000052ae <__vector_97>:
    52ae:	1f 92       	push	r1
    52b0:	0f 92       	push	r0
    52b2:	0f b6       	in	r0, 0x3f	; 63
    52b4:	0f 92       	push	r0
    52b6:	11 24       	eor	r1, r1
    52b8:	08 b6       	in	r0, 0x38	; 56
    52ba:	0f 92       	push	r0
    52bc:	18 be       	out	0x38, r1	; 56
    52be:	0f 90       	pop	r0
    52c0:	08 be       	out	0x38, r0	; 56
    52c2:	0f 90       	pop	r0
    52c4:	0f be       	out	0x3f, r0	; 63
    52c6:	0f 90       	pop	r0
    52c8:	1f 90       	pop	r1
    52ca:	18 95       	reti

000052cc <__vector_100>:
    52cc:	1f 92       	push	r1
    52ce:	0f 92       	push	r0
    52d0:	0f b6       	in	r0, 0x3f	; 63
    52d2:	0f 92       	push	r0
    52d4:	11 24       	eor	r1, r1
    52d6:	08 b6       	in	r0, 0x38	; 56
    52d8:	0f 92       	push	r0
    52da:	18 be       	out	0x38, r1	; 56
    52dc:	09 b6       	in	r0, 0x39	; 57
    52de:	0f 92       	push	r0
    52e0:	19 be       	out	0x39, r1	; 57
    52e2:	0b b6       	in	r0, 0x3b	; 59
    52e4:	0f 92       	push	r0
    52e6:	1b be       	out	0x3b, r1	; 59
    52e8:	2f 93       	push	r18
    52ea:	3f 93       	push	r19
    52ec:	4f 93       	push	r20
    52ee:	5f 93       	push	r21
    52f0:	6f 93       	push	r22
    52f2:	7f 93       	push	r23
    52f4:	8f 93       	push	r24
    52f6:	9f 93       	push	r25
    52f8:	af 93       	push	r26
    52fa:	bf 93       	push	r27
    52fc:	ef 93       	push	r30
    52fe:	ff 93       	push	r31
    5300:	80 91 48 20 	lds	r24, 0x2048
    5304:	90 91 49 20 	lds	r25, 0x2049
    5308:	89 2b       	or	r24, r25
    530a:	89 f4       	brne	.+34     	; 0x532e <__vector_100+0x62>
    530c:	80 91 e8 06 	lds	r24, 0x06E8
    5310:	6b e4       	ldi	r22, 0x4B	; 75
    5312:	70 e2       	ldi	r23, 0x20	; 32
    5314:	88 1f       	adc	r24, r24
    5316:	88 27       	eor	r24, r24
    5318:	88 1f       	adc	r24, r24
    531a:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    531e:	80 91 a8 06 	lds	r24, 0x06A8
    5322:	6a e4       	ldi	r22, 0x4A	; 74
    5324:	70 e2       	ldi	r23, 0x20	; 32
    5326:	82 95       	swap	r24
    5328:	81 70       	andi	r24, 0x01	; 1
    532a:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    532e:	80 e3       	ldi	r24, 0x30	; 48
    5330:	95 e7       	ldi	r25, 0x75	; 117
    5332:	80 93 48 20 	sts	0x2048, r24
    5336:	90 93 49 20 	sts	0x2049, r25
    533a:	8f ef       	ldi	r24, 0xFF	; 255
    533c:	80 93 ab 20 	sts	0x20AB, r24
    5340:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    5344:	ff 91       	pop	r31
    5346:	ef 91       	pop	r30
    5348:	bf 91       	pop	r27
    534a:	af 91       	pop	r26
    534c:	9f 91       	pop	r25
    534e:	8f 91       	pop	r24
    5350:	7f 91       	pop	r23
    5352:	6f 91       	pop	r22
    5354:	5f 91       	pop	r21
    5356:	4f 91       	pop	r20
    5358:	3f 91       	pop	r19
    535a:	2f 91       	pop	r18
    535c:	0f 90       	pop	r0
    535e:	0b be       	out	0x3b, r0	; 59
    5360:	0f 90       	pop	r0
    5362:	09 be       	out	0x39, r0	; 57
    5364:	0f 90       	pop	r0
    5366:	08 be       	out	0x38, r0	; 56
    5368:	0f 90       	pop	r0
    536a:	0f be       	out	0x3f, r0	; 63
    536c:	0f 90       	pop	r0
    536e:	1f 90       	pop	r1
    5370:	18 95       	reti

00005372 <__vector_119>:
int buff_i_temp;
int buff_d_temp;
int buff_u_temp;
unsigned char reply2_tmp;
ISR(USARTF0_RXC_vect)
{
    5372:	1f 92       	push	r1
    5374:	0f 92       	push	r0
    5376:	0f b6       	in	r0, 0x3f	; 63
    5378:	0f 92       	push	r0
    537a:	11 24       	eor	r1, r1
    537c:	08 b6       	in	r0, 0x38	; 56
    537e:	0f 92       	push	r0
    5380:	18 be       	out	0x38, r1	; 56
    5382:	2f 93       	push	r18
    5384:	8f 93       	push	r24
    5386:	9f 93       	push	r25
    //LED_Green_PORT.OUTSET = LED_Green_PIN_bm;
    //char buff_reply [16];
    unsigned char data;
    data=USARTF0_DATA;
    5388:	20 91 a0 0b 	lds	r18, 0x0BA0

    //LED_Red_PORT.OUTTGL = LED_Red_PIN_bm;

    switch(ask_cnt)
    538c:	80 91 9c 20 	lds	r24, 0x209C
    5390:	90 91 9d 20 	lds	r25, 0x209D
    5394:	82 30       	cpi	r24, 0x02	; 2
    5396:	91 05       	cpc	r25, r1
    5398:	19 f1       	breq	.+70     	; 0x53e0 <__vector_119+0x6e>
    539a:	2c f4       	brge	.+10     	; 0x53a6 <__vector_119+0x34>
    539c:	00 97       	sbiw	r24, 0x00	; 0
    539e:	49 f0       	breq	.+18     	; 0x53b2 <__vector_119+0x40>
    53a0:	01 97       	sbiw	r24, 0x01	; 1
    53a2:	89 f0       	breq	.+34     	; 0x53c6 <__vector_119+0x54>
    53a4:	48 c0       	rjmp	.+144    	; 0x5436 <__vector_119+0xc4>
    53a6:	83 30       	cpi	r24, 0x03	; 3
    53a8:	91 05       	cpc	r25, r1
    53aa:	51 f1       	breq	.+84     	; 0x5400 <__vector_119+0x8e>
    53ac:	04 97       	sbiw	r24, 0x04	; 4
    53ae:	89 f1       	breq	.+98     	; 0x5412 <__vector_119+0xa0>
    53b0:	42 c0       	rjmp	.+132    	; 0x5436 <__vector_119+0xc4>
    {
    case 0:
        if (data== '*')
    53b2:	2a 32       	cpi	r18, 0x2A	; 42
    53b4:	09 f0       	breq	.+2      	; 0x53b8 <__vector_119+0x46>
    53b6:	3f c0       	rjmp	.+126    	; 0x5436 <__vector_119+0xc4>
        {
            ask_cnt++;}
    53b8:	81 e0       	ldi	r24, 0x01	; 1
    53ba:	90 e0       	ldi	r25, 0x00	; 0
    53bc:	80 93 9c 20 	sts	0x209C, r24
    53c0:	90 93 9d 20 	sts	0x209D, r25
    53c4:	38 c0       	rjmp	.+112    	; 0x5436 <__vector_119+0xc4>
        break;

    case 1:
        buff_reply_tmp=data&0x0ff;
    53c6:	82 2f       	mov	r24, r18
    53c8:	90 e0       	ldi	r25, 0x00	; 0
    53ca:	80 93 b8 23 	sts	0x23B8, r24
    53ce:	90 93 b9 23 	sts	0x23B9, r25
        ask_cnt++;
    53d2:	82 e0       	ldi	r24, 0x02	; 2
    53d4:	90 e0       	ldi	r25, 0x00	; 0
    53d6:	80 93 9c 20 	sts	0x209C, r24
    53da:	90 93 9d 20 	sts	0x209D, r25
        break;
    53de:	2b c0       	rjmp	.+86     	; 0x5436 <__vector_119+0xc4>

    case 2:
        buff_reply_tmp|=(data<<8)&0x0ff00;
    53e0:	80 91 b8 23 	lds	r24, 0x23B8
    53e4:	90 91 b9 23 	lds	r25, 0x23B9
    53e8:	92 2b       	or	r25, r18
    53ea:	80 93 b8 23 	sts	0x23B8, r24
    53ee:	90 93 b9 23 	sts	0x23B9, r25
        ask_cnt++;
    53f2:	83 e0       	ldi	r24, 0x03	; 3
    53f4:	90 e0       	ldi	r25, 0x00	; 0
    53f6:	80 93 9c 20 	sts	0x209C, r24
    53fa:	90 93 9d 20 	sts	0x209D, r25
        break;
    53fe:	1b c0       	rjmp	.+54     	; 0x5436 <__vector_119+0xc4>

    case 3:
        reply2_tmp = data;
    5400:	20 93 c8 23 	sts	0x23C8, r18
        ask_cnt++;
    5404:	84 e0       	ldi	r24, 0x04	; 4
    5406:	90 e0       	ldi	r25, 0x00	; 0
    5408:	80 93 9c 20 	sts	0x209C, r24
    540c:	90 93 9d 20 	sts	0x209D, r25
        break;
    5410:	12 c0       	rjmp	.+36     	; 0x5436 <__vector_119+0xc4>
        //ask_cnt++;
        //break;


    case 4:
        if (data=='#')
    5412:	23 32       	cpi	r18, 0x23	; 35
    5414:	61 f4       	brne	.+24     	; 0x542e <__vector_119+0xbc>
        {
            //LED_Green_PORT.OUTTGL = LED_Green_PIN_bm;
            buff_reply = buff_reply_tmp;
    5416:	80 91 b8 23 	lds	r24, 0x23B8
    541a:	90 91 b9 23 	lds	r25, 0x23B9
    541e:	80 93 6f 23 	sts	0x236F, r24
    5422:	90 93 70 23 	sts	0x2370, r25
            reply2 = reply2_tmp;
    5426:	80 91 c8 23 	lds	r24, 0x23C8
    542a:	80 93 d5 21 	sts	0x21D5, r24


            //flg_reply=0;
            ask_cnt=0;
        }
        ask_cnt=0;
    542e:	10 92 9c 20 	sts	0x209C, r1
    5432:	10 92 9d 20 	sts	0x209D, r1
        break;
    }
}
    5436:	9f 91       	pop	r25
    5438:	8f 91       	pop	r24
    543a:	2f 91       	pop	r18
    543c:	0f 90       	pop	r0
    543e:	08 be       	out	0x38, r0	; 56
    5440:	0f 90       	pop	r0
    5442:	0f be       	out	0x3f, r0	; 63
    5444:	0f 90       	pop	r0
    5446:	1f 90       	pop	r1
    5448:	18 95       	reti

0000544a <NRF24L01_L_RF_TX>:
		NRF24L01_L_RF_TX();
	while ((NRF24L01_L_Get_Status() & _TX_DS) != _TX_DS)
	{
		
	}		
	NRF24L01_L_Clear_Interrupts();
    544a:	e0 e8       	ldi	r30, 0x80	; 128
    544c:	f6 e0       	ldi	r31, 0x06	; 6
    544e:	82 e0       	ldi	r24, 0x02	; 2
    5450:	86 83       	std	Z+6, r24	; 0x06
    5452:	85 83       	std	Z+5, r24	; 0x05
    5454:	8a e6       	ldi	r24, 0x6A	; 106
    5456:	8a 95       	dec	r24
    5458:	f1 f7       	brne	.-4      	; 0x5456 <NRF24L01_L_RF_TX+0xc>
    545a:	00 c0       	rjmp	.+0      	; 0x545c <NRF24L01_L_RF_TX+0x12>
    545c:	82 e0       	ldi	r24, 0x02	; 2
    545e:	86 83       	std	Z+6, r24	; 0x06
    5460:	08 95       	ret

00005462 <SPI_L>:
    5462:	e0 ec       	ldi	r30, 0xC0	; 192
    5464:	fa e0       	ldi	r31, 0x0A	; 10
    5466:	83 83       	std	Z+3, r24	; 0x03
    5468:	82 81       	ldd	r24, Z+2	; 0x02
    546a:	88 23       	and	r24, r24
    546c:	ec f7       	brge	.-6      	; 0x5468 <SPI_L+0x6>
    546e:	e0 ec       	ldi	r30, 0xC0	; 192
    5470:	fa e0       	ldi	r31, 0x0A	; 10
    5472:	83 81       	ldd	r24, Z+3	; 0x03
    5474:	08 95       	ret

00005476 <NRF24L01_L_ReadReg>:
    5476:	1f 93       	push	r17
    5478:	cf 93       	push	r28
    547a:	df 93       	push	r29
    547c:	c0 e8       	ldi	r28, 0x80	; 128
    547e:	d6 e0       	ldi	r29, 0x06	; 6
    5480:	10 e1       	ldi	r17, 0x10	; 16
    5482:	1e 83       	std	Y+6, r17	; 0x06
    5484:	ee df       	rcall	.-36     	; 0x5462 <SPI_L>
    5486:	8f ef       	ldi	r24, 0xFF	; 255
    5488:	ec df       	rcall	.-40     	; 0x5462 <SPI_L>
    548a:	1d 83       	std	Y+5, r17	; 0x05
    548c:	df 91       	pop	r29
    548e:	cf 91       	pop	r28
    5490:	1f 91       	pop	r17
    5492:	08 95       	ret

00005494 <NRF24L01_L_WriteReg>:
    5494:	ff 92       	push	r15
    5496:	0f 93       	push	r16
    5498:	1f 93       	push	r17
    549a:	cf 93       	push	r28
    549c:	df 93       	push	r29
    549e:	f6 2e       	mov	r15, r22
    54a0:	c0 e8       	ldi	r28, 0x80	; 128
    54a2:	d6 e0       	ldi	r29, 0x06	; 6
    54a4:	10 e1       	ldi	r17, 0x10	; 16
    54a6:	1e 83       	std	Y+6, r17	; 0x06
    54a8:	dc df       	rcall	.-72     	; 0x5462 <SPI_L>
    54aa:	08 2f       	mov	r16, r24
    54ac:	8f 2d       	mov	r24, r15
    54ae:	d9 df       	rcall	.-78     	; 0x5462 <SPI_L>
    54b0:	1d 83       	std	Y+5, r17	; 0x05
    54b2:	80 2f       	mov	r24, r16
    54b4:	df 91       	pop	r29
    54b6:	cf 91       	pop	r28
    54b8:	1f 91       	pop	r17
    54ba:	0f 91       	pop	r16
    54bc:	ff 90       	pop	r15
    54be:	08 95       	ret

000054c0 <NRF24L01_L_Set_CH>:
    54c0:	68 2f       	mov	r22, r24
    54c2:	6f 77       	andi	r22, 0x7F	; 127
    54c4:	85 e2       	ldi	r24, 0x25	; 37
    54c6:	e6 cf       	rjmp	.-52     	; 0x5494 <NRF24L01_L_WriteReg>
    54c8:	08 95       	ret

000054ca <NRF24L01_L_Set_ShockBurst>:
    54ca:	cf 93       	push	r28
    54cc:	c8 2f       	mov	r28, r24
    54ce:	68 2f       	mov	r22, r24
    54d0:	84 e2       	ldi	r24, 0x24	; 36
    54d2:	e0 df       	rcall	.-64     	; 0x5494 <NRF24L01_L_WriteReg>
    54d4:	6c 2f       	mov	r22, r28
    54d6:	81 e2       	ldi	r24, 0x21	; 33
    54d8:	dd df       	rcall	.-70     	; 0x5494 <NRF24L01_L_WriteReg>
    54da:	cf 91       	pop	r28
    54dc:	08 95       	ret

000054de <NRF24L01_L_Set_Address_Width>:
    54de:	63 e0       	ldi	r22, 0x03	; 3
    54e0:	83 e2       	ldi	r24, 0x23	; 35
    54e2:	d8 cf       	rjmp	.-80     	; 0x5494 <NRF24L01_L_WriteReg>
    54e4:	08 95       	ret

000054e6 <NRF24L01_L_Clear_Interrupts>:
    54e6:	60 e7       	ldi	r22, 0x70	; 112
    54e8:	87 e2       	ldi	r24, 0x27	; 39
    54ea:	d4 cf       	rjmp	.-88     	; 0x5494 <NRF24L01_L_WriteReg>
    54ec:	08 95       	ret

000054ee <NRF24L01_L_ReadRegBuf>:
    54ee:	df 92       	push	r13
    54f0:	ef 92       	push	r14
    54f2:	ff 92       	push	r15
    54f4:	0f 93       	push	r16
    54f6:	1f 93       	push	r17
    54f8:	cf 93       	push	r28
    54fa:	df 93       	push	r29
    54fc:	7b 01       	movw	r14, r22
    54fe:	8a 01       	movw	r16, r20
    5500:	90 e1       	ldi	r25, 0x10	; 16
    5502:	e0 e8       	ldi	r30, 0x80	; 128
    5504:	f6 e0       	ldi	r31, 0x06	; 6
    5506:	96 83       	std	Z+6, r25	; 0x06
    5508:	ac df       	rcall	.-168    	; 0x5462 <SPI_L>
    550a:	d8 2e       	mov	r13, r24
    550c:	10 16       	cp	r1, r16
    550e:	11 06       	cpc	r1, r17
    5510:	4c f4       	brge	.+18     	; 0x5524 <NRF24L01_L_ReadRegBuf+0x36>
    5512:	e7 01       	movw	r28, r14
    5514:	0e 0d       	add	r16, r14
    5516:	1f 1d       	adc	r17, r15
    5518:	8f ef       	ldi	r24, 0xFF	; 255
    551a:	a3 df       	rcall	.-186    	; 0x5462 <SPI_L>
    551c:	89 93       	st	Y+, r24
    551e:	c0 17       	cp	r28, r16
    5520:	d1 07       	cpc	r29, r17
    5522:	d1 f7       	brne	.-12     	; 0x5518 <NRF24L01_L_ReadRegBuf+0x2a>
    5524:	80 e1       	ldi	r24, 0x10	; 16
    5526:	e0 e8       	ldi	r30, 0x80	; 128
    5528:	f6 e0       	ldi	r31, 0x06	; 6
    552a:	85 83       	std	Z+5, r24	; 0x05
    552c:	8d 2d       	mov	r24, r13
    552e:	df 91       	pop	r29
    5530:	cf 91       	pop	r28
    5532:	1f 91       	pop	r17
    5534:	0f 91       	pop	r16
    5536:	ff 90       	pop	r15
    5538:	ef 90       	pop	r14
    553a:	df 90       	pop	r13
    553c:	08 95       	ret

0000553e <NRF24L01_L_Read_RX_Buf>:
    553e:	ab 01       	movw	r20, r22
    5540:	bc 01       	movw	r22, r24
    5542:	81 e6       	ldi	r24, 0x61	; 97
    5544:	d4 cf       	rjmp	.-88     	; 0x54ee <NRF24L01_L_ReadRegBuf>
    5546:	08 95       	ret

00005548 <NRF24L01_L_WriteRegBuf>:
    5548:	df 92       	push	r13
    554a:	ef 92       	push	r14
    554c:	ff 92       	push	r15
    554e:	0f 93       	push	r16
    5550:	1f 93       	push	r17
    5552:	cf 93       	push	r28
    5554:	df 93       	push	r29
    5556:	7b 01       	movw	r14, r22
    5558:	8a 01       	movw	r16, r20
    555a:	90 e1       	ldi	r25, 0x10	; 16
    555c:	e0 e8       	ldi	r30, 0x80	; 128
    555e:	f6 e0       	ldi	r31, 0x06	; 6
    5560:	96 83       	std	Z+6, r25	; 0x06
    5562:	7f df       	rcall	.-258    	; 0x5462 <SPI_L>
    5564:	d8 2e       	mov	r13, r24
    5566:	10 16       	cp	r1, r16
    5568:	11 06       	cpc	r1, r17
    556a:	44 f4       	brge	.+16     	; 0x557c <NRF24L01_L_WriteRegBuf+0x34>
    556c:	e7 01       	movw	r28, r14
    556e:	0e 0d       	add	r16, r14
    5570:	1f 1d       	adc	r17, r15
    5572:	89 91       	ld	r24, Y+
    5574:	76 df       	rcall	.-276    	; 0x5462 <SPI_L>
    5576:	c0 17       	cp	r28, r16
    5578:	d1 07       	cpc	r29, r17
    557a:	d9 f7       	brne	.-10     	; 0x5572 <NRF24L01_L_WriteRegBuf+0x2a>
    557c:	80 e1       	ldi	r24, 0x10	; 16
    557e:	e0 e8       	ldi	r30, 0x80	; 128
    5580:	f6 e0       	ldi	r31, 0x06	; 6
    5582:	85 83       	std	Z+5, r24	; 0x05
    5584:	8d 2d       	mov	r24, r13
    5586:	df 91       	pop	r29
    5588:	cf 91       	pop	r28
    558a:	1f 91       	pop	r17
    558c:	0f 91       	pop	r16
    558e:	ff 90       	pop	r15
    5590:	ef 90       	pop	r14
    5592:	df 90       	pop	r13
    5594:	08 95       	ret

00005596 <NRF24L01_L_Set_RX_Pipe>:
    5596:	ef 92       	push	r14
    5598:	ff 92       	push	r15
    559a:	0f 93       	push	r16
    559c:	1f 93       	push	r17
    559e:	cf 93       	push	r28
    55a0:	df 93       	push	r29
    55a2:	f8 2e       	mov	r15, r24
    55a4:	eb 01       	movw	r28, r22
    55a6:	8a 01       	movw	r16, r20
    55a8:	e2 2e       	mov	r14, r18
    55aa:	82 e0       	ldi	r24, 0x02	; 2
    55ac:	64 df       	rcall	.-312    	; 0x5476 <NRF24L01_L_ReadReg>
    55ae:	41 e0       	ldi	r20, 0x01	; 1
    55b0:	50 e0       	ldi	r21, 0x00	; 0
    55b2:	0f 2c       	mov	r0, r15
    55b4:	02 c0       	rjmp	.+4      	; 0x55ba <NRF24L01_L_Set_RX_Pipe+0x24>
    55b6:	44 0f       	add	r20, r20
    55b8:	55 1f       	adc	r21, r21
    55ba:	0a 94       	dec	r0
    55bc:	e2 f7       	brpl	.-8      	; 0x55b6 <NRF24L01_L_Set_RX_Pipe+0x20>
    55be:	68 2f       	mov	r22, r24
    55c0:	64 2b       	or	r22, r20
    55c2:	82 e2       	ldi	r24, 0x22	; 34
    55c4:	67 df       	rcall	.-306    	; 0x5494 <NRF24L01_L_WriteReg>
    55c6:	81 e1       	ldi	r24, 0x11	; 17
    55c8:	8f 0d       	add	r24, r15
    55ca:	6e 2d       	mov	r22, r14
    55cc:	80 62       	ori	r24, 0x20	; 32
    55ce:	62 df       	rcall	.-316    	; 0x5494 <NRF24L01_L_WriteReg>
    55d0:	8a e0       	ldi	r24, 0x0A	; 10
    55d2:	8f 0d       	add	r24, r15
    55d4:	a8 01       	movw	r20, r16
    55d6:	be 01       	movw	r22, r28
    55d8:	80 62       	ori	r24, 0x20	; 32
    55da:	b6 df       	rcall	.-148    	; 0x5548 <NRF24L01_L_WriteRegBuf>
    55dc:	df 91       	pop	r29
    55de:	cf 91       	pop	r28
    55e0:	1f 91       	pop	r17
    55e2:	0f 91       	pop	r16
    55e4:	ff 90       	pop	r15
    55e6:	ef 90       	pop	r14
    55e8:	08 95       	ret

000055ea <NRF24L01_L_Set_TX_Address>:
    55ea:	ab 01       	movw	r20, r22
    55ec:	bc 01       	movw	r22, r24
    55ee:	80 e3       	ldi	r24, 0x30	; 48
    55f0:	ab cf       	rjmp	.-170    	; 0x5548 <NRF24L01_L_WriteRegBuf>
    55f2:	08 95       	ret

000055f4 <NRF24L01_L_Init_milad>:
    55f4:	cf 92       	push	r12
    55f6:	df 92       	push	r13
    55f8:	ef 92       	push	r14
    55fa:	ff 92       	push	r15
    55fc:	0f 93       	push	r16
    55fe:	1f 93       	push	r17
    5600:	cf 93       	push	r28
    5602:	df 93       	push	r29
    5604:	f8 2e       	mov	r15, r24
    5606:	d6 2e       	mov	r13, r22
    5608:	14 2f       	mov	r17, r20
    560a:	e9 01       	movw	r28, r18
    560c:	80 e0       	ldi	r24, 0x00	; 0
    560e:	5d df       	rcall	.-326    	; 0x54ca <NRF24L01_L_Set_ShockBurst>
    5610:	61 e0       	ldi	r22, 0x01	; 1
    5612:	81 e2       	ldi	r24, 0x21	; 33
    5614:	3f df       	rcall	.-386    	; 0x5494 <NRF24L01_L_WriteReg>
    5616:	6f e2       	ldi	r22, 0x2F	; 47
    5618:	84 e2       	ldi	r24, 0x24	; 36
    561a:	3c df       	rcall	.-392    	; 0x5494 <NRF24L01_L_WriteReg>
    561c:	11 60       	ori	r17, 0x01	; 1
    561e:	61 2f       	mov	r22, r17
    5620:	6c 29       	or	r22, r12
    5622:	86 e2       	ldi	r24, 0x26	; 38
    5624:	37 df       	rcall	.-402    	; 0x5494 <NRF24L01_L_WriteReg>
    5626:	80 2f       	mov	r24, r16
    5628:	5a df       	rcall	.-332    	; 0x54de <NRF24L01_L_Set_Address_Width>
    562a:	11 27       	eor	r17, r17
    562c:	07 fd       	sbrc	r16, 7
    562e:	10 95       	com	r17
    5630:	2e 2d       	mov	r18, r14
    5632:	a8 01       	movw	r20, r16
    5634:	be 01       	movw	r22, r28
    5636:	80 e0       	ldi	r24, 0x00	; 0
    5638:	ae df       	rcall	.-164    	; 0x5596 <NRF24L01_L_Set_RX_Pipe>
    563a:	8d 2d       	mov	r24, r13
    563c:	41 df       	rcall	.-382    	; 0x54c0 <NRF24L01_L_Set_CH>
    563e:	b8 01       	movw	r22, r16
    5640:	ce 01       	movw	r24, r28
    5642:	d3 df       	rcall	.-90     	; 0x55ea <NRF24L01_L_Set_TX_Address>
    5644:	6f 2d       	mov	r22, r15
    5646:	6a 60       	ori	r22, 0x0A	; 10
    5648:	80 e2       	ldi	r24, 0x20	; 32
    564a:	24 df       	rcall	.-440    	; 0x5494 <NRF24L01_L_WriteReg>
    564c:	8f ed       	ldi	r24, 0xDF	; 223
    564e:	9e e2       	ldi	r25, 0x2E	; 46
    5650:	01 97       	sbiw	r24, 0x01	; 1
    5652:	f1 f7       	brne	.-4      	; 0x5650 <NRF24L01_L_Init_milad+0x5c>
    5654:	00 c0       	rjmp	.+0      	; 0x5656 <NRF24L01_L_Init_milad+0x62>
    5656:	00 00       	nop
    5658:	df 91       	pop	r29
    565a:	cf 91       	pop	r28
    565c:	1f 91       	pop	r17
    565e:	0f 91       	pop	r16
    5660:	ff 90       	pop	r15
    5662:	ef 90       	pop	r14
    5664:	df 90       	pop	r13
    5666:	cf 90       	pop	r12
    5668:	08 95       	ret

0000566a <NRF24L01_L_Write_TX_Buf>:
    566a:	ab 01       	movw	r20, r22
    566c:	bc 01       	movw	r22, r24
    566e:	80 ea       	ldi	r24, 0xA0	; 160
    5670:	6b cf       	rjmp	.-298    	; 0x5548 <NRF24L01_L_WriteRegBuf>
    5672:	08 95       	ret

00005674 <NRF24L01_L_Flush_TX>:

/**
 Empty the transmit buffer

*/
void NRF24L01_L_Flush_TX(void) {
    5674:	1f 93       	push	r17
    5676:	cf 93       	push	r28
    5678:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    567a:	c0 e8       	ldi	r28, 0x80	; 128
    567c:	d6 e0       	ldi	r29, 0x06	; 6
    567e:	10 e1       	ldi	r17, 0x10	; 16
    5680:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_TX);
    5682:	81 ee       	ldi	r24, 0xE1	; 225
    5684:	ee de       	rcall	.-548    	; 0x5462 <SPI_L>
	NRF24L01_L_CS_HIGH;
    5686:	1d 83       	std	Y+5, r17	; 0x05
}
    5688:	df 91       	pop	r29
    568a:	cf 91       	pop	r28
    568c:	1f 91       	pop	r17
    568e:	08 95       	ret

00005690 <NRF24L01_L_Flush_RX>:

/**
 Empty the receive buffer
*/
void NRF24L01_L_Flush_RX(void) {
    5690:	1f 93       	push	r17
    5692:	cf 93       	push	r28
    5694:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    5696:	c0 e8       	ldi	r28, 0x80	; 128
    5698:	d6 e0       	ldi	r29, 0x06	; 6
    569a:	10 e1       	ldi	r17, 0x10	; 16
    569c:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_RX);
    569e:	82 ee       	ldi	r24, 0xE2	; 226
    56a0:	e0 de       	rcall	.-576    	; 0x5462 <SPI_L>
	NRF24L01_L_CS_HIGH;
    56a2:	1d 83       	std	Y+5, r17	; 0x05
}
    56a4:	df 91       	pop	r29
    56a6:	cf 91       	pop	r28
    56a8:	1f 91       	pop	r17
    56aa:	08 95       	ret

000056ac <__udivmodsi4>:
    56ac:	a1 e2       	ldi	r26, 0x21	; 33
    56ae:	1a 2e       	mov	r1, r26
    56b0:	aa 1b       	sub	r26, r26
    56b2:	bb 1b       	sub	r27, r27
    56b4:	fd 01       	movw	r30, r26
    56b6:	0d c0       	rjmp	.+26     	; 0x56d2 <__udivmodsi4_ep>

000056b8 <__udivmodsi4_loop>:
    56b8:	aa 1f       	adc	r26, r26
    56ba:	bb 1f       	adc	r27, r27
    56bc:	ee 1f       	adc	r30, r30
    56be:	ff 1f       	adc	r31, r31
    56c0:	a2 17       	cp	r26, r18
    56c2:	b3 07       	cpc	r27, r19
    56c4:	e4 07       	cpc	r30, r20
    56c6:	f5 07       	cpc	r31, r21
    56c8:	20 f0       	brcs	.+8      	; 0x56d2 <__udivmodsi4_ep>
    56ca:	a2 1b       	sub	r26, r18
    56cc:	b3 0b       	sbc	r27, r19
    56ce:	e4 0b       	sbc	r30, r20
    56d0:	f5 0b       	sbc	r31, r21

000056d2 <__udivmodsi4_ep>:
    56d2:	66 1f       	adc	r22, r22
    56d4:	77 1f       	adc	r23, r23
    56d6:	88 1f       	adc	r24, r24
    56d8:	99 1f       	adc	r25, r25
    56da:	1a 94       	dec	r1
    56dc:	69 f7       	brne	.-38     	; 0x56b8 <__udivmodsi4_loop>
    56de:	60 95       	com	r22
    56e0:	70 95       	com	r23
    56e2:	80 95       	com	r24
    56e4:	90 95       	com	r25
    56e6:	9b 01       	movw	r18, r22
    56e8:	ac 01       	movw	r20, r24
    56ea:	bd 01       	movw	r22, r26
    56ec:	cf 01       	movw	r24, r30
    56ee:	08 95       	ret

000056f0 <__subsf3>:
    56f0:	50 58       	subi	r21, 0x80	; 128

000056f2 <__addsf3>:
    56f2:	bb 27       	eor	r27, r27
    56f4:	aa 27       	eor	r26, r26
    56f6:	0e d0       	rcall	.+28     	; 0x5714 <__addsf3x>
    56f8:	75 c1       	rjmp	.+746    	; 0x59e4 <__fp_round>
    56fa:	66 d1       	rcall	.+716    	; 0x59c8 <__fp_pscA>
    56fc:	30 f0       	brcs	.+12     	; 0x570a <__addsf3+0x18>
    56fe:	6b d1       	rcall	.+726    	; 0x59d6 <__fp_pscB>
    5700:	20 f0       	brcs	.+8      	; 0x570a <__addsf3+0x18>
    5702:	31 f4       	brne	.+12     	; 0x5710 <__addsf3+0x1e>
    5704:	9f 3f       	cpi	r25, 0xFF	; 255
    5706:	11 f4       	brne	.+4      	; 0x570c <__addsf3+0x1a>
    5708:	1e f4       	brtc	.+6      	; 0x5710 <__addsf3+0x1e>
    570a:	5b c1       	rjmp	.+694    	; 0x59c2 <__fp_nan>
    570c:	0e f4       	brtc	.+2      	; 0x5710 <__addsf3+0x1e>
    570e:	e0 95       	com	r30
    5710:	e7 fb       	bst	r30, 7
    5712:	51 c1       	rjmp	.+674    	; 0x59b6 <__fp_inf>

00005714 <__addsf3x>:
    5714:	e9 2f       	mov	r30, r25
    5716:	77 d1       	rcall	.+750    	; 0x5a06 <__fp_split3>
    5718:	80 f3       	brcs	.-32     	; 0x56fa <__addsf3+0x8>
    571a:	ba 17       	cp	r27, r26
    571c:	62 07       	cpc	r22, r18
    571e:	73 07       	cpc	r23, r19
    5720:	84 07       	cpc	r24, r20
    5722:	95 07       	cpc	r25, r21
    5724:	18 f0       	brcs	.+6      	; 0x572c <__addsf3x+0x18>
    5726:	71 f4       	brne	.+28     	; 0x5744 <__addsf3x+0x30>
    5728:	9e f5       	brtc	.+102    	; 0x5790 <__addsf3x+0x7c>
    572a:	8f c1       	rjmp	.+798    	; 0x5a4a <__fp_zero>
    572c:	0e f4       	brtc	.+2      	; 0x5730 <__addsf3x+0x1c>
    572e:	e0 95       	com	r30
    5730:	0b 2e       	mov	r0, r27
    5732:	ba 2f       	mov	r27, r26
    5734:	a0 2d       	mov	r26, r0
    5736:	0b 01       	movw	r0, r22
    5738:	b9 01       	movw	r22, r18
    573a:	90 01       	movw	r18, r0
    573c:	0c 01       	movw	r0, r24
    573e:	ca 01       	movw	r24, r20
    5740:	a0 01       	movw	r20, r0
    5742:	11 24       	eor	r1, r1
    5744:	ff 27       	eor	r31, r31
    5746:	59 1b       	sub	r21, r25
    5748:	99 f0       	breq	.+38     	; 0x5770 <__addsf3x+0x5c>
    574a:	59 3f       	cpi	r21, 0xF9	; 249
    574c:	50 f4       	brcc	.+20     	; 0x5762 <__addsf3x+0x4e>
    574e:	50 3e       	cpi	r21, 0xE0	; 224
    5750:	68 f1       	brcs	.+90     	; 0x57ac <__addsf3x+0x98>
    5752:	1a 16       	cp	r1, r26
    5754:	f0 40       	sbci	r31, 0x00	; 0
    5756:	a2 2f       	mov	r26, r18
    5758:	23 2f       	mov	r18, r19
    575a:	34 2f       	mov	r19, r20
    575c:	44 27       	eor	r20, r20
    575e:	58 5f       	subi	r21, 0xF8	; 248
    5760:	f3 cf       	rjmp	.-26     	; 0x5748 <__addsf3x+0x34>
    5762:	46 95       	lsr	r20
    5764:	37 95       	ror	r19
    5766:	27 95       	ror	r18
    5768:	a7 95       	ror	r26
    576a:	f0 40       	sbci	r31, 0x00	; 0
    576c:	53 95       	inc	r21
    576e:	c9 f7       	brne	.-14     	; 0x5762 <__addsf3x+0x4e>
    5770:	7e f4       	brtc	.+30     	; 0x5790 <__addsf3x+0x7c>
    5772:	1f 16       	cp	r1, r31
    5774:	ba 0b       	sbc	r27, r26
    5776:	62 0b       	sbc	r22, r18
    5778:	73 0b       	sbc	r23, r19
    577a:	84 0b       	sbc	r24, r20
    577c:	ba f0       	brmi	.+46     	; 0x57ac <__addsf3x+0x98>
    577e:	91 50       	subi	r25, 0x01	; 1
    5780:	a1 f0       	breq	.+40     	; 0x57aa <__addsf3x+0x96>
    5782:	ff 0f       	add	r31, r31
    5784:	bb 1f       	adc	r27, r27
    5786:	66 1f       	adc	r22, r22
    5788:	77 1f       	adc	r23, r23
    578a:	88 1f       	adc	r24, r24
    578c:	c2 f7       	brpl	.-16     	; 0x577e <__addsf3x+0x6a>
    578e:	0e c0       	rjmp	.+28     	; 0x57ac <__addsf3x+0x98>
    5790:	ba 0f       	add	r27, r26
    5792:	62 1f       	adc	r22, r18
    5794:	73 1f       	adc	r23, r19
    5796:	84 1f       	adc	r24, r20
    5798:	48 f4       	brcc	.+18     	; 0x57ac <__addsf3x+0x98>
    579a:	87 95       	ror	r24
    579c:	77 95       	ror	r23
    579e:	67 95       	ror	r22
    57a0:	b7 95       	ror	r27
    57a2:	f7 95       	ror	r31
    57a4:	9e 3f       	cpi	r25, 0xFE	; 254
    57a6:	08 f0       	brcs	.+2      	; 0x57aa <__addsf3x+0x96>
    57a8:	b3 cf       	rjmp	.-154    	; 0x5710 <__addsf3+0x1e>
    57aa:	93 95       	inc	r25
    57ac:	88 0f       	add	r24, r24
    57ae:	08 f0       	brcs	.+2      	; 0x57b2 <__addsf3x+0x9e>
    57b0:	99 27       	eor	r25, r25
    57b2:	ee 0f       	add	r30, r30
    57b4:	97 95       	ror	r25
    57b6:	87 95       	ror	r24
    57b8:	08 95       	ret

000057ba <__cmpsf2>:
    57ba:	d9 d0       	rcall	.+434    	; 0x596e <__fp_cmp>
    57bc:	08 f4       	brcc	.+2      	; 0x57c0 <__cmpsf2+0x6>
    57be:	81 e0       	ldi	r24, 0x01	; 1
    57c0:	08 95       	ret

000057c2 <__divsf3>:
    57c2:	0c d0       	rcall	.+24     	; 0x57dc <__divsf3x>
    57c4:	0f c1       	rjmp	.+542    	; 0x59e4 <__fp_round>
    57c6:	07 d1       	rcall	.+526    	; 0x59d6 <__fp_pscB>
    57c8:	40 f0       	brcs	.+16     	; 0x57da <__divsf3+0x18>
    57ca:	fe d0       	rcall	.+508    	; 0x59c8 <__fp_pscA>
    57cc:	30 f0       	brcs	.+12     	; 0x57da <__divsf3+0x18>
    57ce:	21 f4       	brne	.+8      	; 0x57d8 <__divsf3+0x16>
    57d0:	5f 3f       	cpi	r21, 0xFF	; 255
    57d2:	19 f0       	breq	.+6      	; 0x57da <__divsf3+0x18>
    57d4:	f0 c0       	rjmp	.+480    	; 0x59b6 <__fp_inf>
    57d6:	51 11       	cpse	r21, r1
    57d8:	39 c1       	rjmp	.+626    	; 0x5a4c <__fp_szero>
    57da:	f3 c0       	rjmp	.+486    	; 0x59c2 <__fp_nan>

000057dc <__divsf3x>:
    57dc:	14 d1       	rcall	.+552    	; 0x5a06 <__fp_split3>
    57de:	98 f3       	brcs	.-26     	; 0x57c6 <__divsf3+0x4>

000057e0 <__divsf3_pse>:
    57e0:	99 23       	and	r25, r25
    57e2:	c9 f3       	breq	.-14     	; 0x57d6 <__divsf3+0x14>
    57e4:	55 23       	and	r21, r21
    57e6:	b1 f3       	breq	.-20     	; 0x57d4 <__divsf3+0x12>
    57e8:	95 1b       	sub	r25, r21
    57ea:	55 0b       	sbc	r21, r21
    57ec:	bb 27       	eor	r27, r27
    57ee:	aa 27       	eor	r26, r26
    57f0:	62 17       	cp	r22, r18
    57f2:	73 07       	cpc	r23, r19
    57f4:	84 07       	cpc	r24, r20
    57f6:	38 f0       	brcs	.+14     	; 0x5806 <__divsf3_pse+0x26>
    57f8:	9f 5f       	subi	r25, 0xFF	; 255
    57fa:	5f 4f       	sbci	r21, 0xFF	; 255
    57fc:	22 0f       	add	r18, r18
    57fe:	33 1f       	adc	r19, r19
    5800:	44 1f       	adc	r20, r20
    5802:	aa 1f       	adc	r26, r26
    5804:	a9 f3       	breq	.-22     	; 0x57f0 <__divsf3_pse+0x10>
    5806:	33 d0       	rcall	.+102    	; 0x586e <__divsf3_pse+0x8e>
    5808:	0e 2e       	mov	r0, r30
    580a:	3a f0       	brmi	.+14     	; 0x581a <__divsf3_pse+0x3a>
    580c:	e0 e8       	ldi	r30, 0x80	; 128
    580e:	30 d0       	rcall	.+96     	; 0x5870 <__divsf3_pse+0x90>
    5810:	91 50       	subi	r25, 0x01	; 1
    5812:	50 40       	sbci	r21, 0x00	; 0
    5814:	e6 95       	lsr	r30
    5816:	00 1c       	adc	r0, r0
    5818:	ca f7       	brpl	.-14     	; 0x580c <__divsf3_pse+0x2c>
    581a:	29 d0       	rcall	.+82     	; 0x586e <__divsf3_pse+0x8e>
    581c:	fe 2f       	mov	r31, r30
    581e:	27 d0       	rcall	.+78     	; 0x586e <__divsf3_pse+0x8e>
    5820:	66 0f       	add	r22, r22
    5822:	77 1f       	adc	r23, r23
    5824:	88 1f       	adc	r24, r24
    5826:	bb 1f       	adc	r27, r27
    5828:	26 17       	cp	r18, r22
    582a:	37 07       	cpc	r19, r23
    582c:	48 07       	cpc	r20, r24
    582e:	ab 07       	cpc	r26, r27
    5830:	b0 e8       	ldi	r27, 0x80	; 128
    5832:	09 f0       	breq	.+2      	; 0x5836 <__divsf3_pse+0x56>
    5834:	bb 0b       	sbc	r27, r27
    5836:	80 2d       	mov	r24, r0
    5838:	bf 01       	movw	r22, r30
    583a:	ff 27       	eor	r31, r31
    583c:	93 58       	subi	r25, 0x83	; 131
    583e:	5f 4f       	sbci	r21, 0xFF	; 255
    5840:	2a f0       	brmi	.+10     	; 0x584c <__divsf3_pse+0x6c>
    5842:	9e 3f       	cpi	r25, 0xFE	; 254
    5844:	51 05       	cpc	r21, r1
    5846:	68 f0       	brcs	.+26     	; 0x5862 <__divsf3_pse+0x82>
    5848:	b6 c0       	rjmp	.+364    	; 0x59b6 <__fp_inf>
    584a:	00 c1       	rjmp	.+512    	; 0x5a4c <__fp_szero>
    584c:	5f 3f       	cpi	r21, 0xFF	; 255
    584e:	ec f3       	brlt	.-6      	; 0x584a <__divsf3_pse+0x6a>
    5850:	98 3e       	cpi	r25, 0xE8	; 232
    5852:	dc f3       	brlt	.-10     	; 0x584a <__divsf3_pse+0x6a>
    5854:	86 95       	lsr	r24
    5856:	77 95       	ror	r23
    5858:	67 95       	ror	r22
    585a:	b7 95       	ror	r27
    585c:	f7 95       	ror	r31
    585e:	9f 5f       	subi	r25, 0xFF	; 255
    5860:	c9 f7       	brne	.-14     	; 0x5854 <__divsf3_pse+0x74>
    5862:	88 0f       	add	r24, r24
    5864:	91 1d       	adc	r25, r1
    5866:	96 95       	lsr	r25
    5868:	87 95       	ror	r24
    586a:	97 f9       	bld	r25, 7
    586c:	08 95       	ret
    586e:	e1 e0       	ldi	r30, 0x01	; 1
    5870:	66 0f       	add	r22, r22
    5872:	77 1f       	adc	r23, r23
    5874:	88 1f       	adc	r24, r24
    5876:	bb 1f       	adc	r27, r27
    5878:	62 17       	cp	r22, r18
    587a:	73 07       	cpc	r23, r19
    587c:	84 07       	cpc	r24, r20
    587e:	ba 07       	cpc	r27, r26
    5880:	20 f0       	brcs	.+8      	; 0x588a <__divsf3_pse+0xaa>
    5882:	62 1b       	sub	r22, r18
    5884:	73 0b       	sbc	r23, r19
    5886:	84 0b       	sbc	r24, r20
    5888:	ba 0b       	sbc	r27, r26
    588a:	ee 1f       	adc	r30, r30
    588c:	88 f7       	brcc	.-30     	; 0x5870 <__divsf3_pse+0x90>
    588e:	e0 95       	com	r30
    5890:	08 95       	ret

00005892 <__fixsfsi>:
    5892:	04 d0       	rcall	.+8      	; 0x589c <__fixunssfsi>
    5894:	68 94       	set
    5896:	b1 11       	cpse	r27, r1
    5898:	d9 c0       	rjmp	.+434    	; 0x5a4c <__fp_szero>
    589a:	08 95       	ret

0000589c <__fixunssfsi>:
    589c:	bc d0       	rcall	.+376    	; 0x5a16 <__fp_splitA>
    589e:	88 f0       	brcs	.+34     	; 0x58c2 <__fixunssfsi+0x26>
    58a0:	9f 57       	subi	r25, 0x7F	; 127
    58a2:	90 f0       	brcs	.+36     	; 0x58c8 <__fixunssfsi+0x2c>
    58a4:	b9 2f       	mov	r27, r25
    58a6:	99 27       	eor	r25, r25
    58a8:	b7 51       	subi	r27, 0x17	; 23
    58aa:	a0 f0       	brcs	.+40     	; 0x58d4 <__fixunssfsi+0x38>
    58ac:	d1 f0       	breq	.+52     	; 0x58e2 <__fixunssfsi+0x46>
    58ae:	66 0f       	add	r22, r22
    58b0:	77 1f       	adc	r23, r23
    58b2:	88 1f       	adc	r24, r24
    58b4:	99 1f       	adc	r25, r25
    58b6:	1a f0       	brmi	.+6      	; 0x58be <__fixunssfsi+0x22>
    58b8:	ba 95       	dec	r27
    58ba:	c9 f7       	brne	.-14     	; 0x58ae <__fixunssfsi+0x12>
    58bc:	12 c0       	rjmp	.+36     	; 0x58e2 <__fixunssfsi+0x46>
    58be:	b1 30       	cpi	r27, 0x01	; 1
    58c0:	81 f0       	breq	.+32     	; 0x58e2 <__fixunssfsi+0x46>
    58c2:	c3 d0       	rcall	.+390    	; 0x5a4a <__fp_zero>
    58c4:	b1 e0       	ldi	r27, 0x01	; 1
    58c6:	08 95       	ret
    58c8:	c0 c0       	rjmp	.+384    	; 0x5a4a <__fp_zero>
    58ca:	67 2f       	mov	r22, r23
    58cc:	78 2f       	mov	r23, r24
    58ce:	88 27       	eor	r24, r24
    58d0:	b8 5f       	subi	r27, 0xF8	; 248
    58d2:	39 f0       	breq	.+14     	; 0x58e2 <__fixunssfsi+0x46>
    58d4:	b9 3f       	cpi	r27, 0xF9	; 249
    58d6:	cc f3       	brlt	.-14     	; 0x58ca <__fixunssfsi+0x2e>
    58d8:	86 95       	lsr	r24
    58da:	77 95       	ror	r23
    58dc:	67 95       	ror	r22
    58de:	b3 95       	inc	r27
    58e0:	d9 f7       	brne	.-10     	; 0x58d8 <__fixunssfsi+0x3c>
    58e2:	3e f4       	brtc	.+14     	; 0x58f2 <__fixunssfsi+0x56>
    58e4:	90 95       	com	r25
    58e6:	80 95       	com	r24
    58e8:	70 95       	com	r23
    58ea:	61 95       	neg	r22
    58ec:	7f 4f       	sbci	r23, 0xFF	; 255
    58ee:	8f 4f       	sbci	r24, 0xFF	; 255
    58f0:	9f 4f       	sbci	r25, 0xFF	; 255
    58f2:	08 95       	ret

000058f4 <__floatunsisf>:
    58f4:	e8 94       	clt
    58f6:	09 c0       	rjmp	.+18     	; 0x590a <__floatsisf+0x12>

000058f8 <__floatsisf>:
    58f8:	97 fb       	bst	r25, 7
    58fa:	3e f4       	brtc	.+14     	; 0x590a <__floatsisf+0x12>
    58fc:	90 95       	com	r25
    58fe:	80 95       	com	r24
    5900:	70 95       	com	r23
    5902:	61 95       	neg	r22
    5904:	7f 4f       	sbci	r23, 0xFF	; 255
    5906:	8f 4f       	sbci	r24, 0xFF	; 255
    5908:	9f 4f       	sbci	r25, 0xFF	; 255
    590a:	99 23       	and	r25, r25
    590c:	a9 f0       	breq	.+42     	; 0x5938 <__floatsisf+0x40>
    590e:	f9 2f       	mov	r31, r25
    5910:	96 e9       	ldi	r25, 0x96	; 150
    5912:	bb 27       	eor	r27, r27
    5914:	93 95       	inc	r25
    5916:	f6 95       	lsr	r31
    5918:	87 95       	ror	r24
    591a:	77 95       	ror	r23
    591c:	67 95       	ror	r22
    591e:	b7 95       	ror	r27
    5920:	f1 11       	cpse	r31, r1
    5922:	f8 cf       	rjmp	.-16     	; 0x5914 <__floatsisf+0x1c>
    5924:	fa f4       	brpl	.+62     	; 0x5964 <__floatsisf+0x6c>
    5926:	bb 0f       	add	r27, r27
    5928:	11 f4       	brne	.+4      	; 0x592e <__floatsisf+0x36>
    592a:	60 ff       	sbrs	r22, 0
    592c:	1b c0       	rjmp	.+54     	; 0x5964 <__floatsisf+0x6c>
    592e:	6f 5f       	subi	r22, 0xFF	; 255
    5930:	7f 4f       	sbci	r23, 0xFF	; 255
    5932:	8f 4f       	sbci	r24, 0xFF	; 255
    5934:	9f 4f       	sbci	r25, 0xFF	; 255
    5936:	16 c0       	rjmp	.+44     	; 0x5964 <__floatsisf+0x6c>
    5938:	88 23       	and	r24, r24
    593a:	11 f0       	breq	.+4      	; 0x5940 <__floatsisf+0x48>
    593c:	96 e9       	ldi	r25, 0x96	; 150
    593e:	11 c0       	rjmp	.+34     	; 0x5962 <__floatsisf+0x6a>
    5940:	77 23       	and	r23, r23
    5942:	21 f0       	breq	.+8      	; 0x594c <__floatsisf+0x54>
    5944:	9e e8       	ldi	r25, 0x8E	; 142
    5946:	87 2f       	mov	r24, r23
    5948:	76 2f       	mov	r23, r22
    594a:	05 c0       	rjmp	.+10     	; 0x5956 <__floatsisf+0x5e>
    594c:	66 23       	and	r22, r22
    594e:	71 f0       	breq	.+28     	; 0x596c <__floatsisf+0x74>
    5950:	96 e8       	ldi	r25, 0x86	; 134
    5952:	86 2f       	mov	r24, r22
    5954:	70 e0       	ldi	r23, 0x00	; 0
    5956:	60 e0       	ldi	r22, 0x00	; 0
    5958:	2a f0       	brmi	.+10     	; 0x5964 <__floatsisf+0x6c>
    595a:	9a 95       	dec	r25
    595c:	66 0f       	add	r22, r22
    595e:	77 1f       	adc	r23, r23
    5960:	88 1f       	adc	r24, r24
    5962:	da f7       	brpl	.-10     	; 0x595a <__floatsisf+0x62>
    5964:	88 0f       	add	r24, r24
    5966:	96 95       	lsr	r25
    5968:	87 95       	ror	r24
    596a:	97 f9       	bld	r25, 7
    596c:	08 95       	ret

0000596e <__fp_cmp>:
    596e:	99 0f       	add	r25, r25
    5970:	00 08       	sbc	r0, r0
    5972:	55 0f       	add	r21, r21
    5974:	aa 0b       	sbc	r26, r26
    5976:	e0 e8       	ldi	r30, 0x80	; 128
    5978:	fe ef       	ldi	r31, 0xFE	; 254
    597a:	16 16       	cp	r1, r22
    597c:	17 06       	cpc	r1, r23
    597e:	e8 07       	cpc	r30, r24
    5980:	f9 07       	cpc	r31, r25
    5982:	c0 f0       	brcs	.+48     	; 0x59b4 <__fp_cmp+0x46>
    5984:	12 16       	cp	r1, r18
    5986:	13 06       	cpc	r1, r19
    5988:	e4 07       	cpc	r30, r20
    598a:	f5 07       	cpc	r31, r21
    598c:	98 f0       	brcs	.+38     	; 0x59b4 <__fp_cmp+0x46>
    598e:	62 1b       	sub	r22, r18
    5990:	73 0b       	sbc	r23, r19
    5992:	84 0b       	sbc	r24, r20
    5994:	95 0b       	sbc	r25, r21
    5996:	39 f4       	brne	.+14     	; 0x59a6 <__fp_cmp+0x38>
    5998:	0a 26       	eor	r0, r26
    599a:	61 f0       	breq	.+24     	; 0x59b4 <__fp_cmp+0x46>
    599c:	23 2b       	or	r18, r19
    599e:	24 2b       	or	r18, r20
    59a0:	25 2b       	or	r18, r21
    59a2:	21 f4       	brne	.+8      	; 0x59ac <__fp_cmp+0x3e>
    59a4:	08 95       	ret
    59a6:	0a 26       	eor	r0, r26
    59a8:	09 f4       	brne	.+2      	; 0x59ac <__fp_cmp+0x3e>
    59aa:	a1 40       	sbci	r26, 0x01	; 1
    59ac:	a6 95       	lsr	r26
    59ae:	8f ef       	ldi	r24, 0xFF	; 255
    59b0:	81 1d       	adc	r24, r1
    59b2:	81 1d       	adc	r24, r1
    59b4:	08 95       	ret

000059b6 <__fp_inf>:
    59b6:	97 f9       	bld	r25, 7
    59b8:	9f 67       	ori	r25, 0x7F	; 127
    59ba:	80 e8       	ldi	r24, 0x80	; 128
    59bc:	70 e0       	ldi	r23, 0x00	; 0
    59be:	60 e0       	ldi	r22, 0x00	; 0
    59c0:	08 95       	ret

000059c2 <__fp_nan>:
    59c2:	9f ef       	ldi	r25, 0xFF	; 255
    59c4:	80 ec       	ldi	r24, 0xC0	; 192
    59c6:	08 95       	ret

000059c8 <__fp_pscA>:
    59c8:	00 24       	eor	r0, r0
    59ca:	0a 94       	dec	r0
    59cc:	16 16       	cp	r1, r22
    59ce:	17 06       	cpc	r1, r23
    59d0:	18 06       	cpc	r1, r24
    59d2:	09 06       	cpc	r0, r25
    59d4:	08 95       	ret

000059d6 <__fp_pscB>:
    59d6:	00 24       	eor	r0, r0
    59d8:	0a 94       	dec	r0
    59da:	12 16       	cp	r1, r18
    59dc:	13 06       	cpc	r1, r19
    59de:	14 06       	cpc	r1, r20
    59e0:	05 06       	cpc	r0, r21
    59e2:	08 95       	ret

000059e4 <__fp_round>:
    59e4:	09 2e       	mov	r0, r25
    59e6:	03 94       	inc	r0
    59e8:	00 0c       	add	r0, r0
    59ea:	11 f4       	brne	.+4      	; 0x59f0 <__fp_round+0xc>
    59ec:	88 23       	and	r24, r24
    59ee:	52 f0       	brmi	.+20     	; 0x5a04 <__fp_round+0x20>
    59f0:	bb 0f       	add	r27, r27
    59f2:	40 f4       	brcc	.+16     	; 0x5a04 <__fp_round+0x20>
    59f4:	bf 2b       	or	r27, r31
    59f6:	11 f4       	brne	.+4      	; 0x59fc <__fp_round+0x18>
    59f8:	60 ff       	sbrs	r22, 0
    59fa:	04 c0       	rjmp	.+8      	; 0x5a04 <__fp_round+0x20>
    59fc:	6f 5f       	subi	r22, 0xFF	; 255
    59fe:	7f 4f       	sbci	r23, 0xFF	; 255
    5a00:	8f 4f       	sbci	r24, 0xFF	; 255
    5a02:	9f 4f       	sbci	r25, 0xFF	; 255
    5a04:	08 95       	ret

00005a06 <__fp_split3>:
    5a06:	57 fd       	sbrc	r21, 7
    5a08:	90 58       	subi	r25, 0x80	; 128
    5a0a:	44 0f       	add	r20, r20
    5a0c:	55 1f       	adc	r21, r21
    5a0e:	59 f0       	breq	.+22     	; 0x5a26 <__fp_splitA+0x10>
    5a10:	5f 3f       	cpi	r21, 0xFF	; 255
    5a12:	71 f0       	breq	.+28     	; 0x5a30 <__fp_splitA+0x1a>
    5a14:	47 95       	ror	r20

00005a16 <__fp_splitA>:
    5a16:	88 0f       	add	r24, r24
    5a18:	97 fb       	bst	r25, 7
    5a1a:	99 1f       	adc	r25, r25
    5a1c:	61 f0       	breq	.+24     	; 0x5a36 <__fp_splitA+0x20>
    5a1e:	9f 3f       	cpi	r25, 0xFF	; 255
    5a20:	79 f0       	breq	.+30     	; 0x5a40 <__fp_splitA+0x2a>
    5a22:	87 95       	ror	r24
    5a24:	08 95       	ret
    5a26:	12 16       	cp	r1, r18
    5a28:	13 06       	cpc	r1, r19
    5a2a:	14 06       	cpc	r1, r20
    5a2c:	55 1f       	adc	r21, r21
    5a2e:	f2 cf       	rjmp	.-28     	; 0x5a14 <__fp_split3+0xe>
    5a30:	46 95       	lsr	r20
    5a32:	f1 df       	rcall	.-30     	; 0x5a16 <__fp_splitA>
    5a34:	08 c0       	rjmp	.+16     	; 0x5a46 <__fp_splitA+0x30>
    5a36:	16 16       	cp	r1, r22
    5a38:	17 06       	cpc	r1, r23
    5a3a:	18 06       	cpc	r1, r24
    5a3c:	99 1f       	adc	r25, r25
    5a3e:	f1 cf       	rjmp	.-30     	; 0x5a22 <__fp_splitA+0xc>
    5a40:	86 95       	lsr	r24
    5a42:	71 05       	cpc	r23, r1
    5a44:	61 05       	cpc	r22, r1
    5a46:	08 94       	sec
    5a48:	08 95       	ret

00005a4a <__fp_zero>:
    5a4a:	e8 94       	clt

00005a4c <__fp_szero>:
    5a4c:	bb 27       	eor	r27, r27
    5a4e:	66 27       	eor	r22, r22
    5a50:	77 27       	eor	r23, r23
    5a52:	cb 01       	movw	r24, r22
    5a54:	97 f9       	bld	r25, 7
    5a56:	08 95       	ret

00005a58 <__gesf2>:
    5a58:	8a df       	rcall	.-236    	; 0x596e <__fp_cmp>
    5a5a:	08 f4       	brcc	.+2      	; 0x5a5e <__gesf2+0x6>
    5a5c:	8f ef       	ldi	r24, 0xFF	; 255
    5a5e:	08 95       	ret

00005a60 <__mulsf3>:
    5a60:	0b d0       	rcall	.+22     	; 0x5a78 <__mulsf3x>
    5a62:	c0 cf       	rjmp	.-128    	; 0x59e4 <__fp_round>
    5a64:	b1 df       	rcall	.-158    	; 0x59c8 <__fp_pscA>
    5a66:	28 f0       	brcs	.+10     	; 0x5a72 <__mulsf3+0x12>
    5a68:	b6 df       	rcall	.-148    	; 0x59d6 <__fp_pscB>
    5a6a:	18 f0       	brcs	.+6      	; 0x5a72 <__mulsf3+0x12>
    5a6c:	95 23       	and	r25, r21
    5a6e:	09 f0       	breq	.+2      	; 0x5a72 <__mulsf3+0x12>
    5a70:	a2 cf       	rjmp	.-188    	; 0x59b6 <__fp_inf>
    5a72:	a7 cf       	rjmp	.-178    	; 0x59c2 <__fp_nan>
    5a74:	11 24       	eor	r1, r1
    5a76:	ea cf       	rjmp	.-44     	; 0x5a4c <__fp_szero>

00005a78 <__mulsf3x>:
    5a78:	c6 df       	rcall	.-116    	; 0x5a06 <__fp_split3>
    5a7a:	a0 f3       	brcs	.-24     	; 0x5a64 <__mulsf3+0x4>

00005a7c <__mulsf3_pse>:
    5a7c:	95 9f       	mul	r25, r21
    5a7e:	d1 f3       	breq	.-12     	; 0x5a74 <__mulsf3+0x14>
    5a80:	95 0f       	add	r25, r21
    5a82:	50 e0       	ldi	r21, 0x00	; 0
    5a84:	55 1f       	adc	r21, r21
    5a86:	62 9f       	mul	r22, r18
    5a88:	f0 01       	movw	r30, r0
    5a8a:	72 9f       	mul	r23, r18
    5a8c:	bb 27       	eor	r27, r27
    5a8e:	f0 0d       	add	r31, r0
    5a90:	b1 1d       	adc	r27, r1
    5a92:	63 9f       	mul	r22, r19
    5a94:	aa 27       	eor	r26, r26
    5a96:	f0 0d       	add	r31, r0
    5a98:	b1 1d       	adc	r27, r1
    5a9a:	aa 1f       	adc	r26, r26
    5a9c:	64 9f       	mul	r22, r20
    5a9e:	66 27       	eor	r22, r22
    5aa0:	b0 0d       	add	r27, r0
    5aa2:	a1 1d       	adc	r26, r1
    5aa4:	66 1f       	adc	r22, r22
    5aa6:	82 9f       	mul	r24, r18
    5aa8:	22 27       	eor	r18, r18
    5aaa:	b0 0d       	add	r27, r0
    5aac:	a1 1d       	adc	r26, r1
    5aae:	62 1f       	adc	r22, r18
    5ab0:	73 9f       	mul	r23, r19
    5ab2:	b0 0d       	add	r27, r0
    5ab4:	a1 1d       	adc	r26, r1
    5ab6:	62 1f       	adc	r22, r18
    5ab8:	83 9f       	mul	r24, r19
    5aba:	a0 0d       	add	r26, r0
    5abc:	61 1d       	adc	r22, r1
    5abe:	22 1f       	adc	r18, r18
    5ac0:	74 9f       	mul	r23, r20
    5ac2:	33 27       	eor	r19, r19
    5ac4:	a0 0d       	add	r26, r0
    5ac6:	61 1d       	adc	r22, r1
    5ac8:	23 1f       	adc	r18, r19
    5aca:	84 9f       	mul	r24, r20
    5acc:	60 0d       	add	r22, r0
    5ace:	21 1d       	adc	r18, r1
    5ad0:	82 2f       	mov	r24, r18
    5ad2:	76 2f       	mov	r23, r22
    5ad4:	6a 2f       	mov	r22, r26
    5ad6:	11 24       	eor	r1, r1
    5ad8:	9f 57       	subi	r25, 0x7F	; 127
    5ada:	50 40       	sbci	r21, 0x00	; 0
    5adc:	8a f0       	brmi	.+34     	; 0x5b00 <__mulsf3_pse+0x84>
    5ade:	e1 f0       	breq	.+56     	; 0x5b18 <__mulsf3_pse+0x9c>
    5ae0:	88 23       	and	r24, r24
    5ae2:	4a f0       	brmi	.+18     	; 0x5af6 <__mulsf3_pse+0x7a>
    5ae4:	ee 0f       	add	r30, r30
    5ae6:	ff 1f       	adc	r31, r31
    5ae8:	bb 1f       	adc	r27, r27
    5aea:	66 1f       	adc	r22, r22
    5aec:	77 1f       	adc	r23, r23
    5aee:	88 1f       	adc	r24, r24
    5af0:	91 50       	subi	r25, 0x01	; 1
    5af2:	50 40       	sbci	r21, 0x00	; 0
    5af4:	a9 f7       	brne	.-22     	; 0x5ae0 <__mulsf3_pse+0x64>
    5af6:	9e 3f       	cpi	r25, 0xFE	; 254
    5af8:	51 05       	cpc	r21, r1
    5afa:	70 f0       	brcs	.+28     	; 0x5b18 <__mulsf3_pse+0x9c>
    5afc:	5c cf       	rjmp	.-328    	; 0x59b6 <__fp_inf>
    5afe:	a6 cf       	rjmp	.-180    	; 0x5a4c <__fp_szero>
    5b00:	5f 3f       	cpi	r21, 0xFF	; 255
    5b02:	ec f3       	brlt	.-6      	; 0x5afe <__mulsf3_pse+0x82>
    5b04:	98 3e       	cpi	r25, 0xE8	; 232
    5b06:	dc f3       	brlt	.-10     	; 0x5afe <__mulsf3_pse+0x82>
    5b08:	86 95       	lsr	r24
    5b0a:	77 95       	ror	r23
    5b0c:	67 95       	ror	r22
    5b0e:	b7 95       	ror	r27
    5b10:	f7 95       	ror	r31
    5b12:	e7 95       	ror	r30
    5b14:	9f 5f       	subi	r25, 0xFF	; 255
    5b16:	c1 f7       	brne	.-16     	; 0x5b08 <__mulsf3_pse+0x8c>
    5b18:	fe 2b       	or	r31, r30
    5b1a:	88 0f       	add	r24, r24
    5b1c:	91 1d       	adc	r25, r1
    5b1e:	96 95       	lsr	r25
    5b20:	87 95       	ror	r24
    5b22:	97 f9       	bld	r25, 7
    5b24:	08 95       	ret

00005b26 <sprintf>:
    5b26:	0f 93       	push	r16
    5b28:	1f 93       	push	r17
    5b2a:	cf 93       	push	r28
    5b2c:	df 93       	push	r29
    5b2e:	cd b7       	in	r28, 0x3d	; 61
    5b30:	de b7       	in	r29, 0x3e	; 62
    5b32:	2e 97       	sbiw	r28, 0x0e	; 14
    5b34:	cd bf       	out	0x3d, r28	; 61
    5b36:	de bf       	out	0x3e, r29	; 62
    5b38:	0e 89       	ldd	r16, Y+22	; 0x16
    5b3a:	1f 89       	ldd	r17, Y+23	; 0x17
    5b3c:	86 e0       	ldi	r24, 0x06	; 6
    5b3e:	8c 83       	std	Y+4, r24	; 0x04
    5b40:	09 83       	std	Y+1, r16	; 0x01
    5b42:	1a 83       	std	Y+2, r17	; 0x02
    5b44:	8f ef       	ldi	r24, 0xFF	; 255
    5b46:	9f e7       	ldi	r25, 0x7F	; 127
    5b48:	8d 83       	std	Y+5, r24	; 0x05
    5b4a:	9e 83       	std	Y+6, r25	; 0x06
    5b4c:	ae 01       	movw	r20, r28
    5b4e:	46 5e       	subi	r20, 0xE6	; 230
    5b50:	5f 4f       	sbci	r21, 0xFF	; 255
    5b52:	68 8d       	ldd	r22, Y+24	; 0x18
    5b54:	79 8d       	ldd	r23, Y+25	; 0x19
    5b56:	ce 01       	movw	r24, r28
    5b58:	01 96       	adiw	r24, 0x01	; 1
    5b5a:	0d d0       	rcall	.+26     	; 0x5b76 <vfprintf>
    5b5c:	ef 81       	ldd	r30, Y+7	; 0x07
    5b5e:	f8 85       	ldd	r31, Y+8	; 0x08
    5b60:	e0 0f       	add	r30, r16
    5b62:	f1 1f       	adc	r31, r17
    5b64:	10 82       	st	Z, r1
    5b66:	2e 96       	adiw	r28, 0x0e	; 14
    5b68:	cd bf       	out	0x3d, r28	; 61
    5b6a:	de bf       	out	0x3e, r29	; 62
    5b6c:	df 91       	pop	r29
    5b6e:	cf 91       	pop	r28
    5b70:	1f 91       	pop	r17
    5b72:	0f 91       	pop	r16
    5b74:	08 95       	ret

00005b76 <vfprintf>:
    5b76:	2f 92       	push	r2
    5b78:	3f 92       	push	r3
    5b7a:	4f 92       	push	r4
    5b7c:	5f 92       	push	r5
    5b7e:	6f 92       	push	r6
    5b80:	7f 92       	push	r7
    5b82:	8f 92       	push	r8
    5b84:	9f 92       	push	r9
    5b86:	af 92       	push	r10
    5b88:	bf 92       	push	r11
    5b8a:	cf 92       	push	r12
    5b8c:	df 92       	push	r13
    5b8e:	ef 92       	push	r14
    5b90:	ff 92       	push	r15
    5b92:	0f 93       	push	r16
    5b94:	1f 93       	push	r17
    5b96:	cf 93       	push	r28
    5b98:	df 93       	push	r29
    5b9a:	cd b7       	in	r28, 0x3d	; 61
    5b9c:	de b7       	in	r29, 0x3e	; 62
    5b9e:	2c 97       	sbiw	r28, 0x0c	; 12
    5ba0:	cd bf       	out	0x3d, r28	; 61
    5ba2:	de bf       	out	0x3e, r29	; 62
    5ba4:	7c 01       	movw	r14, r24
    5ba6:	6b 01       	movw	r12, r22
    5ba8:	8a 01       	movw	r16, r20
    5baa:	fc 01       	movw	r30, r24
    5bac:	16 82       	std	Z+6, r1	; 0x06
    5bae:	17 82       	std	Z+7, r1	; 0x07
    5bb0:	83 81       	ldd	r24, Z+3	; 0x03
    5bb2:	81 ff       	sbrs	r24, 1
    5bb4:	b0 c1       	rjmp	.+864    	; 0x5f16 <vfprintf+0x3a0>
    5bb6:	ce 01       	movw	r24, r28
    5bb8:	01 96       	adiw	r24, 0x01	; 1
    5bba:	4c 01       	movw	r8, r24
    5bbc:	f7 01       	movw	r30, r14
    5bbe:	93 81       	ldd	r25, Z+3	; 0x03
    5bc0:	f6 01       	movw	r30, r12
    5bc2:	93 fd       	sbrc	r25, 3
    5bc4:	85 91       	lpm	r24, Z+
    5bc6:	93 ff       	sbrs	r25, 3
    5bc8:	81 91       	ld	r24, Z+
    5bca:	6f 01       	movw	r12, r30
    5bcc:	88 23       	and	r24, r24
    5bce:	09 f4       	brne	.+2      	; 0x5bd2 <vfprintf+0x5c>
    5bd0:	9e c1       	rjmp	.+828    	; 0x5f0e <vfprintf+0x398>
    5bd2:	85 32       	cpi	r24, 0x25	; 37
    5bd4:	39 f4       	brne	.+14     	; 0x5be4 <vfprintf+0x6e>
    5bd6:	93 fd       	sbrc	r25, 3
    5bd8:	85 91       	lpm	r24, Z+
    5bda:	93 ff       	sbrs	r25, 3
    5bdc:	81 91       	ld	r24, Z+
    5bde:	6f 01       	movw	r12, r30
    5be0:	85 32       	cpi	r24, 0x25	; 37
    5be2:	21 f4       	brne	.+8      	; 0x5bec <vfprintf+0x76>
    5be4:	b7 01       	movw	r22, r14
    5be6:	90 e0       	ldi	r25, 0x00	; 0
    5be8:	c4 d1       	rcall	.+904    	; 0x5f72 <fputc>
    5bea:	e8 cf       	rjmp	.-48     	; 0x5bbc <vfprintf+0x46>
    5bec:	51 2c       	mov	r5, r1
    5bee:	31 2c       	mov	r3, r1
    5bf0:	20 e0       	ldi	r18, 0x00	; 0
    5bf2:	20 32       	cpi	r18, 0x20	; 32
    5bf4:	a0 f4       	brcc	.+40     	; 0x5c1e <vfprintf+0xa8>
    5bf6:	8b 32       	cpi	r24, 0x2B	; 43
    5bf8:	69 f0       	breq	.+26     	; 0x5c14 <vfprintf+0x9e>
    5bfa:	30 f4       	brcc	.+12     	; 0x5c08 <vfprintf+0x92>
    5bfc:	80 32       	cpi	r24, 0x20	; 32
    5bfe:	59 f0       	breq	.+22     	; 0x5c16 <vfprintf+0xa0>
    5c00:	83 32       	cpi	r24, 0x23	; 35
    5c02:	69 f4       	brne	.+26     	; 0x5c1e <vfprintf+0xa8>
    5c04:	20 61       	ori	r18, 0x10	; 16
    5c06:	2c c0       	rjmp	.+88     	; 0x5c60 <vfprintf+0xea>
    5c08:	8d 32       	cpi	r24, 0x2D	; 45
    5c0a:	39 f0       	breq	.+14     	; 0x5c1a <vfprintf+0xa4>
    5c0c:	80 33       	cpi	r24, 0x30	; 48
    5c0e:	39 f4       	brne	.+14     	; 0x5c1e <vfprintf+0xa8>
    5c10:	21 60       	ori	r18, 0x01	; 1
    5c12:	26 c0       	rjmp	.+76     	; 0x5c60 <vfprintf+0xea>
    5c14:	22 60       	ori	r18, 0x02	; 2
    5c16:	24 60       	ori	r18, 0x04	; 4
    5c18:	23 c0       	rjmp	.+70     	; 0x5c60 <vfprintf+0xea>
    5c1a:	28 60       	ori	r18, 0x08	; 8
    5c1c:	21 c0       	rjmp	.+66     	; 0x5c60 <vfprintf+0xea>
    5c1e:	27 fd       	sbrc	r18, 7
    5c20:	27 c0       	rjmp	.+78     	; 0x5c70 <vfprintf+0xfa>
    5c22:	30 ed       	ldi	r19, 0xD0	; 208
    5c24:	38 0f       	add	r19, r24
    5c26:	3a 30       	cpi	r19, 0x0A	; 10
    5c28:	78 f4       	brcc	.+30     	; 0x5c48 <vfprintf+0xd2>
    5c2a:	26 ff       	sbrs	r18, 6
    5c2c:	06 c0       	rjmp	.+12     	; 0x5c3a <vfprintf+0xc4>
    5c2e:	fa e0       	ldi	r31, 0x0A	; 10
    5c30:	5f 9e       	mul	r5, r31
    5c32:	30 0d       	add	r19, r0
    5c34:	11 24       	eor	r1, r1
    5c36:	53 2e       	mov	r5, r19
    5c38:	13 c0       	rjmp	.+38     	; 0x5c60 <vfprintf+0xea>
    5c3a:	8a e0       	ldi	r24, 0x0A	; 10
    5c3c:	38 9e       	mul	r3, r24
    5c3e:	30 0d       	add	r19, r0
    5c40:	11 24       	eor	r1, r1
    5c42:	33 2e       	mov	r3, r19
    5c44:	20 62       	ori	r18, 0x20	; 32
    5c46:	0c c0       	rjmp	.+24     	; 0x5c60 <vfprintf+0xea>
    5c48:	8e 32       	cpi	r24, 0x2E	; 46
    5c4a:	21 f4       	brne	.+8      	; 0x5c54 <vfprintf+0xde>
    5c4c:	26 fd       	sbrc	r18, 6
    5c4e:	5f c1       	rjmp	.+702    	; 0x5f0e <vfprintf+0x398>
    5c50:	20 64       	ori	r18, 0x40	; 64
    5c52:	06 c0       	rjmp	.+12     	; 0x5c60 <vfprintf+0xea>
    5c54:	8c 36       	cpi	r24, 0x6C	; 108
    5c56:	11 f4       	brne	.+4      	; 0x5c5c <vfprintf+0xe6>
    5c58:	20 68       	ori	r18, 0x80	; 128
    5c5a:	02 c0       	rjmp	.+4      	; 0x5c60 <vfprintf+0xea>
    5c5c:	88 36       	cpi	r24, 0x68	; 104
    5c5e:	41 f4       	brne	.+16     	; 0x5c70 <vfprintf+0xfa>
    5c60:	f6 01       	movw	r30, r12
    5c62:	93 fd       	sbrc	r25, 3
    5c64:	85 91       	lpm	r24, Z+
    5c66:	93 ff       	sbrs	r25, 3
    5c68:	81 91       	ld	r24, Z+
    5c6a:	6f 01       	movw	r12, r30
    5c6c:	81 11       	cpse	r24, r1
    5c6e:	c1 cf       	rjmp	.-126    	; 0x5bf2 <vfprintf+0x7c>
    5c70:	98 2f       	mov	r25, r24
    5c72:	9f 7d       	andi	r25, 0xDF	; 223
    5c74:	95 54       	subi	r25, 0x45	; 69
    5c76:	93 30       	cpi	r25, 0x03	; 3
    5c78:	28 f4       	brcc	.+10     	; 0x5c84 <vfprintf+0x10e>
    5c7a:	0c 5f       	subi	r16, 0xFC	; 252
    5c7c:	1f 4f       	sbci	r17, 0xFF	; 255
    5c7e:	ff e3       	ldi	r31, 0x3F	; 63
    5c80:	f9 83       	std	Y+1, r31	; 0x01
    5c82:	0d c0       	rjmp	.+26     	; 0x5c9e <vfprintf+0x128>
    5c84:	83 36       	cpi	r24, 0x63	; 99
    5c86:	31 f0       	breq	.+12     	; 0x5c94 <vfprintf+0x11e>
    5c88:	83 37       	cpi	r24, 0x73	; 115
    5c8a:	71 f0       	breq	.+28     	; 0x5ca8 <vfprintf+0x132>
    5c8c:	83 35       	cpi	r24, 0x53	; 83
    5c8e:	09 f0       	breq	.+2      	; 0x5c92 <vfprintf+0x11c>
    5c90:	57 c0       	rjmp	.+174    	; 0x5d40 <vfprintf+0x1ca>
    5c92:	21 c0       	rjmp	.+66     	; 0x5cd6 <vfprintf+0x160>
    5c94:	f8 01       	movw	r30, r16
    5c96:	80 81       	ld	r24, Z
    5c98:	89 83       	std	Y+1, r24	; 0x01
    5c9a:	0e 5f       	subi	r16, 0xFE	; 254
    5c9c:	1f 4f       	sbci	r17, 0xFF	; 255
    5c9e:	44 24       	eor	r4, r4
    5ca0:	43 94       	inc	r4
    5ca2:	51 2c       	mov	r5, r1
    5ca4:	54 01       	movw	r10, r8
    5ca6:	14 c0       	rjmp	.+40     	; 0x5cd0 <vfprintf+0x15a>
    5ca8:	38 01       	movw	r6, r16
    5caa:	f2 e0       	ldi	r31, 0x02	; 2
    5cac:	6f 0e       	add	r6, r31
    5cae:	71 1c       	adc	r7, r1
    5cb0:	f8 01       	movw	r30, r16
    5cb2:	a0 80       	ld	r10, Z
    5cb4:	b1 80       	ldd	r11, Z+1	; 0x01
    5cb6:	26 ff       	sbrs	r18, 6
    5cb8:	03 c0       	rjmp	.+6      	; 0x5cc0 <vfprintf+0x14a>
    5cba:	65 2d       	mov	r22, r5
    5cbc:	70 e0       	ldi	r23, 0x00	; 0
    5cbe:	02 c0       	rjmp	.+4      	; 0x5cc4 <vfprintf+0x14e>
    5cc0:	6f ef       	ldi	r22, 0xFF	; 255
    5cc2:	7f ef       	ldi	r23, 0xFF	; 255
    5cc4:	c5 01       	movw	r24, r10
    5cc6:	2c 87       	std	Y+12, r18	; 0x0c
    5cc8:	49 d1       	rcall	.+658    	; 0x5f5c <strnlen>
    5cca:	2c 01       	movw	r4, r24
    5ccc:	83 01       	movw	r16, r6
    5cce:	2c 85       	ldd	r18, Y+12	; 0x0c
    5cd0:	2f 77       	andi	r18, 0x7F	; 127
    5cd2:	22 2e       	mov	r2, r18
    5cd4:	16 c0       	rjmp	.+44     	; 0x5d02 <vfprintf+0x18c>
    5cd6:	38 01       	movw	r6, r16
    5cd8:	f2 e0       	ldi	r31, 0x02	; 2
    5cda:	6f 0e       	add	r6, r31
    5cdc:	71 1c       	adc	r7, r1
    5cde:	f8 01       	movw	r30, r16
    5ce0:	a0 80       	ld	r10, Z
    5ce2:	b1 80       	ldd	r11, Z+1	; 0x01
    5ce4:	26 ff       	sbrs	r18, 6
    5ce6:	03 c0       	rjmp	.+6      	; 0x5cee <vfprintf+0x178>
    5ce8:	65 2d       	mov	r22, r5
    5cea:	70 e0       	ldi	r23, 0x00	; 0
    5cec:	02 c0       	rjmp	.+4      	; 0x5cf2 <vfprintf+0x17c>
    5cee:	6f ef       	ldi	r22, 0xFF	; 255
    5cf0:	7f ef       	ldi	r23, 0xFF	; 255
    5cf2:	c5 01       	movw	r24, r10
    5cf4:	2c 87       	std	Y+12, r18	; 0x0c
    5cf6:	27 d1       	rcall	.+590    	; 0x5f46 <strnlen_P>
    5cf8:	2c 01       	movw	r4, r24
    5cfa:	2c 85       	ldd	r18, Y+12	; 0x0c
    5cfc:	20 68       	ori	r18, 0x80	; 128
    5cfe:	22 2e       	mov	r2, r18
    5d00:	83 01       	movw	r16, r6
    5d02:	23 fc       	sbrc	r2, 3
    5d04:	19 c0       	rjmp	.+50     	; 0x5d38 <vfprintf+0x1c2>
    5d06:	83 2d       	mov	r24, r3
    5d08:	90 e0       	ldi	r25, 0x00	; 0
    5d0a:	48 16       	cp	r4, r24
    5d0c:	59 06       	cpc	r5, r25
    5d0e:	a0 f4       	brcc	.+40     	; 0x5d38 <vfprintf+0x1c2>
    5d10:	b7 01       	movw	r22, r14
    5d12:	80 e2       	ldi	r24, 0x20	; 32
    5d14:	90 e0       	ldi	r25, 0x00	; 0
    5d16:	2d d1       	rcall	.+602    	; 0x5f72 <fputc>
    5d18:	3a 94       	dec	r3
    5d1a:	f5 cf       	rjmp	.-22     	; 0x5d06 <vfprintf+0x190>
    5d1c:	f5 01       	movw	r30, r10
    5d1e:	27 fc       	sbrc	r2, 7
    5d20:	85 91       	lpm	r24, Z+
    5d22:	27 fe       	sbrs	r2, 7
    5d24:	81 91       	ld	r24, Z+
    5d26:	5f 01       	movw	r10, r30
    5d28:	b7 01       	movw	r22, r14
    5d2a:	90 e0       	ldi	r25, 0x00	; 0
    5d2c:	22 d1       	rcall	.+580    	; 0x5f72 <fputc>
    5d2e:	31 10       	cpse	r3, r1
    5d30:	3a 94       	dec	r3
    5d32:	f1 e0       	ldi	r31, 0x01	; 1
    5d34:	4f 1a       	sub	r4, r31
    5d36:	51 08       	sbc	r5, r1
    5d38:	41 14       	cp	r4, r1
    5d3a:	51 04       	cpc	r5, r1
    5d3c:	79 f7       	brne	.-34     	; 0x5d1c <vfprintf+0x1a6>
    5d3e:	de c0       	rjmp	.+444    	; 0x5efc <vfprintf+0x386>
    5d40:	84 36       	cpi	r24, 0x64	; 100
    5d42:	11 f0       	breq	.+4      	; 0x5d48 <vfprintf+0x1d2>
    5d44:	89 36       	cpi	r24, 0x69	; 105
    5d46:	31 f5       	brne	.+76     	; 0x5d94 <vfprintf+0x21e>
    5d48:	f8 01       	movw	r30, r16
    5d4a:	27 ff       	sbrs	r18, 7
    5d4c:	07 c0       	rjmp	.+14     	; 0x5d5c <vfprintf+0x1e6>
    5d4e:	60 81       	ld	r22, Z
    5d50:	71 81       	ldd	r23, Z+1	; 0x01
    5d52:	82 81       	ldd	r24, Z+2	; 0x02
    5d54:	93 81       	ldd	r25, Z+3	; 0x03
    5d56:	0c 5f       	subi	r16, 0xFC	; 252
    5d58:	1f 4f       	sbci	r17, 0xFF	; 255
    5d5a:	08 c0       	rjmp	.+16     	; 0x5d6c <vfprintf+0x1f6>
    5d5c:	60 81       	ld	r22, Z
    5d5e:	71 81       	ldd	r23, Z+1	; 0x01
    5d60:	88 27       	eor	r24, r24
    5d62:	77 fd       	sbrc	r23, 7
    5d64:	80 95       	com	r24
    5d66:	98 2f       	mov	r25, r24
    5d68:	0e 5f       	subi	r16, 0xFE	; 254
    5d6a:	1f 4f       	sbci	r17, 0xFF	; 255
    5d6c:	2f 76       	andi	r18, 0x6F	; 111
    5d6e:	b2 2e       	mov	r11, r18
    5d70:	97 ff       	sbrs	r25, 7
    5d72:	09 c0       	rjmp	.+18     	; 0x5d86 <vfprintf+0x210>
    5d74:	90 95       	com	r25
    5d76:	80 95       	com	r24
    5d78:	70 95       	com	r23
    5d7a:	61 95       	neg	r22
    5d7c:	7f 4f       	sbci	r23, 0xFF	; 255
    5d7e:	8f 4f       	sbci	r24, 0xFF	; 255
    5d80:	9f 4f       	sbci	r25, 0xFF	; 255
    5d82:	20 68       	ori	r18, 0x80	; 128
    5d84:	b2 2e       	mov	r11, r18
    5d86:	2a e0       	ldi	r18, 0x0A	; 10
    5d88:	30 e0       	ldi	r19, 0x00	; 0
    5d8a:	a4 01       	movw	r20, r8
    5d8c:	24 d1       	rcall	.+584    	; 0x5fd6 <__ultoa_invert>
    5d8e:	a8 2e       	mov	r10, r24
    5d90:	a8 18       	sub	r10, r8
    5d92:	43 c0       	rjmp	.+134    	; 0x5e1a <vfprintf+0x2a4>
    5d94:	85 37       	cpi	r24, 0x75	; 117
    5d96:	29 f4       	brne	.+10     	; 0x5da2 <vfprintf+0x22c>
    5d98:	2f 7e       	andi	r18, 0xEF	; 239
    5d9a:	b2 2e       	mov	r11, r18
    5d9c:	2a e0       	ldi	r18, 0x0A	; 10
    5d9e:	30 e0       	ldi	r19, 0x00	; 0
    5da0:	25 c0       	rjmp	.+74     	; 0x5dec <vfprintf+0x276>
    5da2:	f2 2f       	mov	r31, r18
    5da4:	f9 7f       	andi	r31, 0xF9	; 249
    5da6:	bf 2e       	mov	r11, r31
    5da8:	8f 36       	cpi	r24, 0x6F	; 111
    5daa:	c1 f0       	breq	.+48     	; 0x5ddc <vfprintf+0x266>
    5dac:	18 f4       	brcc	.+6      	; 0x5db4 <vfprintf+0x23e>
    5dae:	88 35       	cpi	r24, 0x58	; 88
    5db0:	79 f0       	breq	.+30     	; 0x5dd0 <vfprintf+0x25a>
    5db2:	ad c0       	rjmp	.+346    	; 0x5f0e <vfprintf+0x398>
    5db4:	80 37       	cpi	r24, 0x70	; 112
    5db6:	19 f0       	breq	.+6      	; 0x5dbe <vfprintf+0x248>
    5db8:	88 37       	cpi	r24, 0x78	; 120
    5dba:	21 f0       	breq	.+8      	; 0x5dc4 <vfprintf+0x24e>
    5dbc:	a8 c0       	rjmp	.+336    	; 0x5f0e <vfprintf+0x398>
    5dbe:	2f 2f       	mov	r18, r31
    5dc0:	20 61       	ori	r18, 0x10	; 16
    5dc2:	b2 2e       	mov	r11, r18
    5dc4:	b4 fe       	sbrs	r11, 4
    5dc6:	0d c0       	rjmp	.+26     	; 0x5de2 <vfprintf+0x26c>
    5dc8:	8b 2d       	mov	r24, r11
    5dca:	84 60       	ori	r24, 0x04	; 4
    5dcc:	b8 2e       	mov	r11, r24
    5dce:	09 c0       	rjmp	.+18     	; 0x5de2 <vfprintf+0x26c>
    5dd0:	24 ff       	sbrs	r18, 4
    5dd2:	0a c0       	rjmp	.+20     	; 0x5de8 <vfprintf+0x272>
    5dd4:	9f 2f       	mov	r25, r31
    5dd6:	96 60       	ori	r25, 0x06	; 6
    5dd8:	b9 2e       	mov	r11, r25
    5dda:	06 c0       	rjmp	.+12     	; 0x5de8 <vfprintf+0x272>
    5ddc:	28 e0       	ldi	r18, 0x08	; 8
    5dde:	30 e0       	ldi	r19, 0x00	; 0
    5de0:	05 c0       	rjmp	.+10     	; 0x5dec <vfprintf+0x276>
    5de2:	20 e1       	ldi	r18, 0x10	; 16
    5de4:	30 e0       	ldi	r19, 0x00	; 0
    5de6:	02 c0       	rjmp	.+4      	; 0x5dec <vfprintf+0x276>
    5de8:	20 e1       	ldi	r18, 0x10	; 16
    5dea:	32 e0       	ldi	r19, 0x02	; 2
    5dec:	f8 01       	movw	r30, r16
    5dee:	b7 fe       	sbrs	r11, 7
    5df0:	07 c0       	rjmp	.+14     	; 0x5e00 <vfprintf+0x28a>
    5df2:	60 81       	ld	r22, Z
    5df4:	71 81       	ldd	r23, Z+1	; 0x01
    5df6:	82 81       	ldd	r24, Z+2	; 0x02
    5df8:	93 81       	ldd	r25, Z+3	; 0x03
    5dfa:	0c 5f       	subi	r16, 0xFC	; 252
    5dfc:	1f 4f       	sbci	r17, 0xFF	; 255
    5dfe:	06 c0       	rjmp	.+12     	; 0x5e0c <vfprintf+0x296>
    5e00:	60 81       	ld	r22, Z
    5e02:	71 81       	ldd	r23, Z+1	; 0x01
    5e04:	80 e0       	ldi	r24, 0x00	; 0
    5e06:	90 e0       	ldi	r25, 0x00	; 0
    5e08:	0e 5f       	subi	r16, 0xFE	; 254
    5e0a:	1f 4f       	sbci	r17, 0xFF	; 255
    5e0c:	a4 01       	movw	r20, r8
    5e0e:	e3 d0       	rcall	.+454    	; 0x5fd6 <__ultoa_invert>
    5e10:	a8 2e       	mov	r10, r24
    5e12:	a8 18       	sub	r10, r8
    5e14:	fb 2d       	mov	r31, r11
    5e16:	ff 77       	andi	r31, 0x7F	; 127
    5e18:	bf 2e       	mov	r11, r31
    5e1a:	b6 fe       	sbrs	r11, 6
    5e1c:	0b c0       	rjmp	.+22     	; 0x5e34 <vfprintf+0x2be>
    5e1e:	2b 2d       	mov	r18, r11
    5e20:	2e 7f       	andi	r18, 0xFE	; 254
    5e22:	a5 14       	cp	r10, r5
    5e24:	50 f4       	brcc	.+20     	; 0x5e3a <vfprintf+0x2c4>
    5e26:	b4 fe       	sbrs	r11, 4
    5e28:	0a c0       	rjmp	.+20     	; 0x5e3e <vfprintf+0x2c8>
    5e2a:	b2 fc       	sbrc	r11, 2
    5e2c:	08 c0       	rjmp	.+16     	; 0x5e3e <vfprintf+0x2c8>
    5e2e:	2b 2d       	mov	r18, r11
    5e30:	2e 7e       	andi	r18, 0xEE	; 238
    5e32:	05 c0       	rjmp	.+10     	; 0x5e3e <vfprintf+0x2c8>
    5e34:	7a 2c       	mov	r7, r10
    5e36:	2b 2d       	mov	r18, r11
    5e38:	03 c0       	rjmp	.+6      	; 0x5e40 <vfprintf+0x2ca>
    5e3a:	7a 2c       	mov	r7, r10
    5e3c:	01 c0       	rjmp	.+2      	; 0x5e40 <vfprintf+0x2ca>
    5e3e:	75 2c       	mov	r7, r5
    5e40:	24 ff       	sbrs	r18, 4
    5e42:	0d c0       	rjmp	.+26     	; 0x5e5e <vfprintf+0x2e8>
    5e44:	fe 01       	movw	r30, r28
    5e46:	ea 0d       	add	r30, r10
    5e48:	f1 1d       	adc	r31, r1
    5e4a:	80 81       	ld	r24, Z
    5e4c:	80 33       	cpi	r24, 0x30	; 48
    5e4e:	11 f4       	brne	.+4      	; 0x5e54 <vfprintf+0x2de>
    5e50:	29 7e       	andi	r18, 0xE9	; 233
    5e52:	09 c0       	rjmp	.+18     	; 0x5e66 <vfprintf+0x2f0>
    5e54:	22 ff       	sbrs	r18, 2
    5e56:	06 c0       	rjmp	.+12     	; 0x5e64 <vfprintf+0x2ee>
    5e58:	73 94       	inc	r7
    5e5a:	73 94       	inc	r7
    5e5c:	04 c0       	rjmp	.+8      	; 0x5e66 <vfprintf+0x2f0>
    5e5e:	82 2f       	mov	r24, r18
    5e60:	86 78       	andi	r24, 0x86	; 134
    5e62:	09 f0       	breq	.+2      	; 0x5e66 <vfprintf+0x2f0>
    5e64:	73 94       	inc	r7
    5e66:	23 fd       	sbrc	r18, 3
    5e68:	12 c0       	rjmp	.+36     	; 0x5e8e <vfprintf+0x318>
    5e6a:	20 ff       	sbrs	r18, 0
    5e6c:	06 c0       	rjmp	.+12     	; 0x5e7a <vfprintf+0x304>
    5e6e:	5a 2c       	mov	r5, r10
    5e70:	73 14       	cp	r7, r3
    5e72:	18 f4       	brcc	.+6      	; 0x5e7a <vfprintf+0x304>
    5e74:	53 0c       	add	r5, r3
    5e76:	57 18       	sub	r5, r7
    5e78:	73 2c       	mov	r7, r3
    5e7a:	73 14       	cp	r7, r3
    5e7c:	60 f4       	brcc	.+24     	; 0x5e96 <vfprintf+0x320>
    5e7e:	b7 01       	movw	r22, r14
    5e80:	80 e2       	ldi	r24, 0x20	; 32
    5e82:	90 e0       	ldi	r25, 0x00	; 0
    5e84:	2c 87       	std	Y+12, r18	; 0x0c
    5e86:	75 d0       	rcall	.+234    	; 0x5f72 <fputc>
    5e88:	73 94       	inc	r7
    5e8a:	2c 85       	ldd	r18, Y+12	; 0x0c
    5e8c:	f6 cf       	rjmp	.-20     	; 0x5e7a <vfprintf+0x304>
    5e8e:	73 14       	cp	r7, r3
    5e90:	10 f4       	brcc	.+4      	; 0x5e96 <vfprintf+0x320>
    5e92:	37 18       	sub	r3, r7
    5e94:	01 c0       	rjmp	.+2      	; 0x5e98 <vfprintf+0x322>
    5e96:	31 2c       	mov	r3, r1
    5e98:	24 ff       	sbrs	r18, 4
    5e9a:	11 c0       	rjmp	.+34     	; 0x5ebe <vfprintf+0x348>
    5e9c:	b7 01       	movw	r22, r14
    5e9e:	80 e3       	ldi	r24, 0x30	; 48
    5ea0:	90 e0       	ldi	r25, 0x00	; 0
    5ea2:	2c 87       	std	Y+12, r18	; 0x0c
    5ea4:	66 d0       	rcall	.+204    	; 0x5f72 <fputc>
    5ea6:	2c 85       	ldd	r18, Y+12	; 0x0c
    5ea8:	22 ff       	sbrs	r18, 2
    5eaa:	16 c0       	rjmp	.+44     	; 0x5ed8 <vfprintf+0x362>
    5eac:	21 ff       	sbrs	r18, 1
    5eae:	03 c0       	rjmp	.+6      	; 0x5eb6 <vfprintf+0x340>
    5eb0:	88 e5       	ldi	r24, 0x58	; 88
    5eb2:	90 e0       	ldi	r25, 0x00	; 0
    5eb4:	02 c0       	rjmp	.+4      	; 0x5eba <vfprintf+0x344>
    5eb6:	88 e7       	ldi	r24, 0x78	; 120
    5eb8:	90 e0       	ldi	r25, 0x00	; 0
    5eba:	b7 01       	movw	r22, r14
    5ebc:	0c c0       	rjmp	.+24     	; 0x5ed6 <vfprintf+0x360>
    5ebe:	82 2f       	mov	r24, r18
    5ec0:	86 78       	andi	r24, 0x86	; 134
    5ec2:	51 f0       	breq	.+20     	; 0x5ed8 <vfprintf+0x362>
    5ec4:	21 fd       	sbrc	r18, 1
    5ec6:	02 c0       	rjmp	.+4      	; 0x5ecc <vfprintf+0x356>
    5ec8:	80 e2       	ldi	r24, 0x20	; 32
    5eca:	01 c0       	rjmp	.+2      	; 0x5ece <vfprintf+0x358>
    5ecc:	8b e2       	ldi	r24, 0x2B	; 43
    5ece:	27 fd       	sbrc	r18, 7
    5ed0:	8d e2       	ldi	r24, 0x2D	; 45
    5ed2:	b7 01       	movw	r22, r14
    5ed4:	90 e0       	ldi	r25, 0x00	; 0
    5ed6:	4d d0       	rcall	.+154    	; 0x5f72 <fputc>
    5ed8:	a5 14       	cp	r10, r5
    5eda:	30 f4       	brcc	.+12     	; 0x5ee8 <vfprintf+0x372>
    5edc:	b7 01       	movw	r22, r14
    5ede:	80 e3       	ldi	r24, 0x30	; 48
    5ee0:	90 e0       	ldi	r25, 0x00	; 0
    5ee2:	47 d0       	rcall	.+142    	; 0x5f72 <fputc>
    5ee4:	5a 94       	dec	r5
    5ee6:	f8 cf       	rjmp	.-16     	; 0x5ed8 <vfprintf+0x362>
    5ee8:	aa 94       	dec	r10
    5eea:	f4 01       	movw	r30, r8
    5eec:	ea 0d       	add	r30, r10
    5eee:	f1 1d       	adc	r31, r1
    5ef0:	80 81       	ld	r24, Z
    5ef2:	b7 01       	movw	r22, r14
    5ef4:	90 e0       	ldi	r25, 0x00	; 0
    5ef6:	3d d0       	rcall	.+122    	; 0x5f72 <fputc>
    5ef8:	a1 10       	cpse	r10, r1
    5efa:	f6 cf       	rjmp	.-20     	; 0x5ee8 <vfprintf+0x372>
    5efc:	33 20       	and	r3, r3
    5efe:	09 f4       	brne	.+2      	; 0x5f02 <vfprintf+0x38c>
    5f00:	5d ce       	rjmp	.-838    	; 0x5bbc <vfprintf+0x46>
    5f02:	b7 01       	movw	r22, r14
    5f04:	80 e2       	ldi	r24, 0x20	; 32
    5f06:	90 e0       	ldi	r25, 0x00	; 0
    5f08:	34 d0       	rcall	.+104    	; 0x5f72 <fputc>
    5f0a:	3a 94       	dec	r3
    5f0c:	f7 cf       	rjmp	.-18     	; 0x5efc <vfprintf+0x386>
    5f0e:	f7 01       	movw	r30, r14
    5f10:	86 81       	ldd	r24, Z+6	; 0x06
    5f12:	97 81       	ldd	r25, Z+7	; 0x07
    5f14:	02 c0       	rjmp	.+4      	; 0x5f1a <vfprintf+0x3a4>
    5f16:	8f ef       	ldi	r24, 0xFF	; 255
    5f18:	9f ef       	ldi	r25, 0xFF	; 255
    5f1a:	2c 96       	adiw	r28, 0x0c	; 12
    5f1c:	cd bf       	out	0x3d, r28	; 61
    5f1e:	de bf       	out	0x3e, r29	; 62
    5f20:	df 91       	pop	r29
    5f22:	cf 91       	pop	r28
    5f24:	1f 91       	pop	r17
    5f26:	0f 91       	pop	r16
    5f28:	ff 90       	pop	r15
    5f2a:	ef 90       	pop	r14
    5f2c:	df 90       	pop	r13
    5f2e:	cf 90       	pop	r12
    5f30:	bf 90       	pop	r11
    5f32:	af 90       	pop	r10
    5f34:	9f 90       	pop	r9
    5f36:	8f 90       	pop	r8
    5f38:	7f 90       	pop	r7
    5f3a:	6f 90       	pop	r6
    5f3c:	5f 90       	pop	r5
    5f3e:	4f 90       	pop	r4
    5f40:	3f 90       	pop	r3
    5f42:	2f 90       	pop	r2
    5f44:	08 95       	ret

00005f46 <strnlen_P>:
    5f46:	fc 01       	movw	r30, r24
    5f48:	05 90       	lpm	r0, Z+
    5f4a:	61 50       	subi	r22, 0x01	; 1
    5f4c:	70 40       	sbci	r23, 0x00	; 0
    5f4e:	01 10       	cpse	r0, r1
    5f50:	d8 f7       	brcc	.-10     	; 0x5f48 <strnlen_P+0x2>
    5f52:	80 95       	com	r24
    5f54:	90 95       	com	r25
    5f56:	8e 0f       	add	r24, r30
    5f58:	9f 1f       	adc	r25, r31
    5f5a:	08 95       	ret

00005f5c <strnlen>:
    5f5c:	fc 01       	movw	r30, r24
    5f5e:	61 50       	subi	r22, 0x01	; 1
    5f60:	70 40       	sbci	r23, 0x00	; 0
    5f62:	01 90       	ld	r0, Z+
    5f64:	01 10       	cpse	r0, r1
    5f66:	d8 f7       	brcc	.-10     	; 0x5f5e <strnlen+0x2>
    5f68:	80 95       	com	r24
    5f6a:	90 95       	com	r25
    5f6c:	8e 0f       	add	r24, r30
    5f6e:	9f 1f       	adc	r25, r31
    5f70:	08 95       	ret

00005f72 <fputc>:
    5f72:	0f 93       	push	r16
    5f74:	1f 93       	push	r17
    5f76:	cf 93       	push	r28
    5f78:	df 93       	push	r29
    5f7a:	18 2f       	mov	r17, r24
    5f7c:	09 2f       	mov	r16, r25
    5f7e:	eb 01       	movw	r28, r22
    5f80:	8b 81       	ldd	r24, Y+3	; 0x03
    5f82:	81 fd       	sbrc	r24, 1
    5f84:	03 c0       	rjmp	.+6      	; 0x5f8c <fputc+0x1a>
    5f86:	8f ef       	ldi	r24, 0xFF	; 255
    5f88:	9f ef       	ldi	r25, 0xFF	; 255
    5f8a:	20 c0       	rjmp	.+64     	; 0x5fcc <fputc+0x5a>
    5f8c:	82 ff       	sbrs	r24, 2
    5f8e:	10 c0       	rjmp	.+32     	; 0x5fb0 <fputc+0x3e>
    5f90:	4e 81       	ldd	r20, Y+6	; 0x06
    5f92:	5f 81       	ldd	r21, Y+7	; 0x07
    5f94:	2c 81       	ldd	r18, Y+4	; 0x04
    5f96:	3d 81       	ldd	r19, Y+5	; 0x05
    5f98:	42 17       	cp	r20, r18
    5f9a:	53 07       	cpc	r21, r19
    5f9c:	7c f4       	brge	.+30     	; 0x5fbc <fputc+0x4a>
    5f9e:	e8 81       	ld	r30, Y
    5fa0:	f9 81       	ldd	r31, Y+1	; 0x01
    5fa2:	9f 01       	movw	r18, r30
    5fa4:	2f 5f       	subi	r18, 0xFF	; 255
    5fa6:	3f 4f       	sbci	r19, 0xFF	; 255
    5fa8:	28 83       	st	Y, r18
    5faa:	39 83       	std	Y+1, r19	; 0x01
    5fac:	10 83       	st	Z, r17
    5fae:	06 c0       	rjmp	.+12     	; 0x5fbc <fputc+0x4a>
    5fb0:	e8 85       	ldd	r30, Y+8	; 0x08
    5fb2:	f9 85       	ldd	r31, Y+9	; 0x09
    5fb4:	81 2f       	mov	r24, r17
    5fb6:	19 95       	eicall
    5fb8:	89 2b       	or	r24, r25
    5fba:	29 f7       	brne	.-54     	; 0x5f86 <fputc+0x14>
    5fbc:	2e 81       	ldd	r18, Y+6	; 0x06
    5fbe:	3f 81       	ldd	r19, Y+7	; 0x07
    5fc0:	2f 5f       	subi	r18, 0xFF	; 255
    5fc2:	3f 4f       	sbci	r19, 0xFF	; 255
    5fc4:	2e 83       	std	Y+6, r18	; 0x06
    5fc6:	3f 83       	std	Y+7, r19	; 0x07
    5fc8:	81 2f       	mov	r24, r17
    5fca:	90 2f       	mov	r25, r16
    5fcc:	df 91       	pop	r29
    5fce:	cf 91       	pop	r28
    5fd0:	1f 91       	pop	r17
    5fd2:	0f 91       	pop	r16
    5fd4:	08 95       	ret

00005fd6 <__ultoa_invert>:
    5fd6:	fa 01       	movw	r30, r20
    5fd8:	aa 27       	eor	r26, r26
    5fda:	28 30       	cpi	r18, 0x08	; 8
    5fdc:	51 f1       	breq	.+84     	; 0x6032 <__ultoa_invert+0x5c>
    5fde:	20 31       	cpi	r18, 0x10	; 16
    5fe0:	81 f1       	breq	.+96     	; 0x6042 <__ultoa_invert+0x6c>
    5fe2:	e8 94       	clt
    5fe4:	6f 93       	push	r22
    5fe6:	6e 7f       	andi	r22, 0xFE	; 254
    5fe8:	6e 5f       	subi	r22, 0xFE	; 254
    5fea:	7f 4f       	sbci	r23, 0xFF	; 255
    5fec:	8f 4f       	sbci	r24, 0xFF	; 255
    5fee:	9f 4f       	sbci	r25, 0xFF	; 255
    5ff0:	af 4f       	sbci	r26, 0xFF	; 255
    5ff2:	b1 e0       	ldi	r27, 0x01	; 1
    5ff4:	3e d0       	rcall	.+124    	; 0x6072 <__ultoa_invert+0x9c>
    5ff6:	b4 e0       	ldi	r27, 0x04	; 4
    5ff8:	3c d0       	rcall	.+120    	; 0x6072 <__ultoa_invert+0x9c>
    5ffa:	67 0f       	add	r22, r23
    5ffc:	78 1f       	adc	r23, r24
    5ffe:	89 1f       	adc	r24, r25
    6000:	9a 1f       	adc	r25, r26
    6002:	a1 1d       	adc	r26, r1
    6004:	68 0f       	add	r22, r24
    6006:	79 1f       	adc	r23, r25
    6008:	8a 1f       	adc	r24, r26
    600a:	91 1d       	adc	r25, r1
    600c:	a1 1d       	adc	r26, r1
    600e:	6a 0f       	add	r22, r26
    6010:	71 1d       	adc	r23, r1
    6012:	81 1d       	adc	r24, r1
    6014:	91 1d       	adc	r25, r1
    6016:	a1 1d       	adc	r26, r1
    6018:	20 d0       	rcall	.+64     	; 0x605a <__ultoa_invert+0x84>
    601a:	09 f4       	brne	.+2      	; 0x601e <__ultoa_invert+0x48>
    601c:	68 94       	set
    601e:	3f 91       	pop	r19
    6020:	2a e0       	ldi	r18, 0x0A	; 10
    6022:	26 9f       	mul	r18, r22
    6024:	11 24       	eor	r1, r1
    6026:	30 19       	sub	r19, r0
    6028:	30 5d       	subi	r19, 0xD0	; 208
    602a:	31 93       	st	Z+, r19
    602c:	de f6       	brtc	.-74     	; 0x5fe4 <__ultoa_invert+0xe>
    602e:	cf 01       	movw	r24, r30
    6030:	08 95       	ret
    6032:	46 2f       	mov	r20, r22
    6034:	47 70       	andi	r20, 0x07	; 7
    6036:	40 5d       	subi	r20, 0xD0	; 208
    6038:	41 93       	st	Z+, r20
    603a:	b3 e0       	ldi	r27, 0x03	; 3
    603c:	0f d0       	rcall	.+30     	; 0x605c <__ultoa_invert+0x86>
    603e:	c9 f7       	brne	.-14     	; 0x6032 <__ultoa_invert+0x5c>
    6040:	f6 cf       	rjmp	.-20     	; 0x602e <__ultoa_invert+0x58>
    6042:	46 2f       	mov	r20, r22
    6044:	4f 70       	andi	r20, 0x0F	; 15
    6046:	40 5d       	subi	r20, 0xD0	; 208
    6048:	4a 33       	cpi	r20, 0x3A	; 58
    604a:	18 f0       	brcs	.+6      	; 0x6052 <__ultoa_invert+0x7c>
    604c:	49 5d       	subi	r20, 0xD9	; 217
    604e:	31 fd       	sbrc	r19, 1
    6050:	40 52       	subi	r20, 0x20	; 32
    6052:	41 93       	st	Z+, r20
    6054:	02 d0       	rcall	.+4      	; 0x605a <__ultoa_invert+0x84>
    6056:	a9 f7       	brne	.-22     	; 0x6042 <__ultoa_invert+0x6c>
    6058:	ea cf       	rjmp	.-44     	; 0x602e <__ultoa_invert+0x58>
    605a:	b4 e0       	ldi	r27, 0x04	; 4
    605c:	a6 95       	lsr	r26
    605e:	97 95       	ror	r25
    6060:	87 95       	ror	r24
    6062:	77 95       	ror	r23
    6064:	67 95       	ror	r22
    6066:	ba 95       	dec	r27
    6068:	c9 f7       	brne	.-14     	; 0x605c <__ultoa_invert+0x86>
    606a:	00 97       	sbiw	r24, 0x00	; 0
    606c:	61 05       	cpc	r22, r1
    606e:	71 05       	cpc	r23, r1
    6070:	08 95       	ret
    6072:	9b 01       	movw	r18, r22
    6074:	ac 01       	movw	r20, r24
    6076:	0a 2e       	mov	r0, r26
    6078:	06 94       	lsr	r0
    607a:	57 95       	ror	r21
    607c:	47 95       	ror	r20
    607e:	37 95       	ror	r19
    6080:	27 95       	ror	r18
    6082:	ba 95       	dec	r27
    6084:	c9 f7       	brne	.-14     	; 0x6078 <__ultoa_invert+0xa2>
    6086:	62 0f       	add	r22, r18
    6088:	73 1f       	adc	r23, r19
    608a:	84 1f       	adc	r24, r20
    608c:	95 1f       	adc	r25, r21
    608e:	a0 1d       	adc	r26, r0
    6090:	08 95       	ret

00006092 <_exit>:
    6092:	f8 94       	cli

00006094 <__stop_program>:
    6094:	ff cf       	rjmp	.-2      	; 0x6094 <__stop_program>
