
base1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005d22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00802000  00005d22  00005db6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000408  00802052  00802052  00005e08  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005e08  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007d0  00000000  00000000  00005e68  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000c494  00000000  00000000  00006638  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002104  00000000  00000000  00012acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000085df  00000000  00000000  00014bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000020ec  00000000  00000000  0001d1b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000265e2  00000000  00000000  0001f29c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006e3b  00000000  00000000  0004587e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006c8  00000000  00000000  0004c6c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000ad90  00000000  00000000  0004cd88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	02 c1       	rjmp	.+516    	; 0x206 <__ctors_end>
       2:	00 00       	nop
       4:	26 c1       	rjmp	.+588    	; 0x252 <__bad_interrupt>
       6:	00 00       	nop
       8:	0c 94 61 17 	jmp	0x2ec2	; 0x2ec2 <__vector_2>
       c:	22 c1       	rjmp	.+580    	; 0x252 <__bad_interrupt>
       e:	00 00       	nop
      10:	20 c1       	rjmp	.+576    	; 0x252 <__bad_interrupt>
      12:	00 00       	nop
      14:	1e c1       	rjmp	.+572    	; 0x252 <__bad_interrupt>
      16:	00 00       	nop
      18:	1c c1       	rjmp	.+568    	; 0x252 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	1a c1       	rjmp	.+564    	; 0x252 <__bad_interrupt>
      1e:	00 00       	nop
      20:	18 c1       	rjmp	.+560    	; 0x252 <__bad_interrupt>
      22:	00 00       	nop
      24:	16 c1       	rjmp	.+556    	; 0x252 <__bad_interrupt>
      26:	00 00       	nop
      28:	14 c1       	rjmp	.+552    	; 0x252 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	12 c1       	rjmp	.+548    	; 0x252 <__bad_interrupt>
      2e:	00 00       	nop
      30:	10 c1       	rjmp	.+544    	; 0x252 <__bad_interrupt>
      32:	00 00       	nop
      34:	0e c1       	rjmp	.+540    	; 0x252 <__bad_interrupt>
      36:	00 00       	nop
      38:	4d c5       	rjmp	.+2714   	; 0xad4 <__vector_14>
      3a:	00 00       	nop
      3c:	83 c5       	rjmp	.+2822   	; 0xb44 <__vector_15>
      3e:	00 00       	nop
      40:	b9 c5       	rjmp	.+2930   	; 0xbb4 <__vector_16>
      42:	00 00       	nop
      44:	ef c5       	rjmp	.+3038   	; 0xc24 <__vector_17>
      46:	00 00       	nop
      48:	25 c6       	rjmp	.+3146   	; 0xc94 <__vector_18>
      4a:	00 00       	nop
      4c:	5b c6       	rjmp	.+3254   	; 0xd04 <__vector_19>
      4e:	00 00       	nop
      50:	91 c6       	rjmp	.+3362   	; 0xd74 <__vector_20>
      52:	00 00       	nop
      54:	c7 c6       	rjmp	.+3470   	; 0xde4 <__vector_21>
      56:	00 00       	nop
      58:	fd c6       	rjmp	.+3578   	; 0xe54 <__vector_22>
      5a:	00 00       	nop
      5c:	33 c7       	rjmp	.+3686   	; 0xec4 <__vector_23>
      5e:	00 00       	nop
      60:	f8 c0       	rjmp	.+496    	; 0x252 <__bad_interrupt>
      62:	00 00       	nop
      64:	f6 c0       	rjmp	.+492    	; 0x252 <__bad_interrupt>
      66:	00 00       	nop
      68:	f4 c0       	rjmp	.+488    	; 0x252 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	f2 c0       	rjmp	.+484    	; 0x252 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f0 c0       	rjmp	.+480    	; 0x252 <__bad_interrupt>
      72:	00 00       	nop
      74:	ee c0       	rjmp	.+476    	; 0x252 <__bad_interrupt>
      76:	00 00       	nop
      78:	ec c0       	rjmp	.+472    	; 0x252 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	ea c0       	rjmp	.+468    	; 0x252 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e8 c0       	rjmp	.+464    	; 0x252 <__bad_interrupt>
      82:	00 00       	nop
      84:	e6 c0       	rjmp	.+460    	; 0x252 <__bad_interrupt>
      86:	00 00       	nop
      88:	e4 c0       	rjmp	.+456    	; 0x252 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	e2 c0       	rjmp	.+452    	; 0x252 <__bad_interrupt>
      8e:	00 00       	nop
      90:	e0 c0       	rjmp	.+448    	; 0x252 <__bad_interrupt>
      92:	00 00       	nop
      94:	de c0       	rjmp	.+444    	; 0x252 <__bad_interrupt>
      96:	00 00       	nop
      98:	dc c0       	rjmp	.+440    	; 0x252 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	da c0       	rjmp	.+436    	; 0x252 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	d8 c0       	rjmp	.+432    	; 0x252 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d6 c0       	rjmp	.+428    	; 0x252 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d4 c0       	rjmp	.+424    	; 0x252 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0c 94 04 11 	jmp	0x2208	; 0x2208 <__vector_43>
      b0:	d0 c0       	rjmp	.+416    	; 0x252 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	ce c0       	rjmp	.+412    	; 0x252 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	cc c0       	rjmp	.+408    	; 0x252 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__vector_47>
      c0:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__vector_48>
      c4:	0c 94 02 0a 	jmp	0x1404	; 0x1404 <__vector_49>
      c8:	0c 94 3a 0a 	jmp	0x1474	; 0x1474 <__vector_50>
      cc:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__vector_51>
      d0:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__vector_52>
      d4:	0c 94 e2 0a 	jmp	0x15c4	; 0x15c4 <__vector_53>
      d8:	0c 94 1a 0b 	jmp	0x1634	; 0x1634 <__vector_54>
      dc:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__vector_55>
      e0:	0c 94 8a 0b 	jmp	0x1714	; 0x1714 <__vector_56>
      e4:	b6 c0       	rjmp	.+364    	; 0x252 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	b4 c0       	rjmp	.+360    	; 0x252 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	b2 c0       	rjmp	.+356    	; 0x252 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	b0 c0       	rjmp	.+352    	; 0x252 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	ae c0       	rjmp	.+348    	; 0x252 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	ac c0       	rjmp	.+344    	; 0x252 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	aa c0       	rjmp	.+340    	; 0x252 <__bad_interrupt>
      fe:	00 00       	nop
     100:	a8 c0       	rjmp	.+336    	; 0x252 <__bad_interrupt>
     102:	00 00       	nop
     104:	a6 c0       	rjmp	.+332    	; 0x252 <__bad_interrupt>
     106:	00 00       	nop
     108:	a4 c0       	rjmp	.+328    	; 0x252 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	a2 c0       	rjmp	.+324    	; 0x252 <__bad_interrupt>
     10e:	00 00       	nop
     110:	a0 c0       	rjmp	.+320    	; 0x252 <__bad_interrupt>
     112:	00 00       	nop
     114:	9e c0       	rjmp	.+316    	; 0x252 <__bad_interrupt>
     116:	00 00       	nop
     118:	9c c0       	rjmp	.+312    	; 0x252 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	9a c0       	rjmp	.+308    	; 0x252 <__bad_interrupt>
     11e:	00 00       	nop
     120:	98 c0       	rjmp	.+304    	; 0x252 <__bad_interrupt>
     122:	00 00       	nop
     124:	96 c0       	rjmp	.+300    	; 0x252 <__bad_interrupt>
     126:	00 00       	nop
     128:	94 c0       	rjmp	.+296    	; 0x252 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	92 c0       	rjmp	.+292    	; 0x252 <__bad_interrupt>
     12e:	00 00       	nop
     130:	90 c0       	rjmp	.+288    	; 0x252 <__bad_interrupt>
     132:	00 00       	nop
     134:	0c 94 71 15 	jmp	0x2ae2	; 0x2ae2 <__vector_77>
     138:	fd c6       	rjmp	.+3578   	; 0xf34 <__vector_78>
     13a:	00 00       	nop
     13c:	33 c7       	rjmp	.+3686   	; 0xfa4 <__vector_79>
     13e:	00 00       	nop
     140:	69 c7       	rjmp	.+3794   	; 0x1014 <__vector_80>
     142:	00 00       	nop
     144:	9f c7       	rjmp	.+3902   	; 0x1084 <__vector_81>
     146:	00 00       	nop
     148:	d5 c7       	rjmp	.+4010   	; 0x10f4 <__vector_82>
     14a:	00 00       	nop
     14c:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__vector_83>
     150:	0c 94 ea 08 	jmp	0x11d4	; 0x11d4 <__vector_84>
     154:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__vector_85>
     158:	0c 94 5a 09 	jmp	0x12b4	; 0x12b4 <__vector_86>
     15c:	7a c0       	rjmp	.+244    	; 0x252 <__bad_interrupt>
     15e:	00 00       	nop
     160:	78 c0       	rjmp	.+240    	; 0x252 <__bad_interrupt>
     162:	00 00       	nop
     164:	76 c0       	rjmp	.+236    	; 0x252 <__bad_interrupt>
     166:	00 00       	nop
     168:	74 c0       	rjmp	.+232    	; 0x252 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	72 c0       	rjmp	.+228    	; 0x252 <__bad_interrupt>
     16e:	00 00       	nop
     170:	70 c0       	rjmp	.+224    	; 0x252 <__bad_interrupt>
     172:	00 00       	nop
     174:	6e c0       	rjmp	.+220    	; 0x252 <__bad_interrupt>
     176:	00 00       	nop
     178:	0c 94 0d 17 	jmp	0x2e1a	; 0x2e1a <__vector_94>
     17c:	0c 94 8b 17 	jmp	0x2f16	; 0x2f16 <__vector_95>
     180:	0c 94 37 17 	jmp	0x2e6e	; 0x2e6e <__vector_96>
     184:	0c 94 b5 17 	jmp	0x2f6a	; 0x2f6a <__vector_97>
     188:	64 c0       	rjmp	.+200    	; 0x252 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	62 c0       	rjmp	.+196    	; 0x252 <__bad_interrupt>
     18e:	00 00       	nop
     190:	0c 94 c4 17 	jmp	0x2f88	; 0x2f88 <__vector_100>
     194:	5e c0       	rjmp	.+188    	; 0x252 <__bad_interrupt>
     196:	00 00       	nop
     198:	5c c0       	rjmp	.+184    	; 0x252 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	5a c0       	rjmp	.+180    	; 0x252 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	0c 94 fe 16 	jmp	0x2dfc	; 0x2dfc <__vector_104>
     1a4:	56 c0       	rjmp	.+172    	; 0x252 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	54 c0       	rjmp	.+168    	; 0x252 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	52 c0       	rjmp	.+164    	; 0x252 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__vector_108>
     1b4:	0c 94 fa 0b 	jmp	0x17f4	; 0x17f4 <__vector_109>
     1b8:	0c 94 32 0c 	jmp	0x1864	; 0x1864 <__vector_110>
     1bc:	0c 94 6a 0c 	jmp	0x18d4	; 0x18d4 <__vector_111>
     1c0:	0c 94 a2 0c 	jmp	0x1944	; 0x1944 <__vector_112>
     1c4:	0c 94 da 0c 	jmp	0x19b4	; 0x19b4 <__vector_113>
     1c8:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <__vector_114>
     1cc:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <__vector_115>
     1d0:	0c 94 82 0d 	jmp	0x1b04	; 0x1b04 <__vector_116>
     1d4:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__vector_117>
     1d8:	3c c0       	rjmp	.+120    	; 0x252 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	0c 94 98 27 	jmp	0x4f30	; 0x4f30 <__vector_119>
     1e0:	38 c0       	rjmp	.+112    	; 0x252 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	36 c0       	rjmp	.+108    	; 0x252 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	0c 94 6a 28 	jmp	0x50d4	; 0x50d4 <__vector_122>
     1ec:	32 c0       	rjmp	.+100    	; 0x252 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	30 c0       	rjmp	.+96     	; 0x252 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	b6 27       	eor	r27, r22
     1f6:	c4 27       	eor	r28, r20
     1f8:	d1 27       	eor	r29, r17
     1fa:	e1 27       	eor	r30, r17
     1fc:	ea 27       	eor	r30, r26
     1fe:	f7 27       	eor	r31, r23
     200:	07 28       	or	r0, r7
     202:	14 28       	or	r1, r4
     204:	24 28       	or	r2, r4

00000206 <__ctors_end>:
     206:	11 24       	eor	r1, r1
     208:	1f be       	out	0x3f, r1	; 63
     20a:	cf ef       	ldi	r28, 0xFF	; 255
     20c:	cd bf       	out	0x3d, r28	; 61
     20e:	df e3       	ldi	r29, 0x3F	; 63
     210:	de bf       	out	0x3e, r29	; 62
     212:	00 e0       	ldi	r16, 0x00	; 0
     214:	0c bf       	out	0x3c, r16	; 60
     216:	18 be       	out	0x38, r1	; 56
     218:	19 be       	out	0x39, r1	; 57
     21a:	1a be       	out	0x3a, r1	; 58
     21c:	1b be       	out	0x3b, r1	; 59

0000021e <__do_copy_data>:
     21e:	10 e2       	ldi	r17, 0x20	; 32
     220:	a0 e0       	ldi	r26, 0x00	; 0
     222:	b0 e2       	ldi	r27, 0x20	; 32
     224:	e2 e2       	ldi	r30, 0x22	; 34
     226:	fd e5       	ldi	r31, 0x5D	; 93
     228:	00 e0       	ldi	r16, 0x00	; 0
     22a:	0b bf       	out	0x3b, r16	; 59
     22c:	02 c0       	rjmp	.+4      	; 0x232 <__do_copy_data+0x14>
     22e:	07 90       	elpm	r0, Z+
     230:	0d 92       	st	X+, r0
     232:	a2 35       	cpi	r26, 0x52	; 82
     234:	b1 07       	cpc	r27, r17
     236:	d9 f7       	brne	.-10     	; 0x22e <__do_copy_data+0x10>
     238:	1b be       	out	0x3b, r1	; 59

0000023a <__do_clear_bss>:
     23a:	24 e2       	ldi	r18, 0x24	; 36
     23c:	a2 e5       	ldi	r26, 0x52	; 82
     23e:	b0 e2       	ldi	r27, 0x20	; 32
     240:	01 c0       	rjmp	.+2      	; 0x244 <.do_clear_bss_start>

00000242 <.do_clear_bss_loop>:
     242:	1d 92       	st	X+, r1

00000244 <.do_clear_bss_start>:
     244:	aa 35       	cpi	r26, 0x5A	; 90
     246:	b2 07       	cpc	r27, r18
     248:	e1 f7       	brne	.-8      	; 0x242 <.do_clear_bss_loop>
     24a:	0e 94 64 18 	call	0x30c8	; 0x30c8 <main>
     24e:	0c 94 8f 2e 	jmp	0x5d1e	; 0x5d1e <_exit>

00000252 <__bad_interrupt>:
     252:	d6 ce       	rjmp	.-596    	; 0x0 <__vectors>

00000254 <LCDDataLines>:
}
void LCDStringFlash(char *data)	
{ 
 char k;
 while (k=*data++) LCDSendData(k);
}
     254:	e4 e2       	ldi	r30, 0x24	; 36
     256:	f6 e0       	ldi	r31, 0x06	; 6
     258:	90 81       	ld	r25, Z
     25a:	a8 2f       	mov	r26, r24
     25c:	a1 70       	andi	r26, 0x01	; 1
     25e:	b0 e0       	ldi	r27, 0x00	; 0
     260:	aa 0f       	add	r26, r26
     262:	bb 1f       	adc	r27, r27
     264:	aa 0f       	add	r26, r26
     266:	bb 1f       	adc	r27, r27
     268:	9b 7f       	andi	r25, 0xFB	; 251
     26a:	a9 2b       	or	r26, r25
     26c:	a0 83       	st	Z, r26
     26e:	90 81       	ld	r25, Z
     270:	81 fb       	bst	r24, 1
     272:	66 27       	eor	r22, r22
     274:	60 f9       	bld	r22, 0
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	66 0f       	add	r22, r22
     27a:	77 1f       	adc	r23, r23
     27c:	62 95       	swap	r22
     27e:	72 95       	swap	r23
     280:	70 7f       	andi	r23, 0xF0	; 240
     282:	76 27       	eor	r23, r22
     284:	60 7f       	andi	r22, 0xF0	; 240
     286:	76 27       	eor	r23, r22
     288:	9f 7d       	andi	r25, 0xDF	; 223
     28a:	69 2b       	or	r22, r25
     28c:	60 83       	st	Z, r22
     28e:	90 81       	ld	r25, Z
     290:	82 fb       	bst	r24, 2
     292:	44 27       	eor	r20, r20
     294:	40 f9       	bld	r20, 0
     296:	50 e0       	ldi	r21, 0x00	; 0
     298:	42 95       	swap	r20
     29a:	52 95       	swap	r21
     29c:	50 7f       	andi	r21, 0xF0	; 240
     29e:	54 27       	eor	r21, r20
     2a0:	40 7f       	andi	r20, 0xF0	; 240
     2a2:	54 27       	eor	r21, r20
     2a4:	9f 7e       	andi	r25, 0xEF	; 239
     2a6:	49 2b       	or	r20, r25
     2a8:	40 83       	st	Z, r20
     2aa:	e4 e4       	ldi	r30, 0x44	; 68
     2ac:	f6 e0       	ldi	r31, 0x06	; 6
     2ae:	90 81       	ld	r25, Z
     2b0:	83 fb       	bst	r24, 3
     2b2:	22 27       	eor	r18, r18
     2b4:	20 f9       	bld	r18, 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	22 0f       	add	r18, r18
     2ba:	33 1f       	adc	r19, r19
     2bc:	22 95       	swap	r18
     2be:	32 95       	swap	r19
     2c0:	30 7f       	andi	r19, 0xF0	; 240
     2c2:	32 27       	eor	r19, r18
     2c4:	20 7f       	andi	r18, 0xF0	; 240
     2c6:	32 27       	eor	r19, r18
     2c8:	89 2f       	mov	r24, r25
     2ca:	8f 7d       	andi	r24, 0xDF	; 223
     2cc:	28 2b       	or	r18, r24
     2ce:	20 83       	st	Z, r18
     2d0:	08 95       	ret

000002d2 <LCDDirOut>:
     2d2:	e0 e2       	ldi	r30, 0x20	; 32
     2d4:	f6 e0       	ldi	r31, 0x06	; 6
     2d6:	80 81       	ld	r24, Z
     2d8:	84 60       	ori	r24, 0x04	; 4
     2da:	80 83       	st	Z, r24
     2dc:	80 81       	ld	r24, Z
     2de:	80 62       	ori	r24, 0x20	; 32
     2e0:	80 83       	st	Z, r24
     2e2:	80 81       	ld	r24, Z
     2e4:	80 61       	ori	r24, 0x10	; 16
     2e6:	80 83       	st	Z, r24
     2e8:	e0 e4       	ldi	r30, 0x40	; 64
     2ea:	f6 e0       	ldi	r31, 0x06	; 6
     2ec:	80 81       	ld	r24, Z
     2ee:	80 62       	ori	r24, 0x20	; 32
     2f0:	80 83       	st	Z, r24
     2f2:	08 95       	ret

000002f4 <LCDDirIn>:
     2f4:	e0 e2       	ldi	r30, 0x20	; 32
     2f6:	f6 e0       	ldi	r31, 0x06	; 6
     2f8:	80 81       	ld	r24, Z
     2fa:	8b 7f       	andi	r24, 0xFB	; 251
     2fc:	80 83       	st	Z, r24
     2fe:	80 81       	ld	r24, Z
     300:	8f 7d       	andi	r24, 0xDF	; 223
     302:	80 83       	st	Z, r24
     304:	80 81       	ld	r24, Z
     306:	8f 7e       	andi	r24, 0xEF	; 239
     308:	80 83       	st	Z, r24
     30a:	e0 e4       	ldi	r30, 0x40	; 64
     30c:	f6 e0       	ldi	r31, 0x06	; 6
     30e:	80 81       	ld	r24, Z
     310:	8f 7d       	andi	r24, 0xDF	; 223
     312:	80 83       	st	Z, r24
     314:	08 95       	ret

00000316 <LCDSendData>:
     316:	cf 93       	push	r28
     318:	c8 2f       	mov	r28, r24
     31a:	8f e1       	ldi	r24, 0x1F	; 31
     31c:	93 e0       	ldi	r25, 0x03	; 3
     31e:	01 97       	sbiw	r24, 0x01	; 1
     320:	f1 f7       	brne	.-4      	; 0x31e <LCDSendData+0x8>
     322:	00 c0       	rjmp	.+0      	; 0x324 <LCDSendData+0xe>
     324:	00 00       	nop
     326:	8c 2f       	mov	r24, r28
     328:	82 95       	swap	r24
     32a:	8f 70       	andi	r24, 0x0F	; 15
     32c:	93 df       	rcall	.-218    	; 0x254 <LCDDataLines>
     32e:	e4 e2       	ldi	r30, 0x24	; 36
     330:	f6 e0       	ldi	r31, 0x06	; 6
     332:	80 81       	ld	r24, Z
     334:	82 60       	ori	r24, 0x02	; 2
     336:	80 83       	st	Z, r24
     338:	80 81       	ld	r24, Z
     33a:	88 60       	ori	r24, 0x08	; 8
     33c:	80 83       	st	Z, r24
     33e:	95 ed       	ldi	r25, 0xD5	; 213
     340:	9a 95       	dec	r25
     342:	f1 f7       	brne	.-4      	; 0x340 <LCDSendData+0x2a>
     344:	00 00       	nop
     346:	80 81       	ld	r24, Z
     348:	87 7f       	andi	r24, 0xF7	; 247
     34a:	80 83       	st	Z, r24
     34c:	85 ed       	ldi	r24, 0xD5	; 213
     34e:	8a 95       	dec	r24
     350:	f1 f7       	brne	.-4      	; 0x34e <LCDSendData+0x38>
     352:	00 00       	nop
     354:	8c 2f       	mov	r24, r28
     356:	7e df       	rcall	.-260    	; 0x254 <LCDDataLines>
     358:	e4 e2       	ldi	r30, 0x24	; 36
     35a:	f6 e0       	ldi	r31, 0x06	; 6
     35c:	80 81       	ld	r24, Z
     35e:	88 60       	ori	r24, 0x08	; 8
     360:	80 83       	st	Z, r24
     362:	95 ed       	ldi	r25, 0xD5	; 213
     364:	9a 95       	dec	r25
     366:	f1 f7       	brne	.-4      	; 0x364 <LCDSendData+0x4e>
     368:	00 00       	nop
     36a:	80 81       	ld	r24, Z
     36c:	87 7f       	andi	r24, 0xF7	; 247
     36e:	80 83       	st	Z, r24
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <LCDSendCommand>:
     374:	cf 93       	push	r28
     376:	c8 2f       	mov	r28, r24
     378:	8f ef       	ldi	r24, 0xFF	; 255
     37a:	8c 0f       	add	r24, r28
     37c:	82 30       	cpi	r24, 0x02	; 2
     37e:	38 f4       	brcc	.+14     	; 0x38e <LCDSendCommand+0x1a>
     380:	8f e3       	ldi	r24, 0x3F	; 63
     382:	9c e9       	ldi	r25, 0x9C	; 156
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	f1 f7       	brne	.-4      	; 0x384 <LCDSendCommand+0x10>
     388:	00 c0       	rjmp	.+0      	; 0x38a <LCDSendCommand+0x16>
     38a:	00 00       	nop
     38c:	06 c0       	rjmp	.+12     	; 0x39a <LCDSendCommand+0x26>
     38e:	8f e3       	ldi	r24, 0x3F	; 63
     390:	9f e1       	ldi	r25, 0x1F	; 31
     392:	01 97       	sbiw	r24, 0x01	; 1
     394:	f1 f7       	brne	.-4      	; 0x392 <LCDSendCommand+0x1e>
     396:	00 c0       	rjmp	.+0      	; 0x398 <LCDSendCommand+0x24>
     398:	00 00       	nop
     39a:	8c 2f       	mov	r24, r28
     39c:	82 95       	swap	r24
     39e:	8f 70       	andi	r24, 0x0F	; 15
     3a0:	59 df       	rcall	.-334    	; 0x254 <LCDDataLines>
     3a2:	e4 e2       	ldi	r30, 0x24	; 36
     3a4:	f6 e0       	ldi	r31, 0x06	; 6
     3a6:	80 81       	ld	r24, Z
     3a8:	8d 7f       	andi	r24, 0xFD	; 253
     3aa:	80 83       	st	Z, r24
     3ac:	80 81       	ld	r24, Z
     3ae:	88 60       	ori	r24, 0x08	; 8
     3b0:	80 83       	st	Z, r24
     3b2:	95 ed       	ldi	r25, 0xD5	; 213
     3b4:	9a 95       	dec	r25
     3b6:	f1 f7       	brne	.-4      	; 0x3b4 <LCDSendCommand+0x40>
     3b8:	00 00       	nop
     3ba:	80 81       	ld	r24, Z
     3bc:	87 7f       	andi	r24, 0xF7	; 247
     3be:	80 83       	st	Z, r24
     3c0:	85 ed       	ldi	r24, 0xD5	; 213
     3c2:	8a 95       	dec	r24
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <LCDSendCommand+0x4e>
     3c6:	00 00       	nop
     3c8:	8c 2f       	mov	r24, r28
     3ca:	44 df       	rcall	.-376    	; 0x254 <LCDDataLines>
     3cc:	e4 e2       	ldi	r30, 0x24	; 36
     3ce:	f6 e0       	ldi	r31, 0x06	; 6
     3d0:	80 81       	ld	r24, Z
     3d2:	88 60       	ori	r24, 0x08	; 8
     3d4:	80 83       	st	Z, r24
     3d6:	95 ed       	ldi	r25, 0xD5	; 213
     3d8:	9a 95       	dec	r25
     3da:	f1 f7       	brne	.-4      	; 0x3d8 <LCDSendCommand+0x64>
     3dc:	00 00       	nop
     3de:	80 81       	ld	r24, Z
     3e0:	87 7f       	andi	r24, 0xF7	; 247
     3e2:	80 83       	st	Z, r24
     3e4:	cf 91       	pop	r28
     3e6:	08 95       	ret

000003e8 <LCDInit>:
     3e8:	e4 e2       	ldi	r30, 0x24	; 36
     3ea:	f6 e0       	ldi	r31, 0x06	; 6
     3ec:	80 81       	ld	r24, Z
     3ee:	87 7f       	andi	r24, 0xF7	; 247
     3f0:	80 83       	st	Z, r24
     3f2:	80 df       	rcall	.-256    	; 0x2f4 <LCDDirIn>
     3f4:	2f ef       	ldi	r18, 0xFF	; 255
     3f6:	87 ee       	ldi	r24, 0xE7	; 231
     3f8:	93 e0       	ldi	r25, 0x03	; 3
     3fa:	21 50       	subi	r18, 0x01	; 1
     3fc:	80 40       	sbci	r24, 0x00	; 0
     3fe:	90 40       	sbci	r25, 0x00	; 0
     400:	e1 f7       	brne	.-8      	; 0x3fa <LCDInit+0x12>
     402:	00 c0       	rjmp	.+0      	; 0x404 <LCDInit+0x1c>
     404:	00 00       	nop
     406:	65 df       	rcall	.-310    	; 0x2d2 <LCDDirOut>
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	24 df       	rcall	.-440    	; 0x254 <LCDDataLines>
     40c:	e0 e2       	ldi	r30, 0x20	; 32
     40e:	f6 e0       	ldi	r31, 0x06	; 6
     410:	80 81       	ld	r24, Z
     412:	82 60       	ori	r24, 0x02	; 2
     414:	80 83       	st	Z, r24
     416:	80 81       	ld	r24, Z
     418:	81 60       	ori	r24, 0x01	; 1
     41a:	80 83       	st	Z, r24
     41c:	a4 e2       	ldi	r26, 0x24	; 36
     41e:	b6 e0       	ldi	r27, 0x06	; 6
     420:	8c 91       	ld	r24, X
     422:	8d 7f       	andi	r24, 0xFD	; 253
     424:	8c 93       	st	X, r24
     426:	8c 91       	ld	r24, X
     428:	8e 7f       	andi	r24, 0xFE	; 254
     42a:	8c 93       	st	X, r24
     42c:	80 81       	ld	r24, Z
     42e:	88 60       	ori	r24, 0x08	; 8
     430:	80 83       	st	Z, r24
     432:	25 ed       	ldi	r18, 0xD5	; 213
     434:	2a 95       	dec	r18
     436:	f1 f7       	brne	.-4      	; 0x434 <LCDInit+0x4c>
     438:	00 00       	nop
     43a:	e4 e2       	ldi	r30, 0x24	; 36
     43c:	f6 e0       	ldi	r31, 0x06	; 6
     43e:	80 81       	ld	r24, Z
     440:	88 60       	ori	r24, 0x08	; 8
     442:	80 83       	st	Z, r24
     444:	85 ed       	ldi	r24, 0xD5	; 213
     446:	8a 95       	dec	r24
     448:	f1 f7       	brne	.-4      	; 0x446 <LCDInit+0x5e>
     44a:	00 00       	nop
     44c:	80 81       	ld	r24, Z
     44e:	87 7f       	andi	r24, 0xF7	; 247
     450:	80 83       	st	Z, r24
     452:	9f ef       	ldi	r25, 0xFF	; 255
     454:	23 ef       	ldi	r18, 0xF3	; 243
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	91 50       	subi	r25, 0x01	; 1
     45a:	20 40       	sbci	r18, 0x00	; 0
     45c:	80 40       	sbci	r24, 0x00	; 0
     45e:	e1 f7       	brne	.-8      	; 0x458 <LCDInit+0x70>
     460:	00 c0       	rjmp	.+0      	; 0x462 <LCDInit+0x7a>
     462:	00 00       	nop
     464:	80 81       	ld	r24, Z
     466:	88 60       	ori	r24, 0x08	; 8
     468:	80 83       	st	Z, r24
     46a:	95 ed       	ldi	r25, 0xD5	; 213
     46c:	9a 95       	dec	r25
     46e:	f1 f7       	brne	.-4      	; 0x46c <LCDInit+0x84>
     470:	00 00       	nop
     472:	80 81       	ld	r24, Z
     474:	87 7f       	andi	r24, 0xF7	; 247
     476:	80 83       	st	Z, r24
     478:	8f e1       	ldi	r24, 0x1F	; 31
     47a:	93 e0       	ldi	r25, 0x03	; 3
     47c:	01 97       	sbiw	r24, 0x01	; 1
     47e:	f1 f7       	brne	.-4      	; 0x47c <LCDInit+0x94>
     480:	00 c0       	rjmp	.+0      	; 0x482 <LCDInit+0x9a>
     482:	00 00       	nop
     484:	80 81       	ld	r24, Z
     486:	88 60       	ori	r24, 0x08	; 8
     488:	80 83       	st	Z, r24
     48a:	95 ed       	ldi	r25, 0xD5	; 213
     48c:	9a 95       	dec	r25
     48e:	f1 f7       	brne	.-4      	; 0x48c <LCDInit+0xa4>
     490:	00 00       	nop
     492:	80 81       	ld	r24, Z
     494:	87 7f       	andi	r24, 0xF7	; 247
     496:	80 83       	st	Z, r24
     498:	8f e1       	ldi	r24, 0x1F	; 31
     49a:	93 e0       	ldi	r25, 0x03	; 3
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <LCDInit+0xb4>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <LCDInit+0xba>
     4a2:	00 00       	nop
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	d6 de       	rcall	.-596    	; 0x254 <LCDDataLines>
     4a8:	95 ed       	ldi	r25, 0xD5	; 213
     4aa:	9a 95       	dec	r25
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <LCDInit+0xc2>
     4ae:	00 00       	nop
     4b0:	e4 e2       	ldi	r30, 0x24	; 36
     4b2:	f6 e0       	ldi	r31, 0x06	; 6
     4b4:	80 81       	ld	r24, Z
     4b6:	88 60       	ori	r24, 0x08	; 8
     4b8:	80 83       	st	Z, r24
     4ba:	25 ed       	ldi	r18, 0xD5	; 213
     4bc:	2a 95       	dec	r18
     4be:	f1 f7       	brne	.-4      	; 0x4bc <LCDInit+0xd4>
     4c0:	00 00       	nop
     4c2:	80 81       	ld	r24, Z
     4c4:	87 7f       	andi	r24, 0xF7	; 247
     4c6:	80 83       	st	Z, r24
     4c8:	8f e1       	ldi	r24, 0x1F	; 31
     4ca:	93 e0       	ldi	r25, 0x03	; 3
     4cc:	01 97       	sbiw	r24, 0x01	; 1
     4ce:	f1 f7       	brne	.-4      	; 0x4cc <LCDInit+0xe4>
     4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <LCDInit+0xea>
     4d2:	00 00       	nop
     4d4:	88 e2       	ldi	r24, 0x28	; 40
     4d6:	4e df       	rcall	.-356    	; 0x374 <LCDSendCommand>
     4d8:	88 e0       	ldi	r24, 0x08	; 8
     4da:	4c df       	rcall	.-360    	; 0x374 <LCDSendCommand>
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	4a df       	rcall	.-364    	; 0x374 <LCDSendCommand>
     4e0:	86 e0       	ldi	r24, 0x06	; 6
     4e2:	48 df       	rcall	.-368    	; 0x374 <LCDSendCommand>
     4e4:	8c e0       	ldi	r24, 0x0C	; 12
     4e6:	46 cf       	rjmp	.-372    	; 0x374 <LCDSendCommand>
     4e8:	08 95       	ret

000004ea <LCDStringRam>:
     4ea:	cf 93       	push	r28
     4ec:	df 93       	push	r29
     4ee:	ec 01       	movw	r28, r24
     4f0:	21 96       	adiw	r28, 0x01	; 1
     4f2:	fc 01       	movw	r30, r24
     4f4:	80 81       	ld	r24, Z
     4f6:	88 23       	and	r24, r24
     4f8:	21 f0       	breq	.+8      	; 0x502 <LCDStringRam+0x18>
     4fa:	0d df       	rcall	.-486    	; 0x316 <LCDSendData>
     4fc:	89 91       	ld	r24, Y+
     4fe:	81 11       	cpse	r24, r1
     500:	fc cf       	rjmp	.-8      	; 0x4fa <LCDStringRam+0x10>
     502:	df 91       	pop	r29
     504:	cf 91       	pop	r28
     506:	08 95       	ret

00000508 <LCDGotoXY>:
void LCDGotoXY(unsigned char x, unsigned char y)	//Cursor to X Y position
{
 unsigned char DDRAMAddr;	
 switch(y)
     508:	62 30       	cpi	r22, 0x02	; 2
     50a:	31 f0       	breq	.+12     	; 0x518 <LCDGotoXY+0x10>
     50c:	63 30       	cpi	r22, 0x03	; 3
     50e:	31 f0       	breq	.+12     	; 0x51c <LCDGotoXY+0x14>
     510:	61 30       	cpi	r22, 0x01	; 1
     512:	29 f4       	brne	.+10     	; 0x51e <LCDGotoXY+0x16>
 {
  case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
  case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     514:	80 5c       	subi	r24, 0xC0	; 192
     516:	03 c0       	rjmp	.+6      	; 0x51e <LCDGotoXY+0x16>
  case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     518:	8c 5e       	subi	r24, 0xEC	; 236
     51a:	01 c0       	rjmp	.+2      	; 0x51e <LCDGotoXY+0x16>
  case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     51c:	8c 5a       	subi	r24, 0xAC	; 172
  default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
 }	
 LCDSendCommand(1<<LCD_DDRAM | DDRAMAddr);	
     51e:	80 68       	ori	r24, 0x80	; 128
     520:	29 cf       	rjmp	.-430    	; 0x374 <LCDSendCommand>
     522:	08 95       	ret

00000524 <menu_check_sw>:
    menu_index[2] = 0;
}

bool menu_check_sw(uint8_t SW,uint8_t *SW_Flag)
{
    if(SW && !(*SW_Flag))
     524:	88 23       	and	r24, r24
     526:	39 f0       	breq	.+14     	; 0x536 <menu_check_sw+0x12>
     528:	fb 01       	movw	r30, r22
     52a:	80 81       	ld	r24, Z
     52c:	81 11       	cpse	r24, r1
     52e:	07 c0       	rjmp	.+14     	; 0x53e <menu_check_sw+0x1a>
    {
        *SW_Flag = true;
     530:	81 e0       	ldi	r24, 0x01	; 1
     532:	80 83       	st	Z, r24
        return 1;
     534:	08 95       	ret
    }
    else if(SW == 0)
        *SW_Flag = false;
     536:	fb 01       	movw	r30, r22
     538:	10 82       	st	Z, r1
    return 0;
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	08 95       	ret
     53e:	80 e0       	ldi	r24, 0x00	; 0
}
     540:	08 95       	ret

00000542 <Menu_Display>:
	}
}

void Menu_Display(void)
{
    Disp_R(menu_index[0]);
     542:	e0 e0       	ldi	r30, 0x00	; 0
     544:	f7 e0       	ldi	r31, 0x07	; 7
     546:	94 81       	ldd	r25, Z+4	; 0x04
     548:	80 91 b7 20 	lds	r24, 0x20B7
     54c:	a0 91 00 20 	lds	r26, 0x2000
     550:	b0 e0       	ldi	r27, 0x00	; 0
     552:	aa 0f       	add	r26, r26
     554:	bb 1f       	adc	r27, r27
     556:	a8 5f       	subi	r26, 0xF8	; 248
     558:	bf 4d       	sbci	r27, 0xDF	; 223
     55a:	90 78       	andi	r25, 0x80	; 128
     55c:	2c 91       	ld	r18, X
     55e:	92 2b       	or	r25, r18
     560:	98 23       	and	r25, r24
     562:	94 83       	std	Z+4, r25	; 0x04
    Disp_L(menu_index[1]);
     564:	e0 ee       	ldi	r30, 0xE0	; 224
     566:	f6 e0       	ldi	r31, 0x06	; 6
     568:	94 81       	ldd	r25, Z+4	; 0x04
     56a:	a0 91 01 20 	lds	r26, 0x2001
     56e:	b0 e0       	ldi	r27, 0x00	; 0
     570:	aa 0f       	add	r26, r26
     572:	bb 1f       	adc	r27, r27
     574:	a8 5f       	subi	r26, 0xF8	; 248
     576:	bf 4d       	sbci	r27, 0xDF	; 223
     578:	90 78       	andi	r25, 0x80	; 128
     57a:	2c 91       	ld	r18, X
     57c:	92 2b       	or	r25, r18
     57e:	89 23       	and	r24, r25
     580:	84 83       	std	Z+4, r24	; 0x04
     582:	08 95       	ret

00000584 <menu_table>:
}

void menu_table(void)
{

    switch(menu_index[1])
     584:	80 91 01 20 	lds	r24, 0x2001
     588:	8e 30       	cpi	r24, 0x0E	; 14
     58a:	31 f4       	brne	.+12     	; 0x598 <menu_table+0x14>
			break;
			
		}
		break;
	case 0xE:
		switch(menu_index[0])
     58c:	80 91 00 20 	lds	r24, 0x2000
     590:	8f 30       	cpi	r24, 0x0F	; 15
     592:	11 f4       	brne	.+4      	; 0x598 <menu_table+0x14>
		{
		case 0xF:
			wdt_reset_mcu();
     594:	0c 94 8d 0f 	jmp	0x1f1a	; 0x1f1a <wdt_reset_mcu>
     598:	08 95       	ret

0000059a <Menu_Reset>:
uint8_t menu_index[3]={Menu_Clear,Menu_Clear,0};
uint8_t disp;
uint16_t menu_time = 0;

void Menu_Reset(void)
{
     59a:	ef 92       	push	r14
     59c:	ff 92       	push	r15
     59e:	0f 93       	push	r16
     5a0:	1f 93       	push	r17
     5a2:	cf 93       	push	r28
     5a4:	df 93       	push	r29
    uint8_t i=0;
    for (i=0;i<16;i++)
     5a6:	f1 2c       	mov	r15, r1
    {
        menu_index[1] = i;
     5a8:	01 e0       	ldi	r16, 0x01	; 1
     5aa:	10 e2       	ldi	r17, 0x20	; 32
        menu_index[0] = Menu_Default;
     5ac:	c0 e0       	ldi	r28, 0x00	; 0
     5ae:	d0 e2       	ldi	r29, 0x20	; 32
     5b0:	0f 2e       	mov	r0, r31
     5b2:	f1 e1       	ldi	r31, 0x11	; 17
     5b4:	ef 2e       	mov	r14, r31
     5b6:	f0 2d       	mov	r31, r0
void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
    {
        menu_index[1] = i;
     5b8:	f8 01       	movw	r30, r16
     5ba:	f0 82       	st	Z, r15
        menu_index[0] = Menu_Default;
     5bc:	e8 82       	st	Y, r14
        menu_table();
     5be:	e2 df       	rcall	.-60     	; 0x584 <menu_table>
uint16_t menu_time = 0;

void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
     5c0:	f3 94       	inc	r15
     5c2:	f0 e1       	ldi	r31, 0x10	; 16
     5c4:	ff 12       	cpse	r15, r31
     5c6:	f8 cf       	rjmp	.-16     	; 0x5b8 <Menu_Reset+0x1e>
    {
        menu_index[1] = i;
        menu_index[0] = Menu_Default;
        menu_table();
    }
    menu_index[0] = Menu_Clear;
     5c8:	80 e1       	ldi	r24, 0x10	; 16
     5ca:	80 93 00 20 	sts	0x2000, r24
    menu_index[1] = Menu_Clear;
     5ce:	80 93 01 20 	sts	0x2001, r24
    menu_index[2] = 0;
     5d2:	10 92 02 20 	sts	0x2002, r1
}
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	ff 90       	pop	r15
     5e0:	ef 90       	pop	r14
     5e2:	08 95       	ret

000005e4 <menu_check_status>:
        *SW_Flag = false;
    return 0;
}

void menu_check_status(void)
{
     5e4:	8f 92       	push	r8
     5e6:	9f 92       	push	r9
     5e8:	af 92       	push	r10
     5ea:	bf 92       	push	r11
     5ec:	cf 92       	push	r12
     5ee:	df 92       	push	r13
     5f0:	ef 92       	push	r14
     5f2:	ff 92       	push	r15
     5f4:	0f 93       	push	r16
     5f6:	1f 93       	push	r17
     5f8:	cf 93       	push	r28
     5fa:	df 93       	push	r29
	switch(menu_index[2])
     5fc:	80 91 02 20 	lds	r24, 0x2002
     600:	81 30       	cpi	r24, 0x01	; 1
     602:	09 f4       	brne	.+2      	; 0x606 <menu_check_status+0x22>
     604:	65 c0       	rjmp	.+202    	; 0x6d0 <menu_check_status+0xec>
     606:	20 f0       	brcs	.+8      	; 0x610 <menu_check_status+0x2c>
     608:	82 30       	cpi	r24, 0x02	; 2
     60a:	09 f4       	brne	.+2      	; 0x60e <menu_check_status+0x2a>
     60c:	c2 c0       	rjmp	.+388    	; 0x792 <menu_check_status+0x1ae>
     60e:	df c0       	rjmp	.+446    	; 0x7ce <menu_check_status+0x1ea>
	{
		case 0://Wait for Index0
		Disp_L_PORT.OUT = (Disp_L_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     610:	c0 ee       	ldi	r28, 0xE0	; 224
     612:	d6 e0       	ldi	r29, 0x06	; 6
     614:	1c 81       	ldd	r17, Y+4	; 0x04
     616:	60 91 ab 20 	lds	r22, 0x20AB
     61a:	70 91 ac 20 	lds	r23, 0x20AC
     61e:	80 91 ad 20 	lds	r24, 0x20AD
     622:	90 91 ae 20 	lds	r25, 0x20AE
     626:	24 e6       	ldi	r18, 0x64	; 100
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	40 e0       	ldi	r20, 0x00	; 0
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>
     632:	20 fb       	bst	r18, 0
     634:	17 f9       	bld	r17, 7
     636:	1c 83       	std	Y+4, r17	; 0x04
		Disp_R_PORT.OUTCLR = Segment_DP_bm;
     638:	80 e8       	ldi	r24, 0x80	; 128
     63a:	e0 e0       	ldi	r30, 0x00	; 0
     63c:	f7 e0       	ldi	r31, 0x07	; 7
     63e:	86 83       	std	Z+6, r24	; 0x06
		menu_index[1] = Menu_Num;
     640:	98 85       	ldd	r25, Y+8	; 0x08
     642:	28 85       	ldd	r18, Y+8	; 0x08
     644:	88 85       	ldd	r24, Y+8	; 0x08
     646:	38 85       	ldd	r19, Y+8	; 0x08
     648:	30 fb       	bst	r19, 0
     64a:	88 24       	eor	r8, r8
     64c:	80 f8       	bld	r8, 0
     64e:	91 2c       	mov	r9, r1
     650:	88 0c       	add	r8, r8
     652:	99 1c       	adc	r9, r9
     654:	22 fb       	bst	r18, 2
     656:	22 27       	eor	r18, r18
     658:	20 f9       	bld	r18, 0
     65a:	82 2a       	or	r8, r18
     65c:	93 fb       	bst	r25, 3
     65e:	aa 24       	eor	r10, r10
     660:	a0 f8       	bld	r10, 0
     662:	b1 2c       	mov	r11, r1
     664:	aa 0c       	add	r10, r10
     666:	bb 1c       	adc	r11, r11
     668:	aa 0c       	add	r10, r10
     66a:	bb 1c       	adc	r11, r11
     66c:	a8 28       	or	r10, r8
     66e:	81 fb       	bst	r24, 1
     670:	cc 24       	eor	r12, r12
     672:	c0 f8       	bld	r12, 0
     674:	d1 2c       	mov	r13, r1
     676:	cc 0c       	add	r12, r12
     678:	dd 1c       	adc	r13, r13
     67a:	cc 0c       	add	r12, r12
     67c:	dd 1c       	adc	r13, r13
     67e:	cc 0c       	add	r12, r12
     680:	dd 1c       	adc	r13, r13
     682:	ca 28       	or	r12, r10
     684:	c0 92 01 20 	sts	0x2001, r12
		menu_index[0] = Menu_Clear;
     688:	80 e1       	ldi	r24, 0x10	; 16
     68a:	80 93 00 20 	sts	0x2000, r24
		Menu_Display();
     68e:	59 df       	rcall	.-334    	; 0x542 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     690:	80 91 e8 06 	lds	r24, 0x06E8
     694:	65 e5       	ldi	r22, 0x55	; 85
     696:	70 e2       	ldi	r23, 0x20	; 32
     698:	88 1f       	adc	r24, r24
     69a:	88 27       	eor	r24, r24
     69c:	88 1f       	adc	r24, r24
     69e:	42 df       	rcall	.-380    	; 0x524 <menu_check_sw>
     6a0:	88 23       	and	r24, r24
     6a2:	29 f0       	breq	.+10     	; 0x6ae <menu_check_status+0xca>
		{
			menu_index[2]++;
     6a4:	e2 e0       	ldi	r30, 0x02	; 2
     6a6:	f0 e2       	ldi	r31, 0x20	; 32
     6a8:	80 81       	ld	r24, Z
     6aa:	8f 5f       	subi	r24, 0xFF	; 255
     6ac:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     6ae:	80 91 a8 06 	lds	r24, 0x06A8
     6b2:	64 e5       	ldi	r22, 0x54	; 84
     6b4:	70 e2       	ldi	r23, 0x20	; 32
     6b6:	82 95       	swap	r24
     6b8:	81 70       	andi	r24, 0x01	; 1
     6ba:	34 df       	rcall	.-408    	; 0x524 <menu_check_sw>
     6bc:	88 23       	and	r24, r24
     6be:	09 f4       	brne	.+2      	; 0x6c2 <menu_check_status+0xde>
     6c0:	86 c0       	rjmp	.+268    	; 0x7ce <menu_check_status+0x1ea>
		{
			 menu_time=100;
     6c2:	84 e6       	ldi	r24, 0x64	; 100
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	80 93 52 20 	sts	0x2052, r24
     6ca:	90 93 53 20 	sts	0x2053, r25
     6ce:	7f c0       	rjmp	.+254    	; 0x7ce <menu_check_status+0x1ea>
		}
		break;
		case 1://Wait for Index1
		Disp_R_PORT.OUT = (Disp_R_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     6d0:	0f 2e       	mov	r0, r31
     6d2:	c1 2c       	mov	r12, r1
     6d4:	f7 e0       	ldi	r31, 0x07	; 7
     6d6:	df 2e       	mov	r13, r31
     6d8:	f0 2d       	mov	r31, r0
     6da:	f6 01       	movw	r30, r12
     6dc:	b4 80       	ldd	r11, Z+4	; 0x04
     6de:	60 91 ab 20 	lds	r22, 0x20AB
     6e2:	70 91 ac 20 	lds	r23, 0x20AC
     6e6:	80 91 ad 20 	lds	r24, 0x20AD
     6ea:	90 91 ae 20 	lds	r25, 0x20AE
     6ee:	24 e6       	ldi	r18, 0x64	; 100
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	40 e0       	ldi	r20, 0x00	; 0
     6f4:	50 e0       	ldi	r21, 0x00	; 0
     6f6:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>
     6fa:	20 fb       	bst	r18, 0
     6fc:	b7 f8       	bld	r11, 7
     6fe:	f6 01       	movw	r30, r12
     700:	b4 82       	std	Z+4, r11	; 0x04
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     702:	e0 ee       	ldi	r30, 0xE0	; 224
     704:	f6 e0       	ldi	r31, 0x06	; 6
     706:	80 e8       	ldi	r24, 0x80	; 128
     708:	85 83       	std	Z+5, r24	; 0x05
		menu_index[0] = Menu_Num;
     70a:	90 85       	ldd	r25, Z+8	; 0x08
     70c:	20 85       	ldd	r18, Z+8	; 0x08
     70e:	80 85       	ldd	r24, Z+8	; 0x08
     710:	30 85       	ldd	r19, Z+8	; 0x08
     712:	30 fb       	bst	r19, 0
     714:	ee 24       	eor	r14, r14
     716:	e0 f8       	bld	r14, 0
     718:	f1 2c       	mov	r15, r1
     71a:	ee 0c       	add	r14, r14
     71c:	ff 1c       	adc	r15, r15
     71e:	22 fb       	bst	r18, 2
     720:	22 27       	eor	r18, r18
     722:	20 f9       	bld	r18, 0
     724:	e2 2a       	or	r14, r18
     726:	93 fb       	bst	r25, 3
     728:	00 27       	eor	r16, r16
     72a:	00 f9       	bld	r16, 0
     72c:	10 e0       	ldi	r17, 0x00	; 0
     72e:	00 0f       	add	r16, r16
     730:	11 1f       	adc	r17, r17
     732:	00 0f       	add	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	0e 29       	or	r16, r14
     738:	86 95       	lsr	r24
     73a:	81 70       	andi	r24, 0x01	; 1
     73c:	c8 2f       	mov	r28, r24
     73e:	f0 e0       	ldi	r31, 0x00	; 0
     740:	df 2f       	mov	r29, r31
     742:	cc 0f       	add	r28, r28
     744:	dd 1f       	adc	r29, r29
     746:	cc 0f       	add	r28, r28
     748:	dd 1f       	adc	r29, r29
     74a:	cc 0f       	add	r28, r28
     74c:	dd 1f       	adc	r29, r29
     74e:	c0 2b       	or	r28, r16
     750:	c0 93 00 20 	sts	0x2000, r28
		Menu_Display();
     754:	f6 de       	rcall	.-532    	; 0x542 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     756:	80 91 e8 06 	lds	r24, 0x06E8
     75a:	65 e5       	ldi	r22, 0x55	; 85
     75c:	70 e2       	ldi	r23, 0x20	; 32
     75e:	88 1f       	adc	r24, r24
     760:	88 27       	eor	r24, r24
     762:	88 1f       	adc	r24, r24
     764:	df de       	rcall	.-578    	; 0x524 <menu_check_sw>
     766:	88 23       	and	r24, r24
     768:	29 f0       	breq	.+10     	; 0x774 <menu_check_status+0x190>
		{
			menu_index[2]++;
     76a:	e2 e0       	ldi	r30, 0x02	; 2
     76c:	f0 e2       	ldi	r31, 0x20	; 32
     76e:	80 81       	ld	r24, Z
     770:	8f 5f       	subi	r24, 0xFF	; 255
     772:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     774:	80 91 a8 06 	lds	r24, 0x06A8
     778:	64 e5       	ldi	r22, 0x54	; 84
     77a:	70 e2       	ldi	r23, 0x20	; 32
     77c:	82 95       	swap	r24
     77e:	81 70       	andi	r24, 0x01	; 1
     780:	d1 de       	rcall	.-606    	; 0x524 <menu_check_sw>
     782:	88 23       	and	r24, r24
     784:	21 f1       	breq	.+72     	; 0x7ce <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     786:	e2 e0       	ldi	r30, 0x02	; 2
     788:	f0 e2       	ldi	r31, 0x20	; 32
     78a:	80 81       	ld	r24, Z
     78c:	81 50       	subi	r24, 0x01	; 1
     78e:	80 83       	st	Z, r24
     790:	1e c0       	rjmp	.+60     	; 0x7ce <menu_check_status+0x1ea>
		}
		break;
		case 2:
		Disp_R_PORT.OUTSET = Segment_DP_bm;
     792:	80 e8       	ldi	r24, 0x80	; 128
     794:	e0 e0       	ldi	r30, 0x00	; 0
     796:	f7 e0       	ldi	r31, 0x07	; 7
     798:	85 83       	std	Z+5, r24	; 0x05
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     79a:	e0 ee       	ldi	r30, 0xE0	; 224
     79c:	f6 e0       	ldi	r31, 0x06	; 6
     79e:	85 83       	std	Z+5, r24	; 0x05
		menu_table();
     7a0:	f1 de       	rcall	.-542    	; 0x584 <menu_table>
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     7a2:	80 91 a8 06 	lds	r24, 0x06A8
     7a6:	64 e5       	ldi	r22, 0x54	; 84
     7a8:	70 e2       	ldi	r23, 0x20	; 32
     7aa:	82 95       	swap	r24
     7ac:	81 70       	andi	r24, 0x01	; 1
     7ae:	ba de       	rcall	.-652    	; 0x524 <menu_check_sw>
     7b0:	88 23       	and	r24, r24
     7b2:	69 f0       	breq	.+26     	; 0x7ce <menu_check_status+0x1ea>
		{
			menu_index[2]--;
     7b4:	e2 e0       	ldi	r30, 0x02	; 2
     7b6:	f0 e2       	ldi	r31, 0x20	; 32
     7b8:	80 81       	ld	r24, Z
     7ba:	81 50       	subi	r24, 0x01	; 1
     7bc:	80 83       	st	Z, r24
			menu_index[0] = Menu_Default;
     7be:	c0 e0       	ldi	r28, 0x00	; 0
     7c0:	d0 e2       	ldi	r29, 0x20	; 32
     7c2:	81 e1       	ldi	r24, 0x11	; 17
     7c4:	88 83       	st	Y, r24
			menu_table();
     7c6:	de de       	rcall	.-580    	; 0x584 <menu_table>
			menu_index[0] = Menu_Clear;
     7c8:	80 e1       	ldi	r24, 0x10	; 16
     7ca:	88 83       	st	Y, r24
			Menu_Display();
     7cc:	ba de       	rcall	.-652    	; 0x542 <Menu_Display>
		}

		break;
	}
}
     7ce:	df 91       	pop	r29
     7d0:	cf 91       	pop	r28
     7d2:	1f 91       	pop	r17
     7d4:	0f 91       	pop	r16
     7d6:	ff 90       	pop	r15
     7d8:	ef 90       	pop	r14
     7da:	df 90       	pop	r13
     7dc:	cf 90       	pop	r12
     7de:	bf 90       	pop	r11
     7e0:	af 90       	pop	r10
     7e2:	9f 90       	pop	r9
     7e4:	8f 90       	pop	r8
     7e6:	08 95       	ret

000007e8 <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7e8:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7ea:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     7ec:	fc 01       	movw	r30, r24
     7ee:	e0 59       	subi	r30, 0x90	; 144
     7f0:	ff 4f       	sbci	r31, 0xFF	; 255
     7f2:	60 95       	com	r22
     7f4:	80 81       	ld	r24, Z
     7f6:	68 23       	and	r22, r24
     7f8:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7fa:	2f bf       	out	0x3f, r18	; 63
     7fc:	08 95       	ret

000007fe <sysclk_disable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7fe:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     800:	f8 94       	cli

void sysclk_disable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) |= id;
     802:	fc 01       	movw	r30, r24
     804:	e0 59       	subi	r30, 0x90	; 144
     806:	ff 4f       	sbci	r31, 0xFF	; 255
     808:	80 81       	ld	r24, Z
     80a:	68 2b       	or	r22, r24
     80c:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     80e:	2f bf       	out	0x3f, r18	; 63
     810:	08 95       	ret

00000812 <adc_enable_clock>:
	conf->ctrlb = adc->CTRLB;

	adc_disable_clock(adc);

	cpu_irq_restore(flags);
}
     812:	81 15       	cp	r24, r1
     814:	22 e0       	ldi	r18, 0x02	; 2
     816:	92 07       	cpc	r25, r18
     818:	69 f4       	brne	.+26     	; 0x834 <adc_enable_clock+0x22>
     81a:	80 91 57 20 	lds	r24, 0x2057
     81e:	91 e0       	ldi	r25, 0x01	; 1
     820:	98 0f       	add	r25, r24
     822:	90 93 57 20 	sts	0x2057, r25
     826:	81 11       	cpse	r24, r1
     828:	14 c0       	rjmp	.+40     	; 0x852 <adc_enable_clock+0x40>
     82a:	62 e0       	ldi	r22, 0x02	; 2
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	db cf       	rjmp	.-74     	; 0x7e8 <sysclk_enable_module>
     832:	08 95       	ret
     834:	80 34       	cpi	r24, 0x40	; 64
     836:	92 40       	sbci	r25, 0x02	; 2
     838:	61 f4       	brne	.+24     	; 0x852 <adc_enable_clock+0x40>
     83a:	80 91 56 20 	lds	r24, 0x2056
     83e:	91 e0       	ldi	r25, 0x01	; 1
     840:	98 0f       	add	r25, r24
     842:	90 93 56 20 	sts	0x2056, r25
     846:	81 11       	cpse	r24, r1
     848:	04 c0       	rjmp	.+8      	; 0x852 <adc_enable_clock+0x40>
     84a:	62 e0       	ldi	r22, 0x02	; 2
     84c:	82 e0       	ldi	r24, 0x02	; 2
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	cb cf       	rjmp	.-106    	; 0x7e8 <sysclk_enable_module>
     852:	08 95       	ret

00000854 <adc_disable_clock>:
     854:	81 15       	cp	r24, r1
     856:	22 e0       	ldi	r18, 0x02	; 2
     858:	92 07       	cpc	r25, r18
     85a:	61 f4       	brne	.+24     	; 0x874 <adc_disable_clock+0x20>
     85c:	80 91 57 20 	lds	r24, 0x2057
     860:	81 50       	subi	r24, 0x01	; 1
     862:	80 93 57 20 	sts	0x2057, r24
     866:	81 11       	cpse	r24, r1
     868:	13 c0       	rjmp	.+38     	; 0x890 <adc_disable_clock+0x3c>
     86a:	62 e0       	ldi	r22, 0x02	; 2
     86c:	81 e0       	ldi	r24, 0x01	; 1
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	c6 cf       	rjmp	.-116    	; 0x7fe <sysclk_disable_module>
     872:	08 95       	ret
     874:	80 34       	cpi	r24, 0x40	; 64
     876:	92 40       	sbci	r25, 0x02	; 2
     878:	59 f4       	brne	.+22     	; 0x890 <adc_disable_clock+0x3c>
     87a:	80 91 56 20 	lds	r24, 0x2056
     87e:	81 50       	subi	r24, 0x01	; 1
     880:	80 93 56 20 	sts	0x2056, r24
     884:	81 11       	cpse	r24, r1
     886:	04 c0       	rjmp	.+8      	; 0x890 <adc_disable_clock+0x3c>
     888:	62 e0       	ldi	r22, 0x02	; 2
     88a:	82 e0       	ldi	r24, 0x02	; 2
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	b7 cf       	rjmp	.-146    	; 0x7fe <sysclk_disable_module>
     890:	08 95       	ret

00000892 <adc_enable>:
     892:	1f 93       	push	r17
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	ec 01       	movw	r28, r24
     89a:	1f b7       	in	r17, 0x3f	; 63
     89c:	f8 94       	cli
     89e:	b9 df       	rcall	.-142    	; 0x812 <adc_enable_clock>
     8a0:	88 81       	ld	r24, Y
     8a2:	81 60       	ori	r24, 0x01	; 1
     8a4:	88 83       	st	Y, r24
     8a6:	1f bf       	out	0x3f, r17	; 63
     8a8:	8f b7       	in	r24, 0x3f	; 63
     8aa:	f8 94       	cli
     8ac:	e9 eb       	ldi	r30, 0xB9	; 185
     8ae:	f0 e2       	ldi	r31, 0x20	; 32
     8b0:	90 81       	ld	r25, Z
     8b2:	9f 5f       	subi	r25, 0xFF	; 255
     8b4:	90 83       	st	Z, r25
     8b6:	8f bf       	out	0x3f, r24	; 63
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	1f 91       	pop	r17
     8be:	08 95       	ret

000008c0 <adc_write_configuration>:
     8c0:	df 92       	push	r13
     8c2:	ef 92       	push	r14
     8c4:	ff 92       	push	r15
     8c6:	0f 93       	push	r16
     8c8:	1f 93       	push	r17
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	ec 01       	movw	r28, r24
     8d0:	8b 01       	movw	r16, r22
     8d2:	c1 15       	cp	r28, r1
     8d4:	22 e0       	ldi	r18, 0x02	; 2
     8d6:	d2 07       	cpc	r29, r18
     8d8:	71 f4       	brne	.+28     	; 0x8f6 <adc_write_configuration+0x36>
     8da:	61 e2       	ldi	r22, 0x21	; 33
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	82 e0       	ldi	r24, 0x02	; 2
     8e0:	a7 d0       	rcall	.+334    	; 0xa30 <nvm_read_byte>
     8e2:	e8 2e       	mov	r14, r24
     8e4:	f1 2c       	mov	r15, r1
     8e6:	60 e2       	ldi	r22, 0x20	; 32
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	82 e0       	ldi	r24, 0x02	; 2
     8ec:	a1 d0       	rcall	.+322    	; 0xa30 <nvm_read_byte>
     8ee:	fe 2c       	mov	r15, r14
     8f0:	ee 24       	eor	r14, r14
     8f2:	e8 2a       	or	r14, r24
     8f4:	10 c0       	rjmp	.+32     	; 0x916 <adc_write_configuration+0x56>
     8f6:	80 34       	cpi	r24, 0x40	; 64
     8f8:	92 40       	sbci	r25, 0x02	; 2
     8fa:	59 f5       	brne	.+86     	; 0x952 <adc_write_configuration+0x92>
     8fc:	65 e2       	ldi	r22, 0x25	; 37
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	82 e0       	ldi	r24, 0x02	; 2
     902:	96 d0       	rcall	.+300    	; 0xa30 <nvm_read_byte>
     904:	e8 2e       	mov	r14, r24
     906:	f1 2c       	mov	r15, r1
     908:	64 e2       	ldi	r22, 0x24	; 36
     90a:	70 e0       	ldi	r23, 0x00	; 0
     90c:	82 e0       	ldi	r24, 0x02	; 2
     90e:	90 d0       	rcall	.+288    	; 0xa30 <nvm_read_byte>
     910:	fe 2c       	mov	r15, r14
     912:	ee 24       	eor	r14, r14
     914:	e8 2a       	or	r14, r24
     916:	df b6       	in	r13, 0x3f	; 63
     918:	f8 94       	cli
     91a:	ce 01       	movw	r24, r28
     91c:	7a df       	rcall	.-268    	; 0x812 <adc_enable_clock>
     91e:	28 81       	ld	r18, Y
     920:	82 e0       	ldi	r24, 0x02	; 2
     922:	88 83       	st	Y, r24
     924:	ec 86       	std	Y+12, r14	; 0x0c
     926:	fd 86       	std	Y+13, r15	; 0x0d
     928:	f8 01       	movw	r30, r16
     92a:	85 81       	ldd	r24, Z+5	; 0x05
     92c:	96 81       	ldd	r25, Z+6	; 0x06
     92e:	88 8f       	std	Y+24, r24	; 0x18
     930:	99 8f       	std	Y+25, r25	; 0x19
     932:	82 81       	ldd	r24, Z+2	; 0x02
     934:	8a 83       	std	Y+2, r24	; 0x02
     936:	84 81       	ldd	r24, Z+4	; 0x04
     938:	8c 83       	std	Y+4, r24	; 0x04
     93a:	83 81       	ldd	r24, Z+3	; 0x03
     93c:	8b 83       	std	Y+3, r24	; 0x03
     93e:	81 81       	ldd	r24, Z+1	; 0x01
     940:	89 83       	std	Y+1, r24	; 0x01
     942:	82 2f       	mov	r24, r18
     944:	81 70       	andi	r24, 0x01	; 1
     946:	90 81       	ld	r25, Z
     948:	89 2b       	or	r24, r25
     94a:	88 83       	st	Y, r24
     94c:	ce 01       	movw	r24, r28
     94e:	82 df       	rcall	.-252    	; 0x854 <adc_disable_clock>
     950:	df be       	out	0x3f, r13	; 63
     952:	df 91       	pop	r29
     954:	cf 91       	pop	r28
     956:	1f 91       	pop	r17
     958:	0f 91       	pop	r16
     95a:	ff 90       	pop	r15
     95c:	ef 90       	pop	r14
     95e:	df 90       	pop	r13
     960:	08 95       	ret

00000962 <adcch_write_configuration>:
 * is called if callbacks are enabled and interrupts are enabled in the
 * channel configuration.
 */
void adcch_write_configuration(ADC_t *adc, uint8_t ch_mask,
		const struct adc_channel_config *ch_conf)
{
     962:	df 92       	push	r13
     964:	ef 92       	push	r14
     966:	ff 92       	push	r15
     968:	0f 93       	push	r16
     96a:	1f 93       	push	r17
     96c:	cf 93       	push	r28
     96e:	df 93       	push	r29
     970:	7c 01       	movw	r14, r24
     972:	8a 01       	movw	r16, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     974:	86 2f       	mov	r24, r22
     976:	83 70       	andi	r24, 0x03	; 3
     978:	21 f4       	brne	.+8      	; 0x982 <adcch_write_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     97a:	66 95       	lsr	r22
     97c:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     97e:	82 e0       	ldi	r24, 0x02	; 2
     980:	01 c0       	rjmp	.+2      	; 0x984 <adcch_write_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     982:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     984:	60 ff       	sbrs	r22, 0
		index++;
     986:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     988:	e7 01       	movw	r28, r14
     98a:	a0 96       	adiw	r28, 0x20	; 32
     98c:	98 e0       	ldi	r25, 0x08	; 8
     98e:	89 9f       	mul	r24, r25
     990:	c0 0d       	add	r28, r0
     992:	d1 1d       	adc	r29, r1
     994:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     996:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     998:	f8 94       	cli
			return;
		}
	}
#endif /* CONFIG_ADC_CALLBACK_ENABLE */

	adc_enable_clock(adc);
     99a:	c7 01       	movw	r24, r14
     99c:	3a df       	rcall	.-396    	; 0x812 <adc_enable_clock>
	adc_ch->CTRL = ch_conf->ctrl;
     99e:	f8 01       	movw	r30, r16
     9a0:	80 81       	ld	r24, Z
     9a2:	88 83       	st	Y, r24
	adc_ch->INTCTRL = ch_conf->intctrl;
     9a4:	82 81       	ldd	r24, Z+2	; 0x02
     9a6:	8a 83       	std	Y+2, r24	; 0x02
	adc_ch->MUXCTRL = ch_conf->muxctrl;
     9a8:	81 81       	ldd	r24, Z+1	; 0x01
     9aa:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		adc_ch->SCAN = ch_conf->scan;
	}
#endif
	adc_disable_clock(adc);
     9ac:	c7 01       	movw	r24, r14
     9ae:	52 df       	rcall	.-348    	; 0x854 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     9b0:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	ff 90       	pop	r15
     9bc:	ef 90       	pop	r14
     9be:	df 90       	pop	r13
     9c0:	08 95       	ret

000009c2 <adcch_read_configuration>:
 * can be given in mask)
 * \param ch_conf Pointer to ADC channel configuration.
 */
void adcch_read_configuration(ADC_t *adc, uint8_t ch_mask,
		struct adc_channel_config *ch_conf)
{
     9c2:	df 92       	push	r13
     9c4:	ef 92       	push	r14
     9c6:	ff 92       	push	r15
     9c8:	0f 93       	push	r16
     9ca:	1f 93       	push	r17
     9cc:	cf 93       	push	r28
     9ce:	df 93       	push	r29
     9d0:	7c 01       	movw	r14, r24
     9d2:	ea 01       	movw	r28, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     9d4:	86 2f       	mov	r24, r22
     9d6:	83 70       	andi	r24, 0x03	; 3
     9d8:	21 f4       	brne	.+8      	; 0x9e2 <adcch_read_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     9da:	66 95       	lsr	r22
     9dc:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	01 c0       	rjmp	.+2      	; 0x9e4 <adcch_read_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     9e2:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     9e4:	60 ff       	sbrs	r22, 0
		index++;
     9e6:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     9e8:	87 01       	movw	r16, r14
     9ea:	00 5e       	subi	r16, 0xE0	; 224
     9ec:	1f 4f       	sbci	r17, 0xFF	; 255
     9ee:	98 e0       	ldi	r25, 0x08	; 8
     9f0:	89 9f       	mul	r24, r25
     9f2:	00 0d       	add	r16, r0
     9f4:	11 1d       	adc	r17, r1
     9f6:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     9f8:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     9fa:	f8 94       	cli

	adc_ch = adc_get_channel(adc, ch_mask);

	flags = cpu_irq_save();

	adc_enable_clock(adc);
     9fc:	c7 01       	movw	r24, r14
     9fe:	09 df       	rcall	.-494    	; 0x812 <adc_enable_clock>
	ch_conf->ctrl = adc_ch->CTRL;
     a00:	f8 01       	movw	r30, r16
     a02:	80 81       	ld	r24, Z
     a04:	88 83       	st	Y, r24
	ch_conf->intctrl = adc_ch->INTCTRL;
     a06:	82 81       	ldd	r24, Z+2	; 0x02
     a08:	8a 83       	std	Y+2, r24	; 0x02
	ch_conf->muxctrl = adc_ch->MUXCTRL;
     a0a:	81 81       	ldd	r24, Z+1	; 0x01
     a0c:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		ch_conf->scan = adc_ch->SCAN;
	}
#endif
	adc_disable_clock(adc);
     a0e:	c7 01       	movw	r24, r14
     a10:	21 df       	rcall	.-446    	; 0x854 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     a12:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     a14:	df 91       	pop	r29
     a16:	cf 91       	pop	r28
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	df 90       	pop	r13
     a22:	08 95       	ret

00000a24 <ccp_write_io>:

	PUBLIC_FUNCTION(ccp_write_io)

#if defined(__GNUC__)

	out     RAMPZ, r1               // Reset bits 23:16 of Z
     a24:	1b be       	out	0x3b, r1	; 59
	movw    r30, r24                // Load addr into Z
     a26:	fc 01       	movw	r30, r24
	ldi     r18, CCP_IOREG          // Load magic CCP value
     a28:	28 ed       	ldi	r18, 0xD8	; 216
	out     CCP, r18                // Start CCP handshake
     a2a:	24 bf       	out	0x34, r18	; 52
	st      Z, r22                  // Write value to I/O register
     a2c:	60 83       	st	Z, r22
	ret                             // Return to caller
     a2e:	08 95       	ret

00000a30 <nvm_read_byte>:
#endif

#ifndef __DOXYGEN__
	PUBLIC_FUNCTION(nvm_read_byte)
#if defined(__GNUC__)
	lds r20, NVM_CMD          ; Store NVM command register
     a30:	40 91 ca 01 	lds	r20, 0x01CA
	mov ZL, r22               ; Load byte index into low byte of Z.
     a34:	e6 2f       	mov	r30, r22
	mov ZH, r23               ; Load high byte into Z.
     a36:	f7 2f       	mov	r31, r23
	sts NVM_CMD, r24          ; Load prepared command into NVM Command register.
     a38:	80 93 ca 01 	sts	0x01CA, r24
	lpm r24, Z                ; Perform an LPM to read out byte
     a3c:	84 91       	lpm	r24, Z
	sts NVM_CMD, r20          ; Restore NVM command register
     a3e:	40 93 ca 01 	sts	0x01CA, r20
	sts NVM_CMD, r16          ; Load prepared command into NVM Command register.
	lpm r16, Z                ; Perform an LPM to read out byte
	sts NVM_CMD, r20          ; Restore NVM command register
#endif

	ret
     a42:	08 95       	ret

00000a44 <spi_xmega_set_baud_div>:
 * \return Status of operation.
 *   \retval >=0  Success.
 *   \retval  <0  Error.
 */
int8_t spi_xmega_set_baud_div(SPI_t *spi, uint32_t baudrate, uint32_t clkper_hz)
{
     a44:	cf 92       	push	r12
     a46:	df 92       	push	r13
     a48:	ef 92       	push	r14
     a4a:	ff 92       	push	r15
     a4c:	0f 93       	push	r16
     a4e:	1f 93       	push	r17
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	ec 01       	movw	r28, r24
     a56:	6a 01       	movw	r12, r20
     a58:	7b 01       	movw	r14, r22

	/*
	 * Get wanted divisor rounded up so we don't get speed higher than
	 * requested baudrate.
	 */
	divisor = (clkper_hz + baudrate - 1) / baudrate;
     a5a:	db 01       	movw	r26, r22
     a5c:	ca 01       	movw	r24, r20
     a5e:	01 97       	sbiw	r24, 0x01	; 1
     a60:	a1 09       	sbc	r26, r1
     a62:	b1 09       	sbc	r27, r1
     a64:	bc 01       	movw	r22, r24
     a66:	cd 01       	movw	r24, r26
     a68:	60 0f       	add	r22, r16
     a6a:	71 1f       	adc	r23, r17
     a6c:	82 1f       	adc	r24, r18
     a6e:	93 1f       	adc	r25, r19
     a70:	a7 01       	movw	r20, r14
     a72:	96 01       	movw	r18, r12
     a74:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>

	if (divisor > 128) {
     a78:	21 38       	cpi	r18, 0x81	; 129
     a7a:	31 05       	cpc	r19, r1
     a7c:	41 05       	cpc	r20, r1
     a7e:	51 05       	cpc	r21, r1
     a80:	f8 f4       	brcc	.+62     	; 0xac0 <spi_xmega_set_baud_div+0x7c>

	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
     a82:	21 34       	cpi	r18, 0x41	; 65
     a84:	60 f4       	brcc	.+24     	; 0xa9e <spi_xmega_set_baud_div+0x5a>
		ctrl = SPI_PRESCALER_DIV128_gc;
	}
	else if (divisor_8bit > 32) {
     a86:	21 32       	cpi	r18, 0x21	; 33
     a88:	60 f4       	brcc	.+24     	; 0xaa2 <spi_xmega_set_baud_div+0x5e>
		ctrl = SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 16) {
     a8a:	21 31       	cpi	r18, 0x11	; 17
     a8c:	60 f4       	brcc	.+24     	; 0xaa6 <spi_xmega_set_baud_div+0x62>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 8) {
     a8e:	29 30       	cpi	r18, 0x09	; 9
     a90:	60 f4       	brcc	.+24     	; 0xaaa <spi_xmega_set_baud_div+0x66>
		ctrl = SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 4) {
     a92:	25 30       	cpi	r18, 0x05	; 5
     a94:	60 f4       	brcc	.+24     	; 0xaae <spi_xmega_set_baud_div+0x6a>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 2) {
     a96:	23 30       	cpi	r18, 0x03	; 3
     a98:	60 f0       	brcs	.+24     	; 0xab2 <spi_xmega_set_baud_div+0x6e>
		ctrl = SPI_PRESCALER_DIV4_gc;
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	0b c0       	rjmp	.+22     	; 0xab4 <spi_xmega_set_baud_div+0x70>
	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
		ctrl = SPI_PRESCALER_DIV128_gc;
     a9e:	93 e0       	ldi	r25, 0x03	; 3
     aa0:	09 c0       	rjmp	.+18     	; 0xab4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 32) {
		ctrl = SPI_PRESCALER_DIV64_gc;
     aa2:	92 e0       	ldi	r25, 0x02	; 2
     aa4:	07 c0       	rjmp	.+14     	; 0xab4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 16) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
     aa6:	92 e8       	ldi	r25, 0x82	; 130
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 8) {
		ctrl = SPI_PRESCALER_DIV16_gc;
     aaa:	91 e0       	ldi	r25, 0x01	; 1
     aac:	03 c0       	rjmp	.+6      	; 0xab4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 4) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
     aae:	91 e8       	ldi	r25, 0x81	; 129
     ab0:	01 c0       	rjmp	.+2      	; 0xab4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 2) {
		ctrl = SPI_PRESCALER_DIV4_gc;
	}
	else {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV4_gc;
     ab2:	90 e8       	ldi	r25, 0x80	; 128
	}

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;
     ab4:	88 81       	ld	r24, Y
     ab6:	8c 77       	andi	r24, 0x7C	; 124
     ab8:	89 2b       	or	r24, r25
     aba:	88 83       	st	Y, r24

	return 1;
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	01 c0       	rjmp	.+2      	; 0xac2 <spi_xmega_set_baud_div+0x7e>
	if (divisor > 128) {
		/*
		 * Highest possible divisor is 128 so fail since we can't get
		 * low enough baudrate.
		 */
		return -1;
     ac0:	8f ef       	ldi	r24, 0xFF	; 255

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;

	return 1;
}
     ac2:	df 91       	pop	r29
     ac4:	cf 91       	pop	r28
     ac6:	1f 91       	pop	r17
     ac8:	0f 91       	pop	r16
     aca:	ff 90       	pop	r15
     acc:	ef 90       	pop	r14
     ace:	df 90       	pop	r13
     ad0:	cf 90       	pop	r12
     ad2:	08 95       	ret

00000ad4 <__vector_14>:
 *
 * This function will handle interrupt on Timer Counter CO overflow and
 * call the callback function.
 */
ISR(TCC0_OVF_vect)
{
     ad4:	1f 92       	push	r1
     ad6:	0f 92       	push	r0
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	0f 92       	push	r0
     adc:	11 24       	eor	r1, r1
     ade:	08 b6       	in	r0, 0x38	; 56
     ae0:	0f 92       	push	r0
     ae2:	18 be       	out	0x38, r1	; 56
     ae4:	09 b6       	in	r0, 0x39	; 57
     ae6:	0f 92       	push	r0
     ae8:	19 be       	out	0x39, r1	; 57
     aea:	0b b6       	in	r0, 0x3b	; 59
     aec:	0f 92       	push	r0
     aee:	1b be       	out	0x3b, r1	; 59
     af0:	2f 93       	push	r18
     af2:	3f 93       	push	r19
     af4:	4f 93       	push	r20
     af6:	5f 93       	push	r21
     af8:	6f 93       	push	r22
     afa:	7f 93       	push	r23
     afc:	8f 93       	push	r24
     afe:	9f 93       	push	r25
     b00:	af 93       	push	r26
     b02:	bf 93       	push	r27
     b04:	ef 93       	push	r30
     b06:	ff 93       	push	r31
	if (tc_tcc0_ovf_callback) {
     b08:	e0 91 a4 20 	lds	r30, 0x20A4
     b0c:	f0 91 a5 20 	lds	r31, 0x20A5
     b10:	30 97       	sbiw	r30, 0x00	; 0
     b12:	09 f0       	breq	.+2      	; 0xb16 <__vector_14+0x42>
		tc_tcc0_ovf_callback();
     b14:	19 95       	eicall
	}
}
     b16:	ff 91       	pop	r31
     b18:	ef 91       	pop	r30
     b1a:	bf 91       	pop	r27
     b1c:	af 91       	pop	r26
     b1e:	9f 91       	pop	r25
     b20:	8f 91       	pop	r24
     b22:	7f 91       	pop	r23
     b24:	6f 91       	pop	r22
     b26:	5f 91       	pop	r21
     b28:	4f 91       	pop	r20
     b2a:	3f 91       	pop	r19
     b2c:	2f 91       	pop	r18
     b2e:	0f 90       	pop	r0
     b30:	0b be       	out	0x3b, r0	; 59
     b32:	0f 90       	pop	r0
     b34:	09 be       	out	0x39, r0	; 57
     b36:	0f 90       	pop	r0
     b38:	08 be       	out	0x38, r0	; 56
     b3a:	0f 90       	pop	r0
     b3c:	0f be       	out	0x3f, r0	; 63
     b3e:	0f 90       	pop	r0
     b40:	1f 90       	pop	r1
     b42:	18 95       	reti

00000b44 <__vector_15>:
 *
 * This function will handle interrupt on Timer Counter CO error and
 * call the callback function.
 */
ISR(TCC0_ERR_vect)
{
     b44:	1f 92       	push	r1
     b46:	0f 92       	push	r0
     b48:	0f b6       	in	r0, 0x3f	; 63
     b4a:	0f 92       	push	r0
     b4c:	11 24       	eor	r1, r1
     b4e:	08 b6       	in	r0, 0x38	; 56
     b50:	0f 92       	push	r0
     b52:	18 be       	out	0x38, r1	; 56
     b54:	09 b6       	in	r0, 0x39	; 57
     b56:	0f 92       	push	r0
     b58:	19 be       	out	0x39, r1	; 57
     b5a:	0b b6       	in	r0, 0x3b	; 59
     b5c:	0f 92       	push	r0
     b5e:	1b be       	out	0x3b, r1	; 59
     b60:	2f 93       	push	r18
     b62:	3f 93       	push	r19
     b64:	4f 93       	push	r20
     b66:	5f 93       	push	r21
     b68:	6f 93       	push	r22
     b6a:	7f 93       	push	r23
     b6c:	8f 93       	push	r24
     b6e:	9f 93       	push	r25
     b70:	af 93       	push	r26
     b72:	bf 93       	push	r27
     b74:	ef 93       	push	r30
     b76:	ff 93       	push	r31
	if (tc_tcc0_err_callback) {
     b78:	e0 91 a2 20 	lds	r30, 0x20A2
     b7c:	f0 91 a3 20 	lds	r31, 0x20A3
     b80:	30 97       	sbiw	r30, 0x00	; 0
     b82:	09 f0       	breq	.+2      	; 0xb86 <__vector_15+0x42>
		tc_tcc0_err_callback();
     b84:	19 95       	eicall
	}
}
     b86:	ff 91       	pop	r31
     b88:	ef 91       	pop	r30
     b8a:	bf 91       	pop	r27
     b8c:	af 91       	pop	r26
     b8e:	9f 91       	pop	r25
     b90:	8f 91       	pop	r24
     b92:	7f 91       	pop	r23
     b94:	6f 91       	pop	r22
     b96:	5f 91       	pop	r21
     b98:	4f 91       	pop	r20
     b9a:	3f 91       	pop	r19
     b9c:	2f 91       	pop	r18
     b9e:	0f 90       	pop	r0
     ba0:	0b be       	out	0x3b, r0	; 59
     ba2:	0f 90       	pop	r0
     ba4:	09 be       	out	0x39, r0	; 57
     ba6:	0f 90       	pop	r0
     ba8:	08 be       	out	0x38, r0	; 56
     baa:	0f 90       	pop	r0
     bac:	0f be       	out	0x3f, r0	; 63
     bae:	0f 90       	pop	r0
     bb0:	1f 90       	pop	r1
     bb2:	18 95       	reti

00000bb4 <__vector_16>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC0_CCA_vect)
{
     bb4:	1f 92       	push	r1
     bb6:	0f 92       	push	r0
     bb8:	0f b6       	in	r0, 0x3f	; 63
     bba:	0f 92       	push	r0
     bbc:	11 24       	eor	r1, r1
     bbe:	08 b6       	in	r0, 0x38	; 56
     bc0:	0f 92       	push	r0
     bc2:	18 be       	out	0x38, r1	; 56
     bc4:	09 b6       	in	r0, 0x39	; 57
     bc6:	0f 92       	push	r0
     bc8:	19 be       	out	0x39, r1	; 57
     bca:	0b b6       	in	r0, 0x3b	; 59
     bcc:	0f 92       	push	r0
     bce:	1b be       	out	0x3b, r1	; 59
     bd0:	2f 93       	push	r18
     bd2:	3f 93       	push	r19
     bd4:	4f 93       	push	r20
     bd6:	5f 93       	push	r21
     bd8:	6f 93       	push	r22
     bda:	7f 93       	push	r23
     bdc:	8f 93       	push	r24
     bde:	9f 93       	push	r25
     be0:	af 93       	push	r26
     be2:	bf 93       	push	r27
     be4:	ef 93       	push	r30
     be6:	ff 93       	push	r31
	if (tc_tcc0_cca_callback) {
     be8:	e0 91 a0 20 	lds	r30, 0x20A0
     bec:	f0 91 a1 20 	lds	r31, 0x20A1
     bf0:	30 97       	sbiw	r30, 0x00	; 0
     bf2:	09 f0       	breq	.+2      	; 0xbf6 <__vector_16+0x42>
		tc_tcc0_cca_callback();
     bf4:	19 95       	eicall
	}
}
     bf6:	ff 91       	pop	r31
     bf8:	ef 91       	pop	r30
     bfa:	bf 91       	pop	r27
     bfc:	af 91       	pop	r26
     bfe:	9f 91       	pop	r25
     c00:	8f 91       	pop	r24
     c02:	7f 91       	pop	r23
     c04:	6f 91       	pop	r22
     c06:	5f 91       	pop	r21
     c08:	4f 91       	pop	r20
     c0a:	3f 91       	pop	r19
     c0c:	2f 91       	pop	r18
     c0e:	0f 90       	pop	r0
     c10:	0b be       	out	0x3b, r0	; 59
     c12:	0f 90       	pop	r0
     c14:	09 be       	out	0x39, r0	; 57
     c16:	0f 90       	pop	r0
     c18:	08 be       	out	0x38, r0	; 56
     c1a:	0f 90       	pop	r0
     c1c:	0f be       	out	0x3f, r0	; 63
     c1e:	0f 90       	pop	r0
     c20:	1f 90       	pop	r1
     c22:	18 95       	reti

00000c24 <__vector_17>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC0_CCB_vect)
{
     c24:	1f 92       	push	r1
     c26:	0f 92       	push	r0
     c28:	0f b6       	in	r0, 0x3f	; 63
     c2a:	0f 92       	push	r0
     c2c:	11 24       	eor	r1, r1
     c2e:	08 b6       	in	r0, 0x38	; 56
     c30:	0f 92       	push	r0
     c32:	18 be       	out	0x38, r1	; 56
     c34:	09 b6       	in	r0, 0x39	; 57
     c36:	0f 92       	push	r0
     c38:	19 be       	out	0x39, r1	; 57
     c3a:	0b b6       	in	r0, 0x3b	; 59
     c3c:	0f 92       	push	r0
     c3e:	1b be       	out	0x3b, r1	; 59
     c40:	2f 93       	push	r18
     c42:	3f 93       	push	r19
     c44:	4f 93       	push	r20
     c46:	5f 93       	push	r21
     c48:	6f 93       	push	r22
     c4a:	7f 93       	push	r23
     c4c:	8f 93       	push	r24
     c4e:	9f 93       	push	r25
     c50:	af 93       	push	r26
     c52:	bf 93       	push	r27
     c54:	ef 93       	push	r30
     c56:	ff 93       	push	r31
	if (tc_tcc0_ccb_callback) {
     c58:	e0 91 9e 20 	lds	r30, 0x209E
     c5c:	f0 91 9f 20 	lds	r31, 0x209F
     c60:	30 97       	sbiw	r30, 0x00	; 0
     c62:	09 f0       	breq	.+2      	; 0xc66 <__vector_17+0x42>
		tc_tcc0_ccb_callback();
     c64:	19 95       	eicall
	}
}
     c66:	ff 91       	pop	r31
     c68:	ef 91       	pop	r30
     c6a:	bf 91       	pop	r27
     c6c:	af 91       	pop	r26
     c6e:	9f 91       	pop	r25
     c70:	8f 91       	pop	r24
     c72:	7f 91       	pop	r23
     c74:	6f 91       	pop	r22
     c76:	5f 91       	pop	r21
     c78:	4f 91       	pop	r20
     c7a:	3f 91       	pop	r19
     c7c:	2f 91       	pop	r18
     c7e:	0f 90       	pop	r0
     c80:	0b be       	out	0x3b, r0	; 59
     c82:	0f 90       	pop	r0
     c84:	09 be       	out	0x39, r0	; 57
     c86:	0f 90       	pop	r0
     c88:	08 be       	out	0x38, r0	; 56
     c8a:	0f 90       	pop	r0
     c8c:	0f be       	out	0x3f, r0	; 63
     c8e:	0f 90       	pop	r0
     c90:	1f 90       	pop	r1
     c92:	18 95       	reti

00000c94 <__vector_18>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureC and
 * call the callback function.
 */
ISR(TCC0_CCC_vect)
{
     c94:	1f 92       	push	r1
     c96:	0f 92       	push	r0
     c98:	0f b6       	in	r0, 0x3f	; 63
     c9a:	0f 92       	push	r0
     c9c:	11 24       	eor	r1, r1
     c9e:	08 b6       	in	r0, 0x38	; 56
     ca0:	0f 92       	push	r0
     ca2:	18 be       	out	0x38, r1	; 56
     ca4:	09 b6       	in	r0, 0x39	; 57
     ca6:	0f 92       	push	r0
     ca8:	19 be       	out	0x39, r1	; 57
     caa:	0b b6       	in	r0, 0x3b	; 59
     cac:	0f 92       	push	r0
     cae:	1b be       	out	0x3b, r1	; 59
     cb0:	2f 93       	push	r18
     cb2:	3f 93       	push	r19
     cb4:	4f 93       	push	r20
     cb6:	5f 93       	push	r21
     cb8:	6f 93       	push	r22
     cba:	7f 93       	push	r23
     cbc:	8f 93       	push	r24
     cbe:	9f 93       	push	r25
     cc0:	af 93       	push	r26
     cc2:	bf 93       	push	r27
     cc4:	ef 93       	push	r30
     cc6:	ff 93       	push	r31
	if (tc_tcc0_ccc_callback) {
     cc8:	e0 91 9c 20 	lds	r30, 0x209C
     ccc:	f0 91 9d 20 	lds	r31, 0x209D
     cd0:	30 97       	sbiw	r30, 0x00	; 0
     cd2:	09 f0       	breq	.+2      	; 0xcd6 <__vector_18+0x42>
		tc_tcc0_ccc_callback();
     cd4:	19 95       	eicall
	}
}
     cd6:	ff 91       	pop	r31
     cd8:	ef 91       	pop	r30
     cda:	bf 91       	pop	r27
     cdc:	af 91       	pop	r26
     cde:	9f 91       	pop	r25
     ce0:	8f 91       	pop	r24
     ce2:	7f 91       	pop	r23
     ce4:	6f 91       	pop	r22
     ce6:	5f 91       	pop	r21
     ce8:	4f 91       	pop	r20
     cea:	3f 91       	pop	r19
     cec:	2f 91       	pop	r18
     cee:	0f 90       	pop	r0
     cf0:	0b be       	out	0x3b, r0	; 59
     cf2:	0f 90       	pop	r0
     cf4:	09 be       	out	0x39, r0	; 57
     cf6:	0f 90       	pop	r0
     cf8:	08 be       	out	0x38, r0	; 56
     cfa:	0f 90       	pop	r0
     cfc:	0f be       	out	0x3f, r0	; 63
     cfe:	0f 90       	pop	r0
     d00:	1f 90       	pop	r1
     d02:	18 95       	reti

00000d04 <__vector_19>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureD and
 * call the callback function.
 */
ISR(TCC0_CCD_vect)
{
     d04:	1f 92       	push	r1
     d06:	0f 92       	push	r0
     d08:	0f b6       	in	r0, 0x3f	; 63
     d0a:	0f 92       	push	r0
     d0c:	11 24       	eor	r1, r1
     d0e:	08 b6       	in	r0, 0x38	; 56
     d10:	0f 92       	push	r0
     d12:	18 be       	out	0x38, r1	; 56
     d14:	09 b6       	in	r0, 0x39	; 57
     d16:	0f 92       	push	r0
     d18:	19 be       	out	0x39, r1	; 57
     d1a:	0b b6       	in	r0, 0x3b	; 59
     d1c:	0f 92       	push	r0
     d1e:	1b be       	out	0x3b, r1	; 59
     d20:	2f 93       	push	r18
     d22:	3f 93       	push	r19
     d24:	4f 93       	push	r20
     d26:	5f 93       	push	r21
     d28:	6f 93       	push	r22
     d2a:	7f 93       	push	r23
     d2c:	8f 93       	push	r24
     d2e:	9f 93       	push	r25
     d30:	af 93       	push	r26
     d32:	bf 93       	push	r27
     d34:	ef 93       	push	r30
     d36:	ff 93       	push	r31
	if (tc_tcc0_ccd_callback) {
     d38:	e0 91 9a 20 	lds	r30, 0x209A
     d3c:	f0 91 9b 20 	lds	r31, 0x209B
     d40:	30 97       	sbiw	r30, 0x00	; 0
     d42:	09 f0       	breq	.+2      	; 0xd46 <__vector_19+0x42>
		tc_tcc0_ccd_callback();
     d44:	19 95       	eicall
	}
}
     d46:	ff 91       	pop	r31
     d48:	ef 91       	pop	r30
     d4a:	bf 91       	pop	r27
     d4c:	af 91       	pop	r26
     d4e:	9f 91       	pop	r25
     d50:	8f 91       	pop	r24
     d52:	7f 91       	pop	r23
     d54:	6f 91       	pop	r22
     d56:	5f 91       	pop	r21
     d58:	4f 91       	pop	r20
     d5a:	3f 91       	pop	r19
     d5c:	2f 91       	pop	r18
     d5e:	0f 90       	pop	r0
     d60:	0b be       	out	0x3b, r0	; 59
     d62:	0f 90       	pop	r0
     d64:	09 be       	out	0x39, r0	; 57
     d66:	0f 90       	pop	r0
     d68:	08 be       	out	0x38, r0	; 56
     d6a:	0f 90       	pop	r0
     d6c:	0f be       	out	0x3f, r0	; 63
     d6e:	0f 90       	pop	r0
     d70:	1f 90       	pop	r1
     d72:	18 95       	reti

00000d74 <__vector_20>:
 *
 * This function will handle interrupt on Timer Counter C1 overflow and
 * call the callback function.
 */
ISR(TCC1_OVF_vect)
{
     d74:	1f 92       	push	r1
     d76:	0f 92       	push	r0
     d78:	0f b6       	in	r0, 0x3f	; 63
     d7a:	0f 92       	push	r0
     d7c:	11 24       	eor	r1, r1
     d7e:	08 b6       	in	r0, 0x38	; 56
     d80:	0f 92       	push	r0
     d82:	18 be       	out	0x38, r1	; 56
     d84:	09 b6       	in	r0, 0x39	; 57
     d86:	0f 92       	push	r0
     d88:	19 be       	out	0x39, r1	; 57
     d8a:	0b b6       	in	r0, 0x3b	; 59
     d8c:	0f 92       	push	r0
     d8e:	1b be       	out	0x3b, r1	; 59
     d90:	2f 93       	push	r18
     d92:	3f 93       	push	r19
     d94:	4f 93       	push	r20
     d96:	5f 93       	push	r21
     d98:	6f 93       	push	r22
     d9a:	7f 93       	push	r23
     d9c:	8f 93       	push	r24
     d9e:	9f 93       	push	r25
     da0:	af 93       	push	r26
     da2:	bf 93       	push	r27
     da4:	ef 93       	push	r30
     da6:	ff 93       	push	r31
	if (tc_tcc1_ovf_callback) {
     da8:	e0 91 98 20 	lds	r30, 0x2098
     dac:	f0 91 99 20 	lds	r31, 0x2099
     db0:	30 97       	sbiw	r30, 0x00	; 0
     db2:	09 f0       	breq	.+2      	; 0xdb6 <__vector_20+0x42>
		tc_tcc1_ovf_callback();
     db4:	19 95       	eicall
	}
}
     db6:	ff 91       	pop	r31
     db8:	ef 91       	pop	r30
     dba:	bf 91       	pop	r27
     dbc:	af 91       	pop	r26
     dbe:	9f 91       	pop	r25
     dc0:	8f 91       	pop	r24
     dc2:	7f 91       	pop	r23
     dc4:	6f 91       	pop	r22
     dc6:	5f 91       	pop	r21
     dc8:	4f 91       	pop	r20
     dca:	3f 91       	pop	r19
     dcc:	2f 91       	pop	r18
     dce:	0f 90       	pop	r0
     dd0:	0b be       	out	0x3b, r0	; 59
     dd2:	0f 90       	pop	r0
     dd4:	09 be       	out	0x39, r0	; 57
     dd6:	0f 90       	pop	r0
     dd8:	08 be       	out	0x38, r0	; 56
     dda:	0f 90       	pop	r0
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	0f 90       	pop	r0
     de0:	1f 90       	pop	r1
     de2:	18 95       	reti

00000de4 <__vector_21>:
 *
 * This function will handle interrupt on Timer Counter C1 error and
 * call the callback function.
 */
ISR(TCC1_ERR_vect)
{
     de4:	1f 92       	push	r1
     de6:	0f 92       	push	r0
     de8:	0f b6       	in	r0, 0x3f	; 63
     dea:	0f 92       	push	r0
     dec:	11 24       	eor	r1, r1
     dee:	08 b6       	in	r0, 0x38	; 56
     df0:	0f 92       	push	r0
     df2:	18 be       	out	0x38, r1	; 56
     df4:	09 b6       	in	r0, 0x39	; 57
     df6:	0f 92       	push	r0
     df8:	19 be       	out	0x39, r1	; 57
     dfa:	0b b6       	in	r0, 0x3b	; 59
     dfc:	0f 92       	push	r0
     dfe:	1b be       	out	0x3b, r1	; 59
     e00:	2f 93       	push	r18
     e02:	3f 93       	push	r19
     e04:	4f 93       	push	r20
     e06:	5f 93       	push	r21
     e08:	6f 93       	push	r22
     e0a:	7f 93       	push	r23
     e0c:	8f 93       	push	r24
     e0e:	9f 93       	push	r25
     e10:	af 93       	push	r26
     e12:	bf 93       	push	r27
     e14:	ef 93       	push	r30
     e16:	ff 93       	push	r31
	if (tc_tcc1_err_callback) {
     e18:	e0 91 96 20 	lds	r30, 0x2096
     e1c:	f0 91 97 20 	lds	r31, 0x2097
     e20:	30 97       	sbiw	r30, 0x00	; 0
     e22:	09 f0       	breq	.+2      	; 0xe26 <__vector_21+0x42>
		tc_tcc1_err_callback();
     e24:	19 95       	eicall
	}
}
     e26:	ff 91       	pop	r31
     e28:	ef 91       	pop	r30
     e2a:	bf 91       	pop	r27
     e2c:	af 91       	pop	r26
     e2e:	9f 91       	pop	r25
     e30:	8f 91       	pop	r24
     e32:	7f 91       	pop	r23
     e34:	6f 91       	pop	r22
     e36:	5f 91       	pop	r21
     e38:	4f 91       	pop	r20
     e3a:	3f 91       	pop	r19
     e3c:	2f 91       	pop	r18
     e3e:	0f 90       	pop	r0
     e40:	0b be       	out	0x3b, r0	; 59
     e42:	0f 90       	pop	r0
     e44:	09 be       	out	0x39, r0	; 57
     e46:	0f 90       	pop	r0
     e48:	08 be       	out	0x38, r0	; 56
     e4a:	0f 90       	pop	r0
     e4c:	0f be       	out	0x3f, r0	; 63
     e4e:	0f 90       	pop	r0
     e50:	1f 90       	pop	r1
     e52:	18 95       	reti

00000e54 <__vector_22>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC1_CCA_vect)
{
     e54:	1f 92       	push	r1
     e56:	0f 92       	push	r0
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	0f 92       	push	r0
     e5c:	11 24       	eor	r1, r1
     e5e:	08 b6       	in	r0, 0x38	; 56
     e60:	0f 92       	push	r0
     e62:	18 be       	out	0x38, r1	; 56
     e64:	09 b6       	in	r0, 0x39	; 57
     e66:	0f 92       	push	r0
     e68:	19 be       	out	0x39, r1	; 57
     e6a:	0b b6       	in	r0, 0x3b	; 59
     e6c:	0f 92       	push	r0
     e6e:	1b be       	out	0x3b, r1	; 59
     e70:	2f 93       	push	r18
     e72:	3f 93       	push	r19
     e74:	4f 93       	push	r20
     e76:	5f 93       	push	r21
     e78:	6f 93       	push	r22
     e7a:	7f 93       	push	r23
     e7c:	8f 93       	push	r24
     e7e:	9f 93       	push	r25
     e80:	af 93       	push	r26
     e82:	bf 93       	push	r27
     e84:	ef 93       	push	r30
     e86:	ff 93       	push	r31
	if (tc_tcc1_cca_callback) {
     e88:	e0 91 94 20 	lds	r30, 0x2094
     e8c:	f0 91 95 20 	lds	r31, 0x2095
     e90:	30 97       	sbiw	r30, 0x00	; 0
     e92:	09 f0       	breq	.+2      	; 0xe96 <__vector_22+0x42>
		tc_tcc1_cca_callback();
     e94:	19 95       	eicall
	}
}
     e96:	ff 91       	pop	r31
     e98:	ef 91       	pop	r30
     e9a:	bf 91       	pop	r27
     e9c:	af 91       	pop	r26
     e9e:	9f 91       	pop	r25
     ea0:	8f 91       	pop	r24
     ea2:	7f 91       	pop	r23
     ea4:	6f 91       	pop	r22
     ea6:	5f 91       	pop	r21
     ea8:	4f 91       	pop	r20
     eaa:	3f 91       	pop	r19
     eac:	2f 91       	pop	r18
     eae:	0f 90       	pop	r0
     eb0:	0b be       	out	0x3b, r0	; 59
     eb2:	0f 90       	pop	r0
     eb4:	09 be       	out	0x39, r0	; 57
     eb6:	0f 90       	pop	r0
     eb8:	08 be       	out	0x38, r0	; 56
     eba:	0f 90       	pop	r0
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	0f 90       	pop	r0
     ec0:	1f 90       	pop	r1
     ec2:	18 95       	reti

00000ec4 <__vector_23>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC1_CCB_vect)
{
     ec4:	1f 92       	push	r1
     ec6:	0f 92       	push	r0
     ec8:	0f b6       	in	r0, 0x3f	; 63
     eca:	0f 92       	push	r0
     ecc:	11 24       	eor	r1, r1
     ece:	08 b6       	in	r0, 0x38	; 56
     ed0:	0f 92       	push	r0
     ed2:	18 be       	out	0x38, r1	; 56
     ed4:	09 b6       	in	r0, 0x39	; 57
     ed6:	0f 92       	push	r0
     ed8:	19 be       	out	0x39, r1	; 57
     eda:	0b b6       	in	r0, 0x3b	; 59
     edc:	0f 92       	push	r0
     ede:	1b be       	out	0x3b, r1	; 59
     ee0:	2f 93       	push	r18
     ee2:	3f 93       	push	r19
     ee4:	4f 93       	push	r20
     ee6:	5f 93       	push	r21
     ee8:	6f 93       	push	r22
     eea:	7f 93       	push	r23
     eec:	8f 93       	push	r24
     eee:	9f 93       	push	r25
     ef0:	af 93       	push	r26
     ef2:	bf 93       	push	r27
     ef4:	ef 93       	push	r30
     ef6:	ff 93       	push	r31
	if (tc_tcc1_ccb_callback) {
     ef8:	e0 91 92 20 	lds	r30, 0x2092
     efc:	f0 91 93 20 	lds	r31, 0x2093
     f00:	30 97       	sbiw	r30, 0x00	; 0
     f02:	09 f0       	breq	.+2      	; 0xf06 <__vector_23+0x42>
		tc_tcc1_ccb_callback();
     f04:	19 95       	eicall
	}
}
     f06:	ff 91       	pop	r31
     f08:	ef 91       	pop	r30
     f0a:	bf 91       	pop	r27
     f0c:	af 91       	pop	r26
     f0e:	9f 91       	pop	r25
     f10:	8f 91       	pop	r24
     f12:	7f 91       	pop	r23
     f14:	6f 91       	pop	r22
     f16:	5f 91       	pop	r21
     f18:	4f 91       	pop	r20
     f1a:	3f 91       	pop	r19
     f1c:	2f 91       	pop	r18
     f1e:	0f 90       	pop	r0
     f20:	0b be       	out	0x3b, r0	; 59
     f22:	0f 90       	pop	r0
     f24:	09 be       	out	0x39, r0	; 57
     f26:	0f 90       	pop	r0
     f28:	08 be       	out	0x38, r0	; 56
     f2a:	0f 90       	pop	r0
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	0f 90       	pop	r0
     f30:	1f 90       	pop	r1
     f32:	18 95       	reti

00000f34 <__vector_78>:
 *
 * This function will handle interrupt on Timer Counter D0 error and
 * call the callback function.
 */
ISR(TCD0_ERR_vect)
{
     f34:	1f 92       	push	r1
     f36:	0f 92       	push	r0
     f38:	0f b6       	in	r0, 0x3f	; 63
     f3a:	0f 92       	push	r0
     f3c:	11 24       	eor	r1, r1
     f3e:	08 b6       	in	r0, 0x38	; 56
     f40:	0f 92       	push	r0
     f42:	18 be       	out	0x38, r1	; 56
     f44:	09 b6       	in	r0, 0x39	; 57
     f46:	0f 92       	push	r0
     f48:	19 be       	out	0x39, r1	; 57
     f4a:	0b b6       	in	r0, 0x3b	; 59
     f4c:	0f 92       	push	r0
     f4e:	1b be       	out	0x3b, r1	; 59
     f50:	2f 93       	push	r18
     f52:	3f 93       	push	r19
     f54:	4f 93       	push	r20
     f56:	5f 93       	push	r21
     f58:	6f 93       	push	r22
     f5a:	7f 93       	push	r23
     f5c:	8f 93       	push	r24
     f5e:	9f 93       	push	r25
     f60:	af 93       	push	r26
     f62:	bf 93       	push	r27
     f64:	ef 93       	push	r30
     f66:	ff 93       	push	r31
	if (tc_tcd0_err_callback) {
     f68:	e0 91 90 20 	lds	r30, 0x2090
     f6c:	f0 91 91 20 	lds	r31, 0x2091
     f70:	30 97       	sbiw	r30, 0x00	; 0
     f72:	09 f0       	breq	.+2      	; 0xf76 <__vector_78+0x42>
		tc_tcd0_err_callback();
     f74:	19 95       	eicall
	}
}
     f76:	ff 91       	pop	r31
     f78:	ef 91       	pop	r30
     f7a:	bf 91       	pop	r27
     f7c:	af 91       	pop	r26
     f7e:	9f 91       	pop	r25
     f80:	8f 91       	pop	r24
     f82:	7f 91       	pop	r23
     f84:	6f 91       	pop	r22
     f86:	5f 91       	pop	r21
     f88:	4f 91       	pop	r20
     f8a:	3f 91       	pop	r19
     f8c:	2f 91       	pop	r18
     f8e:	0f 90       	pop	r0
     f90:	0b be       	out	0x3b, r0	; 59
     f92:	0f 90       	pop	r0
     f94:	09 be       	out	0x39, r0	; 57
     f96:	0f 90       	pop	r0
     f98:	08 be       	out	0x38, r0	; 56
     f9a:	0f 90       	pop	r0
     f9c:	0f be       	out	0x3f, r0	; 63
     f9e:	0f 90       	pop	r0
     fa0:	1f 90       	pop	r1
     fa2:	18 95       	reti

00000fa4 <__vector_79>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD0_CCA_vect)
{
     fa4:	1f 92       	push	r1
     fa6:	0f 92       	push	r0
     fa8:	0f b6       	in	r0, 0x3f	; 63
     faa:	0f 92       	push	r0
     fac:	11 24       	eor	r1, r1
     fae:	08 b6       	in	r0, 0x38	; 56
     fb0:	0f 92       	push	r0
     fb2:	18 be       	out	0x38, r1	; 56
     fb4:	09 b6       	in	r0, 0x39	; 57
     fb6:	0f 92       	push	r0
     fb8:	19 be       	out	0x39, r1	; 57
     fba:	0b b6       	in	r0, 0x3b	; 59
     fbc:	0f 92       	push	r0
     fbe:	1b be       	out	0x3b, r1	; 59
     fc0:	2f 93       	push	r18
     fc2:	3f 93       	push	r19
     fc4:	4f 93       	push	r20
     fc6:	5f 93       	push	r21
     fc8:	6f 93       	push	r22
     fca:	7f 93       	push	r23
     fcc:	8f 93       	push	r24
     fce:	9f 93       	push	r25
     fd0:	af 93       	push	r26
     fd2:	bf 93       	push	r27
     fd4:	ef 93       	push	r30
     fd6:	ff 93       	push	r31
	if (tc_tcd0_cca_callback) {
     fd8:	e0 91 8e 20 	lds	r30, 0x208E
     fdc:	f0 91 8f 20 	lds	r31, 0x208F
     fe0:	30 97       	sbiw	r30, 0x00	; 0
     fe2:	09 f0       	breq	.+2      	; 0xfe6 <__vector_79+0x42>
		tc_tcd0_cca_callback();
     fe4:	19 95       	eicall
	}
}
     fe6:	ff 91       	pop	r31
     fe8:	ef 91       	pop	r30
     fea:	bf 91       	pop	r27
     fec:	af 91       	pop	r26
     fee:	9f 91       	pop	r25
     ff0:	8f 91       	pop	r24
     ff2:	7f 91       	pop	r23
     ff4:	6f 91       	pop	r22
     ff6:	5f 91       	pop	r21
     ff8:	4f 91       	pop	r20
     ffa:	3f 91       	pop	r19
     ffc:	2f 91       	pop	r18
     ffe:	0f 90       	pop	r0
    1000:	0b be       	out	0x3b, r0	; 59
    1002:	0f 90       	pop	r0
    1004:	09 be       	out	0x39, r0	; 57
    1006:	0f 90       	pop	r0
    1008:	08 be       	out	0x38, r0	; 56
    100a:	0f 90       	pop	r0
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	0f 90       	pop	r0
    1010:	1f 90       	pop	r1
    1012:	18 95       	reti

00001014 <__vector_80>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD0_CCB_vect)
{
    1014:	1f 92       	push	r1
    1016:	0f 92       	push	r0
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	0f 92       	push	r0
    101c:	11 24       	eor	r1, r1
    101e:	08 b6       	in	r0, 0x38	; 56
    1020:	0f 92       	push	r0
    1022:	18 be       	out	0x38, r1	; 56
    1024:	09 b6       	in	r0, 0x39	; 57
    1026:	0f 92       	push	r0
    1028:	19 be       	out	0x39, r1	; 57
    102a:	0b b6       	in	r0, 0x3b	; 59
    102c:	0f 92       	push	r0
    102e:	1b be       	out	0x3b, r1	; 59
    1030:	2f 93       	push	r18
    1032:	3f 93       	push	r19
    1034:	4f 93       	push	r20
    1036:	5f 93       	push	r21
    1038:	6f 93       	push	r22
    103a:	7f 93       	push	r23
    103c:	8f 93       	push	r24
    103e:	9f 93       	push	r25
    1040:	af 93       	push	r26
    1042:	bf 93       	push	r27
    1044:	ef 93       	push	r30
    1046:	ff 93       	push	r31
	if (tc_tcd0_ccb_callback) {
    1048:	e0 91 8c 20 	lds	r30, 0x208C
    104c:	f0 91 8d 20 	lds	r31, 0x208D
    1050:	30 97       	sbiw	r30, 0x00	; 0
    1052:	09 f0       	breq	.+2      	; 0x1056 <__vector_80+0x42>
		tc_tcd0_ccb_callback();
    1054:	19 95       	eicall
	}
}
    1056:	ff 91       	pop	r31
    1058:	ef 91       	pop	r30
    105a:	bf 91       	pop	r27
    105c:	af 91       	pop	r26
    105e:	9f 91       	pop	r25
    1060:	8f 91       	pop	r24
    1062:	7f 91       	pop	r23
    1064:	6f 91       	pop	r22
    1066:	5f 91       	pop	r21
    1068:	4f 91       	pop	r20
    106a:	3f 91       	pop	r19
    106c:	2f 91       	pop	r18
    106e:	0f 90       	pop	r0
    1070:	0b be       	out	0x3b, r0	; 59
    1072:	0f 90       	pop	r0
    1074:	09 be       	out	0x39, r0	; 57
    1076:	0f 90       	pop	r0
    1078:	08 be       	out	0x38, r0	; 56
    107a:	0f 90       	pop	r0
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	0f 90       	pop	r0
    1080:	1f 90       	pop	r1
    1082:	18 95       	reti

00001084 <__vector_81>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCD0_CCC_vect)
{
    1084:	1f 92       	push	r1
    1086:	0f 92       	push	r0
    1088:	0f b6       	in	r0, 0x3f	; 63
    108a:	0f 92       	push	r0
    108c:	11 24       	eor	r1, r1
    108e:	08 b6       	in	r0, 0x38	; 56
    1090:	0f 92       	push	r0
    1092:	18 be       	out	0x38, r1	; 56
    1094:	09 b6       	in	r0, 0x39	; 57
    1096:	0f 92       	push	r0
    1098:	19 be       	out	0x39, r1	; 57
    109a:	0b b6       	in	r0, 0x3b	; 59
    109c:	0f 92       	push	r0
    109e:	1b be       	out	0x3b, r1	; 59
    10a0:	2f 93       	push	r18
    10a2:	3f 93       	push	r19
    10a4:	4f 93       	push	r20
    10a6:	5f 93       	push	r21
    10a8:	6f 93       	push	r22
    10aa:	7f 93       	push	r23
    10ac:	8f 93       	push	r24
    10ae:	9f 93       	push	r25
    10b0:	af 93       	push	r26
    10b2:	bf 93       	push	r27
    10b4:	ef 93       	push	r30
    10b6:	ff 93       	push	r31
	if (tc_tcd0_ccc_callback) {
    10b8:	e0 91 8a 20 	lds	r30, 0x208A
    10bc:	f0 91 8b 20 	lds	r31, 0x208B
    10c0:	30 97       	sbiw	r30, 0x00	; 0
    10c2:	09 f0       	breq	.+2      	; 0x10c6 <__vector_81+0x42>
		tc_tcd0_ccc_callback();
    10c4:	19 95       	eicall
	}
}
    10c6:	ff 91       	pop	r31
    10c8:	ef 91       	pop	r30
    10ca:	bf 91       	pop	r27
    10cc:	af 91       	pop	r26
    10ce:	9f 91       	pop	r25
    10d0:	8f 91       	pop	r24
    10d2:	7f 91       	pop	r23
    10d4:	6f 91       	pop	r22
    10d6:	5f 91       	pop	r21
    10d8:	4f 91       	pop	r20
    10da:	3f 91       	pop	r19
    10dc:	2f 91       	pop	r18
    10de:	0f 90       	pop	r0
    10e0:	0b be       	out	0x3b, r0	; 59
    10e2:	0f 90       	pop	r0
    10e4:	09 be       	out	0x39, r0	; 57
    10e6:	0f 90       	pop	r0
    10e8:	08 be       	out	0x38, r0	; 56
    10ea:	0f 90       	pop	r0
    10ec:	0f be       	out	0x3f, r0	; 63
    10ee:	0f 90       	pop	r0
    10f0:	1f 90       	pop	r1
    10f2:	18 95       	reti

000010f4 <__vector_82>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCD0_CCD_vect)
{
    10f4:	1f 92       	push	r1
    10f6:	0f 92       	push	r0
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	0f 92       	push	r0
    10fc:	11 24       	eor	r1, r1
    10fe:	08 b6       	in	r0, 0x38	; 56
    1100:	0f 92       	push	r0
    1102:	18 be       	out	0x38, r1	; 56
    1104:	09 b6       	in	r0, 0x39	; 57
    1106:	0f 92       	push	r0
    1108:	19 be       	out	0x39, r1	; 57
    110a:	0b b6       	in	r0, 0x3b	; 59
    110c:	0f 92       	push	r0
    110e:	1b be       	out	0x3b, r1	; 59
    1110:	2f 93       	push	r18
    1112:	3f 93       	push	r19
    1114:	4f 93       	push	r20
    1116:	5f 93       	push	r21
    1118:	6f 93       	push	r22
    111a:	7f 93       	push	r23
    111c:	8f 93       	push	r24
    111e:	9f 93       	push	r25
    1120:	af 93       	push	r26
    1122:	bf 93       	push	r27
    1124:	ef 93       	push	r30
    1126:	ff 93       	push	r31
	if (tc_tcd0_ccd_callback) {
    1128:	e0 91 88 20 	lds	r30, 0x2088
    112c:	f0 91 89 20 	lds	r31, 0x2089
    1130:	30 97       	sbiw	r30, 0x00	; 0
    1132:	09 f0       	breq	.+2      	; 0x1136 <__vector_82+0x42>
		tc_tcd0_ccd_callback();
    1134:	19 95       	eicall
	}
}
    1136:	ff 91       	pop	r31
    1138:	ef 91       	pop	r30
    113a:	bf 91       	pop	r27
    113c:	af 91       	pop	r26
    113e:	9f 91       	pop	r25
    1140:	8f 91       	pop	r24
    1142:	7f 91       	pop	r23
    1144:	6f 91       	pop	r22
    1146:	5f 91       	pop	r21
    1148:	4f 91       	pop	r20
    114a:	3f 91       	pop	r19
    114c:	2f 91       	pop	r18
    114e:	0f 90       	pop	r0
    1150:	0b be       	out	0x3b, r0	; 59
    1152:	0f 90       	pop	r0
    1154:	09 be       	out	0x39, r0	; 57
    1156:	0f 90       	pop	r0
    1158:	08 be       	out	0x38, r0	; 56
    115a:	0f 90       	pop	r0
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	0f 90       	pop	r0
    1160:	1f 90       	pop	r1
    1162:	18 95       	reti

00001164 <__vector_83>:
 *
 * This function will handle interrupt on Timer Counter D1 overflow and
 * call the callback function.
 */
ISR(TCD1_OVF_vect)
{
    1164:	1f 92       	push	r1
    1166:	0f 92       	push	r0
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	0f 92       	push	r0
    116c:	11 24       	eor	r1, r1
    116e:	08 b6       	in	r0, 0x38	; 56
    1170:	0f 92       	push	r0
    1172:	18 be       	out	0x38, r1	; 56
    1174:	09 b6       	in	r0, 0x39	; 57
    1176:	0f 92       	push	r0
    1178:	19 be       	out	0x39, r1	; 57
    117a:	0b b6       	in	r0, 0x3b	; 59
    117c:	0f 92       	push	r0
    117e:	1b be       	out	0x3b, r1	; 59
    1180:	2f 93       	push	r18
    1182:	3f 93       	push	r19
    1184:	4f 93       	push	r20
    1186:	5f 93       	push	r21
    1188:	6f 93       	push	r22
    118a:	7f 93       	push	r23
    118c:	8f 93       	push	r24
    118e:	9f 93       	push	r25
    1190:	af 93       	push	r26
    1192:	bf 93       	push	r27
    1194:	ef 93       	push	r30
    1196:	ff 93       	push	r31
	if (tc_tcd1_ovf_callback) {
    1198:	e0 91 86 20 	lds	r30, 0x2086
    119c:	f0 91 87 20 	lds	r31, 0x2087
    11a0:	30 97       	sbiw	r30, 0x00	; 0
    11a2:	09 f0       	breq	.+2      	; 0x11a6 <__vector_83+0x42>
		tc_tcd1_ovf_callback();
    11a4:	19 95       	eicall
	}
}
    11a6:	ff 91       	pop	r31
    11a8:	ef 91       	pop	r30
    11aa:	bf 91       	pop	r27
    11ac:	af 91       	pop	r26
    11ae:	9f 91       	pop	r25
    11b0:	8f 91       	pop	r24
    11b2:	7f 91       	pop	r23
    11b4:	6f 91       	pop	r22
    11b6:	5f 91       	pop	r21
    11b8:	4f 91       	pop	r20
    11ba:	3f 91       	pop	r19
    11bc:	2f 91       	pop	r18
    11be:	0f 90       	pop	r0
    11c0:	0b be       	out	0x3b, r0	; 59
    11c2:	0f 90       	pop	r0
    11c4:	09 be       	out	0x39, r0	; 57
    11c6:	0f 90       	pop	r0
    11c8:	08 be       	out	0x38, r0	; 56
    11ca:	0f 90       	pop	r0
    11cc:	0f be       	out	0x3f, r0	; 63
    11ce:	0f 90       	pop	r0
    11d0:	1f 90       	pop	r1
    11d2:	18 95       	reti

000011d4 <__vector_84>:
 *
 * This function will handle interrupt on Timer Counter D1 error and
 * call the callback function.
 */
ISR(TCD1_ERR_vect)
{
    11d4:	1f 92       	push	r1
    11d6:	0f 92       	push	r0
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	0f 92       	push	r0
    11dc:	11 24       	eor	r1, r1
    11de:	08 b6       	in	r0, 0x38	; 56
    11e0:	0f 92       	push	r0
    11e2:	18 be       	out	0x38, r1	; 56
    11e4:	09 b6       	in	r0, 0x39	; 57
    11e6:	0f 92       	push	r0
    11e8:	19 be       	out	0x39, r1	; 57
    11ea:	0b b6       	in	r0, 0x3b	; 59
    11ec:	0f 92       	push	r0
    11ee:	1b be       	out	0x3b, r1	; 59
    11f0:	2f 93       	push	r18
    11f2:	3f 93       	push	r19
    11f4:	4f 93       	push	r20
    11f6:	5f 93       	push	r21
    11f8:	6f 93       	push	r22
    11fa:	7f 93       	push	r23
    11fc:	8f 93       	push	r24
    11fe:	9f 93       	push	r25
    1200:	af 93       	push	r26
    1202:	bf 93       	push	r27
    1204:	ef 93       	push	r30
    1206:	ff 93       	push	r31
	if (tc_tcd1_err_callback) {
    1208:	e0 91 84 20 	lds	r30, 0x2084
    120c:	f0 91 85 20 	lds	r31, 0x2085
    1210:	30 97       	sbiw	r30, 0x00	; 0
    1212:	09 f0       	breq	.+2      	; 0x1216 <__vector_84+0x42>
		tc_tcd1_err_callback();
    1214:	19 95       	eicall
	}
}
    1216:	ff 91       	pop	r31
    1218:	ef 91       	pop	r30
    121a:	bf 91       	pop	r27
    121c:	af 91       	pop	r26
    121e:	9f 91       	pop	r25
    1220:	8f 91       	pop	r24
    1222:	7f 91       	pop	r23
    1224:	6f 91       	pop	r22
    1226:	5f 91       	pop	r21
    1228:	4f 91       	pop	r20
    122a:	3f 91       	pop	r19
    122c:	2f 91       	pop	r18
    122e:	0f 90       	pop	r0
    1230:	0b be       	out	0x3b, r0	; 59
    1232:	0f 90       	pop	r0
    1234:	09 be       	out	0x39, r0	; 57
    1236:	0f 90       	pop	r0
    1238:	08 be       	out	0x38, r0	; 56
    123a:	0f 90       	pop	r0
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	0f 90       	pop	r0
    1240:	1f 90       	pop	r1
    1242:	18 95       	reti

00001244 <__vector_85>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD1_CCA_vect)
{
    1244:	1f 92       	push	r1
    1246:	0f 92       	push	r0
    1248:	0f b6       	in	r0, 0x3f	; 63
    124a:	0f 92       	push	r0
    124c:	11 24       	eor	r1, r1
    124e:	08 b6       	in	r0, 0x38	; 56
    1250:	0f 92       	push	r0
    1252:	18 be       	out	0x38, r1	; 56
    1254:	09 b6       	in	r0, 0x39	; 57
    1256:	0f 92       	push	r0
    1258:	19 be       	out	0x39, r1	; 57
    125a:	0b b6       	in	r0, 0x3b	; 59
    125c:	0f 92       	push	r0
    125e:	1b be       	out	0x3b, r1	; 59
    1260:	2f 93       	push	r18
    1262:	3f 93       	push	r19
    1264:	4f 93       	push	r20
    1266:	5f 93       	push	r21
    1268:	6f 93       	push	r22
    126a:	7f 93       	push	r23
    126c:	8f 93       	push	r24
    126e:	9f 93       	push	r25
    1270:	af 93       	push	r26
    1272:	bf 93       	push	r27
    1274:	ef 93       	push	r30
    1276:	ff 93       	push	r31
	if (tc_tcd1_cca_callback) {
    1278:	e0 91 82 20 	lds	r30, 0x2082
    127c:	f0 91 83 20 	lds	r31, 0x2083
    1280:	30 97       	sbiw	r30, 0x00	; 0
    1282:	09 f0       	breq	.+2      	; 0x1286 <__vector_85+0x42>
		tc_tcd1_cca_callback();
    1284:	19 95       	eicall
	}
}
    1286:	ff 91       	pop	r31
    1288:	ef 91       	pop	r30
    128a:	bf 91       	pop	r27
    128c:	af 91       	pop	r26
    128e:	9f 91       	pop	r25
    1290:	8f 91       	pop	r24
    1292:	7f 91       	pop	r23
    1294:	6f 91       	pop	r22
    1296:	5f 91       	pop	r21
    1298:	4f 91       	pop	r20
    129a:	3f 91       	pop	r19
    129c:	2f 91       	pop	r18
    129e:	0f 90       	pop	r0
    12a0:	0b be       	out	0x3b, r0	; 59
    12a2:	0f 90       	pop	r0
    12a4:	09 be       	out	0x39, r0	; 57
    12a6:	0f 90       	pop	r0
    12a8:	08 be       	out	0x38, r0	; 56
    12aa:	0f 90       	pop	r0
    12ac:	0f be       	out	0x3f, r0	; 63
    12ae:	0f 90       	pop	r0
    12b0:	1f 90       	pop	r1
    12b2:	18 95       	reti

000012b4 <__vector_86>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD1_CCB_vect)
{
    12b4:	1f 92       	push	r1
    12b6:	0f 92       	push	r0
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	0f 92       	push	r0
    12bc:	11 24       	eor	r1, r1
    12be:	08 b6       	in	r0, 0x38	; 56
    12c0:	0f 92       	push	r0
    12c2:	18 be       	out	0x38, r1	; 56
    12c4:	09 b6       	in	r0, 0x39	; 57
    12c6:	0f 92       	push	r0
    12c8:	19 be       	out	0x39, r1	; 57
    12ca:	0b b6       	in	r0, 0x3b	; 59
    12cc:	0f 92       	push	r0
    12ce:	1b be       	out	0x3b, r1	; 59
    12d0:	2f 93       	push	r18
    12d2:	3f 93       	push	r19
    12d4:	4f 93       	push	r20
    12d6:	5f 93       	push	r21
    12d8:	6f 93       	push	r22
    12da:	7f 93       	push	r23
    12dc:	8f 93       	push	r24
    12de:	9f 93       	push	r25
    12e0:	af 93       	push	r26
    12e2:	bf 93       	push	r27
    12e4:	ef 93       	push	r30
    12e6:	ff 93       	push	r31
	if (tc_tcd1_ccb_callback) {
    12e8:	e0 91 80 20 	lds	r30, 0x2080
    12ec:	f0 91 81 20 	lds	r31, 0x2081
    12f0:	30 97       	sbiw	r30, 0x00	; 0
    12f2:	09 f0       	breq	.+2      	; 0x12f6 <__vector_86+0x42>
		tc_tcd1_ccb_callback();
    12f4:	19 95       	eicall
	}
}
    12f6:	ff 91       	pop	r31
    12f8:	ef 91       	pop	r30
    12fa:	bf 91       	pop	r27
    12fc:	af 91       	pop	r26
    12fe:	9f 91       	pop	r25
    1300:	8f 91       	pop	r24
    1302:	7f 91       	pop	r23
    1304:	6f 91       	pop	r22
    1306:	5f 91       	pop	r21
    1308:	4f 91       	pop	r20
    130a:	3f 91       	pop	r19
    130c:	2f 91       	pop	r18
    130e:	0f 90       	pop	r0
    1310:	0b be       	out	0x3b, r0	; 59
    1312:	0f 90       	pop	r0
    1314:	09 be       	out	0x39, r0	; 57
    1316:	0f 90       	pop	r0
    1318:	08 be       	out	0x38, r0	; 56
    131a:	0f 90       	pop	r0
    131c:	0f be       	out	0x3f, r0	; 63
    131e:	0f 90       	pop	r0
    1320:	1f 90       	pop	r1
    1322:	18 95       	reti

00001324 <__vector_47>:
 *
 * This function will handle interrupt on Timer Counter E0 overflow and
 * call the callback function.
 */
ISR(TCE0_OVF_vect)
{
    1324:	1f 92       	push	r1
    1326:	0f 92       	push	r0
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	0f 92       	push	r0
    132c:	11 24       	eor	r1, r1
    132e:	08 b6       	in	r0, 0x38	; 56
    1330:	0f 92       	push	r0
    1332:	18 be       	out	0x38, r1	; 56
    1334:	09 b6       	in	r0, 0x39	; 57
    1336:	0f 92       	push	r0
    1338:	19 be       	out	0x39, r1	; 57
    133a:	0b b6       	in	r0, 0x3b	; 59
    133c:	0f 92       	push	r0
    133e:	1b be       	out	0x3b, r1	; 59
    1340:	2f 93       	push	r18
    1342:	3f 93       	push	r19
    1344:	4f 93       	push	r20
    1346:	5f 93       	push	r21
    1348:	6f 93       	push	r22
    134a:	7f 93       	push	r23
    134c:	8f 93       	push	r24
    134e:	9f 93       	push	r25
    1350:	af 93       	push	r26
    1352:	bf 93       	push	r27
    1354:	ef 93       	push	r30
    1356:	ff 93       	push	r31
	if (tc_tce0_ovf_callback) {
    1358:	e0 91 7e 20 	lds	r30, 0x207E
    135c:	f0 91 7f 20 	lds	r31, 0x207F
    1360:	30 97       	sbiw	r30, 0x00	; 0
    1362:	09 f0       	breq	.+2      	; 0x1366 <__vector_47+0x42>
		tc_tce0_ovf_callback();
    1364:	19 95       	eicall
	}
}
    1366:	ff 91       	pop	r31
    1368:	ef 91       	pop	r30
    136a:	bf 91       	pop	r27
    136c:	af 91       	pop	r26
    136e:	9f 91       	pop	r25
    1370:	8f 91       	pop	r24
    1372:	7f 91       	pop	r23
    1374:	6f 91       	pop	r22
    1376:	5f 91       	pop	r21
    1378:	4f 91       	pop	r20
    137a:	3f 91       	pop	r19
    137c:	2f 91       	pop	r18
    137e:	0f 90       	pop	r0
    1380:	0b be       	out	0x3b, r0	; 59
    1382:	0f 90       	pop	r0
    1384:	09 be       	out	0x39, r0	; 57
    1386:	0f 90       	pop	r0
    1388:	08 be       	out	0x38, r0	; 56
    138a:	0f 90       	pop	r0
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	0f 90       	pop	r0
    1390:	1f 90       	pop	r1
    1392:	18 95       	reti

00001394 <__vector_48>:
 *
 * This function will handle interrupt on Timer Counter E0 error and
 * call the callback function.
 */
ISR(TCE0_ERR_vect)
{
    1394:	1f 92       	push	r1
    1396:	0f 92       	push	r0
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	0f 92       	push	r0
    139c:	11 24       	eor	r1, r1
    139e:	08 b6       	in	r0, 0x38	; 56
    13a0:	0f 92       	push	r0
    13a2:	18 be       	out	0x38, r1	; 56
    13a4:	09 b6       	in	r0, 0x39	; 57
    13a6:	0f 92       	push	r0
    13a8:	19 be       	out	0x39, r1	; 57
    13aa:	0b b6       	in	r0, 0x3b	; 59
    13ac:	0f 92       	push	r0
    13ae:	1b be       	out	0x3b, r1	; 59
    13b0:	2f 93       	push	r18
    13b2:	3f 93       	push	r19
    13b4:	4f 93       	push	r20
    13b6:	5f 93       	push	r21
    13b8:	6f 93       	push	r22
    13ba:	7f 93       	push	r23
    13bc:	8f 93       	push	r24
    13be:	9f 93       	push	r25
    13c0:	af 93       	push	r26
    13c2:	bf 93       	push	r27
    13c4:	ef 93       	push	r30
    13c6:	ff 93       	push	r31
	if (tc_tce0_err_callback) {
    13c8:	e0 91 7c 20 	lds	r30, 0x207C
    13cc:	f0 91 7d 20 	lds	r31, 0x207D
    13d0:	30 97       	sbiw	r30, 0x00	; 0
    13d2:	09 f0       	breq	.+2      	; 0x13d6 <__vector_48+0x42>
		tc_tce0_err_callback();
    13d4:	19 95       	eicall
	}
}
    13d6:	ff 91       	pop	r31
    13d8:	ef 91       	pop	r30
    13da:	bf 91       	pop	r27
    13dc:	af 91       	pop	r26
    13de:	9f 91       	pop	r25
    13e0:	8f 91       	pop	r24
    13e2:	7f 91       	pop	r23
    13e4:	6f 91       	pop	r22
    13e6:	5f 91       	pop	r21
    13e8:	4f 91       	pop	r20
    13ea:	3f 91       	pop	r19
    13ec:	2f 91       	pop	r18
    13ee:	0f 90       	pop	r0
    13f0:	0b be       	out	0x3b, r0	; 59
    13f2:	0f 90       	pop	r0
    13f4:	09 be       	out	0x39, r0	; 57
    13f6:	0f 90       	pop	r0
    13f8:	08 be       	out	0x38, r0	; 56
    13fa:	0f 90       	pop	r0
    13fc:	0f be       	out	0x3f, r0	; 63
    13fe:	0f 90       	pop	r0
    1400:	1f 90       	pop	r1
    1402:	18 95       	reti

00001404 <__vector_49>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE0_CCA_vect)
{
    1404:	1f 92       	push	r1
    1406:	0f 92       	push	r0
    1408:	0f b6       	in	r0, 0x3f	; 63
    140a:	0f 92       	push	r0
    140c:	11 24       	eor	r1, r1
    140e:	08 b6       	in	r0, 0x38	; 56
    1410:	0f 92       	push	r0
    1412:	18 be       	out	0x38, r1	; 56
    1414:	09 b6       	in	r0, 0x39	; 57
    1416:	0f 92       	push	r0
    1418:	19 be       	out	0x39, r1	; 57
    141a:	0b b6       	in	r0, 0x3b	; 59
    141c:	0f 92       	push	r0
    141e:	1b be       	out	0x3b, r1	; 59
    1420:	2f 93       	push	r18
    1422:	3f 93       	push	r19
    1424:	4f 93       	push	r20
    1426:	5f 93       	push	r21
    1428:	6f 93       	push	r22
    142a:	7f 93       	push	r23
    142c:	8f 93       	push	r24
    142e:	9f 93       	push	r25
    1430:	af 93       	push	r26
    1432:	bf 93       	push	r27
    1434:	ef 93       	push	r30
    1436:	ff 93       	push	r31
	if (tc_tce0_cca_callback) {
    1438:	e0 91 7a 20 	lds	r30, 0x207A
    143c:	f0 91 7b 20 	lds	r31, 0x207B
    1440:	30 97       	sbiw	r30, 0x00	; 0
    1442:	09 f0       	breq	.+2      	; 0x1446 <__vector_49+0x42>
		tc_tce0_cca_callback();
    1444:	19 95       	eicall
	}
}
    1446:	ff 91       	pop	r31
    1448:	ef 91       	pop	r30
    144a:	bf 91       	pop	r27
    144c:	af 91       	pop	r26
    144e:	9f 91       	pop	r25
    1450:	8f 91       	pop	r24
    1452:	7f 91       	pop	r23
    1454:	6f 91       	pop	r22
    1456:	5f 91       	pop	r21
    1458:	4f 91       	pop	r20
    145a:	3f 91       	pop	r19
    145c:	2f 91       	pop	r18
    145e:	0f 90       	pop	r0
    1460:	0b be       	out	0x3b, r0	; 59
    1462:	0f 90       	pop	r0
    1464:	09 be       	out	0x39, r0	; 57
    1466:	0f 90       	pop	r0
    1468:	08 be       	out	0x38, r0	; 56
    146a:	0f 90       	pop	r0
    146c:	0f be       	out	0x3f, r0	; 63
    146e:	0f 90       	pop	r0
    1470:	1f 90       	pop	r1
    1472:	18 95       	reti

00001474 <__vector_50>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE0_CCB_vect)
{
    1474:	1f 92       	push	r1
    1476:	0f 92       	push	r0
    1478:	0f b6       	in	r0, 0x3f	; 63
    147a:	0f 92       	push	r0
    147c:	11 24       	eor	r1, r1
    147e:	08 b6       	in	r0, 0x38	; 56
    1480:	0f 92       	push	r0
    1482:	18 be       	out	0x38, r1	; 56
    1484:	09 b6       	in	r0, 0x39	; 57
    1486:	0f 92       	push	r0
    1488:	19 be       	out	0x39, r1	; 57
    148a:	0b b6       	in	r0, 0x3b	; 59
    148c:	0f 92       	push	r0
    148e:	1b be       	out	0x3b, r1	; 59
    1490:	2f 93       	push	r18
    1492:	3f 93       	push	r19
    1494:	4f 93       	push	r20
    1496:	5f 93       	push	r21
    1498:	6f 93       	push	r22
    149a:	7f 93       	push	r23
    149c:	8f 93       	push	r24
    149e:	9f 93       	push	r25
    14a0:	af 93       	push	r26
    14a2:	bf 93       	push	r27
    14a4:	ef 93       	push	r30
    14a6:	ff 93       	push	r31
	if (tc_tce0_ccb_callback) {
    14a8:	e0 91 78 20 	lds	r30, 0x2078
    14ac:	f0 91 79 20 	lds	r31, 0x2079
    14b0:	30 97       	sbiw	r30, 0x00	; 0
    14b2:	09 f0       	breq	.+2      	; 0x14b6 <__vector_50+0x42>
		tc_tce0_ccb_callback();
    14b4:	19 95       	eicall
	}
}
    14b6:	ff 91       	pop	r31
    14b8:	ef 91       	pop	r30
    14ba:	bf 91       	pop	r27
    14bc:	af 91       	pop	r26
    14be:	9f 91       	pop	r25
    14c0:	8f 91       	pop	r24
    14c2:	7f 91       	pop	r23
    14c4:	6f 91       	pop	r22
    14c6:	5f 91       	pop	r21
    14c8:	4f 91       	pop	r20
    14ca:	3f 91       	pop	r19
    14cc:	2f 91       	pop	r18
    14ce:	0f 90       	pop	r0
    14d0:	0b be       	out	0x3b, r0	; 59
    14d2:	0f 90       	pop	r0
    14d4:	09 be       	out	0x39, r0	; 57
    14d6:	0f 90       	pop	r0
    14d8:	08 be       	out	0x38, r0	; 56
    14da:	0f 90       	pop	r0
    14dc:	0f be       	out	0x3f, r0	; 63
    14de:	0f 90       	pop	r0
    14e0:	1f 90       	pop	r1
    14e2:	18 95       	reti

000014e4 <__vector_51>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCE0_CCC_vect)
{
    14e4:	1f 92       	push	r1
    14e6:	0f 92       	push	r0
    14e8:	0f b6       	in	r0, 0x3f	; 63
    14ea:	0f 92       	push	r0
    14ec:	11 24       	eor	r1, r1
    14ee:	08 b6       	in	r0, 0x38	; 56
    14f0:	0f 92       	push	r0
    14f2:	18 be       	out	0x38, r1	; 56
    14f4:	09 b6       	in	r0, 0x39	; 57
    14f6:	0f 92       	push	r0
    14f8:	19 be       	out	0x39, r1	; 57
    14fa:	0b b6       	in	r0, 0x3b	; 59
    14fc:	0f 92       	push	r0
    14fe:	1b be       	out	0x3b, r1	; 59
    1500:	2f 93       	push	r18
    1502:	3f 93       	push	r19
    1504:	4f 93       	push	r20
    1506:	5f 93       	push	r21
    1508:	6f 93       	push	r22
    150a:	7f 93       	push	r23
    150c:	8f 93       	push	r24
    150e:	9f 93       	push	r25
    1510:	af 93       	push	r26
    1512:	bf 93       	push	r27
    1514:	ef 93       	push	r30
    1516:	ff 93       	push	r31
	if (tc_tce0_ccc_callback) {
    1518:	e0 91 76 20 	lds	r30, 0x2076
    151c:	f0 91 77 20 	lds	r31, 0x2077
    1520:	30 97       	sbiw	r30, 0x00	; 0
    1522:	09 f0       	breq	.+2      	; 0x1526 <__vector_51+0x42>
		tc_tce0_ccc_callback();
    1524:	19 95       	eicall
	}
}
    1526:	ff 91       	pop	r31
    1528:	ef 91       	pop	r30
    152a:	bf 91       	pop	r27
    152c:	af 91       	pop	r26
    152e:	9f 91       	pop	r25
    1530:	8f 91       	pop	r24
    1532:	7f 91       	pop	r23
    1534:	6f 91       	pop	r22
    1536:	5f 91       	pop	r21
    1538:	4f 91       	pop	r20
    153a:	3f 91       	pop	r19
    153c:	2f 91       	pop	r18
    153e:	0f 90       	pop	r0
    1540:	0b be       	out	0x3b, r0	; 59
    1542:	0f 90       	pop	r0
    1544:	09 be       	out	0x39, r0	; 57
    1546:	0f 90       	pop	r0
    1548:	08 be       	out	0x38, r0	; 56
    154a:	0f 90       	pop	r0
    154c:	0f be       	out	0x3f, r0	; 63
    154e:	0f 90       	pop	r0
    1550:	1f 90       	pop	r1
    1552:	18 95       	reti

00001554 <__vector_52>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCE0_CCD_vect)
{
    1554:	1f 92       	push	r1
    1556:	0f 92       	push	r0
    1558:	0f b6       	in	r0, 0x3f	; 63
    155a:	0f 92       	push	r0
    155c:	11 24       	eor	r1, r1
    155e:	08 b6       	in	r0, 0x38	; 56
    1560:	0f 92       	push	r0
    1562:	18 be       	out	0x38, r1	; 56
    1564:	09 b6       	in	r0, 0x39	; 57
    1566:	0f 92       	push	r0
    1568:	19 be       	out	0x39, r1	; 57
    156a:	0b b6       	in	r0, 0x3b	; 59
    156c:	0f 92       	push	r0
    156e:	1b be       	out	0x3b, r1	; 59
    1570:	2f 93       	push	r18
    1572:	3f 93       	push	r19
    1574:	4f 93       	push	r20
    1576:	5f 93       	push	r21
    1578:	6f 93       	push	r22
    157a:	7f 93       	push	r23
    157c:	8f 93       	push	r24
    157e:	9f 93       	push	r25
    1580:	af 93       	push	r26
    1582:	bf 93       	push	r27
    1584:	ef 93       	push	r30
    1586:	ff 93       	push	r31
	if (tc_tce0_ccd_callback) {
    1588:	e0 91 74 20 	lds	r30, 0x2074
    158c:	f0 91 75 20 	lds	r31, 0x2075
    1590:	30 97       	sbiw	r30, 0x00	; 0
    1592:	09 f0       	breq	.+2      	; 0x1596 <__vector_52+0x42>
		tc_tce0_ccd_callback();
    1594:	19 95       	eicall
	}
}
    1596:	ff 91       	pop	r31
    1598:	ef 91       	pop	r30
    159a:	bf 91       	pop	r27
    159c:	af 91       	pop	r26
    159e:	9f 91       	pop	r25
    15a0:	8f 91       	pop	r24
    15a2:	7f 91       	pop	r23
    15a4:	6f 91       	pop	r22
    15a6:	5f 91       	pop	r21
    15a8:	4f 91       	pop	r20
    15aa:	3f 91       	pop	r19
    15ac:	2f 91       	pop	r18
    15ae:	0f 90       	pop	r0
    15b0:	0b be       	out	0x3b, r0	; 59
    15b2:	0f 90       	pop	r0
    15b4:	09 be       	out	0x39, r0	; 57
    15b6:	0f 90       	pop	r0
    15b8:	08 be       	out	0x38, r0	; 56
    15ba:	0f 90       	pop	r0
    15bc:	0f be       	out	0x3f, r0	; 63
    15be:	0f 90       	pop	r0
    15c0:	1f 90       	pop	r1
    15c2:	18 95       	reti

000015c4 <__vector_53>:
 *
 * This function will handle interrupt on Timer Counter E1 overflow and
 * call the callback function.
 */
ISR(TCE1_OVF_vect)
{
    15c4:	1f 92       	push	r1
    15c6:	0f 92       	push	r0
    15c8:	0f b6       	in	r0, 0x3f	; 63
    15ca:	0f 92       	push	r0
    15cc:	11 24       	eor	r1, r1
    15ce:	08 b6       	in	r0, 0x38	; 56
    15d0:	0f 92       	push	r0
    15d2:	18 be       	out	0x38, r1	; 56
    15d4:	09 b6       	in	r0, 0x39	; 57
    15d6:	0f 92       	push	r0
    15d8:	19 be       	out	0x39, r1	; 57
    15da:	0b b6       	in	r0, 0x3b	; 59
    15dc:	0f 92       	push	r0
    15de:	1b be       	out	0x3b, r1	; 59
    15e0:	2f 93       	push	r18
    15e2:	3f 93       	push	r19
    15e4:	4f 93       	push	r20
    15e6:	5f 93       	push	r21
    15e8:	6f 93       	push	r22
    15ea:	7f 93       	push	r23
    15ec:	8f 93       	push	r24
    15ee:	9f 93       	push	r25
    15f0:	af 93       	push	r26
    15f2:	bf 93       	push	r27
    15f4:	ef 93       	push	r30
    15f6:	ff 93       	push	r31
	if (tc_tce1_ovf_callback) {
    15f8:	e0 91 72 20 	lds	r30, 0x2072
    15fc:	f0 91 73 20 	lds	r31, 0x2073
    1600:	30 97       	sbiw	r30, 0x00	; 0
    1602:	09 f0       	breq	.+2      	; 0x1606 <__vector_53+0x42>
		tc_tce1_ovf_callback();
    1604:	19 95       	eicall
	}
}
    1606:	ff 91       	pop	r31
    1608:	ef 91       	pop	r30
    160a:	bf 91       	pop	r27
    160c:	af 91       	pop	r26
    160e:	9f 91       	pop	r25
    1610:	8f 91       	pop	r24
    1612:	7f 91       	pop	r23
    1614:	6f 91       	pop	r22
    1616:	5f 91       	pop	r21
    1618:	4f 91       	pop	r20
    161a:	3f 91       	pop	r19
    161c:	2f 91       	pop	r18
    161e:	0f 90       	pop	r0
    1620:	0b be       	out	0x3b, r0	; 59
    1622:	0f 90       	pop	r0
    1624:	09 be       	out	0x39, r0	; 57
    1626:	0f 90       	pop	r0
    1628:	08 be       	out	0x38, r0	; 56
    162a:	0f 90       	pop	r0
    162c:	0f be       	out	0x3f, r0	; 63
    162e:	0f 90       	pop	r0
    1630:	1f 90       	pop	r1
    1632:	18 95       	reti

00001634 <__vector_54>:
 *
 * This function will handle interrupt on Timer Counter E1 error and
 * call the callback function.
 */
ISR(TCE1_ERR_vect)
{
    1634:	1f 92       	push	r1
    1636:	0f 92       	push	r0
    1638:	0f b6       	in	r0, 0x3f	; 63
    163a:	0f 92       	push	r0
    163c:	11 24       	eor	r1, r1
    163e:	08 b6       	in	r0, 0x38	; 56
    1640:	0f 92       	push	r0
    1642:	18 be       	out	0x38, r1	; 56
    1644:	09 b6       	in	r0, 0x39	; 57
    1646:	0f 92       	push	r0
    1648:	19 be       	out	0x39, r1	; 57
    164a:	0b b6       	in	r0, 0x3b	; 59
    164c:	0f 92       	push	r0
    164e:	1b be       	out	0x3b, r1	; 59
    1650:	2f 93       	push	r18
    1652:	3f 93       	push	r19
    1654:	4f 93       	push	r20
    1656:	5f 93       	push	r21
    1658:	6f 93       	push	r22
    165a:	7f 93       	push	r23
    165c:	8f 93       	push	r24
    165e:	9f 93       	push	r25
    1660:	af 93       	push	r26
    1662:	bf 93       	push	r27
    1664:	ef 93       	push	r30
    1666:	ff 93       	push	r31
	if (tc_tce1_err_callback) {
    1668:	e0 91 70 20 	lds	r30, 0x2070
    166c:	f0 91 71 20 	lds	r31, 0x2071
    1670:	30 97       	sbiw	r30, 0x00	; 0
    1672:	09 f0       	breq	.+2      	; 0x1676 <__vector_54+0x42>
		tc_tce1_err_callback();
    1674:	19 95       	eicall
	}
}
    1676:	ff 91       	pop	r31
    1678:	ef 91       	pop	r30
    167a:	bf 91       	pop	r27
    167c:	af 91       	pop	r26
    167e:	9f 91       	pop	r25
    1680:	8f 91       	pop	r24
    1682:	7f 91       	pop	r23
    1684:	6f 91       	pop	r22
    1686:	5f 91       	pop	r21
    1688:	4f 91       	pop	r20
    168a:	3f 91       	pop	r19
    168c:	2f 91       	pop	r18
    168e:	0f 90       	pop	r0
    1690:	0b be       	out	0x3b, r0	; 59
    1692:	0f 90       	pop	r0
    1694:	09 be       	out	0x39, r0	; 57
    1696:	0f 90       	pop	r0
    1698:	08 be       	out	0x38, r0	; 56
    169a:	0f 90       	pop	r0
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	0f 90       	pop	r0
    16a0:	1f 90       	pop	r1
    16a2:	18 95       	reti

000016a4 <__vector_55>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE1_CCA_vect)
{
    16a4:	1f 92       	push	r1
    16a6:	0f 92       	push	r0
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	0f 92       	push	r0
    16ac:	11 24       	eor	r1, r1
    16ae:	08 b6       	in	r0, 0x38	; 56
    16b0:	0f 92       	push	r0
    16b2:	18 be       	out	0x38, r1	; 56
    16b4:	09 b6       	in	r0, 0x39	; 57
    16b6:	0f 92       	push	r0
    16b8:	19 be       	out	0x39, r1	; 57
    16ba:	0b b6       	in	r0, 0x3b	; 59
    16bc:	0f 92       	push	r0
    16be:	1b be       	out	0x3b, r1	; 59
    16c0:	2f 93       	push	r18
    16c2:	3f 93       	push	r19
    16c4:	4f 93       	push	r20
    16c6:	5f 93       	push	r21
    16c8:	6f 93       	push	r22
    16ca:	7f 93       	push	r23
    16cc:	8f 93       	push	r24
    16ce:	9f 93       	push	r25
    16d0:	af 93       	push	r26
    16d2:	bf 93       	push	r27
    16d4:	ef 93       	push	r30
    16d6:	ff 93       	push	r31
	if (tc_tce1_cca_callback) {
    16d8:	e0 91 6e 20 	lds	r30, 0x206E
    16dc:	f0 91 6f 20 	lds	r31, 0x206F
    16e0:	30 97       	sbiw	r30, 0x00	; 0
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <__vector_55+0x42>
		tc_tce1_cca_callback();
    16e4:	19 95       	eicall
	}
}
    16e6:	ff 91       	pop	r31
    16e8:	ef 91       	pop	r30
    16ea:	bf 91       	pop	r27
    16ec:	af 91       	pop	r26
    16ee:	9f 91       	pop	r25
    16f0:	8f 91       	pop	r24
    16f2:	7f 91       	pop	r23
    16f4:	6f 91       	pop	r22
    16f6:	5f 91       	pop	r21
    16f8:	4f 91       	pop	r20
    16fa:	3f 91       	pop	r19
    16fc:	2f 91       	pop	r18
    16fe:	0f 90       	pop	r0
    1700:	0b be       	out	0x3b, r0	; 59
    1702:	0f 90       	pop	r0
    1704:	09 be       	out	0x39, r0	; 57
    1706:	0f 90       	pop	r0
    1708:	08 be       	out	0x38, r0	; 56
    170a:	0f 90       	pop	r0
    170c:	0f be       	out	0x3f, r0	; 63
    170e:	0f 90       	pop	r0
    1710:	1f 90       	pop	r1
    1712:	18 95       	reti

00001714 <__vector_56>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE1_CCB_vect)
{
    1714:	1f 92       	push	r1
    1716:	0f 92       	push	r0
    1718:	0f b6       	in	r0, 0x3f	; 63
    171a:	0f 92       	push	r0
    171c:	11 24       	eor	r1, r1
    171e:	08 b6       	in	r0, 0x38	; 56
    1720:	0f 92       	push	r0
    1722:	18 be       	out	0x38, r1	; 56
    1724:	09 b6       	in	r0, 0x39	; 57
    1726:	0f 92       	push	r0
    1728:	19 be       	out	0x39, r1	; 57
    172a:	0b b6       	in	r0, 0x3b	; 59
    172c:	0f 92       	push	r0
    172e:	1b be       	out	0x3b, r1	; 59
    1730:	2f 93       	push	r18
    1732:	3f 93       	push	r19
    1734:	4f 93       	push	r20
    1736:	5f 93       	push	r21
    1738:	6f 93       	push	r22
    173a:	7f 93       	push	r23
    173c:	8f 93       	push	r24
    173e:	9f 93       	push	r25
    1740:	af 93       	push	r26
    1742:	bf 93       	push	r27
    1744:	ef 93       	push	r30
    1746:	ff 93       	push	r31
	if (tc_tce1_ccb_callback) {
    1748:	e0 91 6c 20 	lds	r30, 0x206C
    174c:	f0 91 6d 20 	lds	r31, 0x206D
    1750:	30 97       	sbiw	r30, 0x00	; 0
    1752:	09 f0       	breq	.+2      	; 0x1756 <__vector_56+0x42>
		tc_tce1_ccb_callback();
    1754:	19 95       	eicall
	}
}
    1756:	ff 91       	pop	r31
    1758:	ef 91       	pop	r30
    175a:	bf 91       	pop	r27
    175c:	af 91       	pop	r26
    175e:	9f 91       	pop	r25
    1760:	8f 91       	pop	r24
    1762:	7f 91       	pop	r23
    1764:	6f 91       	pop	r22
    1766:	5f 91       	pop	r21
    1768:	4f 91       	pop	r20
    176a:	3f 91       	pop	r19
    176c:	2f 91       	pop	r18
    176e:	0f 90       	pop	r0
    1770:	0b be       	out	0x3b, r0	; 59
    1772:	0f 90       	pop	r0
    1774:	09 be       	out	0x39, r0	; 57
    1776:	0f 90       	pop	r0
    1778:	08 be       	out	0x38, r0	; 56
    177a:	0f 90       	pop	r0
    177c:	0f be       	out	0x3f, r0	; 63
    177e:	0f 90       	pop	r0
    1780:	1f 90       	pop	r1
    1782:	18 95       	reti

00001784 <__vector_108>:
 *
 * This function will handle interrupt on Timer Counter F0 overflow and
 * call the callback function.
 */
ISR(TCF0_OVF_vect)
{
    1784:	1f 92       	push	r1
    1786:	0f 92       	push	r0
    1788:	0f b6       	in	r0, 0x3f	; 63
    178a:	0f 92       	push	r0
    178c:	11 24       	eor	r1, r1
    178e:	08 b6       	in	r0, 0x38	; 56
    1790:	0f 92       	push	r0
    1792:	18 be       	out	0x38, r1	; 56
    1794:	09 b6       	in	r0, 0x39	; 57
    1796:	0f 92       	push	r0
    1798:	19 be       	out	0x39, r1	; 57
    179a:	0b b6       	in	r0, 0x3b	; 59
    179c:	0f 92       	push	r0
    179e:	1b be       	out	0x3b, r1	; 59
    17a0:	2f 93       	push	r18
    17a2:	3f 93       	push	r19
    17a4:	4f 93       	push	r20
    17a6:	5f 93       	push	r21
    17a8:	6f 93       	push	r22
    17aa:	7f 93       	push	r23
    17ac:	8f 93       	push	r24
    17ae:	9f 93       	push	r25
    17b0:	af 93       	push	r26
    17b2:	bf 93       	push	r27
    17b4:	ef 93       	push	r30
    17b6:	ff 93       	push	r31
	if (tc_tcf0_ovf_callback) {
    17b8:	e0 91 6a 20 	lds	r30, 0x206A
    17bc:	f0 91 6b 20 	lds	r31, 0x206B
    17c0:	30 97       	sbiw	r30, 0x00	; 0
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <__vector_108+0x42>
		tc_tcf0_ovf_callback();
    17c4:	19 95       	eicall
	}
}
    17c6:	ff 91       	pop	r31
    17c8:	ef 91       	pop	r30
    17ca:	bf 91       	pop	r27
    17cc:	af 91       	pop	r26
    17ce:	9f 91       	pop	r25
    17d0:	8f 91       	pop	r24
    17d2:	7f 91       	pop	r23
    17d4:	6f 91       	pop	r22
    17d6:	5f 91       	pop	r21
    17d8:	4f 91       	pop	r20
    17da:	3f 91       	pop	r19
    17dc:	2f 91       	pop	r18
    17de:	0f 90       	pop	r0
    17e0:	0b be       	out	0x3b, r0	; 59
    17e2:	0f 90       	pop	r0
    17e4:	09 be       	out	0x39, r0	; 57
    17e6:	0f 90       	pop	r0
    17e8:	08 be       	out	0x38, r0	; 56
    17ea:	0f 90       	pop	r0
    17ec:	0f be       	out	0x3f, r0	; 63
    17ee:	0f 90       	pop	r0
    17f0:	1f 90       	pop	r1
    17f2:	18 95       	reti

000017f4 <__vector_109>:
 *
 * This function will handle interrupt on Timer Counter F0 error and
 * call the callback function.
 */
ISR(TCF0_ERR_vect)
{
    17f4:	1f 92       	push	r1
    17f6:	0f 92       	push	r0
    17f8:	0f b6       	in	r0, 0x3f	; 63
    17fa:	0f 92       	push	r0
    17fc:	11 24       	eor	r1, r1
    17fe:	08 b6       	in	r0, 0x38	; 56
    1800:	0f 92       	push	r0
    1802:	18 be       	out	0x38, r1	; 56
    1804:	09 b6       	in	r0, 0x39	; 57
    1806:	0f 92       	push	r0
    1808:	19 be       	out	0x39, r1	; 57
    180a:	0b b6       	in	r0, 0x3b	; 59
    180c:	0f 92       	push	r0
    180e:	1b be       	out	0x3b, r1	; 59
    1810:	2f 93       	push	r18
    1812:	3f 93       	push	r19
    1814:	4f 93       	push	r20
    1816:	5f 93       	push	r21
    1818:	6f 93       	push	r22
    181a:	7f 93       	push	r23
    181c:	8f 93       	push	r24
    181e:	9f 93       	push	r25
    1820:	af 93       	push	r26
    1822:	bf 93       	push	r27
    1824:	ef 93       	push	r30
    1826:	ff 93       	push	r31
	if (tc_tcf0_err_callback) {
    1828:	e0 91 68 20 	lds	r30, 0x2068
    182c:	f0 91 69 20 	lds	r31, 0x2069
    1830:	30 97       	sbiw	r30, 0x00	; 0
    1832:	09 f0       	breq	.+2      	; 0x1836 <__vector_109+0x42>
		tc_tcf0_err_callback();
    1834:	19 95       	eicall
	}
}
    1836:	ff 91       	pop	r31
    1838:	ef 91       	pop	r30
    183a:	bf 91       	pop	r27
    183c:	af 91       	pop	r26
    183e:	9f 91       	pop	r25
    1840:	8f 91       	pop	r24
    1842:	7f 91       	pop	r23
    1844:	6f 91       	pop	r22
    1846:	5f 91       	pop	r21
    1848:	4f 91       	pop	r20
    184a:	3f 91       	pop	r19
    184c:	2f 91       	pop	r18
    184e:	0f 90       	pop	r0
    1850:	0b be       	out	0x3b, r0	; 59
    1852:	0f 90       	pop	r0
    1854:	09 be       	out	0x39, r0	; 57
    1856:	0f 90       	pop	r0
    1858:	08 be       	out	0x38, r0	; 56
    185a:	0f 90       	pop	r0
    185c:	0f be       	out	0x3f, r0	; 63
    185e:	0f 90       	pop	r0
    1860:	1f 90       	pop	r1
    1862:	18 95       	reti

00001864 <__vector_110>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF0_CCA_vect)
{
    1864:	1f 92       	push	r1
    1866:	0f 92       	push	r0
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	0f 92       	push	r0
    186c:	11 24       	eor	r1, r1
    186e:	08 b6       	in	r0, 0x38	; 56
    1870:	0f 92       	push	r0
    1872:	18 be       	out	0x38, r1	; 56
    1874:	09 b6       	in	r0, 0x39	; 57
    1876:	0f 92       	push	r0
    1878:	19 be       	out	0x39, r1	; 57
    187a:	0b b6       	in	r0, 0x3b	; 59
    187c:	0f 92       	push	r0
    187e:	1b be       	out	0x3b, r1	; 59
    1880:	2f 93       	push	r18
    1882:	3f 93       	push	r19
    1884:	4f 93       	push	r20
    1886:	5f 93       	push	r21
    1888:	6f 93       	push	r22
    188a:	7f 93       	push	r23
    188c:	8f 93       	push	r24
    188e:	9f 93       	push	r25
    1890:	af 93       	push	r26
    1892:	bf 93       	push	r27
    1894:	ef 93       	push	r30
    1896:	ff 93       	push	r31
	if (tc_tcf0_cca_callback) {
    1898:	e0 91 66 20 	lds	r30, 0x2066
    189c:	f0 91 67 20 	lds	r31, 0x2067
    18a0:	30 97       	sbiw	r30, 0x00	; 0
    18a2:	09 f0       	breq	.+2      	; 0x18a6 <__vector_110+0x42>
		tc_tcf0_cca_callback();
    18a4:	19 95       	eicall
	}
}
    18a6:	ff 91       	pop	r31
    18a8:	ef 91       	pop	r30
    18aa:	bf 91       	pop	r27
    18ac:	af 91       	pop	r26
    18ae:	9f 91       	pop	r25
    18b0:	8f 91       	pop	r24
    18b2:	7f 91       	pop	r23
    18b4:	6f 91       	pop	r22
    18b6:	5f 91       	pop	r21
    18b8:	4f 91       	pop	r20
    18ba:	3f 91       	pop	r19
    18bc:	2f 91       	pop	r18
    18be:	0f 90       	pop	r0
    18c0:	0b be       	out	0x3b, r0	; 59
    18c2:	0f 90       	pop	r0
    18c4:	09 be       	out	0x39, r0	; 57
    18c6:	0f 90       	pop	r0
    18c8:	08 be       	out	0x38, r0	; 56
    18ca:	0f 90       	pop	r0
    18cc:	0f be       	out	0x3f, r0	; 63
    18ce:	0f 90       	pop	r0
    18d0:	1f 90       	pop	r1
    18d2:	18 95       	reti

000018d4 <__vector_111>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF0_CCB_vect)
{
    18d4:	1f 92       	push	r1
    18d6:	0f 92       	push	r0
    18d8:	0f b6       	in	r0, 0x3f	; 63
    18da:	0f 92       	push	r0
    18dc:	11 24       	eor	r1, r1
    18de:	08 b6       	in	r0, 0x38	; 56
    18e0:	0f 92       	push	r0
    18e2:	18 be       	out	0x38, r1	; 56
    18e4:	09 b6       	in	r0, 0x39	; 57
    18e6:	0f 92       	push	r0
    18e8:	19 be       	out	0x39, r1	; 57
    18ea:	0b b6       	in	r0, 0x3b	; 59
    18ec:	0f 92       	push	r0
    18ee:	1b be       	out	0x3b, r1	; 59
    18f0:	2f 93       	push	r18
    18f2:	3f 93       	push	r19
    18f4:	4f 93       	push	r20
    18f6:	5f 93       	push	r21
    18f8:	6f 93       	push	r22
    18fa:	7f 93       	push	r23
    18fc:	8f 93       	push	r24
    18fe:	9f 93       	push	r25
    1900:	af 93       	push	r26
    1902:	bf 93       	push	r27
    1904:	ef 93       	push	r30
    1906:	ff 93       	push	r31
	if (tc_tcf0_ccb_callback) {
    1908:	e0 91 64 20 	lds	r30, 0x2064
    190c:	f0 91 65 20 	lds	r31, 0x2065
    1910:	30 97       	sbiw	r30, 0x00	; 0
    1912:	09 f0       	breq	.+2      	; 0x1916 <__vector_111+0x42>
		tc_tcf0_ccb_callback();
    1914:	19 95       	eicall
	}
}
    1916:	ff 91       	pop	r31
    1918:	ef 91       	pop	r30
    191a:	bf 91       	pop	r27
    191c:	af 91       	pop	r26
    191e:	9f 91       	pop	r25
    1920:	8f 91       	pop	r24
    1922:	7f 91       	pop	r23
    1924:	6f 91       	pop	r22
    1926:	5f 91       	pop	r21
    1928:	4f 91       	pop	r20
    192a:	3f 91       	pop	r19
    192c:	2f 91       	pop	r18
    192e:	0f 90       	pop	r0
    1930:	0b be       	out	0x3b, r0	; 59
    1932:	0f 90       	pop	r0
    1934:	09 be       	out	0x39, r0	; 57
    1936:	0f 90       	pop	r0
    1938:	08 be       	out	0x38, r0	; 56
    193a:	0f 90       	pop	r0
    193c:	0f be       	out	0x3f, r0	; 63
    193e:	0f 90       	pop	r0
    1940:	1f 90       	pop	r1
    1942:	18 95       	reti

00001944 <__vector_112>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCF0_CCC_vect)
{
    1944:	1f 92       	push	r1
    1946:	0f 92       	push	r0
    1948:	0f b6       	in	r0, 0x3f	; 63
    194a:	0f 92       	push	r0
    194c:	11 24       	eor	r1, r1
    194e:	08 b6       	in	r0, 0x38	; 56
    1950:	0f 92       	push	r0
    1952:	18 be       	out	0x38, r1	; 56
    1954:	09 b6       	in	r0, 0x39	; 57
    1956:	0f 92       	push	r0
    1958:	19 be       	out	0x39, r1	; 57
    195a:	0b b6       	in	r0, 0x3b	; 59
    195c:	0f 92       	push	r0
    195e:	1b be       	out	0x3b, r1	; 59
    1960:	2f 93       	push	r18
    1962:	3f 93       	push	r19
    1964:	4f 93       	push	r20
    1966:	5f 93       	push	r21
    1968:	6f 93       	push	r22
    196a:	7f 93       	push	r23
    196c:	8f 93       	push	r24
    196e:	9f 93       	push	r25
    1970:	af 93       	push	r26
    1972:	bf 93       	push	r27
    1974:	ef 93       	push	r30
    1976:	ff 93       	push	r31
	if (tc_tcf0_ccc_callback) {
    1978:	e0 91 62 20 	lds	r30, 0x2062
    197c:	f0 91 63 20 	lds	r31, 0x2063
    1980:	30 97       	sbiw	r30, 0x00	; 0
    1982:	09 f0       	breq	.+2      	; 0x1986 <__vector_112+0x42>
		tc_tcf0_ccc_callback();
    1984:	19 95       	eicall
	}
}
    1986:	ff 91       	pop	r31
    1988:	ef 91       	pop	r30
    198a:	bf 91       	pop	r27
    198c:	af 91       	pop	r26
    198e:	9f 91       	pop	r25
    1990:	8f 91       	pop	r24
    1992:	7f 91       	pop	r23
    1994:	6f 91       	pop	r22
    1996:	5f 91       	pop	r21
    1998:	4f 91       	pop	r20
    199a:	3f 91       	pop	r19
    199c:	2f 91       	pop	r18
    199e:	0f 90       	pop	r0
    19a0:	0b be       	out	0x3b, r0	; 59
    19a2:	0f 90       	pop	r0
    19a4:	09 be       	out	0x39, r0	; 57
    19a6:	0f 90       	pop	r0
    19a8:	08 be       	out	0x38, r0	; 56
    19aa:	0f 90       	pop	r0
    19ac:	0f be       	out	0x3f, r0	; 63
    19ae:	0f 90       	pop	r0
    19b0:	1f 90       	pop	r1
    19b2:	18 95       	reti

000019b4 <__vector_113>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCF0_CCD_vect)
{
    19b4:	1f 92       	push	r1
    19b6:	0f 92       	push	r0
    19b8:	0f b6       	in	r0, 0x3f	; 63
    19ba:	0f 92       	push	r0
    19bc:	11 24       	eor	r1, r1
    19be:	08 b6       	in	r0, 0x38	; 56
    19c0:	0f 92       	push	r0
    19c2:	18 be       	out	0x38, r1	; 56
    19c4:	09 b6       	in	r0, 0x39	; 57
    19c6:	0f 92       	push	r0
    19c8:	19 be       	out	0x39, r1	; 57
    19ca:	0b b6       	in	r0, 0x3b	; 59
    19cc:	0f 92       	push	r0
    19ce:	1b be       	out	0x3b, r1	; 59
    19d0:	2f 93       	push	r18
    19d2:	3f 93       	push	r19
    19d4:	4f 93       	push	r20
    19d6:	5f 93       	push	r21
    19d8:	6f 93       	push	r22
    19da:	7f 93       	push	r23
    19dc:	8f 93       	push	r24
    19de:	9f 93       	push	r25
    19e0:	af 93       	push	r26
    19e2:	bf 93       	push	r27
    19e4:	ef 93       	push	r30
    19e6:	ff 93       	push	r31
	if (tc_tcf0_ccd_callback) {
    19e8:	e0 91 60 20 	lds	r30, 0x2060
    19ec:	f0 91 61 20 	lds	r31, 0x2061
    19f0:	30 97       	sbiw	r30, 0x00	; 0
    19f2:	09 f0       	breq	.+2      	; 0x19f6 <__vector_113+0x42>
		tc_tcf0_ccd_callback();
    19f4:	19 95       	eicall
	}
}
    19f6:	ff 91       	pop	r31
    19f8:	ef 91       	pop	r30
    19fa:	bf 91       	pop	r27
    19fc:	af 91       	pop	r26
    19fe:	9f 91       	pop	r25
    1a00:	8f 91       	pop	r24
    1a02:	7f 91       	pop	r23
    1a04:	6f 91       	pop	r22
    1a06:	5f 91       	pop	r21
    1a08:	4f 91       	pop	r20
    1a0a:	3f 91       	pop	r19
    1a0c:	2f 91       	pop	r18
    1a0e:	0f 90       	pop	r0
    1a10:	0b be       	out	0x3b, r0	; 59
    1a12:	0f 90       	pop	r0
    1a14:	09 be       	out	0x39, r0	; 57
    1a16:	0f 90       	pop	r0
    1a18:	08 be       	out	0x38, r0	; 56
    1a1a:	0f 90       	pop	r0
    1a1c:	0f be       	out	0x3f, r0	; 63
    1a1e:	0f 90       	pop	r0
    1a20:	1f 90       	pop	r1
    1a22:	18 95       	reti

00001a24 <__vector_114>:
 *
 * This function will handle interrupt on Timer Counter F1 overflow and
 * call the callback function.
 */
ISR(TCF1_OVF_vect)
{
    1a24:	1f 92       	push	r1
    1a26:	0f 92       	push	r0
    1a28:	0f b6       	in	r0, 0x3f	; 63
    1a2a:	0f 92       	push	r0
    1a2c:	11 24       	eor	r1, r1
    1a2e:	08 b6       	in	r0, 0x38	; 56
    1a30:	0f 92       	push	r0
    1a32:	18 be       	out	0x38, r1	; 56
    1a34:	09 b6       	in	r0, 0x39	; 57
    1a36:	0f 92       	push	r0
    1a38:	19 be       	out	0x39, r1	; 57
    1a3a:	0b b6       	in	r0, 0x3b	; 59
    1a3c:	0f 92       	push	r0
    1a3e:	1b be       	out	0x3b, r1	; 59
    1a40:	2f 93       	push	r18
    1a42:	3f 93       	push	r19
    1a44:	4f 93       	push	r20
    1a46:	5f 93       	push	r21
    1a48:	6f 93       	push	r22
    1a4a:	7f 93       	push	r23
    1a4c:	8f 93       	push	r24
    1a4e:	9f 93       	push	r25
    1a50:	af 93       	push	r26
    1a52:	bf 93       	push	r27
    1a54:	ef 93       	push	r30
    1a56:	ff 93       	push	r31
	if (tc_tcf1_ovf_callback) {
    1a58:	e0 91 5e 20 	lds	r30, 0x205E
    1a5c:	f0 91 5f 20 	lds	r31, 0x205F
    1a60:	30 97       	sbiw	r30, 0x00	; 0
    1a62:	09 f0       	breq	.+2      	; 0x1a66 <__vector_114+0x42>
		tc_tcf1_ovf_callback();
    1a64:	19 95       	eicall
	}
}
    1a66:	ff 91       	pop	r31
    1a68:	ef 91       	pop	r30
    1a6a:	bf 91       	pop	r27
    1a6c:	af 91       	pop	r26
    1a6e:	9f 91       	pop	r25
    1a70:	8f 91       	pop	r24
    1a72:	7f 91       	pop	r23
    1a74:	6f 91       	pop	r22
    1a76:	5f 91       	pop	r21
    1a78:	4f 91       	pop	r20
    1a7a:	3f 91       	pop	r19
    1a7c:	2f 91       	pop	r18
    1a7e:	0f 90       	pop	r0
    1a80:	0b be       	out	0x3b, r0	; 59
    1a82:	0f 90       	pop	r0
    1a84:	09 be       	out	0x39, r0	; 57
    1a86:	0f 90       	pop	r0
    1a88:	08 be       	out	0x38, r0	; 56
    1a8a:	0f 90       	pop	r0
    1a8c:	0f be       	out	0x3f, r0	; 63
    1a8e:	0f 90       	pop	r0
    1a90:	1f 90       	pop	r1
    1a92:	18 95       	reti

00001a94 <__vector_115>:
 *
 * This function will handle interrupt on Timer Counter F1 error and
 * call the callback function.
 */
ISR(TCF1_ERR_vect)
{
    1a94:	1f 92       	push	r1
    1a96:	0f 92       	push	r0
    1a98:	0f b6       	in	r0, 0x3f	; 63
    1a9a:	0f 92       	push	r0
    1a9c:	11 24       	eor	r1, r1
    1a9e:	08 b6       	in	r0, 0x38	; 56
    1aa0:	0f 92       	push	r0
    1aa2:	18 be       	out	0x38, r1	; 56
    1aa4:	09 b6       	in	r0, 0x39	; 57
    1aa6:	0f 92       	push	r0
    1aa8:	19 be       	out	0x39, r1	; 57
    1aaa:	0b b6       	in	r0, 0x3b	; 59
    1aac:	0f 92       	push	r0
    1aae:	1b be       	out	0x3b, r1	; 59
    1ab0:	2f 93       	push	r18
    1ab2:	3f 93       	push	r19
    1ab4:	4f 93       	push	r20
    1ab6:	5f 93       	push	r21
    1ab8:	6f 93       	push	r22
    1aba:	7f 93       	push	r23
    1abc:	8f 93       	push	r24
    1abe:	9f 93       	push	r25
    1ac0:	af 93       	push	r26
    1ac2:	bf 93       	push	r27
    1ac4:	ef 93       	push	r30
    1ac6:	ff 93       	push	r31
	if (tc_tcf1_err_callback) {
    1ac8:	e0 91 5c 20 	lds	r30, 0x205C
    1acc:	f0 91 5d 20 	lds	r31, 0x205D
    1ad0:	30 97       	sbiw	r30, 0x00	; 0
    1ad2:	09 f0       	breq	.+2      	; 0x1ad6 <__vector_115+0x42>
		tc_tcf1_err_callback();
    1ad4:	19 95       	eicall
	}
}
    1ad6:	ff 91       	pop	r31
    1ad8:	ef 91       	pop	r30
    1ada:	bf 91       	pop	r27
    1adc:	af 91       	pop	r26
    1ade:	9f 91       	pop	r25
    1ae0:	8f 91       	pop	r24
    1ae2:	7f 91       	pop	r23
    1ae4:	6f 91       	pop	r22
    1ae6:	5f 91       	pop	r21
    1ae8:	4f 91       	pop	r20
    1aea:	3f 91       	pop	r19
    1aec:	2f 91       	pop	r18
    1aee:	0f 90       	pop	r0
    1af0:	0b be       	out	0x3b, r0	; 59
    1af2:	0f 90       	pop	r0
    1af4:	09 be       	out	0x39, r0	; 57
    1af6:	0f 90       	pop	r0
    1af8:	08 be       	out	0x38, r0	; 56
    1afa:	0f 90       	pop	r0
    1afc:	0f be       	out	0x3f, r0	; 63
    1afe:	0f 90       	pop	r0
    1b00:	1f 90       	pop	r1
    1b02:	18 95       	reti

00001b04 <__vector_116>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF1_CCA_vect)
{
    1b04:	1f 92       	push	r1
    1b06:	0f 92       	push	r0
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	0f 92       	push	r0
    1b0c:	11 24       	eor	r1, r1
    1b0e:	08 b6       	in	r0, 0x38	; 56
    1b10:	0f 92       	push	r0
    1b12:	18 be       	out	0x38, r1	; 56
    1b14:	09 b6       	in	r0, 0x39	; 57
    1b16:	0f 92       	push	r0
    1b18:	19 be       	out	0x39, r1	; 57
    1b1a:	0b b6       	in	r0, 0x3b	; 59
    1b1c:	0f 92       	push	r0
    1b1e:	1b be       	out	0x3b, r1	; 59
    1b20:	2f 93       	push	r18
    1b22:	3f 93       	push	r19
    1b24:	4f 93       	push	r20
    1b26:	5f 93       	push	r21
    1b28:	6f 93       	push	r22
    1b2a:	7f 93       	push	r23
    1b2c:	8f 93       	push	r24
    1b2e:	9f 93       	push	r25
    1b30:	af 93       	push	r26
    1b32:	bf 93       	push	r27
    1b34:	ef 93       	push	r30
    1b36:	ff 93       	push	r31
	if (tc_tcf1_cca_callback) {
    1b38:	e0 91 5a 20 	lds	r30, 0x205A
    1b3c:	f0 91 5b 20 	lds	r31, 0x205B
    1b40:	30 97       	sbiw	r30, 0x00	; 0
    1b42:	09 f0       	breq	.+2      	; 0x1b46 <__vector_116+0x42>
		tc_tcf1_cca_callback();
    1b44:	19 95       	eicall
	}
}
    1b46:	ff 91       	pop	r31
    1b48:	ef 91       	pop	r30
    1b4a:	bf 91       	pop	r27
    1b4c:	af 91       	pop	r26
    1b4e:	9f 91       	pop	r25
    1b50:	8f 91       	pop	r24
    1b52:	7f 91       	pop	r23
    1b54:	6f 91       	pop	r22
    1b56:	5f 91       	pop	r21
    1b58:	4f 91       	pop	r20
    1b5a:	3f 91       	pop	r19
    1b5c:	2f 91       	pop	r18
    1b5e:	0f 90       	pop	r0
    1b60:	0b be       	out	0x3b, r0	; 59
    1b62:	0f 90       	pop	r0
    1b64:	09 be       	out	0x39, r0	; 57
    1b66:	0f 90       	pop	r0
    1b68:	08 be       	out	0x38, r0	; 56
    1b6a:	0f 90       	pop	r0
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	0f 90       	pop	r0
    1b70:	1f 90       	pop	r1
    1b72:	18 95       	reti

00001b74 <__vector_117>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF1_CCB_vect)
{
    1b74:	1f 92       	push	r1
    1b76:	0f 92       	push	r0
    1b78:	0f b6       	in	r0, 0x3f	; 63
    1b7a:	0f 92       	push	r0
    1b7c:	11 24       	eor	r1, r1
    1b7e:	08 b6       	in	r0, 0x38	; 56
    1b80:	0f 92       	push	r0
    1b82:	18 be       	out	0x38, r1	; 56
    1b84:	09 b6       	in	r0, 0x39	; 57
    1b86:	0f 92       	push	r0
    1b88:	19 be       	out	0x39, r1	; 57
    1b8a:	0b b6       	in	r0, 0x3b	; 59
    1b8c:	0f 92       	push	r0
    1b8e:	1b be       	out	0x3b, r1	; 59
    1b90:	2f 93       	push	r18
    1b92:	3f 93       	push	r19
    1b94:	4f 93       	push	r20
    1b96:	5f 93       	push	r21
    1b98:	6f 93       	push	r22
    1b9a:	7f 93       	push	r23
    1b9c:	8f 93       	push	r24
    1b9e:	9f 93       	push	r25
    1ba0:	af 93       	push	r26
    1ba2:	bf 93       	push	r27
    1ba4:	ef 93       	push	r30
    1ba6:	ff 93       	push	r31
	if (tc_tcf1_ccb_callback) {
    1ba8:	e0 91 58 20 	lds	r30, 0x2058
    1bac:	f0 91 59 20 	lds	r31, 0x2059
    1bb0:	30 97       	sbiw	r30, 0x00	; 0
    1bb2:	09 f0       	breq	.+2      	; 0x1bb6 <__vector_117+0x42>
		tc_tcf1_ccb_callback();
    1bb4:	19 95       	eicall
	}
}
    1bb6:	ff 91       	pop	r31
    1bb8:	ef 91       	pop	r30
    1bba:	bf 91       	pop	r27
    1bbc:	af 91       	pop	r26
    1bbe:	9f 91       	pop	r25
    1bc0:	8f 91       	pop	r24
    1bc2:	7f 91       	pop	r23
    1bc4:	6f 91       	pop	r22
    1bc6:	5f 91       	pop	r21
    1bc8:	4f 91       	pop	r20
    1bca:	3f 91       	pop	r19
    1bcc:	2f 91       	pop	r18
    1bce:	0f 90       	pop	r0
    1bd0:	0b be       	out	0x3b, r0	; 59
    1bd2:	0f 90       	pop	r0
    1bd4:	09 be       	out	0x39, r0	; 57
    1bd6:	0f 90       	pop	r0
    1bd8:	08 be       	out	0x38, r0	; 56
    1bda:	0f 90       	pop	r0
    1bdc:	0f be       	out	0x3f, r0	; 63
    1bde:	0f 90       	pop	r0
    1be0:	1f 90       	pop	r1
    1be2:	18 95       	reti

00001be4 <tc_enable>:
 *
 * \note
 * unmask TC clock (sysclk), but does not configure the TC clock source.
 */
void tc_enable(volatile void *tc)
{
    1be4:	cf 93       	push	r28

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1be6:	cf b7       	in	r28, 0x3f	; 63
	cpu_irq_disable();
    1be8:	f8 94       	cli
	irqflags_t iflags = cpu_irq_save();

#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1bea:	28 2f       	mov	r18, r24
    1bec:	39 2f       	mov	r19, r25
    1bee:	21 15       	cp	r18, r1
    1bf0:	88 e0       	ldi	r24, 0x08	; 8
    1bf2:	38 07       	cpc	r19, r24
    1bf4:	59 f4       	brne	.+22     	; 0x1c0c <tc_enable+0x28>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    1bf6:	61 e0       	ldi	r22, 0x01	; 1
    1bf8:	83 e0       	ldi	r24, 0x03	; 3
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1c00:	64 e0       	ldi	r22, 0x04	; 4
    1c02:	83 e0       	ldi	r24, 0x03	; 3
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1c0a:	6a c0       	rjmp	.+212    	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1c0c:	20 34       	cpi	r18, 0x40	; 64
    1c0e:	88 e0       	ldi	r24, 0x08	; 8
    1c10:	38 07       	cpc	r19, r24
    1c12:	59 f4       	brne	.+22     	; 0x1c2a <tc_enable+0x46>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    1c14:	62 e0       	ldi	r22, 0x02	; 2
    1c16:	83 e0       	ldi	r24, 0x03	; 3
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1c1e:	64 e0       	ldi	r22, 0x04	; 4
    1c20:	83 e0       	ldi	r24, 0x03	; 3
    1c22:	90 e0       	ldi	r25, 0x00	; 0
    1c24:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1c28:	5b c0       	rjmp	.+182    	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1c2a:	21 15       	cp	r18, r1
    1c2c:	89 e0       	ldi	r24, 0x09	; 9
    1c2e:	38 07       	cpc	r19, r24
    1c30:	59 f4       	brne	.+22     	; 0x1c48 <tc_enable+0x64>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    1c32:	61 e0       	ldi	r22, 0x01	; 1
    1c34:	84 e0       	ldi	r24, 0x04	; 4
    1c36:	90 e0       	ldi	r25, 0x00	; 0
    1c38:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c3c:	64 e0       	ldi	r22, 0x04	; 4
    1c3e:	84 e0       	ldi	r24, 0x04	; 4
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1c46:	4c c0       	rjmp	.+152    	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
    1c48:	20 34       	cpi	r18, 0x40	; 64
    1c4a:	89 e0       	ldi	r24, 0x09	; 9
    1c4c:	38 07       	cpc	r19, r24
    1c4e:	59 f4       	brne	.+22     	; 0x1c66 <tc_enable+0x82>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    1c50:	62 e0       	ldi	r22, 0x02	; 2
    1c52:	84 e0       	ldi	r24, 0x04	; 4
    1c54:	90 e0       	ldi	r25, 0x00	; 0
    1c56:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c5a:	64 e0       	ldi	r22, 0x04	; 4
    1c5c:	84 e0       	ldi	r24, 0x04	; 4
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1c64:	3d c0       	rjmp	.+122    	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    1c66:	21 15       	cp	r18, r1
    1c68:	8a e0       	ldi	r24, 0x0A	; 10
    1c6a:	38 07       	cpc	r19, r24
    1c6c:	59 f4       	brne	.+22     	; 0x1c84 <tc_enable+0xa0>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    1c6e:	61 e0       	ldi	r22, 0x01	; 1
    1c70:	85 e0       	ldi	r24, 0x05	; 5
    1c72:	90 e0       	ldi	r25, 0x00	; 0
    1c74:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c78:	64 e0       	ldi	r22, 0x04	; 4
    1c7a:	85 e0       	ldi	r24, 0x05	; 5
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1c82:	2e c0       	rjmp	.+92     	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCE1
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
    1c84:	20 34       	cpi	r18, 0x40	; 64
    1c86:	8a e0       	ldi	r24, 0x0A	; 10
    1c88:	38 07       	cpc	r19, r24
    1c8a:	59 f4       	brne	.+22     	; 0x1ca2 <tc_enable+0xbe>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    1c8c:	62 e0       	ldi	r22, 0x02	; 2
    1c8e:	85 e0       	ldi	r24, 0x05	; 5
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c96:	64 e0       	ldi	r22, 0x04	; 4
    1c98:	85 e0       	ldi	r24, 0x05	; 5
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1ca0:	1f c0       	rjmp	.+62     	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    1ca2:	21 15       	cp	r18, r1
    1ca4:	8b e0       	ldi	r24, 0x0B	; 11
    1ca6:	38 07       	cpc	r19, r24
    1ca8:	59 f4       	brne	.+22     	; 0x1cc0 <tc_enable+0xdc>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    1caa:	61 e0       	ldi	r22, 0x01	; 1
    1cac:	86 e0       	ldi	r24, 0x06	; 6
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1cb4:	64 e0       	ldi	r22, 0x04	; 4
    1cb6:	86 e0       	ldi	r24, 0x06	; 6
    1cb8:	90 e0       	ldi	r25, 0x00	; 0
    1cba:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1cbe:	10 c0       	rjmp	.+32     	; 0x1ce0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCF1
	if ((uintptr_t) tc == (uintptr_t) & TCF1) {
    1cc0:	20 34       	cpi	r18, 0x40	; 64
    1cc2:	3b 40       	sbci	r19, 0x0B	; 11
    1cc4:	59 f4       	brne	.+22     	; 0x1cdc <tc_enable+0xf8>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    1cc6:	62 e0       	ldi	r22, 0x02	; 2
    1cc8:	86 e0       	ldi	r24, 0x06	; 6
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1cd0:	64 e0       	ldi	r22, 0x04	; 4
    1cd2:	86 e0       	ldi	r24, 0x06	; 6
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <sysclk_enable_module>
    1cda:	02 c0       	rjmp	.+4      	; 0x1ce0 <tc_enable+0xfc>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cdc:	cf bf       	out	0x3f, r28	; 63
    1cde:	09 c0       	rjmp	.+18     	; 0x1cf2 <tc_enable+0x10e>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1ce0:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    1ce2:	f8 94       	cli
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    1ce4:	e9 eb       	ldi	r30, 0xB9	; 185
    1ce6:	f0 e2       	ldi	r31, 0x20	; 32
    1ce8:	90 81       	ld	r25, Z
    1cea:	9f 5f       	subi	r25, 0xFF	; 255
    1cec:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cee:	8f bf       	out	0x3f, r24	; 63
    1cf0:	cf bf       	out	0x3f, r28	; 63
		cpu_irq_restore(iflags);
		return;
	}
	sleepmgr_lock_mode(SLEEPMGR_IDLE);
	cpu_irq_restore(iflags);
}
    1cf2:	cf 91       	pop	r28
    1cf4:	08 95       	ret

00001cf6 <usart_putchar>:
	}
	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	81 81       	ldd	r24, Z+1	; 0x01
    1cfa:	85 ff       	sbrs	r24, 5
    1cfc:	fd cf       	rjmp	.-6      	; 0x1cf8 <usart_putchar+0x2>
    1cfe:	60 83       	st	Z, r22
    1d00:	80 e0       	ldi	r24, 0x00	; 0
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	08 95       	ret

00001d06 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
    1d06:	4f 92       	push	r4
    1d08:	5f 92       	push	r5
    1d0a:	6f 92       	push	r6
    1d0c:	7f 92       	push	r7
    1d0e:	8f 92       	push	r8
    1d10:	9f 92       	push	r9
    1d12:	af 92       	push	r10
    1d14:	bf 92       	push	r11
    1d16:	cf 92       	push	r12
    1d18:	df 92       	push	r13
    1d1a:	ef 92       	push	r14
    1d1c:	ff 92       	push	r15
    1d1e:	0f 93       	push	r16
    1d20:	1f 93       	push	r17
    1d22:	cf 93       	push	r28
    1d24:	df 93       	push	r29
    1d26:	ec 01       	movw	r28, r24
    1d28:	4a 01       	movw	r8, r20
    1d2a:	5b 01       	movw	r10, r22
    1d2c:	28 01       	movw	r4, r16
    1d2e:	39 01       	movw	r6, r18

	/*
	 * Check if the hardware supports the given baud rate
	 */
	// 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN)
	max_rate = cpu_hz / 8;
    1d30:	d9 01       	movw	r26, r18
    1d32:	c8 01       	movw	r24, r16
    1d34:	68 94       	set
    1d36:	12 f8       	bld	r1, 2
    1d38:	b6 95       	lsr	r27
    1d3a:	a7 95       	ror	r26
    1d3c:	97 95       	ror	r25
    1d3e:	87 95       	ror	r24
    1d40:	16 94       	lsr	r1
    1d42:	d1 f7       	brne	.-12     	; 0x1d38 <usart_set_baudrate+0x32>
	// 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1)
	min_rate = cpu_hz / 4194304;
    1d44:	b9 01       	movw	r22, r18
    1d46:	a8 01       	movw	r20, r16
    1d48:	03 2e       	mov	r0, r19
    1d4a:	36 e1       	ldi	r19, 0x16	; 22
    1d4c:	76 95       	lsr	r23
    1d4e:	67 95       	ror	r22
    1d50:	57 95       	ror	r21
    1d52:	47 95       	ror	r20
    1d54:	3a 95       	dec	r19
    1d56:	d1 f7       	brne	.-12     	; 0x1d4c <usart_set_baudrate+0x46>
    1d58:	30 2d       	mov	r19, r0

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d5a:	2c 81       	ldd	r18, Y+4	; 0x04
    1d5c:	22 fd       	sbrc	r18, 2
    1d5e:	08 c0       	rjmp	.+16     	; 0x1d70 <usart_set_baudrate+0x6a>
		max_rate /= 2;
    1d60:	b6 95       	lsr	r27
    1d62:	a7 95       	ror	r26
    1d64:	97 95       	ror	r25
    1d66:	87 95       	ror	r24
		min_rate /= 2;
    1d68:	76 95       	lsr	r23
    1d6a:	67 95       	ror	r22
    1d6c:	57 95       	ror	r21
    1d6e:	47 95       	ror	r20
	}

	if ((baud > max_rate) || (baud < min_rate)) {
    1d70:	88 15       	cp	r24, r8
    1d72:	99 05       	cpc	r25, r9
    1d74:	aa 05       	cpc	r26, r10
    1d76:	bb 05       	cpc	r27, r11
    1d78:	08 f4       	brcc	.+2      	; 0x1d7c <usart_set_baudrate+0x76>
    1d7a:	a6 c0       	rjmp	.+332    	; 0x1ec8 <usart_set_baudrate+0x1c2>
    1d7c:	84 16       	cp	r8, r20
    1d7e:	95 06       	cpc	r9, r21
    1d80:	a6 06       	cpc	r10, r22
    1d82:	b7 06       	cpc	r11, r23
    1d84:	08 f4       	brcc	.+2      	; 0x1d88 <usart_set_baudrate+0x82>
    1d86:	a2 c0       	rjmp	.+324    	; 0x1ecc <usart_set_baudrate+0x1c6>
	}

	/*
	 * Check if double speed is enabled.
	 */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d88:	8c 81       	ldd	r24, Y+4	; 0x04
    1d8a:	82 fd       	sbrc	r24, 2
    1d8c:	04 c0       	rjmp	.+8      	; 0x1d96 <usart_set_baudrate+0x90>
		baud *= 2;
    1d8e:	88 0c       	add	r8, r8
    1d90:	99 1c       	adc	r9, r9
    1d92:	aa 1c       	adc	r10, r10
    1d94:	bb 1c       	adc	r11, r11

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
    1d96:	c3 01       	movw	r24, r6
    1d98:	b2 01       	movw	r22, r4
    1d9a:	a5 01       	movw	r20, r10
    1d9c:	94 01       	movw	r18, r8
    1d9e:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
    1da2:	2f 3f       	cpi	r18, 0xFF	; 255
    1da4:	31 05       	cpc	r19, r1
    1da6:	41 05       	cpc	r20, r1
    1da8:	51 05       	cpc	r21, r1
    1daa:	08 f4       	brcc	.+2      	; 0x1dae <usart_set_baudrate+0xa8>
    1dac:	91 c0       	rjmp	.+290    	; 0x1ed0 <usart_set_baudrate+0x1ca>
	}

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
    1dae:	c1 2c       	mov	r12, r1
    1db0:	d1 2c       	mov	r13, r1
    1db2:	76 01       	movw	r14, r12
    1db4:	ca 94       	dec	r12
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1db6:	19 ef       	ldi	r17, 0xF9	; 249
    1db8:	05 c0       	rjmp	.+10     	; 0x1dc4 <usart_set_baudrate+0xbe>
		if (ratio < limit) {
    1dba:	2c 15       	cp	r18, r12
    1dbc:	3d 05       	cpc	r19, r13
    1dbe:	4e 05       	cpc	r20, r14
    1dc0:	5f 05       	cpc	r21, r15
    1dc2:	68 f0       	brcs	.+26     	; 0x1dde <usart_set_baudrate+0xd8>
			break;
		}

		limit <<= 1;
    1dc4:	cc 0c       	add	r12, r12
    1dc6:	dd 1c       	adc	r13, r13
    1dc8:	ee 1c       	adc	r14, r14
    1dca:	ff 1c       	adc	r15, r15

		if (exp < -3) {
    1dcc:	1d 3f       	cpi	r17, 0xFD	; 253
    1dce:	14 f4       	brge	.+4      	; 0x1dd4 <usart_set_baudrate+0xce>
			limit |= 1;
    1dd0:	68 94       	set
    1dd2:	c0 f8       	bld	r12, 0
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1dd4:	1f 5f       	subi	r17, 0xFF	; 255
    1dd6:	17 30       	cpi	r17, 0x07	; 7
    1dd8:	81 f7       	brne	.-32     	; 0x1dba <usart_set_baudrate+0xb4>
    1dda:	21 2f       	mov	r18, r17
    1ddc:	50 c0       	rjmp	.+160    	; 0x1e7e <usart_set_baudrate+0x178>
    1dde:	21 2f       	mov	r18, r17
	 * operation as it ensures that we never exceeed 2**32 at any point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
    1de0:	11 23       	and	r17, r17
    1de2:	0c f0       	brlt	.+2      	; 0x1de6 <usart_set_baudrate+0xe0>
    1de4:	4c c0       	rjmp	.+152    	; 0x1e7e <usart_set_baudrate+0x178>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1de6:	d5 01       	movw	r26, r10
    1de8:	c4 01       	movw	r24, r8
    1dea:	88 0f       	add	r24, r24
    1dec:	99 1f       	adc	r25, r25
    1dee:	aa 1f       	adc	r26, r26
    1df0:	bb 1f       	adc	r27, r27
    1df2:	88 0f       	add	r24, r24
    1df4:	99 1f       	adc	r25, r25
    1df6:	aa 1f       	adc	r26, r26
    1df8:	bb 1f       	adc	r27, r27
    1dfa:	88 0f       	add	r24, r24
    1dfc:	99 1f       	adc	r25, r25
    1dfe:	aa 1f       	adc	r26, r26
    1e00:	bb 1f       	adc	r27, r27
    1e02:	48 1a       	sub	r4, r24
    1e04:	59 0a       	sbc	r5, r25
    1e06:	6a 0a       	sbc	r6, r26
    1e08:	7b 0a       	sbc	r7, r27
		 * If we end up with a left-shift after taking the final divide-by-8
		 * into account, do the shift before the divide. Otherwise, left-shift
		 * the denominator instead (effectively resulting in an overall right
		 * shift.)
		 */
		if (exp <= -3) {
    1e0a:	1e 3f       	cpi	r17, 0xFE	; 254
    1e0c:	f4 f4       	brge	.+60     	; 0x1e4a <usart_set_baudrate+0x144>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
    1e0e:	6d ef       	ldi	r22, 0xFD	; 253
    1e10:	7f ef       	ldi	r23, 0xFF	; 255
    1e12:	61 1b       	sub	r22, r17
    1e14:	71 09       	sbc	r23, r1
    1e16:	17 fd       	sbrc	r17, 7
    1e18:	73 95       	inc	r23
    1e1a:	04 c0       	rjmp	.+8      	; 0x1e24 <usart_set_baudrate+0x11e>
    1e1c:	44 0c       	add	r4, r4
    1e1e:	55 1c       	adc	r5, r5
    1e20:	66 1c       	adc	r6, r6
    1e22:	77 1c       	adc	r7, r7
    1e24:	6a 95       	dec	r22
    1e26:	d2 f7       	brpl	.-12     	; 0x1e1c <usart_set_baudrate+0x116>
    1e28:	d5 01       	movw	r26, r10
    1e2a:	c4 01       	movw	r24, r8
    1e2c:	b6 95       	lsr	r27
    1e2e:	a7 95       	ror	r26
    1e30:	97 95       	ror	r25
    1e32:	87 95       	ror	r24
    1e34:	bc 01       	movw	r22, r24
    1e36:	cd 01       	movw	r24, r26
    1e38:	64 0d       	add	r22, r4
    1e3a:	75 1d       	adc	r23, r5
    1e3c:	86 1d       	adc	r24, r6
    1e3e:	97 1d       	adc	r25, r7
    1e40:	a5 01       	movw	r20, r10
    1e42:	94 01       	movw	r18, r8
    1e44:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>
    1e48:	36 c0       	rjmp	.+108    	; 0x1eb6 <usart_set_baudrate+0x1b0>
		} else {
			baud <<= exp + 3;
    1e4a:	23 e0       	ldi	r18, 0x03	; 3
    1e4c:	21 0f       	add	r18, r17
    1e4e:	d5 01       	movw	r26, r10
    1e50:	c4 01       	movw	r24, r8
    1e52:	04 c0       	rjmp	.+8      	; 0x1e5c <usart_set_baudrate+0x156>
    1e54:	88 0f       	add	r24, r24
    1e56:	99 1f       	adc	r25, r25
    1e58:	aa 1f       	adc	r26, r26
    1e5a:	bb 1f       	adc	r27, r27
    1e5c:	2a 95       	dec	r18
    1e5e:	d2 f7       	brpl	.-12     	; 0x1e54 <usart_set_baudrate+0x14e>
    1e60:	9c 01       	movw	r18, r24
    1e62:	ad 01       	movw	r20, r26
			div = (cpu_hz + baud / 2) / baud;
    1e64:	b6 95       	lsr	r27
    1e66:	a7 95       	ror	r26
    1e68:	97 95       	ror	r25
    1e6a:	87 95       	ror	r24
    1e6c:	bc 01       	movw	r22, r24
    1e6e:	cd 01       	movw	r24, r26
    1e70:	64 0d       	add	r22, r4
    1e72:	75 1d       	adc	r23, r5
    1e74:	86 1d       	adc	r24, r6
    1e76:	97 1d       	adc	r25, r7
    1e78:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>
    1e7c:	1c c0       	rjmp	.+56     	; 0x1eb6 <usart_set_baudrate+0x1b0>
	} else {
		/*
		 * We will always do a right shift in this case, but we need to shift
		 * three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
    1e7e:	2d 5f       	subi	r18, 0xFD	; 253
    1e80:	d5 01       	movw	r26, r10
    1e82:	c4 01       	movw	r24, r8
    1e84:	04 c0       	rjmp	.+8      	; 0x1e8e <usart_set_baudrate+0x188>
    1e86:	88 0f       	add	r24, r24
    1e88:	99 1f       	adc	r25, r25
    1e8a:	aa 1f       	adc	r26, r26
    1e8c:	bb 1f       	adc	r27, r27
    1e8e:	2a 95       	dec	r18
    1e90:	d2 f7       	brpl	.-12     	; 0x1e86 <usart_set_baudrate+0x180>
    1e92:	9c 01       	movw	r18, r24
    1e94:	ad 01       	movw	r20, r26
		div = (cpu_hz + baud / 2) / baud - 1;
    1e96:	b6 95       	lsr	r27
    1e98:	a7 95       	ror	r26
    1e9a:	97 95       	ror	r25
    1e9c:	87 95       	ror	r24
    1e9e:	bc 01       	movw	r22, r24
    1ea0:	cd 01       	movw	r24, r26
    1ea2:	64 0d       	add	r22, r4
    1ea4:	75 1d       	adc	r23, r5
    1ea6:	86 1d       	adc	r24, r6
    1ea8:	97 1d       	adc	r25, r7
    1eaa:	0e 94 2a 2a 	call	0x5454	; 0x5454 <__udivmodsi4>
    1eae:	21 50       	subi	r18, 0x01	; 1
    1eb0:	31 09       	sbc	r19, r1
    1eb2:	41 09       	sbc	r20, r1
    1eb4:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
    1eb6:	83 2f       	mov	r24, r19
    1eb8:	8f 70       	andi	r24, 0x0F	; 15
    1eba:	12 95       	swap	r17
    1ebc:	10 7f       	andi	r17, 0xF0	; 240
    1ebe:	18 2b       	or	r17, r24
    1ec0:	1f 83       	std	Y+7, r17	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
    1ec2:	2e 83       	std	Y+6, r18	; 0x06

	return true;
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	18 c0       	rjmp	.+48     	; 0x1ef8 <usart_set_baudrate+0x1f2>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
    1ec8:	80 e0       	ldi	r24, 0x00	; 0
    1eca:	16 c0       	rjmp	.+44     	; 0x1ef8 <usart_set_baudrate+0x1f2>
    1ecc:	80 e0       	ldi	r24, 0x00	; 0
    1ece:	14 c0       	rjmp	.+40     	; 0x1ef8 <usart_set_baudrate+0x1f2>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1ed0:	d5 01       	movw	r26, r10
    1ed2:	c4 01       	movw	r24, r8
    1ed4:	88 0f       	add	r24, r24
    1ed6:	99 1f       	adc	r25, r25
    1ed8:	aa 1f       	adc	r26, r26
    1eda:	bb 1f       	adc	r27, r27
    1edc:	88 0f       	add	r24, r24
    1ede:	99 1f       	adc	r25, r25
    1ee0:	aa 1f       	adc	r26, r26
    1ee2:	bb 1f       	adc	r27, r27
    1ee4:	88 0f       	add	r24, r24
    1ee6:	99 1f       	adc	r25, r25
    1ee8:	aa 1f       	adc	r26, r26
    1eea:	bb 1f       	adc	r27, r27
    1eec:	48 1a       	sub	r4, r24
    1eee:	59 0a       	sbc	r5, r25
    1ef0:	6a 0a       	sbc	r6, r26
    1ef2:	7b 0a       	sbc	r7, r27
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1ef4:	19 ef       	ldi	r17, 0xF9	; 249
    1ef6:	8b cf       	rjmp	.-234    	; 0x1e0e <usart_set_baudrate+0x108>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
    1ef8:	df 91       	pop	r29
    1efa:	cf 91       	pop	r28
    1efc:	1f 91       	pop	r17
    1efe:	0f 91       	pop	r16
    1f00:	ff 90       	pop	r15
    1f02:	ef 90       	pop	r14
    1f04:	df 90       	pop	r13
    1f06:	cf 90       	pop	r12
    1f08:	bf 90       	pop	r11
    1f0a:	af 90       	pop	r10
    1f0c:	9f 90       	pop	r9
    1f0e:	8f 90       	pop	r8
    1f10:	7f 90       	pop	r7
    1f12:	6f 90       	pop	r6
    1f14:	5f 90       	pop	r5
    1f16:	4f 90       	pop	r4
    1f18:	08 95       	ret

00001f1a <wdt_reset_mcu>:
uint8_t temp;
	/*
	 * WDT enabled (minimum timeout period for max. security)
	 */
	temp = WDT_PER_8CLK_gc | (1 << WDT_ENABLE_bp) | (1 << WDT_CEN_bp);
	ccp_write_io((void *)&WDT.CTRL, temp);
    1f1a:	63 e0       	ldi	r22, 0x03	; 3
    1f1c:	80 e8       	ldi	r24, 0x80	; 128
    1f1e:	90 e0       	ldi	r25, 0x00	; 0
    1f20:	0e 94 12 05 	call	0xa24	; 0xa24 <ccp_write_io>
/*! \brief Wait until WD settings are synchronized to the WD clock domain.
 *
 */
static inline void wdt_wait_while_busy(void)
{
	while ((WDT.STATUS & WDT_SYNCBUSY_bm) == WDT_SYNCBUSY_bm) {
    1f24:	e0 e8       	ldi	r30, 0x80	; 128
    1f26:	f0 e0       	ldi	r31, 0x00	; 0
    1f28:	82 81       	ldd	r24, Z+2	; 0x02
    1f2a:	80 fd       	sbrc	r24, 0
    1f2c:	fd cf       	rjmp	.-6      	; 0x1f28 <wdt_reset_mcu+0xe>
	wdt_wait_while_busy();
	/*
	 * WDT enabled (maximum window period for max. security)
	 */
	temp = WDT_WPER_8KCLK_gc | (1 << WDT_WEN_bp) | (1 << WDT_WCEN_bp);
	ccp_write_io((void *)&WDT.WINCTRL, temp);
    1f2e:	6b e2       	ldi	r22, 0x2B	; 43
    1f30:	81 e8       	ldi	r24, 0x81	; 129
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	0e 94 12 05 	call	0xa24	; 0xa24 <ccp_write_io>
    1f38:	e0 e8       	ldi	r30, 0x80	; 128
    1f3a:	f0 e0       	ldi	r31, 0x00	; 0
    1f3c:	82 81       	ldd	r24, Z+2	; 0x02
    1f3e:	80 fd       	sbrc	r24, 0
    1f40:	fd cf       	rjmp	.-6      	; 0x1f3c <wdt_reset_mcu+0x22>
	wdt_wait_while_busy();
	/*
	 * WDT Reset during window => WDT generates an Hard Reset.
	 */
	wdt_reset();
    1f42:	a8 95       	wdr
    1f44:	ff cf       	rjmp	.-2      	; 0x1f44 <wdt_reset_mcu+0x2a>

00001f46 <En_RC32M>:
//Motor_Param M0,M1,M2,M3;

void En_RC32M(void)
{
    // Start RC32M OSC
    OSC_CTRL |= OSC_RC32MEN_bm;
    1f46:	e0 e5       	ldi	r30, 0x50	; 80
    1f48:	f0 e0       	ldi	r31, 0x00	; 0
    1f4a:	80 81       	ld	r24, Z
    1f4c:	82 60       	ori	r24, 0x02	; 2
    1f4e:	80 83       	st	Z, r24
    while(!(OSC_STATUS & OSC_RC32MRDY_bm));
    1f50:	e1 e5       	ldi	r30, 0x51	; 81
    1f52:	f0 e0       	ldi	r31, 0x00	; 0
    1f54:	80 81       	ld	r24, Z
    1f56:	81 ff       	sbrs	r24, 1
    1f58:	fd cf       	rjmp	.-6      	; 0x1f54 <En_RC32M+0xe>

    // Select the system clock source: 32 MHz Internal RC Osc.
    CCP = CCP_IOREG_gc;
    1f5a:	88 ed       	ldi	r24, 0xD8	; 216
    1f5c:	84 bf       	out	0x34, r24	; 52
    CLK_CTRL = CLK_SCLKSEL_RC32M_gc;
    1f5e:	81 e0       	ldi	r24, 0x01	; 1
    1f60:	80 93 40 00 	sts	0x0040, r24

    // Disable the unused oscillators: 2 MHz, internal 32 kHz, external clock/crystal oscillator, PLL
    OSC_CTRL &= ~(OSC_RC2MEN_bm | OSC_RC32KEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
    1f64:	e0 e5       	ldi	r30, 0x50	; 80
    1f66:	f0 e0       	ldi	r31, 0x00	; 0
    1f68:	80 81       	ld	r24, Z
    1f6a:	82 7e       	andi	r24, 0xE2	; 226
    1f6c:	80 83       	st	Z, r24
    1f6e:	08 95       	ret

00001f70 <PORT_init>:
};

void PORT_init(void)
{
	
	PORTB_DIRSET = KCK_Charge_PIN_bm;
    1f70:	80 e4       	ldi	r24, 0x40	; 64
    1f72:	80 93 21 06 	sts	0x0621, r24
	PORTC_DIRSET = KCK_Chip_PIN_bm | KCK_DIR_PIN_bm | Buzzer_PIN_bm | PIN2_bm ;
    1f76:	87 e4       	ldi	r24, 0x47	; 71
    1f78:	80 93 41 06 	sts	0x0641, r24
	PORTC_PIN3CTRL=PORT_ISC_BOTHEDGES_gc;
    1f7c:	10 92 53 06 	sts	0x0653, r1
	PORTC_INTCTRL = PORT_INT0LVL_LO_gc;
    1f80:	81 e0       	ldi	r24, 0x01	; 1
    1f82:	80 93 49 06 	sts	0x0649, r24
	PORTC_INT0MASK = PIN3_bm;
    1f86:	98 e0       	ldi	r25, 0x08	; 8
    1f88:	90 93 4a 06 	sts	0x064A, r25
	
	PORTD_DIRSET = Gyro_SCL_PIN_bm | LED_White_PIN_bm | LED_Red_PIN_bm | LED_Green_PIN_bm;  //SDA TWI tuye pin ctrl tanzimat mikhad?!
    1f8c:	2e e2       	ldi	r18, 0x2E	; 46
    1f8e:	20 93 61 06 	sts	0x0661, r18
	//PORTD_PIN2CTRL = PORT_ISC_RISING_gc;  PORTD_PIN3CTRL= PORT_ISC_RISING_gc;  //KCK Sens1 , 2
	//PORTD_INTCTRL = PORT_INT0LVL_LO_gc;
	//PORTD_INT0MASK = KCK_Sens1_PIN_bm | KCK_Sens2_PIN_bm;
		
	
	PORTE_DIRSET = NRF24L01_L_CE_LINE | NRF24L01_L_CS_LINE | NRF24L01_L_MOSI_LINE | NRF24L01_L_SCK_LINE | PIN3_bm; // wireless module & programmer data & usart test
    1f92:	2a eb       	ldi	r18, 0xBA	; 186
    1f94:	20 93 81 06 	sts	0x0681, r18
	PORTE_PIN0CTRL |= PORT_ISC_FALLING_gc;
    1f98:	e0 e9       	ldi	r30, 0x90	; 144
    1f9a:	f6 e0       	ldi	r31, 0x06	; 6
    1f9c:	20 81       	ld	r18, Z
    1f9e:	22 60       	ori	r18, 0x02	; 2
    1fa0:	20 83       	st	Z, r18
	PORTE_INTCTRL |= PORT_INT0LVL_LO_gc;
    1fa2:	e9 e8       	ldi	r30, 0x89	; 137
    1fa4:	f6 e0       	ldi	r31, 0x06	; 6
    1fa6:	20 81       	ld	r18, Z
    1fa8:	21 60       	ori	r18, 0x01	; 1
    1faa:	20 83       	st	Z, r18
	PORTE_INT0MASK |= PIN0_bm;
    1fac:	ea e8       	ldi	r30, 0x8A	; 138
    1fae:	f6 e0       	ldi	r31, 0x06	; 6
    1fb0:	20 81       	ld	r18, Z
    1fb2:	21 60       	ori	r18, 0x01	; 1
    1fb4:	20 83       	st	Z, r18
	//PORTF_PIN4CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN5CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN6CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_INTCTRL |= PORT_INT0LVL_LO_gc;
	//PORTF_INT0MASK = Menu_Cancel_PIN_bm | Menu_PIN3_bm | Menu_PIN2_bm | Menu_PIN1_bm | Menu_PIN0_bm;
	PORTF_INT0MASK = Menu_Cancel_PIN_bm;
    1fb6:	20 e1       	ldi	r18, 0x10	; 16
    1fb8:	20 93 aa 06 	sts	0x06AA, r18
   
   PORTF_DIRSET = PIN3_bm;
    1fbc:	90 93 a1 06 	sts	0x06A1, r25
   PORTF_OUTSET = PIN3_bm;
    1fc0:	90 93 a5 06 	sts	0x06A5, r25
   
   PORTK_DIR = 0xFF;//SegL
    1fc4:	2f ef       	ldi	r18, 0xFF	; 255
    1fc6:	20 93 20 07 	sts	0x0720, r18
   PORTJ_DIR = 0xFF;//SegR
    1fca:	20 93 00 07 	sts	0x0700, r18
   
   PORTK_PIN0CTRL = PORT_ISC_RISING_gc;
    1fce:	80 93 30 07 	sts	0x0730, r24
   PORTK_INTCTRL = PORT_INT0LVL_LO_gc;
    1fd2:	80 93 29 07 	sts	0x0729, r24
   PORTK_INT0MASK = Menu_Set_PIN_bm;
    1fd6:	20 e8       	ldi	r18, 0x80	; 128
    1fd8:	20 93 2a 07 	sts	0x072A, r18
   
   PORTQ_PIN0CTRL = PORT_ISC_BOTHEDGES_gc;
    1fdc:	10 92 d0 07 	sts	0x07D0, r1
   PORTQ_PIN3CTRL = PORT_ISC_BOTHEDGES_gc;
    1fe0:	10 92 d3 07 	sts	0x07D3, r1
   PORTQ_INTCTRL  = PORT_INT0LVL_LO_gc|PORT_INT1LVL_LO_gc;
    1fe4:	25 e0       	ldi	r18, 0x05	; 5
    1fe6:	20 93 c9 07 	sts	0x07C9, r18
   PORTQ_INT0MASK = PIN0_bm;
    1fea:	80 93 ca 07 	sts	0x07CA, r24
   PORTQ_INT1MASK = PIN3_bm;
    1fee:	90 93 cb 07 	sts	0x07CB, r25
   
   PORTH_PIN5CTRL = PORT_ISC_RISING_gc;
    1ff2:	80 93 f5 06 	sts	0x06F5, r24
   PORTH_INTCTRL  = PORT_INT0LVL_LO_gc;
    1ff6:	80 93 e9 06 	sts	0x06E9, r24
   PORTH_INT0MASK = PIN5_bm;
    1ffa:	80 e2       	ldi	r24, 0x20	; 32
    1ffc:	80 93 ea 06 	sts	0x06EA, r24
    2000:	08 95       	ret

00002002 <TimerC0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    2002:	e0 e0       	ldi	r30, 0x00	; 0
    2004:	f8 e0       	ldi	r31, 0x08	; 8
    2006:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    2008:	80 7f       	andi	r24, 0xF0	; 240
    200a:	86 60       	ori	r24, 0x06	; 6
    200c:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    200e:	81 81       	ldd	r24, Z+1	; 0x01
    2010:	88 7f       	andi	r24, 0xF8	; 248
    2012:	83 60       	ori	r24, 0x03	; 3
    2014:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2016:	8f ef       	ldi	r24, 0xFF	; 255
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	86 a3       	std	Z+38, r24	; 0x26
    201c:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    201e:	80 85       	ldd	r24, Z+8	; 0x08
    2020:	8e 6f       	ori	r24, 0xFE	; 254
    2022:	80 87       	std	Z+8, r24	; 0x08
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
    2024:	81 81       	ldd	r24, Z+1	; 0x01
    2026:	80 61       	ori	r24, 0x10	; 16
    2028:	81 83       	std	Z+1, r24	; 0x01
    202a:	81 81       	ldd	r24, Z+1	; 0x01
    202c:	80 62       	ori	r24, 0x20	; 32
    202e:	81 83       	std	Z+1, r24	; 0x01
	tc_set_wgm(&TCC0,TC_WG_SS);
	tc_write_period(&TCC0,0x00FF);
	tc_set_direction(&TCC0,TC_UP);
	tc_enable_cc_channels(&TCC0,TC_CCAEN);
	tc_enable_cc_channels(&TCC0,TC_CCBEN);
	tc_enable(&TCC0);
    2030:	80 e0       	ldi	r24, 0x00	; 0
    2032:	98 e0       	ldi	r25, 0x08	; 8
    2034:	d7 cd       	rjmp	.-1106   	; 0x1be4 <tc_enable>
    2036:	08 95       	ret

00002038 <TimerD0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    2038:	e0 e0       	ldi	r30, 0x00	; 0
    203a:	f9 e0       	ldi	r31, 0x09	; 9
    203c:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    203e:	80 7f       	andi	r24, 0xF0	; 240
    2040:	86 60       	ori	r24, 0x06	; 6
    2042:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    2044:	81 81       	ldd	r24, Z+1	; 0x01
    2046:	88 7f       	andi	r24, 0xF8	; 248
    2048:	81 83       	std	Z+1, r24	; 0x01
 * \note  Configures OVFINTLVL in INTCTRLA
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
    204a:	86 81       	ldd	r24, Z+6	; 0x06
    204c:	8c 7f       	andi	r24, 0xFC	; 252
    204e:	86 83       	std	Z+6, r24	; 0x06
	((TC0_t *)tc)->INTCTRLA =
			((TC0_t *)tc)->INTCTRLA | (level << TC0_OVFINTLVL_gp);
    2050:	86 81       	ldd	r24, Z+6	; 0x06
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
	((TC0_t *)tc)->INTCTRLA =
    2052:	82 60       	ori	r24, 0x02	; 2
    2054:	86 83       	std	Z+6, r24	; 0x06
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2056:	8d e7       	ldi	r24, 0x7D	; 125
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	86 a3       	std	Z+38, r24	; 0x26
    205c:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    205e:	80 85       	ldd	r24, Z+8	; 0x08
    2060:	8e 6f       	ori	r24, 0xFE	; 254
    2062:	80 87       	std	Z+8, r24	; 0x08
	tc_write_clock_source(&TCD0,TC_CLKSEL_DIV256_gc);
	tc_set_wgm(&TCD0,TC_WG_NORMAL);
	tc_set_overflow_interrupt_level(&TCD0,TC_INT_LVL_MED);
	tc_write_period(&TCD0,TIMERD0_PER);
	tc_set_direction(&TCD0,TC_UP);
	tc_enable(&TCD0);
    2064:	80 e0       	ldi	r24, 0x00	; 0
    2066:	99 e0       	ldi	r25, 0x09	; 9
    2068:	bd cd       	rjmp	.-1158   	; 0x1be4 <tc_enable>
    206a:	08 95       	ret

0000206c <SPI_Init>:
};

void SPI_Init(void)
{
    206c:	0f 93       	push	r16
    206e:	1f 93       	push	r17
	 spi_xmega_set_baud_div(&NRF24L01_L_SPI,8000000UL,F_CPU);
    2070:	00 e0       	ldi	r16, 0x00	; 0
    2072:	18 e4       	ldi	r17, 0x48	; 72
    2074:	28 ee       	ldi	r18, 0xE8	; 232
    2076:	31 e0       	ldi	r19, 0x01	; 1
    2078:	40 e0       	ldi	r20, 0x00	; 0
    207a:	52 e1       	ldi	r21, 0x12	; 18
    207c:	6a e7       	ldi	r22, 0x7A	; 122
    207e:	70 e0       	ldi	r23, 0x00	; 0
    2080:	80 ec       	ldi	r24, 0xC0	; 192
    2082:	9a e0       	ldi	r25, 0x0A	; 10
    2084:	0e 94 22 05 	call	0xa44	; 0xa44 <spi_xmega_set_baud_div>
 *
 * \warning This may cause data loss if used on a slave SPI.
 */
static inline void spi_enable_master_mode(SPI_t *spi)
{
	spi->CTRL |= SPI_MASTER_bm;
    2088:	e0 ec       	ldi	r30, 0xC0	; 192
    208a:	fa e0       	ldi	r31, 0x0A	; 10
    208c:	80 81       	ld	r24, Z
    208e:	80 61       	ori	r24, 0x10	; 16
    2090:	80 83       	st	Z, r24
 *
 * \param spi Base address of the SPI instance.
 */
static inline void spi_enable(SPI_t *spi)
{
	spi->CTRL |= SPI_ENABLE_bm;
    2092:	80 81       	ld	r24, Z
    2094:	80 64       	ori	r24, 0x40	; 64
    2096:	80 83       	st	Z, r24
	 spi_enable_master_mode(&NRF24L01_L_SPI);
	 spi_enable(&NRF24L01_L_SPI);
}
    2098:	1f 91       	pop	r17
    209a:	0f 91       	pop	r16
    209c:	08 95       	ret

0000209e <USARTE0_init>:

#define USARTE0_conf USARTE0
#define USARTE0_BUADRATE 9600
void USARTE0_init(void)
{
    209e:	0f 93       	push	r16
    20a0:	1f 93       	push	r17
    20a2:	cf 93       	push	r28
    20a4:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    20a6:	c0 ea       	ldi	r28, 0xA0	; 160
    20a8:	da e0       	ldi	r29, 0x0A	; 10
    20aa:	8d 81       	ldd	r24, Y+5	; 0x05
    20ac:	8f 73       	andi	r24, 0x3F	; 63
    20ae:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    20b0:	83 e0       	ldi	r24, 0x03	; 3
    20b2:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20b4:	8b 81       	ldd	r24, Y+3	; 0x03
    20b6:	8f 7c       	andi	r24, 0xCF	; 207
    20b8:	80 62       	ori	r24, 0x20	; 32
    20ba:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTE0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTE0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTE0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTE0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTE0_conf,USARTE0_BUADRATE,F_CPU);
    20bc:	00 e0       	ldi	r16, 0x00	; 0
    20be:	18 e4       	ldi	r17, 0x48	; 72
    20c0:	28 ee       	ldi	r18, 0xE8	; 232
    20c2:	31 e0       	ldi	r19, 0x01	; 1
    20c4:	40 e8       	ldi	r20, 0x80	; 128
    20c6:	55 e2       	ldi	r21, 0x25	; 37
    20c8:	60 e0       	ldi	r22, 0x00	; 0
    20ca:	70 e0       	ldi	r23, 0x00	; 0
    20cc:	80 ea       	ldi	r24, 0xA0	; 160
    20ce:	9a e0       	ldi	r25, 0x0A	; 10
    20d0:	1a de       	rcall	.-972    	; 0x1d06 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    20d2:	8c 81       	ldd	r24, Y+4	; 0x04
    20d4:	88 60       	ori	r24, 0x08	; 8
    20d6:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTE0_conf);
	//usart_rx_enable(&USARTE0_conf);
}
    20d8:	df 91       	pop	r29
    20da:	cf 91       	pop	r28
    20dc:	1f 91       	pop	r17
    20de:	0f 91       	pop	r16
    20e0:	08 95       	ret

000020e2 <USARTF0_init>:


#define USARTF0_conf USARTF0
#define USARTF0_BUADRATE 9600
void USARTF0_init(void)
{
    20e2:	0f 93       	push	r16
    20e4:	1f 93       	push	r17
    20e6:	cf 93       	push	r28
    20e8:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    20ea:	c0 ea       	ldi	r28, 0xA0	; 160
    20ec:	db e0       	ldi	r29, 0x0B	; 11
    20ee:	8d 81       	ldd	r24, Y+5	; 0x05
    20f0:	8f 73       	andi	r24, 0x3F	; 63
    20f2:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    20f4:	83 e0       	ldi	r24, 0x03	; 3
    20f6:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20f8:	8b 81       	ldd	r24, Y+3	; 0x03
    20fa:	8f 7c       	andi	r24, 0xCF	; 207
    20fc:	80 62       	ori	r24, 0x20	; 32
    20fe:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTF0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTF0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF0_conf,USARTF0_BUADRATE,F_CPU);
    2100:	00 e0       	ldi	r16, 0x00	; 0
    2102:	18 e4       	ldi	r17, 0x48	; 72
    2104:	28 ee       	ldi	r18, 0xE8	; 232
    2106:	31 e0       	ldi	r19, 0x01	; 1
    2108:	40 e8       	ldi	r20, 0x80	; 128
    210a:	55 e2       	ldi	r21, 0x25	; 37
    210c:	60 e0       	ldi	r22, 0x00	; 0
    210e:	70 e0       	ldi	r23, 0x00	; 0
    2110:	80 ea       	ldi	r24, 0xA0	; 160
    2112:	9b e0       	ldi	r25, 0x0B	; 11
    2114:	f8 dd       	rcall	.-1040   	; 0x1d06 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2116:	8c 81       	ldd	r24, Y+4	; 0x04
    2118:	88 60       	ori	r24, 0x08	; 8
    211a:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
    211c:	8c 81       	ldd	r24, Y+4	; 0x04
    211e:	80 61       	ori	r24, 0x10	; 16
    2120:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF0_conf);
	usart_rx_enable(&USARTF0_conf);
}
    2122:	df 91       	pop	r29
    2124:	cf 91       	pop	r28
    2126:	1f 91       	pop	r17
    2128:	0f 91       	pop	r16
    212a:	08 95       	ret

0000212c <USARTF1_init>:

#define USARTF1_conf USARTF1
#define USARTF1_BUADRATE 9600
void USARTF1_init(void)
{
    212c:	0f 93       	push	r16
    212e:	1f 93       	push	r17
    2130:	cf 93       	push	r28
    2132:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2134:	c0 eb       	ldi	r28, 0xB0	; 176
    2136:	db e0       	ldi	r29, 0x0B	; 11
    2138:	8d 81       	ldd	r24, Y+5	; 0x05
    213a:	8f 73       	andi	r24, 0x3F	; 63
    213c:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    213e:	83 e0       	ldi	r24, 0x03	; 3
    2140:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    2142:	8b 81       	ldd	r24, Y+3	; 0x03
    2144:	8f 7c       	andi	r24, 0xCF	; 207
    2146:	80 62       	ori	r24, 0x20	; 32
    2148:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTF1_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF1_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTF1_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF1_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF1_conf,USARTF1_BUADRATE,F_CPU);
    214a:	00 e0       	ldi	r16, 0x00	; 0
    214c:	18 e4       	ldi	r17, 0x48	; 72
    214e:	28 ee       	ldi	r18, 0xE8	; 232
    2150:	31 e0       	ldi	r19, 0x01	; 1
    2152:	40 e8       	ldi	r20, 0x80	; 128
    2154:	55 e2       	ldi	r21, 0x25	; 37
    2156:	60 e0       	ldi	r22, 0x00	; 0
    2158:	70 e0       	ldi	r23, 0x00	; 0
    215a:	80 eb       	ldi	r24, 0xB0	; 176
    215c:	9b e0       	ldi	r25, 0x0B	; 11
    215e:	d3 dd       	rcall	.-1114   	; 0x1d06 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2160:	8c 81       	ldd	r24, Y+4	; 0x04
    2162:	88 60       	ori	r24, 0x08	; 8
    2164:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
    2166:	8c 81       	ldd	r24, Y+4	; 0x04
    2168:	80 61       	ori	r24, 0x10	; 16
    216a:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF1_conf);
	usart_rx_enable(&USARTF1_conf);
}
    216c:	df 91       	pop	r29
    216e:	cf 91       	pop	r28
    2170:	1f 91       	pop	r17
    2172:	0f 91       	pop	r16
    2174:	08 95       	ret

00002176 <ADCA_init>:

//KCK_CAP_VFB   -----> B7
#define CONFIG_ADC_INTLVL ADC_CH_INTLVL_LO_gc
void ADCA_init(void)
{
    2176:	cf 93       	push	r28
    2178:	df 93       	push	r29
    217a:	cd b7       	in	r28, 0x3d	; 61
    217c:	de b7       	in	r29, 0x3e	; 62
    217e:	2a 97       	sbiw	r28, 0x0a	; 10
    2180:	cd bf       	out	0x3d, r28	; 61
    2182:	de bf       	out	0x3e, r29	; 62
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
    2184:	61 e2       	ldi	r22, 0x21	; 33
    2186:	70 e0       	ldi	r23, 0x00	; 0
    2188:	82 e0       	ldi	r24, 0x02	; 2
    218a:	0e 94 18 05 	call	0xa30	; 0xa30 <nvm_read_byte>
    218e:	60 e2       	ldi	r22, 0x20	; 32
    2190:	70 e0       	ldi	r23, 0x00	; 0
    2192:	82 e0       	ldi	r24, 0x02	; 2
    2194:	0e 94 18 05 	call	0xa30	; 0xa30 <nvm_read_byte>
static inline void adc_set_conversion_parameters(struct adc_config *conf,
		enum adc_sign sign, enum adc_resolution res,
		enum adc_reference ref)
{
	// Preserve all but conversion and resolution config.
	conf->ctrlb &= ~(ADC_CONMODE_bm | ADC_RESOLUTION_gm);
    2198:	8a 81       	ldd	r24, Y+2	; 0x02
    219a:	89 7e       	andi	r24, 0xE9	; 233
	conf->ctrlb |= (uint8_t)res | (uint8_t)sign;

	conf->refctrl &= ~ADC_REFSEL_gm;
    219c:	9b 81       	ldd	r25, Y+3	; 0x03
    219e:	9f 7c       	andi	r25, 0xCF	; 207
	conf->refctrl |= ref;
    21a0:	90 62       	ori	r25, 0x20	; 32
    21a2:	9b 83       	std	Y+3, r25	; 0x03
		psc = ADC_PRESCALER_DIV256_gc;
	} else {
		psc = ADC_PRESCALER_DIV512_gc;
	}

	conf->prescaler = psc;
    21a4:	92 e0       	ldi	r25, 0x02	; 2
    21a6:	9d 83       	std	Y+5, r25	; 0x05
				(nr_of_ch << ADC_EVACT_gp);
		break;

#if XMEGA_A || XMEGA_AU
	case ADC_TRIG_FREERUN_SWEEP:
		conf->ctrlb |= ADC_FREERUN_bm;
    21a8:	88 60       	ori	r24, 0x08	; 8
    21aa:	8a 83       	std	Y+2, r24	; 0x02
		conf->evctrl = (nr_of_ch - 1) << ADC_SWEEP_gp;
    21ac:	1c 82       	std	Y+4, r1	; 0x04
    adc_get_calibration_data(ADC_CAL_ADCA);
    adc_set_conversion_parameters(&adca_conf,ADC_SIGN_OFF,ADC_RES_12,ADC_REF_AREFA);
    adc_set_clock_rate(&adca_conf,125000UL);
    adc_set_conversion_trigger(&adca_conf,ADC_TRIG_FREERUN_SWEEP,1,0);
   // adc_set_config_compare_value(adcb_conf,KCK_MAX_CHARGE_AMP);
    adc_write_configuration(&ADCA,&adca_conf);
    21ae:	be 01       	movw	r22, r28
    21b0:	6f 5f       	subi	r22, 0xFF	; 255
    21b2:	7f 4f       	sbci	r23, 0xFF	; 255
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	92 e0       	ldi	r25, 0x02	; 2
    21b8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <adc_write_configuration>
    //
    ///* Configure ADC channel 0:
    //* - Input: ADCB4
    //* - interrupts disable
    //*/
    adcch_read_configuration(&ADCA,1, &adca_ch_conf);
    21bc:	ae 01       	movw	r20, r28
    21be:	48 5f       	subi	r20, 0xF8	; 248
    21c0:	5f 4f       	sbci	r21, 0xFF	; 255
    21c2:	61 e0       	ldi	r22, 0x01	; 1
    21c4:	80 e0       	ldi	r24, 0x00	; 0
    21c6:	92 e0       	ldi	r25, 0x02	; 2
    21c8:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <adcch_read_configuration>

	// Configure for single-ended measurement.
	if (neg == ADCCH_NEG_NONE) {
		Assert(gain == 1);

		ch_conf->ctrl = ADC_CH_INPUTMODE_SINGLEENDED_gc;
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	88 87       	std	Y+8, r24	; 0x08
		ch_conf->muxctrl = pos << ADC_CH_MUXPOS_gp;
    21d0:	88 e1       	ldi	r24, 0x18	; 24
    21d2:	89 87       	std	Y+9, r24	; 0x09
    adcch_set_input(&adca_ch_conf,ADCCH_POS_PIN3,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    adcch_write_configuration(&ADCA,1,&adca_ch_conf);
    21d4:	ae 01       	movw	r20, r28
    21d6:	48 5f       	subi	r20, 0xF8	; 248
    21d8:	5f 4f       	sbci	r21, 0xFF	; 255
    21da:	61 e0       	ldi	r22, 0x01	; 1
    21dc:	80 e0       	ldi	r24, 0x00	; 0
    21de:	92 e0       	ldi	r25, 0x02	; 2
    21e0:	0e 94 b1 04 	call	0x962	; 0x962 <adcch_write_configuration>
    //adcch_set_input(&adcb_ch_conf,ADCCH_POS_PIN7,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    //adcch_set_interrupt_mode(&adcb_ch_conf,ADCCH_MODE_ABOVE);
    //adcch_enable_interrupt(&adcb_ch_conf);
    //adcch_write_configuration(&ADCB,3,&adcb_ch_conf);
    //
    adc_enable(&ADCA);
    21e4:	80 e0       	ldi	r24, 0x00	; 0
    21e6:	92 e0       	ldi	r25, 0x02	; 2
    21e8:	0e 94 49 04 	call	0x892	; 0x892 <adc_enable>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    21ec:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    21ee:	f8 94       	cli
 * \note The ADC must be enabled for this function to have any effect.
 */
static inline void adc_start_conversion(ADC_t *adc, uint8_t ch_mask)
{
	irqflags_t flags = cpu_irq_save();
	adc->CTRLA |= ch_mask << ADC_CH0START_bp;
    21f0:	e0 e0       	ldi	r30, 0x00	; 0
    21f2:	f2 e0       	ldi	r31, 0x02	; 2
    21f4:	90 81       	ld	r25, Z
    21f6:	94 60       	ori	r25, 0x04	; 4
    21f8:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    21fa:	8f bf       	out	0x3f, r24	; 63
    adc_start_conversion(&ADCA,ADC_CH0);
    //adc_start_conversion(&ADCB,ADC_CH1);
    //adc_start_conversion(&ADCB,ADC_CH2);
    ////adc_start_conversion(&ADCB,ADC_CH3);
}
    21fc:	2a 96       	adiw	r28, 0x0a	; 10
    21fe:	cd bf       	out	0x3d, r28	; 61
    2200:	de bf       	out	0x3e, r29	; 62
    2202:	df 91       	pop	r29
    2204:	cf 91       	pop	r28
    2206:	08 95       	ret

00002208 <__vector_43>:
        break;
    };

}
void get_MS(char rx)
{
    2208:	1f 92       	push	r1
    220a:	0f 92       	push	r0
    220c:	0f b6       	in	r0, 0x3f	; 63
    220e:	0f 92       	push	r0
    2210:	11 24       	eor	r1, r1
    2212:	08 b6       	in	r0, 0x38	; 56
    2214:	0f 92       	push	r0
    2216:	18 be       	out	0x38, r1	; 56
    2218:	09 b6       	in	r0, 0x39	; 57
    221a:	0f 92       	push	r0
    221c:	19 be       	out	0x39, r1	; 57
    221e:	0a b6       	in	r0, 0x3a	; 58
    2220:	0f 92       	push	r0
    2222:	1a be       	out	0x3a, r1	; 58
    2224:	0b b6       	in	r0, 0x3b	; 59
    2226:	0f 92       	push	r0
    2228:	1b be       	out	0x3b, r1	; 59
    222a:	2f 92       	push	r2
    222c:	3f 92       	push	r3
    222e:	4f 92       	push	r4
    2230:	5f 92       	push	r5
    2232:	7f 92       	push	r7
    2234:	8f 92       	push	r8
    2236:	9f 92       	push	r9
    2238:	af 92       	push	r10
    223a:	bf 92       	push	r11
    223c:	cf 92       	push	r12
    223e:	df 92       	push	r13
    2240:	ef 92       	push	r14
    2242:	ff 92       	push	r15
    2244:	0f 93       	push	r16
    2246:	1f 93       	push	r17
    2248:	2f 93       	push	r18
    224a:	3f 93       	push	r19
    224c:	4f 93       	push	r20
    224e:	5f 93       	push	r21
    2250:	6f 93       	push	r22
    2252:	7f 93       	push	r23
    2254:	8f 93       	push	r24
    2256:	9f 93       	push	r25
    2258:	af 93       	push	r26
    225a:	bf 93       	push	r27
    225c:	ef 93       	push	r30
    225e:	ff 93       	push	r31
    2260:	cf 93       	push	r28
    2262:	df 93       	push	r29
    2264:	cd b7       	in	r28, 0x3d	; 61
    2266:	de b7       	in	r29, 0x3e	; 62
    2268:	c4 55       	subi	r28, 0x54	; 84
    226a:	d1 09       	sbc	r29, r1
    226c:	cd bf       	out	0x3d, r28	; 61
    226e:	de bf       	out	0x3e, r29	; 62
    2270:	60 e7       	ldi	r22, 0x70	; 112
    2272:	87 e2       	ldi	r24, 0x27	; 39
    2274:	0e 94 1e 29 	call	0x523c	; 0x523c <NRF24L01_L_WriteReg>
    2278:	78 2e       	mov	r7, r24
    227a:	86 ff       	sbrs	r24, 6
    227c:	f6 c3       	rjmp	.+2028   	; 0x2a6a <__vector_43+0x862>
    227e:	88 e0       	ldi	r24, 0x08	; 8
    2280:	e0 e6       	ldi	r30, 0x60	; 96
    2282:	f6 e0       	ldi	r31, 0x06	; 6
    2284:	87 83       	std	Z+7, r24	; 0x07
    2286:	60 e2       	ldi	r22, 0x20	; 32
    2288:	70 e0       	ldi	r23, 0x00	; 0
    228a:	83 e5       	ldi	r24, 0x53	; 83
    228c:	93 e2       	ldi	r25, 0x23	; 35
    228e:	0e 94 73 29 	call	0x52e6	; 0x52e6 <NRF24L01_L_Read_RX_Buf>
    2292:	0f 2e       	mov	r0, r31
    2294:	f3 e5       	ldi	r31, 0x53	; 83
    2296:	8f 2e       	mov	r8, r31
    2298:	f3 e2       	ldi	r31, 0x23	; 35
    229a:	9f 2e       	mov	r9, r31
    229c:	f0 2d       	mov	r31, r0
    229e:	d4 01       	movw	r26, r8
    22a0:	6d 91       	ld	r22, X+
    22a2:	4d 01       	movw	r8, r26
    22a4:	80 ea       	ldi	r24, 0xA0	; 160
    22a6:	9a e0       	ldi	r25, 0x0A	; 10
    22a8:	26 dd       	rcall	.-1460   	; 0x1cf6 <usart_putchar>
    22aa:	b3 e7       	ldi	r27, 0x73	; 115
    22ac:	8b 16       	cp	r8, r27
    22ae:	b3 e2       	ldi	r27, 0x23	; 35
    22b0:	9b 06       	cpc	r9, r27
    22b2:	a9 f7       	brne	.-22     	; 0x229e <__vector_43+0x96>
    22b4:	40 91 53 23 	lds	r20, 0x2353
    22b8:	e8 e0       	ldi	r30, 0x08	; 8
    22ba:	f6 e0       	ldi	r31, 0x06	; 6
    22bc:	70 81       	ld	r23, Z
    22be:	60 81       	ld	r22, Z
    22c0:	20 81       	ld	r18, Z
    22c2:	50 81       	ld	r21, Z
    22c4:	84 2f       	mov	r24, r20
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	22 1f       	adc	r18, r18
    22ca:	22 27       	eor	r18, r18
    22cc:	22 1f       	adc	r18, r18
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	22 0f       	add	r18, r18
    22d2:	33 1f       	adc	r19, r19
    22d4:	22 0f       	add	r18, r18
    22d6:	33 1f       	adc	r19, r19
    22d8:	76 fb       	bst	r23, 6
    22da:	cc 24       	eor	r12, r12
    22dc:	c0 f8       	bld	r12, 0
    22de:	d1 2c       	mov	r13, r1
    22e0:	c2 2a       	or	r12, r18
    22e2:	d3 2a       	or	r13, r19
    22e4:	64 fb       	bst	r22, 4
    22e6:	ee 24       	eor	r14, r14
    22e8:	e0 f8       	bld	r14, 0
    22ea:	f1 2c       	mov	r15, r1
    22ec:	ee 0c       	add	r14, r14
    22ee:	ff 1c       	adc	r15, r15
    22f0:	ce 28       	or	r12, r14
    22f2:	df 28       	or	r13, r15
    22f4:	55 fb       	bst	r21, 5
    22f6:	00 27       	eor	r16, r16
    22f8:	00 f9       	bld	r16, 0
    22fa:	10 e0       	ldi	r17, 0x00	; 0
    22fc:	98 01       	movw	r18, r16
    22fe:	22 0f       	add	r18, r18
    2300:	33 1f       	adc	r19, r19
    2302:	22 0f       	add	r18, r18
    2304:	33 1f       	adc	r19, r19
    2306:	22 0f       	add	r18, r18
    2308:	33 1f       	adc	r19, r19
    230a:	86 01       	movw	r16, r12
    230c:	02 2b       	or	r16, r18
    230e:	13 2b       	or	r17, r19
    2310:	80 17       	cp	r24, r16
    2312:	91 07       	cpc	r25, r17
    2314:	09 f0       	breq	.+2      	; 0x2318 <__vector_43+0x110>
    2316:	a9 c3       	rjmp	.+1874   	; 0x2a6a <__vector_43+0x862>
    2318:	10 92 b5 20 	sts	0x20B5, r1
    231c:	10 92 b6 20 	sts	0x20B6, r1
    2320:	50 81       	ld	r21, Z
    2322:	30 81       	ld	r19, Z
    2324:	80 81       	ld	r24, Z
    2326:	20 81       	ld	r18, Z
    2328:	88 1f       	adc	r24, r24
    232a:	88 27       	eor	r24, r24
    232c:	88 1f       	adc	r24, r24
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	88 0f       	add	r24, r24
    2332:	99 1f       	adc	r25, r25
    2334:	88 0f       	add	r24, r24
    2336:	99 1f       	adc	r25, r25
    2338:	56 fb       	bst	r21, 6
    233a:	aa 24       	eor	r10, r10
    233c:	a0 f8       	bld	r10, 0
    233e:	b1 2c       	mov	r11, r1
    2340:	a8 2a       	or	r10, r24
    2342:	b9 2a       	or	r11, r25
    2344:	32 95       	swap	r19
    2346:	31 70       	andi	r19, 0x01	; 1
    2348:	39 83       	std	Y+1, r19	; 0x01
    234a:	1a 82       	std	Y+2, r1	; 0x02
    234c:	89 81       	ldd	r24, Y+1	; 0x01
    234e:	9a 81       	ldd	r25, Y+2	; 0x02
    2350:	88 0f       	add	r24, r24
    2352:	99 1f       	adc	r25, r25
    2354:	a8 2a       	or	r10, r24
    2356:	b9 2a       	or	r11, r25
    2358:	25 fb       	bst	r18, 5
    235a:	44 24       	eor	r4, r4
    235c:	40 f8       	bld	r4, 0
    235e:	51 2c       	mov	r5, r1
    2360:	c2 01       	movw	r24, r4
    2362:	88 0f       	add	r24, r24
    2364:	99 1f       	adc	r25, r25
    2366:	88 0f       	add	r24, r24
    2368:	99 1f       	adc	r25, r25
    236a:	88 0f       	add	r24, r24
    236c:	99 1f       	adc	r25, r25
    236e:	25 01       	movw	r4, r10
    2370:	48 2a       	or	r4, r24
    2372:	59 2a       	or	r5, r25
    2374:	57 e1       	ldi	r21, 0x17	; 23
    2376:	54 9d       	mul	r21, r4
    2378:	d0 01       	movw	r26, r0
    237a:	55 9d       	mul	r21, r5
    237c:	b0 0d       	add	r27, r0
    237e:	11 24       	eor	r1, r1
    2380:	a0 54       	subi	r26, 0x40	; 64
    2382:	bf 4d       	sbci	r27, 0xDF	; 223
    2384:	4c 93       	st	X, r20
    2386:	40 81       	ld	r20, Z
    2388:	30 81       	ld	r19, Z
    238a:	80 81       	ld	r24, Z
    238c:	20 81       	ld	r18, Z
    238e:	88 1f       	adc	r24, r24
    2390:	88 27       	eor	r24, r24
    2392:	88 1f       	adc	r24, r24
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	88 0f       	add	r24, r24
    2398:	99 1f       	adc	r25, r25
    239a:	88 0f       	add	r24, r24
    239c:	99 1f       	adc	r25, r25
    239e:	46 fb       	bst	r20, 6
    23a0:	22 24       	eor	r2, r2
    23a2:	20 f8       	bld	r2, 0
    23a4:	31 2c       	mov	r3, r1
    23a6:	28 2a       	or	r2, r24
    23a8:	39 2a       	or	r3, r25
    23aa:	32 95       	swap	r19
    23ac:	31 70       	andi	r19, 0x01	; 1
    23ae:	3b 83       	std	Y+3, r19	; 0x03
    23b0:	1c 82       	std	Y+4, r1	; 0x04
    23b2:	8b 81       	ldd	r24, Y+3	; 0x03
    23b4:	9c 81       	ldd	r25, Y+4	; 0x04
    23b6:	88 0f       	add	r24, r24
    23b8:	99 1f       	adc	r25, r25
    23ba:	28 2a       	or	r2, r24
    23bc:	39 2a       	or	r3, r25
    23be:	25 fb       	bst	r18, 5
    23c0:	22 27       	eor	r18, r18
    23c2:	20 f9       	bld	r18, 0
    23c4:	2d 83       	std	Y+5, r18	; 0x05
    23c6:	1e 82       	std	Y+6, r1	; 0x06
    23c8:	8d 81       	ldd	r24, Y+5	; 0x05
    23ca:	9e 81       	ldd	r25, Y+6	; 0x06
    23cc:	88 0f       	add	r24, r24
    23ce:	99 1f       	adc	r25, r25
    23d0:	88 0f       	add	r24, r24
    23d2:	99 1f       	adc	r25, r25
    23d4:	88 0f       	add	r24, r24
    23d6:	99 1f       	adc	r25, r25
    23d8:	28 2a       	or	r2, r24
    23da:	39 2a       	or	r3, r25
    23dc:	52 9d       	mul	r21, r2
    23de:	d0 01       	movw	r26, r0
    23e0:	53 9d       	mul	r21, r3
    23e2:	b0 0d       	add	r27, r0
    23e4:	11 24       	eor	r1, r1
    23e6:	a0 54       	subi	r26, 0x40	; 64
    23e8:	bf 4d       	sbci	r27, 0xDF	; 223
    23ea:	80 91 54 23 	lds	r24, 0x2354
    23ee:	90 e0       	ldi	r25, 0x00	; 0
    23f0:	11 96       	adiw	r26, 0x01	; 1
    23f2:	8d 93       	st	X+, r24
    23f4:	9c 93       	st	X, r25
    23f6:	12 97       	sbiw	r26, 0x02	; 2
    23f8:	30 81       	ld	r19, Z
    23fa:	20 81       	ld	r18, Z
    23fc:	80 81       	ld	r24, Z
    23fe:	40 81       	ld	r20, Z
    2400:	88 1f       	adc	r24, r24
    2402:	88 27       	eor	r24, r24
    2404:	88 1f       	adc	r24, r24
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	88 0f       	add	r24, r24
    240a:	99 1f       	adc	r25, r25
    240c:	88 0f       	add	r24, r24
    240e:	99 1f       	adc	r25, r25
    2410:	36 fb       	bst	r19, 6
    2412:	33 27       	eor	r19, r19
    2414:	30 f9       	bld	r19, 0
    2416:	3f 83       	std	Y+7, r19	; 0x07
    2418:	18 86       	std	Y+8, r1	; 0x08
    241a:	6f 81       	ldd	r22, Y+7	; 0x07
    241c:	78 85       	ldd	r23, Y+8	; 0x08
    241e:	86 2b       	or	r24, r22
    2420:	97 2b       	or	r25, r23
    2422:	22 95       	swap	r18
    2424:	21 70       	andi	r18, 0x01	; 1
    2426:	29 87       	std	Y+9, r18	; 0x09
    2428:	1a 86       	std	Y+10, r1	; 0x0a
    242a:	29 85       	ldd	r18, Y+9	; 0x09
    242c:	3a 85       	ldd	r19, Y+10	; 0x0a
    242e:	22 0f       	add	r18, r18
    2430:	33 1f       	adc	r19, r19
    2432:	82 2b       	or	r24, r18
    2434:	93 2b       	or	r25, r19
    2436:	45 fb       	bst	r20, 5
    2438:	44 27       	eor	r20, r20
    243a:	40 f9       	bld	r20, 0
    243c:	4b 87       	std	Y+11, r20	; 0x0b
    243e:	1c 86       	std	Y+12, r1	; 0x0c
    2440:	2b 85       	ldd	r18, Y+11	; 0x0b
    2442:	3c 85       	ldd	r19, Y+12	; 0x0c
    2444:	22 0f       	add	r18, r18
    2446:	33 1f       	adc	r19, r19
    2448:	22 0f       	add	r18, r18
    244a:	33 1f       	adc	r19, r19
    244c:	22 0f       	add	r18, r18
    244e:	33 1f       	adc	r19, r19
    2450:	82 2b       	or	r24, r18
    2452:	93 2b       	or	r25, r19
    2454:	58 9f       	mul	r21, r24
    2456:	d0 01       	movw	r26, r0
    2458:	59 9f       	mul	r21, r25
    245a:	b0 0d       	add	r27, r0
    245c:	11 24       	eor	r1, r1
    245e:	a0 54       	subi	r26, 0x40	; 64
    2460:	bf 4d       	sbci	r27, 0xDF	; 223
    2462:	80 91 55 23 	lds	r24, 0x2355
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	13 96       	adiw	r26, 0x03	; 3
    246a:	8d 93       	st	X+, r24
    246c:	9c 93       	st	X, r25
    246e:	14 97       	sbiw	r26, 0x04	; 4
    2470:	30 81       	ld	r19, Z
    2472:	20 81       	ld	r18, Z
    2474:	80 81       	ld	r24, Z
    2476:	40 81       	ld	r20, Z
    2478:	88 1f       	adc	r24, r24
    247a:	88 27       	eor	r24, r24
    247c:	88 1f       	adc	r24, r24
    247e:	90 e0       	ldi	r25, 0x00	; 0
    2480:	88 0f       	add	r24, r24
    2482:	99 1f       	adc	r25, r25
    2484:	88 0f       	add	r24, r24
    2486:	99 1f       	adc	r25, r25
    2488:	36 fb       	bst	r19, 6
    248a:	33 27       	eor	r19, r19
    248c:	30 f9       	bld	r19, 0
    248e:	3d 87       	std	Y+13, r19	; 0x0d
    2490:	1e 86       	std	Y+14, r1	; 0x0e
    2492:	ad 85       	ldd	r26, Y+13	; 0x0d
    2494:	be 85       	ldd	r27, Y+14	; 0x0e
    2496:	8a 2b       	or	r24, r26
    2498:	9b 2b       	or	r25, r27
    249a:	22 95       	swap	r18
    249c:	21 70       	andi	r18, 0x01	; 1
    249e:	2f 87       	std	Y+15, r18	; 0x0f
    24a0:	18 8a       	std	Y+16, r1	; 0x10
    24a2:	2f 85       	ldd	r18, Y+15	; 0x0f
    24a4:	38 89       	ldd	r19, Y+16	; 0x10
    24a6:	22 0f       	add	r18, r18
    24a8:	33 1f       	adc	r19, r19
    24aa:	82 2b       	or	r24, r18
    24ac:	93 2b       	or	r25, r19
    24ae:	45 fb       	bst	r20, 5
    24b0:	44 27       	eor	r20, r20
    24b2:	40 f9       	bld	r20, 0
    24b4:	49 8b       	std	Y+17, r20	; 0x11
    24b6:	1a 8a       	std	Y+18, r1	; 0x12
    24b8:	29 89       	ldd	r18, Y+17	; 0x11
    24ba:	3a 89       	ldd	r19, Y+18	; 0x12
    24bc:	22 0f       	add	r18, r18
    24be:	33 1f       	adc	r19, r19
    24c0:	22 0f       	add	r18, r18
    24c2:	33 1f       	adc	r19, r19
    24c4:	22 0f       	add	r18, r18
    24c6:	33 1f       	adc	r19, r19
    24c8:	82 2b       	or	r24, r18
    24ca:	93 2b       	or	r25, r19
    24cc:	58 9f       	mul	r21, r24
    24ce:	d0 01       	movw	r26, r0
    24d0:	59 9f       	mul	r21, r25
    24d2:	b0 0d       	add	r27, r0
    24d4:	11 24       	eor	r1, r1
    24d6:	a0 54       	subi	r26, 0x40	; 64
    24d8:	bf 4d       	sbci	r27, 0xDF	; 223
    24da:	80 91 56 23 	lds	r24, 0x2356
    24de:	90 e0       	ldi	r25, 0x00	; 0
    24e0:	15 96       	adiw	r26, 0x05	; 5
    24e2:	8d 93       	st	X+, r24
    24e4:	9c 93       	st	X, r25
    24e6:	16 97       	sbiw	r26, 0x06	; 6
    24e8:	30 81       	ld	r19, Z
    24ea:	20 81       	ld	r18, Z
    24ec:	80 81       	ld	r24, Z
    24ee:	40 81       	ld	r20, Z
    24f0:	88 1f       	adc	r24, r24
    24f2:	88 27       	eor	r24, r24
    24f4:	88 1f       	adc	r24, r24
    24f6:	90 e0       	ldi	r25, 0x00	; 0
    24f8:	88 0f       	add	r24, r24
    24fa:	99 1f       	adc	r25, r25
    24fc:	88 0f       	add	r24, r24
    24fe:	99 1f       	adc	r25, r25
    2500:	36 fb       	bst	r19, 6
    2502:	33 27       	eor	r19, r19
    2504:	30 f9       	bld	r19, 0
    2506:	3b 8b       	std	Y+19, r19	; 0x13
    2508:	1c 8a       	std	Y+20, r1	; 0x14
    250a:	6b 89       	ldd	r22, Y+19	; 0x13
    250c:	7c 89       	ldd	r23, Y+20	; 0x14
    250e:	86 2b       	or	r24, r22
    2510:	97 2b       	or	r25, r23
    2512:	22 95       	swap	r18
    2514:	21 70       	andi	r18, 0x01	; 1
    2516:	2d 8b       	std	Y+21, r18	; 0x15
    2518:	1e 8a       	std	Y+22, r1	; 0x16
    251a:	2d 89       	ldd	r18, Y+21	; 0x15
    251c:	3e 89       	ldd	r19, Y+22	; 0x16
    251e:	22 0f       	add	r18, r18
    2520:	33 1f       	adc	r19, r19
    2522:	82 2b       	or	r24, r18
    2524:	93 2b       	or	r25, r19
    2526:	45 fb       	bst	r20, 5
    2528:	44 27       	eor	r20, r20
    252a:	40 f9       	bld	r20, 0
    252c:	4f 8b       	std	Y+23, r20	; 0x17
    252e:	18 8e       	std	Y+24, r1	; 0x18
    2530:	2f 89       	ldd	r18, Y+23	; 0x17
    2532:	38 8d       	ldd	r19, Y+24	; 0x18
    2534:	22 0f       	add	r18, r18
    2536:	33 1f       	adc	r19, r19
    2538:	22 0f       	add	r18, r18
    253a:	33 1f       	adc	r19, r19
    253c:	22 0f       	add	r18, r18
    253e:	33 1f       	adc	r19, r19
    2540:	82 2b       	or	r24, r18
    2542:	93 2b       	or	r25, r19
    2544:	58 9f       	mul	r21, r24
    2546:	d0 01       	movw	r26, r0
    2548:	59 9f       	mul	r21, r25
    254a:	b0 0d       	add	r27, r0
    254c:	11 24       	eor	r1, r1
    254e:	a0 54       	subi	r26, 0x40	; 64
    2550:	bf 4d       	sbci	r27, 0xDF	; 223
    2552:	80 91 57 23 	lds	r24, 0x2357
    2556:	90 e0       	ldi	r25, 0x00	; 0
    2558:	17 96       	adiw	r26, 0x07	; 7
    255a:	8d 93       	st	X+, r24
    255c:	9c 93       	st	X, r25
    255e:	18 97       	sbiw	r26, 0x08	; 8
    2560:	30 81       	ld	r19, Z
    2562:	20 81       	ld	r18, Z
    2564:	80 81       	ld	r24, Z
    2566:	40 81       	ld	r20, Z
    2568:	88 1f       	adc	r24, r24
    256a:	88 27       	eor	r24, r24
    256c:	88 1f       	adc	r24, r24
    256e:	90 e0       	ldi	r25, 0x00	; 0
    2570:	88 0f       	add	r24, r24
    2572:	99 1f       	adc	r25, r25
    2574:	88 0f       	add	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	36 fb       	bst	r19, 6
    257a:	33 27       	eor	r19, r19
    257c:	30 f9       	bld	r19, 0
    257e:	39 8f       	std	Y+25, r19	; 0x19
    2580:	1a 8e       	std	Y+26, r1	; 0x1a
    2582:	a9 8d       	ldd	r26, Y+25	; 0x19
    2584:	ba 8d       	ldd	r27, Y+26	; 0x1a
    2586:	8a 2b       	or	r24, r26
    2588:	9b 2b       	or	r25, r27
    258a:	22 95       	swap	r18
    258c:	21 70       	andi	r18, 0x01	; 1
    258e:	2b 8f       	std	Y+27, r18	; 0x1b
    2590:	1c 8e       	std	Y+28, r1	; 0x1c
    2592:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2594:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2596:	22 0f       	add	r18, r18
    2598:	33 1f       	adc	r19, r19
    259a:	82 2b       	or	r24, r18
    259c:	93 2b       	or	r25, r19
    259e:	45 fb       	bst	r20, 5
    25a0:	44 27       	eor	r20, r20
    25a2:	40 f9       	bld	r20, 0
    25a4:	4d 8f       	std	Y+29, r20	; 0x1d
    25a6:	1e 8e       	std	Y+30, r1	; 0x1e
    25a8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    25aa:	3e 8d       	ldd	r19, Y+30	; 0x1e
    25ac:	22 0f       	add	r18, r18
    25ae:	33 1f       	adc	r19, r19
    25b0:	22 0f       	add	r18, r18
    25b2:	33 1f       	adc	r19, r19
    25b4:	22 0f       	add	r18, r18
    25b6:	33 1f       	adc	r19, r19
    25b8:	82 2b       	or	r24, r18
    25ba:	93 2b       	or	r25, r19
    25bc:	58 9f       	mul	r21, r24
    25be:	d0 01       	movw	r26, r0
    25c0:	59 9f       	mul	r21, r25
    25c2:	b0 0d       	add	r27, r0
    25c4:	11 24       	eor	r1, r1
    25c6:	a0 54       	subi	r26, 0x40	; 64
    25c8:	bf 4d       	sbci	r27, 0xDF	; 223
    25ca:	80 91 58 23 	lds	r24, 0x2358
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	19 96       	adiw	r26, 0x09	; 9
    25d2:	8d 93       	st	X+, r24
    25d4:	9c 93       	st	X, r25
    25d6:	1a 97       	sbiw	r26, 0x0a	; 10
    25d8:	30 81       	ld	r19, Z
    25da:	20 81       	ld	r18, Z
    25dc:	80 81       	ld	r24, Z
    25de:	40 81       	ld	r20, Z
    25e0:	88 1f       	adc	r24, r24
    25e2:	88 27       	eor	r24, r24
    25e4:	88 1f       	adc	r24, r24
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	88 0f       	add	r24, r24
    25ea:	99 1f       	adc	r25, r25
    25ec:	88 0f       	add	r24, r24
    25ee:	99 1f       	adc	r25, r25
    25f0:	36 fb       	bst	r19, 6
    25f2:	33 27       	eor	r19, r19
    25f4:	30 f9       	bld	r19, 0
    25f6:	3f 8f       	std	Y+31, r19	; 0x1f
    25f8:	18 a2       	std	Y+32, r1	; 0x20
    25fa:	6f 8d       	ldd	r22, Y+31	; 0x1f
    25fc:	78 a1       	ldd	r23, Y+32	; 0x20
    25fe:	86 2b       	or	r24, r22
    2600:	97 2b       	or	r25, r23
    2602:	22 95       	swap	r18
    2604:	21 70       	andi	r18, 0x01	; 1
    2606:	29 a3       	std	Y+33, r18	; 0x21
    2608:	1a a2       	std	Y+34, r1	; 0x22
    260a:	29 a1       	ldd	r18, Y+33	; 0x21
    260c:	3a a1       	ldd	r19, Y+34	; 0x22
    260e:	22 0f       	add	r18, r18
    2610:	33 1f       	adc	r19, r19
    2612:	82 2b       	or	r24, r18
    2614:	93 2b       	or	r25, r19
    2616:	45 fb       	bst	r20, 5
    2618:	44 27       	eor	r20, r20
    261a:	40 f9       	bld	r20, 0
    261c:	4b a3       	std	Y+35, r20	; 0x23
    261e:	1c a2       	std	Y+36, r1	; 0x24
    2620:	2b a1       	ldd	r18, Y+35	; 0x23
    2622:	3c a1       	ldd	r19, Y+36	; 0x24
    2624:	22 0f       	add	r18, r18
    2626:	33 1f       	adc	r19, r19
    2628:	22 0f       	add	r18, r18
    262a:	33 1f       	adc	r19, r19
    262c:	22 0f       	add	r18, r18
    262e:	33 1f       	adc	r19, r19
    2630:	82 2b       	or	r24, r18
    2632:	93 2b       	or	r25, r19
    2634:	58 9f       	mul	r21, r24
    2636:	d0 01       	movw	r26, r0
    2638:	59 9f       	mul	r21, r25
    263a:	b0 0d       	add	r27, r0
    263c:	11 24       	eor	r1, r1
    263e:	a0 54       	subi	r26, 0x40	; 64
    2640:	bf 4d       	sbci	r27, 0xDF	; 223
    2642:	80 91 59 23 	lds	r24, 0x2359
    2646:	90 e0       	ldi	r25, 0x00	; 0
    2648:	1b 96       	adiw	r26, 0x0b	; 11
    264a:	8d 93       	st	X+, r24
    264c:	9c 93       	st	X, r25
    264e:	1c 97       	sbiw	r26, 0x0c	; 12
    2650:	30 81       	ld	r19, Z
    2652:	20 81       	ld	r18, Z
    2654:	80 81       	ld	r24, Z
    2656:	40 81       	ld	r20, Z
    2658:	88 1f       	adc	r24, r24
    265a:	88 27       	eor	r24, r24
    265c:	88 1f       	adc	r24, r24
    265e:	90 e0       	ldi	r25, 0x00	; 0
    2660:	88 0f       	add	r24, r24
    2662:	99 1f       	adc	r25, r25
    2664:	88 0f       	add	r24, r24
    2666:	99 1f       	adc	r25, r25
    2668:	36 fb       	bst	r19, 6
    266a:	33 27       	eor	r19, r19
    266c:	30 f9       	bld	r19, 0
    266e:	3d a3       	std	Y+37, r19	; 0x25
    2670:	1e a2       	std	Y+38, r1	; 0x26
    2672:	ad a1       	ldd	r26, Y+37	; 0x25
    2674:	be a1       	ldd	r27, Y+38	; 0x26
    2676:	8a 2b       	or	r24, r26
    2678:	9b 2b       	or	r25, r27
    267a:	22 95       	swap	r18
    267c:	21 70       	andi	r18, 0x01	; 1
    267e:	2f a3       	std	Y+39, r18	; 0x27
    2680:	18 a6       	std	Y+40, r1	; 0x28
    2682:	2f a1       	ldd	r18, Y+39	; 0x27
    2684:	38 a5       	ldd	r19, Y+40	; 0x28
    2686:	22 0f       	add	r18, r18
    2688:	33 1f       	adc	r19, r19
    268a:	82 2b       	or	r24, r18
    268c:	93 2b       	or	r25, r19
    268e:	45 fb       	bst	r20, 5
    2690:	44 27       	eor	r20, r20
    2692:	40 f9       	bld	r20, 0
    2694:	49 a7       	std	Y+41, r20	; 0x29
    2696:	1a a6       	std	Y+42, r1	; 0x2a
    2698:	29 a5       	ldd	r18, Y+41	; 0x29
    269a:	3a a5       	ldd	r19, Y+42	; 0x2a
    269c:	22 0f       	add	r18, r18
    269e:	33 1f       	adc	r19, r19
    26a0:	22 0f       	add	r18, r18
    26a2:	33 1f       	adc	r19, r19
    26a4:	22 0f       	add	r18, r18
    26a6:	33 1f       	adc	r19, r19
    26a8:	82 2b       	or	r24, r18
    26aa:	93 2b       	or	r25, r19
    26ac:	58 9f       	mul	r21, r24
    26ae:	d0 01       	movw	r26, r0
    26b0:	59 9f       	mul	r21, r25
    26b2:	b0 0d       	add	r27, r0
    26b4:	11 24       	eor	r1, r1
    26b6:	a0 54       	subi	r26, 0x40	; 64
    26b8:	bf 4d       	sbci	r27, 0xDF	; 223
    26ba:	80 91 5a 23 	lds	r24, 0x235A
    26be:	90 e0       	ldi	r25, 0x00	; 0
    26c0:	1d 96       	adiw	r26, 0x0d	; 13
    26c2:	8d 93       	st	X+, r24
    26c4:	9c 93       	st	X, r25
    26c6:	1e 97       	sbiw	r26, 0x0e	; 14
    26c8:	30 81       	ld	r19, Z
    26ca:	20 81       	ld	r18, Z
    26cc:	80 81       	ld	r24, Z
    26ce:	40 81       	ld	r20, Z
    26d0:	88 1f       	adc	r24, r24
    26d2:	88 27       	eor	r24, r24
    26d4:	88 1f       	adc	r24, r24
    26d6:	90 e0       	ldi	r25, 0x00	; 0
    26d8:	88 0f       	add	r24, r24
    26da:	99 1f       	adc	r25, r25
    26dc:	88 0f       	add	r24, r24
    26de:	99 1f       	adc	r25, r25
    26e0:	36 fb       	bst	r19, 6
    26e2:	33 27       	eor	r19, r19
    26e4:	30 f9       	bld	r19, 0
    26e6:	3b a7       	std	Y+43, r19	; 0x2b
    26e8:	1c a6       	std	Y+44, r1	; 0x2c
    26ea:	6b a5       	ldd	r22, Y+43	; 0x2b
    26ec:	7c a5       	ldd	r23, Y+44	; 0x2c
    26ee:	86 2b       	or	r24, r22
    26f0:	97 2b       	or	r25, r23
    26f2:	22 95       	swap	r18
    26f4:	21 70       	andi	r18, 0x01	; 1
    26f6:	2d a7       	std	Y+45, r18	; 0x2d
    26f8:	1e a6       	std	Y+46, r1	; 0x2e
    26fa:	2d a5       	ldd	r18, Y+45	; 0x2d
    26fc:	3e a5       	ldd	r19, Y+46	; 0x2e
    26fe:	22 0f       	add	r18, r18
    2700:	33 1f       	adc	r19, r19
    2702:	82 2b       	or	r24, r18
    2704:	93 2b       	or	r25, r19
    2706:	45 fb       	bst	r20, 5
    2708:	44 27       	eor	r20, r20
    270a:	40 f9       	bld	r20, 0
    270c:	4f a7       	std	Y+47, r20	; 0x2f
    270e:	18 aa       	std	Y+48, r1	; 0x30
    2710:	2f a5       	ldd	r18, Y+47	; 0x2f
    2712:	38 a9       	ldd	r19, Y+48	; 0x30
    2714:	22 0f       	add	r18, r18
    2716:	33 1f       	adc	r19, r19
    2718:	22 0f       	add	r18, r18
    271a:	33 1f       	adc	r19, r19
    271c:	22 0f       	add	r18, r18
    271e:	33 1f       	adc	r19, r19
    2720:	82 2b       	or	r24, r18
    2722:	93 2b       	or	r25, r19
    2724:	58 9f       	mul	r21, r24
    2726:	d0 01       	movw	r26, r0
    2728:	59 9f       	mul	r21, r25
    272a:	b0 0d       	add	r27, r0
    272c:	11 24       	eor	r1, r1
    272e:	a0 54       	subi	r26, 0x40	; 64
    2730:	bf 4d       	sbci	r27, 0xDF	; 223
    2732:	80 91 5b 23 	lds	r24, 0x235B
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	1f 96       	adiw	r26, 0x0f	; 15
    273a:	8d 93       	st	X+, r24
    273c:	9c 93       	st	X, r25
    273e:	50 97       	sbiw	r26, 0x10	; 16
    2740:	30 81       	ld	r19, Z
    2742:	20 81       	ld	r18, Z
    2744:	80 81       	ld	r24, Z
    2746:	40 81       	ld	r20, Z
    2748:	88 1f       	adc	r24, r24
    274a:	88 27       	eor	r24, r24
    274c:	88 1f       	adc	r24, r24
    274e:	90 e0       	ldi	r25, 0x00	; 0
    2750:	88 0f       	add	r24, r24
    2752:	99 1f       	adc	r25, r25
    2754:	88 0f       	add	r24, r24
    2756:	99 1f       	adc	r25, r25
    2758:	36 fb       	bst	r19, 6
    275a:	33 27       	eor	r19, r19
    275c:	30 f9       	bld	r19, 0
    275e:	39 ab       	std	Y+49, r19	; 0x31
    2760:	1a aa       	std	Y+50, r1	; 0x32
    2762:	a9 a9       	ldd	r26, Y+49	; 0x31
    2764:	ba a9       	ldd	r27, Y+50	; 0x32
    2766:	8a 2b       	or	r24, r26
    2768:	9b 2b       	or	r25, r27
    276a:	22 95       	swap	r18
    276c:	21 70       	andi	r18, 0x01	; 1
    276e:	2b ab       	std	Y+51, r18	; 0x33
    2770:	1c aa       	std	Y+52, r1	; 0x34
    2772:	2b a9       	ldd	r18, Y+51	; 0x33
    2774:	3c a9       	ldd	r19, Y+52	; 0x34
    2776:	22 0f       	add	r18, r18
    2778:	33 1f       	adc	r19, r19
    277a:	82 2b       	or	r24, r18
    277c:	93 2b       	or	r25, r19
    277e:	45 fb       	bst	r20, 5
    2780:	44 27       	eor	r20, r20
    2782:	40 f9       	bld	r20, 0
    2784:	4d ab       	std	Y+53, r20	; 0x35
    2786:	1e aa       	std	Y+54, r1	; 0x36
    2788:	2d a9       	ldd	r18, Y+53	; 0x35
    278a:	3e a9       	ldd	r19, Y+54	; 0x36
    278c:	22 0f       	add	r18, r18
    278e:	33 1f       	adc	r19, r19
    2790:	22 0f       	add	r18, r18
    2792:	33 1f       	adc	r19, r19
    2794:	22 0f       	add	r18, r18
    2796:	33 1f       	adc	r19, r19
    2798:	82 2b       	or	r24, r18
    279a:	93 2b       	or	r25, r19
    279c:	58 9f       	mul	r21, r24
    279e:	d0 01       	movw	r26, r0
    27a0:	59 9f       	mul	r21, r25
    27a2:	b0 0d       	add	r27, r0
    27a4:	11 24       	eor	r1, r1
    27a6:	a0 54       	subi	r26, 0x40	; 64
    27a8:	bf 4d       	sbci	r27, 0xDF	; 223
    27aa:	80 91 5c 23 	lds	r24, 0x235C
    27ae:	51 96       	adiw	r26, 0x11	; 17
    27b0:	8c 93       	st	X, r24
    27b2:	30 81       	ld	r19, Z
    27b4:	20 81       	ld	r18, Z
    27b6:	80 81       	ld	r24, Z
    27b8:	40 81       	ld	r20, Z
    27ba:	88 1f       	adc	r24, r24
    27bc:	88 27       	eor	r24, r24
    27be:	88 1f       	adc	r24, r24
    27c0:	90 e0       	ldi	r25, 0x00	; 0
    27c2:	88 0f       	add	r24, r24
    27c4:	99 1f       	adc	r25, r25
    27c6:	88 0f       	add	r24, r24
    27c8:	99 1f       	adc	r25, r25
    27ca:	36 fb       	bst	r19, 6
    27cc:	33 27       	eor	r19, r19
    27ce:	30 f9       	bld	r19, 0
    27d0:	3f ab       	std	Y+55, r19	; 0x37
    27d2:	18 ae       	std	Y+56, r1	; 0x38
    27d4:	6f a9       	ldd	r22, Y+55	; 0x37
    27d6:	78 ad       	ldd	r23, Y+56	; 0x38
    27d8:	86 2b       	or	r24, r22
    27da:	97 2b       	or	r25, r23
    27dc:	22 95       	swap	r18
    27de:	21 70       	andi	r18, 0x01	; 1
    27e0:	29 af       	std	Y+57, r18	; 0x39
    27e2:	1a ae       	std	Y+58, r1	; 0x3a
    27e4:	29 ad       	ldd	r18, Y+57	; 0x39
    27e6:	3a ad       	ldd	r19, Y+58	; 0x3a
    27e8:	22 0f       	add	r18, r18
    27ea:	33 1f       	adc	r19, r19
    27ec:	82 2b       	or	r24, r18
    27ee:	93 2b       	or	r25, r19
    27f0:	45 fb       	bst	r20, 5
    27f2:	44 27       	eor	r20, r20
    27f4:	40 f9       	bld	r20, 0
    27f6:	4b af       	std	Y+59, r20	; 0x3b
    27f8:	1c ae       	std	Y+60, r1	; 0x3c
    27fa:	2b ad       	ldd	r18, Y+59	; 0x3b
    27fc:	3c ad       	ldd	r19, Y+60	; 0x3c
    27fe:	22 0f       	add	r18, r18
    2800:	33 1f       	adc	r19, r19
    2802:	22 0f       	add	r18, r18
    2804:	33 1f       	adc	r19, r19
    2806:	22 0f       	add	r18, r18
    2808:	33 1f       	adc	r19, r19
    280a:	82 2b       	or	r24, r18
    280c:	93 2b       	or	r25, r19
    280e:	58 9f       	mul	r21, r24
    2810:	d0 01       	movw	r26, r0
    2812:	59 9f       	mul	r21, r25
    2814:	b0 0d       	add	r27, r0
    2816:	11 24       	eor	r1, r1
    2818:	a0 54       	subi	r26, 0x40	; 64
    281a:	bf 4d       	sbci	r27, 0xDF	; 223
    281c:	80 91 5d 23 	lds	r24, 0x235D
    2820:	52 96       	adiw	r26, 0x12	; 18
    2822:	8c 93       	st	X, r24
    2824:	30 81       	ld	r19, Z
    2826:	20 81       	ld	r18, Z
    2828:	80 81       	ld	r24, Z
    282a:	40 81       	ld	r20, Z
    282c:	88 1f       	adc	r24, r24
    282e:	88 27       	eor	r24, r24
    2830:	88 1f       	adc	r24, r24
    2832:	90 e0       	ldi	r25, 0x00	; 0
    2834:	88 0f       	add	r24, r24
    2836:	99 1f       	adc	r25, r25
    2838:	88 0f       	add	r24, r24
    283a:	99 1f       	adc	r25, r25
    283c:	36 fb       	bst	r19, 6
    283e:	33 27       	eor	r19, r19
    2840:	30 f9       	bld	r19, 0
    2842:	3d af       	std	Y+61, r19	; 0x3d
    2844:	1e ae       	std	Y+62, r1	; 0x3e
    2846:	ad ad       	ldd	r26, Y+61	; 0x3d
    2848:	be ad       	ldd	r27, Y+62	; 0x3e
    284a:	8a 2b       	or	r24, r26
    284c:	9b 2b       	or	r25, r27
    284e:	22 95       	swap	r18
    2850:	21 70       	andi	r18, 0x01	; 1
    2852:	2f af       	std	Y+63, r18	; 0x3f
    2854:	21 96       	adiw	r28, 0x01	; 1
    2856:	1f ae       	std	Y+63, r1	; 0x3f
    2858:	21 97       	sbiw	r28, 0x01	; 1
    285a:	21 96       	adiw	r28, 0x01	; 1
    285c:	2e ad       	ldd	r18, Y+62	; 0x3e
    285e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2860:	21 97       	sbiw	r28, 0x01	; 1
    2862:	22 0f       	add	r18, r18
    2864:	33 1f       	adc	r19, r19
    2866:	82 2b       	or	r24, r18
    2868:	93 2b       	or	r25, r19
    286a:	45 fb       	bst	r20, 5
    286c:	44 27       	eor	r20, r20
    286e:	40 f9       	bld	r20, 0
    2870:	22 96       	adiw	r28, 0x02	; 2
    2872:	4f af       	std	Y+63, r20	; 0x3f
    2874:	22 97       	sbiw	r28, 0x02	; 2
    2876:	23 96       	adiw	r28, 0x03	; 3
    2878:	1f ae       	std	Y+63, r1	; 0x3f
    287a:	23 97       	sbiw	r28, 0x03	; 3
    287c:	23 96       	adiw	r28, 0x03	; 3
    287e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2880:	3f ad       	ldd	r19, Y+63	; 0x3f
    2882:	23 97       	sbiw	r28, 0x03	; 3
    2884:	22 0f       	add	r18, r18
    2886:	33 1f       	adc	r19, r19
    2888:	22 0f       	add	r18, r18
    288a:	33 1f       	adc	r19, r19
    288c:	22 0f       	add	r18, r18
    288e:	33 1f       	adc	r19, r19
    2890:	82 2b       	or	r24, r18
    2892:	93 2b       	or	r25, r19
    2894:	58 9f       	mul	r21, r24
    2896:	d0 01       	movw	r26, r0
    2898:	59 9f       	mul	r21, r25
    289a:	b0 0d       	add	r27, r0
    289c:	11 24       	eor	r1, r1
    289e:	a0 54       	subi	r26, 0x40	; 64
    28a0:	bf 4d       	sbci	r27, 0xDF	; 223
    28a2:	80 91 5e 23 	lds	r24, 0x235E
    28a6:	53 96       	adiw	r26, 0x13	; 19
    28a8:	8c 93       	st	X, r24
    28aa:	30 81       	ld	r19, Z
    28ac:	20 81       	ld	r18, Z
    28ae:	80 81       	ld	r24, Z
    28b0:	40 81       	ld	r20, Z
    28b2:	88 1f       	adc	r24, r24
    28b4:	88 27       	eor	r24, r24
    28b6:	88 1f       	adc	r24, r24
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	88 0f       	add	r24, r24
    28bc:	99 1f       	adc	r25, r25
    28be:	88 0f       	add	r24, r24
    28c0:	99 1f       	adc	r25, r25
    28c2:	36 fb       	bst	r19, 6
    28c4:	33 27       	eor	r19, r19
    28c6:	30 f9       	bld	r19, 0
    28c8:	24 96       	adiw	r28, 0x04	; 4
    28ca:	3f af       	std	Y+63, r19	; 0x3f
    28cc:	24 97       	sbiw	r28, 0x04	; 4
    28ce:	25 96       	adiw	r28, 0x05	; 5
    28d0:	1f ae       	std	Y+63, r1	; 0x3f
    28d2:	25 97       	sbiw	r28, 0x05	; 5
    28d4:	25 96       	adiw	r28, 0x05	; 5
    28d6:	6e ad       	ldd	r22, Y+62	; 0x3e
    28d8:	7f ad       	ldd	r23, Y+63	; 0x3f
    28da:	25 97       	sbiw	r28, 0x05	; 5
    28dc:	86 2b       	or	r24, r22
    28de:	97 2b       	or	r25, r23
    28e0:	22 95       	swap	r18
    28e2:	21 70       	andi	r18, 0x01	; 1
    28e4:	26 96       	adiw	r28, 0x06	; 6
    28e6:	2f af       	std	Y+63, r18	; 0x3f
    28e8:	26 97       	sbiw	r28, 0x06	; 6
    28ea:	27 96       	adiw	r28, 0x07	; 7
    28ec:	1f ae       	std	Y+63, r1	; 0x3f
    28ee:	27 97       	sbiw	r28, 0x07	; 7
    28f0:	27 96       	adiw	r28, 0x07	; 7
    28f2:	2e ad       	ldd	r18, Y+62	; 0x3e
    28f4:	3f ad       	ldd	r19, Y+63	; 0x3f
    28f6:	27 97       	sbiw	r28, 0x07	; 7
    28f8:	22 0f       	add	r18, r18
    28fa:	33 1f       	adc	r19, r19
    28fc:	82 2b       	or	r24, r18
    28fe:	93 2b       	or	r25, r19
    2900:	45 fb       	bst	r20, 5
    2902:	44 27       	eor	r20, r20
    2904:	40 f9       	bld	r20, 0
    2906:	28 96       	adiw	r28, 0x08	; 8
    2908:	4f af       	std	Y+63, r20	; 0x3f
    290a:	28 97       	sbiw	r28, 0x08	; 8
    290c:	29 96       	adiw	r28, 0x09	; 9
    290e:	1f ae       	std	Y+63, r1	; 0x3f
    2910:	29 97       	sbiw	r28, 0x09	; 9
    2912:	29 96       	adiw	r28, 0x09	; 9
    2914:	2e ad       	ldd	r18, Y+62	; 0x3e
    2916:	3f ad       	ldd	r19, Y+63	; 0x3f
    2918:	29 97       	sbiw	r28, 0x09	; 9
    291a:	22 0f       	add	r18, r18
    291c:	33 1f       	adc	r19, r19
    291e:	22 0f       	add	r18, r18
    2920:	33 1f       	adc	r19, r19
    2922:	22 0f       	add	r18, r18
    2924:	33 1f       	adc	r19, r19
    2926:	82 2b       	or	r24, r18
    2928:	93 2b       	or	r25, r19
    292a:	58 9f       	mul	r21, r24
    292c:	d0 01       	movw	r26, r0
    292e:	59 9f       	mul	r21, r25
    2930:	b0 0d       	add	r27, r0
    2932:	11 24       	eor	r1, r1
    2934:	a0 54       	subi	r26, 0x40	; 64
    2936:	bf 4d       	sbci	r27, 0xDF	; 223
    2938:	80 91 5f 23 	lds	r24, 0x235F
    293c:	54 96       	adiw	r26, 0x14	; 20
    293e:	8c 93       	st	X, r24
    2940:	30 81       	ld	r19, Z
    2942:	20 81       	ld	r18, Z
    2944:	80 81       	ld	r24, Z
    2946:	40 81       	ld	r20, Z
    2948:	88 1f       	adc	r24, r24
    294a:	88 27       	eor	r24, r24
    294c:	88 1f       	adc	r24, r24
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	88 0f       	add	r24, r24
    2952:	99 1f       	adc	r25, r25
    2954:	88 0f       	add	r24, r24
    2956:	99 1f       	adc	r25, r25
    2958:	36 fb       	bst	r19, 6
    295a:	33 27       	eor	r19, r19
    295c:	30 f9       	bld	r19, 0
    295e:	2a 96       	adiw	r28, 0x0a	; 10
    2960:	3f af       	std	Y+63, r19	; 0x3f
    2962:	2a 97       	sbiw	r28, 0x0a	; 10
    2964:	2b 96       	adiw	r28, 0x0b	; 11
    2966:	1f ae       	std	Y+63, r1	; 0x3f
    2968:	2b 97       	sbiw	r28, 0x0b	; 11
    296a:	2b 96       	adiw	r28, 0x0b	; 11
    296c:	ae ad       	ldd	r26, Y+62	; 0x3e
    296e:	bf ad       	ldd	r27, Y+63	; 0x3f
    2970:	2b 97       	sbiw	r28, 0x0b	; 11
    2972:	8a 2b       	or	r24, r26
    2974:	9b 2b       	or	r25, r27
    2976:	22 95       	swap	r18
    2978:	21 70       	andi	r18, 0x01	; 1
    297a:	2c 96       	adiw	r28, 0x0c	; 12
    297c:	2f af       	std	Y+63, r18	; 0x3f
    297e:	2c 97       	sbiw	r28, 0x0c	; 12
    2980:	2d 96       	adiw	r28, 0x0d	; 13
    2982:	1f ae       	std	Y+63, r1	; 0x3f
    2984:	2d 97       	sbiw	r28, 0x0d	; 13
    2986:	2d 96       	adiw	r28, 0x0d	; 13
    2988:	2e ad       	ldd	r18, Y+62	; 0x3e
    298a:	3f ad       	ldd	r19, Y+63	; 0x3f
    298c:	2d 97       	sbiw	r28, 0x0d	; 13
    298e:	22 0f       	add	r18, r18
    2990:	33 1f       	adc	r19, r19
    2992:	82 2b       	or	r24, r18
    2994:	93 2b       	or	r25, r19
    2996:	45 fb       	bst	r20, 5
    2998:	44 27       	eor	r20, r20
    299a:	40 f9       	bld	r20, 0
    299c:	2e 96       	adiw	r28, 0x0e	; 14
    299e:	4f af       	std	Y+63, r20	; 0x3f
    29a0:	2e 97       	sbiw	r28, 0x0e	; 14
    29a2:	2f 96       	adiw	r28, 0x0f	; 15
    29a4:	1f ae       	std	Y+63, r1	; 0x3f
    29a6:	2f 97       	sbiw	r28, 0x0f	; 15
    29a8:	2f 96       	adiw	r28, 0x0f	; 15
    29aa:	2e ad       	ldd	r18, Y+62	; 0x3e
    29ac:	3f ad       	ldd	r19, Y+63	; 0x3f
    29ae:	2f 97       	sbiw	r28, 0x0f	; 15
    29b0:	22 0f       	add	r18, r18
    29b2:	33 1f       	adc	r19, r19
    29b4:	22 0f       	add	r18, r18
    29b6:	33 1f       	adc	r19, r19
    29b8:	22 0f       	add	r18, r18
    29ba:	33 1f       	adc	r19, r19
    29bc:	82 2b       	or	r24, r18
    29be:	93 2b       	or	r25, r19
    29c0:	58 9f       	mul	r21, r24
    29c2:	d0 01       	movw	r26, r0
    29c4:	59 9f       	mul	r21, r25
    29c6:	b0 0d       	add	r27, r0
    29c8:	11 24       	eor	r1, r1
    29ca:	a0 54       	subi	r26, 0x40	; 64
    29cc:	bf 4d       	sbci	r27, 0xDF	; 223
    29ce:	80 91 60 23 	lds	r24, 0x2360
    29d2:	55 96       	adiw	r26, 0x15	; 21
    29d4:	8c 93       	st	X, r24
    29d6:	30 81       	ld	r19, Z
    29d8:	20 81       	ld	r18, Z
    29da:	80 81       	ld	r24, Z
    29dc:	40 81       	ld	r20, Z
    29de:	88 1f       	adc	r24, r24
    29e0:	88 27       	eor	r24, r24
    29e2:	88 1f       	adc	r24, r24
    29e4:	90 e0       	ldi	r25, 0x00	; 0
    29e6:	88 0f       	add	r24, r24
    29e8:	99 1f       	adc	r25, r25
    29ea:	88 0f       	add	r24, r24
    29ec:	99 1f       	adc	r25, r25
    29ee:	36 fb       	bst	r19, 6
    29f0:	33 27       	eor	r19, r19
    29f2:	30 f9       	bld	r19, 0
    29f4:	60 96       	adiw	r28, 0x10	; 16
    29f6:	3f af       	std	Y+63, r19	; 0x3f
    29f8:	60 97       	sbiw	r28, 0x10	; 16
    29fa:	61 96       	adiw	r28, 0x11	; 17
    29fc:	1f ae       	std	Y+63, r1	; 0x3f
    29fe:	61 97       	sbiw	r28, 0x11	; 17
    2a00:	61 96       	adiw	r28, 0x11	; 17
    2a02:	ee ad       	ldd	r30, Y+62	; 0x3e
    2a04:	ff ad       	ldd	r31, Y+63	; 0x3f
    2a06:	61 97       	sbiw	r28, 0x11	; 17
    2a08:	8e 2b       	or	r24, r30
    2a0a:	9f 2b       	or	r25, r31
    2a0c:	22 95       	swap	r18
    2a0e:	21 70       	andi	r18, 0x01	; 1
    2a10:	62 96       	adiw	r28, 0x12	; 18
    2a12:	2f af       	std	Y+63, r18	; 0x3f
    2a14:	62 97       	sbiw	r28, 0x12	; 18
    2a16:	63 96       	adiw	r28, 0x13	; 19
    2a18:	1f ae       	std	Y+63, r1	; 0x3f
    2a1a:	63 97       	sbiw	r28, 0x13	; 19
    2a1c:	63 96       	adiw	r28, 0x13	; 19
    2a1e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2a20:	3f ad       	ldd	r19, Y+63	; 0x3f
    2a22:	63 97       	sbiw	r28, 0x13	; 19
    2a24:	22 0f       	add	r18, r18
    2a26:	33 1f       	adc	r19, r19
    2a28:	82 2b       	or	r24, r18
    2a2a:	93 2b       	or	r25, r19
    2a2c:	45 fb       	bst	r20, 5
    2a2e:	44 27       	eor	r20, r20
    2a30:	40 f9       	bld	r20, 0
    2a32:	64 96       	adiw	r28, 0x14	; 20
    2a34:	4f af       	std	Y+63, r20	; 0x3f
    2a36:	64 97       	sbiw	r28, 0x14	; 20
    2a38:	65 96       	adiw	r28, 0x15	; 21
    2a3a:	1f ae       	std	Y+63, r1	; 0x3f
    2a3c:	65 97       	sbiw	r28, 0x15	; 21
    2a3e:	65 96       	adiw	r28, 0x15	; 21
    2a40:	2e ad       	ldd	r18, Y+62	; 0x3e
    2a42:	3f ad       	ldd	r19, Y+63	; 0x3f
    2a44:	65 97       	sbiw	r28, 0x15	; 21
    2a46:	22 0f       	add	r18, r18
    2a48:	33 1f       	adc	r19, r19
    2a4a:	22 0f       	add	r18, r18
    2a4c:	33 1f       	adc	r19, r19
    2a4e:	22 0f       	add	r18, r18
    2a50:	33 1f       	adc	r19, r19
    2a52:	82 2b       	or	r24, r18
    2a54:	93 2b       	or	r25, r19
    2a56:	58 9f       	mul	r21, r24
    2a58:	f0 01       	movw	r30, r0
    2a5a:	59 9f       	mul	r21, r25
    2a5c:	f0 0d       	add	r31, r0
    2a5e:	11 24       	eor	r1, r1
    2a60:	e0 54       	subi	r30, 0x40	; 64
    2a62:	ff 4d       	sbci	r31, 0xDF	; 223
    2a64:	80 91 61 23 	lds	r24, 0x2361
    2a68:	86 8b       	std	Z+22, r24	; 0x16
    2a6a:	75 fe       	sbrs	r7, 5
    2a6c:	04 c0       	rjmp	.+8      	; 0x2a76 <__vector_43+0x86e>
    2a6e:	80 e2       	ldi	r24, 0x20	; 32
    2a70:	e0 e6       	ldi	r30, 0x60	; 96
    2a72:	f6 e0       	ldi	r31, 0x06	; 6
    2a74:	87 83       	std	Z+7, r24	; 0x07
    2a76:	74 fe       	sbrs	r7, 4
    2a78:	06 c0       	rjmp	.+12     	; 0x2a86 <__vector_43+0x87e>
    2a7a:	84 e0       	ldi	r24, 0x04	; 4
    2a7c:	e0 e6       	ldi	r30, 0x60	; 96
    2a7e:	f6 e0       	ldi	r31, 0x06	; 6
    2a80:	87 83       	std	Z+7, r24	; 0x07
    2a82:	0e 94 0e 2a 	call	0x541c	; 0x541c <NRF24L01_L_Flush_TX>
    2a86:	cc 5a       	subi	r28, 0xAC	; 172
    2a88:	df 4f       	sbci	r29, 0xFF	; 255
    2a8a:	cd bf       	out	0x3d, r28	; 61
    2a8c:	de bf       	out	0x3e, r29	; 62
    2a8e:	df 91       	pop	r29
    2a90:	cf 91       	pop	r28
    2a92:	ff 91       	pop	r31
    2a94:	ef 91       	pop	r30
    2a96:	bf 91       	pop	r27
    2a98:	af 91       	pop	r26
    2a9a:	9f 91       	pop	r25
    2a9c:	8f 91       	pop	r24
    2a9e:	7f 91       	pop	r23
    2aa0:	6f 91       	pop	r22
    2aa2:	5f 91       	pop	r21
    2aa4:	4f 91       	pop	r20
    2aa6:	3f 91       	pop	r19
    2aa8:	2f 91       	pop	r18
    2aaa:	1f 91       	pop	r17
    2aac:	0f 91       	pop	r16
    2aae:	ff 90       	pop	r15
    2ab0:	ef 90       	pop	r14
    2ab2:	df 90       	pop	r13
    2ab4:	cf 90       	pop	r12
    2ab6:	bf 90       	pop	r11
    2ab8:	af 90       	pop	r10
    2aba:	9f 90       	pop	r9
    2abc:	8f 90       	pop	r8
    2abe:	7f 90       	pop	r7
    2ac0:	5f 90       	pop	r5
    2ac2:	4f 90       	pop	r4
    2ac4:	3f 90       	pop	r3
    2ac6:	2f 90       	pop	r2
    2ac8:	0f 90       	pop	r0
    2aca:	0b be       	out	0x3b, r0	; 59
    2acc:	0f 90       	pop	r0
    2ace:	0a be       	out	0x3a, r0	; 58
    2ad0:	0f 90       	pop	r0
    2ad2:	09 be       	out	0x39, r0	; 57
    2ad4:	0f 90       	pop	r0
    2ad6:	08 be       	out	0x38, r0	; 56
    2ad8:	0f 90       	pop	r0
    2ada:	0f be       	out	0x3f, r0	; 63
    2adc:	0f 90       	pop	r0
    2ade:	1f 90       	pop	r1
    2ae0:	18 95       	reti

00002ae2 <__vector_77>:
    2ae2:	1f 92       	push	r1
    2ae4:	0f 92       	push	r0
    2ae6:	0f b6       	in	r0, 0x3f	; 63
    2ae8:	0f 92       	push	r0
    2aea:	11 24       	eor	r1, r1
    2aec:	08 b6       	in	r0, 0x38	; 56
    2aee:	0f 92       	push	r0
    2af0:	18 be       	out	0x38, r1	; 56
    2af2:	09 b6       	in	r0, 0x39	; 57
    2af4:	0f 92       	push	r0
    2af6:	19 be       	out	0x39, r1	; 57
    2af8:	0a b6       	in	r0, 0x3a	; 58
    2afa:	0f 92       	push	r0
    2afc:	1a be       	out	0x3a, r1	; 58
    2afe:	0b b6       	in	r0, 0x3b	; 59
    2b00:	0f 92       	push	r0
    2b02:	1b be       	out	0x3b, r1	; 59
    2b04:	af 92       	push	r10
    2b06:	bf 92       	push	r11
    2b08:	df 92       	push	r13
    2b0a:	ef 92       	push	r14
    2b0c:	ff 92       	push	r15
    2b0e:	0f 93       	push	r16
    2b10:	1f 93       	push	r17
    2b12:	2f 93       	push	r18
    2b14:	3f 93       	push	r19
    2b16:	4f 93       	push	r20
    2b18:	5f 93       	push	r21
    2b1a:	6f 93       	push	r22
    2b1c:	7f 93       	push	r23
    2b1e:	8f 93       	push	r24
    2b20:	9f 93       	push	r25
    2b22:	af 93       	push	r26
    2b24:	bf 93       	push	r27
    2b26:	cf 93       	push	r28
    2b28:	df 93       	push	r29
    2b2a:	ef 93       	push	r30
    2b2c:	ff 93       	push	r31
    2b2e:	a8 95       	wdr
    2b30:	80 91 77 23 	lds	r24, 0x2377
    2b34:	8f 5f       	subi	r24, 0xFF	; 255
    2b36:	80 93 77 23 	sts	0x2377, r24
    2b3a:	84 31       	cpi	r24, 0x14	; 20
    2b3c:	fc f0       	brlt	.+62     	; 0x2b7c <__vector_77+0x9a>
    2b3e:	81 e0       	ldi	r24, 0x01	; 1
    2b40:	80 93 aa 20 	sts	0x20AA, r24
    2b44:	80 91 d6 23 	lds	r24, 0x23D6
    2b48:	90 91 d7 23 	lds	r25, 0x23D7
    2b4c:	01 96       	adiw	r24, 0x01	; 1
    2b4e:	81 70       	andi	r24, 0x01	; 1
    2b50:	90 78       	andi	r25, 0x80	; 128
    2b52:	99 23       	and	r25, r25
    2b54:	24 f4       	brge	.+8      	; 0x2b5e <__vector_77+0x7c>
    2b56:	01 97       	sbiw	r24, 0x01	; 1
    2b58:	8e 6f       	ori	r24, 0xFE	; 254
    2b5a:	9f 6f       	ori	r25, 0xFF	; 255
    2b5c:	01 96       	adiw	r24, 0x01	; 1
    2b5e:	80 93 d6 23 	sts	0x23D6, r24
    2b62:	90 93 d7 23 	sts	0x23D7, r25
    2b66:	10 92 77 23 	sts	0x2377, r1
    2b6a:	80 91 af 20 	lds	r24, 0x20AF
    2b6e:	90 91 b0 20 	lds	r25, 0x20B0
    2b72:	01 96       	adiw	r24, 0x01	; 1
    2b74:	80 93 af 20 	sts	0x20AF, r24
    2b78:	90 93 b0 20 	sts	0x20B0, r25
    2b7c:	80 91 ab 20 	lds	r24, 0x20AB
    2b80:	90 91 ac 20 	lds	r25, 0x20AC
    2b84:	a0 91 ad 20 	lds	r26, 0x20AD
    2b88:	b0 91 ae 20 	lds	r27, 0x20AE
    2b8c:	01 96       	adiw	r24, 0x01	; 1
    2b8e:	a1 1d       	adc	r26, r1
    2b90:	b1 1d       	adc	r27, r1
    2b92:	80 93 ab 20 	sts	0x20AB, r24
    2b96:	90 93 ac 20 	sts	0x20AC, r25
    2b9a:	a0 93 ad 20 	sts	0x20AD, r26
    2b9e:	b0 93 ae 20 	sts	0x20AE, r27
    2ba2:	e0 90 b1 20 	lds	r14, 0x20B1
    2ba6:	f0 90 b2 20 	lds	r15, 0x20B2
    2baa:	e1 14       	cp	r14, r1
    2bac:	f1 04       	cpc	r15, r1
    2bae:	09 f4       	brne	.+2      	; 0x2bb2 <__vector_77+0xd0>
    2bb0:	5c c0       	rjmp	.+184    	; 0x2c6a <__vector_77+0x188>
    2bb2:	80 91 da 21 	lds	r24, 0x21DA
    2bb6:	90 91 db 21 	lds	r25, 0x21DB
    2bba:	a0 91 dc 21 	lds	r26, 0x21DC
    2bbe:	b0 91 dd 21 	lds	r27, 0x21DD
    2bc2:	01 96       	adiw	r24, 0x01	; 1
    2bc4:	a1 1d       	adc	r26, r1
    2bc6:	b1 1d       	adc	r27, r1
    2bc8:	80 93 da 21 	sts	0x21DA, r24
    2bcc:	90 93 db 21 	sts	0x21DB, r25
    2bd0:	a0 93 dc 21 	sts	0x21DC, r26
    2bd4:	b0 93 dd 21 	sts	0x21DD, r27
    2bd8:	84 36       	cpi	r24, 0x64	; 100
    2bda:	91 05       	cpc	r25, r1
    2bdc:	a1 05       	cpc	r26, r1
    2bde:	b1 05       	cpc	r27, r1
    2be0:	e0 f4       	brcc	.+56     	; 0x2c1a <__vector_77+0x138>
    2be2:	a0 e2       	ldi	r26, 0x20	; 32
    2be4:	b6 e0       	ldi	r27, 0x06	; 6
    2be6:	14 96       	adiw	r26, 0x04	; 4
    2be8:	8c 91       	ld	r24, X
    2bea:	14 97       	sbiw	r26, 0x04	; 4
    2bec:	80 64       	ori	r24, 0x40	; 64
    2bee:	14 96       	adiw	r26, 0x04	; 4
    2bf0:	8c 93       	st	X, r24
    2bf2:	14 97       	sbiw	r26, 0x04	; 4
    2bf4:	e0 92 2a 08 	sts	0x082A, r14
    2bf8:	f0 92 2b 08 	sts	0x082B, r15
    2bfc:	14 96       	adiw	r26, 0x04	; 4
    2bfe:	8c 91       	ld	r24, X
    2c00:	14 97       	sbiw	r26, 0x04	; 4
    2c02:	80 64       	ori	r24, 0x40	; 64
    2c04:	14 96       	adiw	r26, 0x04	; 4
    2c06:	8c 93       	st	X, r24
    2c08:	80 91 b1 20 	lds	r24, 0x20B1
    2c0c:	90 91 b2 20 	lds	r25, 0x20B2
    2c10:	80 93 28 08 	sts	0x0828, r24
    2c14:	90 93 29 08 	sts	0x0829, r25
    2c18:	28 c0       	rjmp	.+80     	; 0x2c6a <__vector_77+0x188>
    2c1a:	89 3b       	cpi	r24, 0xB9	; 185
    2c1c:	9b 40       	sbci	r25, 0x0B	; 11
    2c1e:	a1 05       	cpc	r26, r1
    2c20:	b1 05       	cpc	r27, r1
    2c22:	60 f0       	brcs	.+24     	; 0x2c3c <__vector_77+0x15a>
    2c24:	10 92 da 21 	sts	0x21DA, r1
    2c28:	10 92 db 21 	sts	0x21DB, r1
    2c2c:	10 92 dc 21 	sts	0x21DC, r1
    2c30:	10 92 dd 21 	sts	0x21DD, r1
    2c34:	10 92 b1 20 	sts	0x20B1, r1
    2c38:	10 92 b2 20 	sts	0x20B2, r1
    2c3c:	10 92 2a 08 	sts	0x082A, r1
    2c40:	10 92 2b 08 	sts	0x082B, r1
    2c44:	a0 e2       	ldi	r26, 0x20	; 32
    2c46:	b6 e0       	ldi	r27, 0x06	; 6
    2c48:	14 96       	adiw	r26, 0x04	; 4
    2c4a:	8c 91       	ld	r24, X
    2c4c:	14 97       	sbiw	r26, 0x04	; 4
    2c4e:	8f 7b       	andi	r24, 0xBF	; 191
    2c50:	14 96       	adiw	r26, 0x04	; 4
    2c52:	8c 93       	st	X, r24
    2c54:	14 97       	sbiw	r26, 0x04	; 4
    2c56:	10 92 28 08 	sts	0x0828, r1
    2c5a:	10 92 29 08 	sts	0x0829, r1
    2c5e:	14 96       	adiw	r26, 0x04	; 4
    2c60:	8c 91       	ld	r24, X
    2c62:	14 97       	sbiw	r26, 0x04	; 4
    2c64:	8f 7b       	andi	r24, 0xBF	; 191
    2c66:	14 96       	adiw	r26, 0x04	; 4
    2c68:	8c 93       	st	X, r24
    2c6a:	80 91 b5 20 	lds	r24, 0x20B5
    2c6e:	90 91 b6 20 	lds	r25, 0x20B6
    2c72:	01 96       	adiw	r24, 0x01	; 1
    2c74:	80 93 b5 20 	sts	0x20B5, r24
    2c78:	90 93 b6 20 	sts	0x20B6, r25
    2c7c:	80 91 52 20 	lds	r24, 0x2052
    2c80:	90 91 53 20 	lds	r25, 0x2053
    2c84:	81 30       	cpi	r24, 0x01	; 1
    2c86:	91 05       	cpc	r25, r1
    2c88:	81 f4       	brne	.+32     	; 0x2caa <__vector_77+0x1c8>
    2c8a:	10 92 b7 20 	sts	0x20B7, r1
    2c8e:	0e 94 a1 02 	call	0x542	; 0x542 <Menu_Display>
    2c92:	0e 94 cd 02 	call	0x59a	; 0x59a <Menu_Reset>
    2c96:	80 91 52 20 	lds	r24, 0x2052
    2c9a:	90 91 53 20 	lds	r25, 0x2053
    2c9e:	01 97       	sbiw	r24, 0x01	; 1
    2ca0:	80 93 52 20 	sts	0x2052, r24
    2ca4:	90 93 53 20 	sts	0x2053, r25
    2ca8:	87 c0       	rjmp	.+270    	; 0x2db8 <__vector_77+0x2d6>
    2caa:	82 30       	cpi	r24, 0x02	; 2
    2cac:	91 05       	cpc	r25, r1
    2cae:	08 f1       	brcs	.+66     	; 0x2cf2 <__vector_77+0x210>
    2cb0:	01 97       	sbiw	r24, 0x01	; 1
    2cb2:	80 93 52 20 	sts	0x2052, r24
    2cb6:	90 93 53 20 	sts	0x2053, r25
    2cba:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <menu_check_status>
    2cbe:	80 91 52 20 	lds	r24, 0x2052
    2cc2:	90 91 53 20 	lds	r25, 0x2053
    2cc6:	88 3b       	cpi	r24, 0xB8	; 184
    2cc8:	2b e0       	ldi	r18, 0x0B	; 11
    2cca:	92 07       	cpc	r25, r18
    2ccc:	08 f0       	brcs	.+2      	; 0x2cd0 <__vector_77+0x1ee>
    2cce:	74 c0       	rjmp	.+232    	; 0x2db8 <__vector_77+0x2d6>
    2cd0:	a0 e0       	ldi	r26, 0x00	; 0
    2cd2:	b0 e0       	ldi	r27, 0x00	; 0
    2cd4:	80 93 2c 20 	sts	0x202C, r24
    2cd8:	90 93 2d 20 	sts	0x202D, r25
    2cdc:	a0 93 2e 20 	sts	0x202E, r26
    2ce0:	b0 93 2f 20 	sts	0x202F, r27
    2ce4:	88 ec       	ldi	r24, 0xC8	; 200
    2ce6:	90 e0       	ldi	r25, 0x00	; 0
    2ce8:	80 93 3b 22 	sts	0x223B, r24
    2cec:	90 93 3c 22 	sts	0x223C, r25
    2cf0:	63 c0       	rjmp	.+198    	; 0x2db8 <__vector_77+0x2d6>
    2cf2:	a8 e0       	ldi	r26, 0x08	; 8
    2cf4:	b6 e0       	ldi	r27, 0x06	; 6
    2cf6:	dc 90       	ld	r13, X
    2cf8:	ec 90       	ld	r14, X
    2cfa:	8c 91       	ld	r24, X
    2cfc:	fc 90       	ld	r15, X
    2cfe:	88 1f       	adc	r24, r24
    2d00:	88 27       	eor	r24, r24
    2d02:	88 1f       	adc	r24, r24
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	88 0f       	add	r24, r24
    2d08:	99 1f       	adc	r25, r25
    2d0a:	88 0f       	add	r24, r24
    2d0c:	99 1f       	adc	r25, r25
    2d0e:	d6 fa       	bst	r13, 6
    2d10:	00 27       	eor	r16, r16
    2d12:	00 f9       	bld	r16, 0
    2d14:	10 e0       	ldi	r17, 0x00	; 0
    2d16:	08 2b       	or	r16, r24
    2d18:	19 2b       	or	r17, r25
    2d1a:	e4 fa       	bst	r14, 4
    2d1c:	ee 24       	eor	r14, r14
    2d1e:	e0 f8       	bld	r14, 0
    2d20:	ce 2d       	mov	r28, r14
    2d22:	80 e0       	ldi	r24, 0x00	; 0
    2d24:	d8 2f       	mov	r29, r24
    2d26:	cc 0f       	add	r28, r28
    2d28:	dd 1f       	adc	r29, r29
    2d2a:	0c 2b       	or	r16, r28
    2d2c:	1d 2b       	or	r17, r29
    2d2e:	f5 fa       	bst	r15, 5
    2d30:	ee 27       	eor	r30, r30
    2d32:	e0 f9       	bld	r30, 0
    2d34:	f0 e0       	ldi	r31, 0x00	; 0
    2d36:	cf 01       	movw	r24, r30
    2d38:	88 0f       	add	r24, r24
    2d3a:	99 1f       	adc	r25, r25
    2d3c:	88 0f       	add	r24, r24
    2d3e:	99 1f       	adc	r25, r25
    2d40:	88 0f       	add	r24, r24
    2d42:	99 1f       	adc	r25, r25
    2d44:	f8 01       	movw	r30, r16
    2d46:	e8 2b       	or	r30, r24
    2d48:	f9 2b       	or	r31, r25
    2d4a:	ee 0f       	add	r30, r30
    2d4c:	ff 1f       	adc	r31, r31
    2d4e:	e8 5f       	subi	r30, 0xF8	; 248
    2d50:	ff 4d       	sbci	r31, 0xDF	; 223
    2d52:	80 81       	ld	r24, Z
    2d54:	e0 e0       	ldi	r30, 0x00	; 0
    2d56:	f7 e0       	ldi	r31, 0x07	; 7
    2d58:	84 83       	std	Z+4, r24	; 0x04
    2d5a:	cc 91       	ld	r28, X
    2d5c:	9c 91       	ld	r25, X
    2d5e:	ec 91       	ld	r30, X
    2d60:	8c 91       	ld	r24, X
    2d62:	ee 1f       	adc	r30, r30
    2d64:	ee 27       	eor	r30, r30
    2d66:	ee 1f       	adc	r30, r30
    2d68:	f0 e0       	ldi	r31, 0x00	; 0
    2d6a:	ee 0f       	add	r30, r30
    2d6c:	ff 1f       	adc	r31, r31
    2d6e:	ee 0f       	add	r30, r30
    2d70:	ff 1f       	adc	r31, r31
    2d72:	c6 fb       	bst	r28, 6
    2d74:	66 27       	eor	r22, r22
    2d76:	60 f9       	bld	r22, 0
    2d78:	70 e0       	ldi	r23, 0x00	; 0
    2d7a:	e6 2b       	or	r30, r22
    2d7c:	f7 2b       	or	r31, r23
    2d7e:	94 fb       	bst	r25, 4
    2d80:	44 27       	eor	r20, r20
    2d82:	40 f9       	bld	r20, 0
    2d84:	50 e0       	ldi	r21, 0x00	; 0
    2d86:	44 0f       	add	r20, r20
    2d88:	55 1f       	adc	r21, r21
    2d8a:	e4 2b       	or	r30, r20
    2d8c:	f5 2b       	or	r31, r21
    2d8e:	85 fb       	bst	r24, 5
    2d90:	aa 24       	eor	r10, r10
    2d92:	a0 f8       	bld	r10, 0
    2d94:	b1 2c       	mov	r11, r1
    2d96:	95 01       	movw	r18, r10
    2d98:	22 0f       	add	r18, r18
    2d9a:	33 1f       	adc	r19, r19
    2d9c:	22 0f       	add	r18, r18
    2d9e:	33 1f       	adc	r19, r19
    2da0:	22 0f       	add	r18, r18
    2da2:	33 1f       	adc	r19, r19
    2da4:	e2 2b       	or	r30, r18
    2da6:	f3 2b       	or	r31, r19
    2da8:	ee 0f       	add	r30, r30
    2daa:	ff 1f       	adc	r31, r31
    2dac:	e8 5f       	subi	r30, 0xF8	; 248
    2dae:	ff 4d       	sbci	r31, 0xDF	; 223
    2db0:	80 81       	ld	r24, Z
    2db2:	e0 ee       	ldi	r30, 0xE0	; 224
    2db4:	f6 e0       	ldi	r31, 0x06	; 6
    2db6:	84 83       	std	Z+4, r24	; 0x04
    2db8:	ff 91       	pop	r31
    2dba:	ef 91       	pop	r30
    2dbc:	df 91       	pop	r29
    2dbe:	cf 91       	pop	r28
    2dc0:	bf 91       	pop	r27
    2dc2:	af 91       	pop	r26
    2dc4:	9f 91       	pop	r25
    2dc6:	8f 91       	pop	r24
    2dc8:	7f 91       	pop	r23
    2dca:	6f 91       	pop	r22
    2dcc:	5f 91       	pop	r21
    2dce:	4f 91       	pop	r20
    2dd0:	3f 91       	pop	r19
    2dd2:	2f 91       	pop	r18
    2dd4:	1f 91       	pop	r17
    2dd6:	0f 91       	pop	r16
    2dd8:	ff 90       	pop	r15
    2dda:	ef 90       	pop	r14
    2ddc:	df 90       	pop	r13
    2dde:	bf 90       	pop	r11
    2de0:	af 90       	pop	r10
    2de2:	0f 90       	pop	r0
    2de4:	0b be       	out	0x3b, r0	; 59
    2de6:	0f 90       	pop	r0
    2de8:	0a be       	out	0x3a, r0	; 58
    2dea:	0f 90       	pop	r0
    2dec:	09 be       	out	0x39, r0	; 57
    2dee:	0f 90       	pop	r0
    2df0:	08 be       	out	0x38, r0	; 56
    2df2:	0f 90       	pop	r0
    2df4:	0f be       	out	0x3f, r0	; 63
    2df6:	0f 90       	pop	r0
    2df8:	1f 90       	pop	r1
    2dfa:	18 95       	reti

00002dfc <__vector_104>:
    2dfc:	1f 92       	push	r1
    2dfe:	0f 92       	push	r0
    2e00:	0f b6       	in	r0, 0x3f	; 63
    2e02:	0f 92       	push	r0
    2e04:	11 24       	eor	r1, r1
    2e06:	08 b6       	in	r0, 0x38	; 56
    2e08:	0f 92       	push	r0
    2e0a:	18 be       	out	0x38, r1	; 56
    2e0c:	0f 90       	pop	r0
    2e0e:	08 be       	out	0x38, r0	; 56
    2e10:	0f 90       	pop	r0
    2e12:	0f be       	out	0x3f, r0	; 63
    2e14:	0f 90       	pop	r0
    2e16:	1f 90       	pop	r1
    2e18:	18 95       	reti

00002e1a <__vector_94>:
    2e1a:	1f 92       	push	r1
    2e1c:	0f 92       	push	r0
    2e1e:	0f b6       	in	r0, 0x3f	; 63
    2e20:	0f 92       	push	r0
    2e22:	11 24       	eor	r1, r1
    2e24:	08 b6       	in	r0, 0x38	; 56
    2e26:	0f 92       	push	r0
    2e28:	18 be       	out	0x38, r1	; 56
    2e2a:	2f 93       	push	r18
    2e2c:	3f 93       	push	r19
    2e2e:	8f 93       	push	r24
    2e30:	9f 93       	push	r25
    2e32:	20 91 1a 24 	lds	r18, 0x241A
    2e36:	30 91 1b 24 	lds	r19, 0x241B
    2e3a:	80 91 c8 07 	lds	r24, 0x07C8
    2e3e:	81 ff       	sbrs	r24, 1
    2e40:	03 c0       	rjmp	.+6      	; 0x2e48 <__vector_94+0x2e>
    2e42:	8f ef       	ldi	r24, 0xFF	; 255
    2e44:	9f ef       	ldi	r25, 0xFF	; 255
    2e46:	02 c0       	rjmp	.+4      	; 0x2e4c <__vector_94+0x32>
    2e48:	81 e0       	ldi	r24, 0x01	; 1
    2e4a:	90 e0       	ldi	r25, 0x00	; 0
    2e4c:	82 0f       	add	r24, r18
    2e4e:	93 1f       	adc	r25, r19
    2e50:	80 93 1a 24 	sts	0x241A, r24
    2e54:	90 93 1b 24 	sts	0x241B, r25
    2e58:	9f 91       	pop	r25
    2e5a:	8f 91       	pop	r24
    2e5c:	3f 91       	pop	r19
    2e5e:	2f 91       	pop	r18
    2e60:	0f 90       	pop	r0
    2e62:	08 be       	out	0x38, r0	; 56
    2e64:	0f 90       	pop	r0
    2e66:	0f be       	out	0x3f, r0	; 63
    2e68:	0f 90       	pop	r0
    2e6a:	1f 90       	pop	r1
    2e6c:	18 95       	reti

00002e6e <__vector_96>:
    2e6e:	1f 92       	push	r1
    2e70:	0f 92       	push	r0
    2e72:	0f b6       	in	r0, 0x3f	; 63
    2e74:	0f 92       	push	r0
    2e76:	11 24       	eor	r1, r1
    2e78:	08 b6       	in	r0, 0x38	; 56
    2e7a:	0f 92       	push	r0
    2e7c:	18 be       	out	0x38, r1	; 56
    2e7e:	2f 93       	push	r18
    2e80:	3f 93       	push	r19
    2e82:	8f 93       	push	r24
    2e84:	9f 93       	push	r25
    2e86:	20 91 83 23 	lds	r18, 0x2383
    2e8a:	30 91 84 23 	lds	r19, 0x2384
    2e8e:	80 91 e8 06 	lds	r24, 0x06E8
    2e92:	84 ff       	sbrs	r24, 4
    2e94:	03 c0       	rjmp	.+6      	; 0x2e9c <__vector_96+0x2e>
    2e96:	8f ef       	ldi	r24, 0xFF	; 255
    2e98:	9f ef       	ldi	r25, 0xFF	; 255
    2e9a:	02 c0       	rjmp	.+4      	; 0x2ea0 <__vector_96+0x32>
    2e9c:	81 e0       	ldi	r24, 0x01	; 1
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	82 0f       	add	r24, r18
    2ea2:	93 1f       	adc	r25, r19
    2ea4:	80 93 83 23 	sts	0x2383, r24
    2ea8:	90 93 84 23 	sts	0x2384, r25
    2eac:	9f 91       	pop	r25
    2eae:	8f 91       	pop	r24
    2eb0:	3f 91       	pop	r19
    2eb2:	2f 91       	pop	r18
    2eb4:	0f 90       	pop	r0
    2eb6:	08 be       	out	0x38, r0	; 56
    2eb8:	0f 90       	pop	r0
    2eba:	0f be       	out	0x3f, r0	; 63
    2ebc:	0f 90       	pop	r0
    2ebe:	1f 90       	pop	r1
    2ec0:	18 95       	reti

00002ec2 <__vector_2>:
    2ec2:	1f 92       	push	r1
    2ec4:	0f 92       	push	r0
    2ec6:	0f b6       	in	r0, 0x3f	; 63
    2ec8:	0f 92       	push	r0
    2eca:	11 24       	eor	r1, r1
    2ecc:	08 b6       	in	r0, 0x38	; 56
    2ece:	0f 92       	push	r0
    2ed0:	18 be       	out	0x38, r1	; 56
    2ed2:	2f 93       	push	r18
    2ed4:	3f 93       	push	r19
    2ed6:	8f 93       	push	r24
    2ed8:	9f 93       	push	r25
    2eda:	20 91 bf 23 	lds	r18, 0x23BF
    2ede:	30 91 c0 23 	lds	r19, 0x23C0
    2ee2:	80 91 48 06 	lds	r24, 0x0648
    2ee6:	84 ff       	sbrs	r24, 4
    2ee8:	03 c0       	rjmp	.+6      	; 0x2ef0 <__vector_2+0x2e>
    2eea:	8f ef       	ldi	r24, 0xFF	; 255
    2eec:	9f ef       	ldi	r25, 0xFF	; 255
    2eee:	02 c0       	rjmp	.+4      	; 0x2ef4 <__vector_2+0x32>
    2ef0:	81 e0       	ldi	r24, 0x01	; 1
    2ef2:	90 e0       	ldi	r25, 0x00	; 0
    2ef4:	82 0f       	add	r24, r18
    2ef6:	93 1f       	adc	r25, r19
    2ef8:	80 93 bf 23 	sts	0x23BF, r24
    2efc:	90 93 c0 23 	sts	0x23C0, r25
    2f00:	9f 91       	pop	r25
    2f02:	8f 91       	pop	r24
    2f04:	3f 91       	pop	r19
    2f06:	2f 91       	pop	r18
    2f08:	0f 90       	pop	r0
    2f0a:	08 be       	out	0x38, r0	; 56
    2f0c:	0f 90       	pop	r0
    2f0e:	0f be       	out	0x3f, r0	; 63
    2f10:	0f 90       	pop	r0
    2f12:	1f 90       	pop	r1
    2f14:	18 95       	reti

00002f16 <__vector_95>:
    2f16:	1f 92       	push	r1
    2f18:	0f 92       	push	r0
    2f1a:	0f b6       	in	r0, 0x3f	; 63
    2f1c:	0f 92       	push	r0
    2f1e:	11 24       	eor	r1, r1
    2f20:	08 b6       	in	r0, 0x38	; 56
    2f22:	0f 92       	push	r0
    2f24:	18 be       	out	0x38, r1	; 56
    2f26:	2f 93       	push	r18
    2f28:	3f 93       	push	r19
    2f2a:	8f 93       	push	r24
    2f2c:	9f 93       	push	r25
    2f2e:	20 91 38 24 	lds	r18, 0x2438
    2f32:	30 91 39 24 	lds	r19, 0x2439
    2f36:	80 91 c8 07 	lds	r24, 0x07C8
    2f3a:	82 ff       	sbrs	r24, 2
    2f3c:	03 c0       	rjmp	.+6      	; 0x2f44 <__vector_95+0x2e>
    2f3e:	8f ef       	ldi	r24, 0xFF	; 255
    2f40:	9f ef       	ldi	r25, 0xFF	; 255
    2f42:	02 c0       	rjmp	.+4      	; 0x2f48 <__vector_95+0x32>
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	90 e0       	ldi	r25, 0x00	; 0
    2f48:	82 0f       	add	r24, r18
    2f4a:	93 1f       	adc	r25, r19
    2f4c:	80 93 38 24 	sts	0x2438, r24
    2f50:	90 93 39 24 	sts	0x2439, r25
    2f54:	9f 91       	pop	r25
    2f56:	8f 91       	pop	r24
    2f58:	3f 91       	pop	r19
    2f5a:	2f 91       	pop	r18
    2f5c:	0f 90       	pop	r0
    2f5e:	08 be       	out	0x38, r0	; 56
    2f60:	0f 90       	pop	r0
    2f62:	0f be       	out	0x3f, r0	; 63
    2f64:	0f 90       	pop	r0
    2f66:	1f 90       	pop	r1
    2f68:	18 95       	reti

00002f6a <__vector_97>:
    2f6a:	1f 92       	push	r1
    2f6c:	0f 92       	push	r0
    2f6e:	0f b6       	in	r0, 0x3f	; 63
    2f70:	0f 92       	push	r0
    2f72:	11 24       	eor	r1, r1
    2f74:	08 b6       	in	r0, 0x38	; 56
    2f76:	0f 92       	push	r0
    2f78:	18 be       	out	0x38, r1	; 56
    2f7a:	0f 90       	pop	r0
    2f7c:	08 be       	out	0x38, r0	; 56
    2f7e:	0f 90       	pop	r0
    2f80:	0f be       	out	0x3f, r0	; 63
    2f82:	0f 90       	pop	r0
    2f84:	1f 90       	pop	r1
    2f86:	18 95       	reti

00002f88 <__vector_100>:
    2f88:	1f 92       	push	r1
    2f8a:	0f 92       	push	r0
    2f8c:	0f b6       	in	r0, 0x3f	; 63
    2f8e:	0f 92       	push	r0
    2f90:	11 24       	eor	r1, r1
    2f92:	08 b6       	in	r0, 0x38	; 56
    2f94:	0f 92       	push	r0
    2f96:	18 be       	out	0x38, r1	; 56
    2f98:	09 b6       	in	r0, 0x39	; 57
    2f9a:	0f 92       	push	r0
    2f9c:	19 be       	out	0x39, r1	; 57
    2f9e:	0b b6       	in	r0, 0x3b	; 59
    2fa0:	0f 92       	push	r0
    2fa2:	1b be       	out	0x3b, r1	; 59
    2fa4:	2f 93       	push	r18
    2fa6:	3f 93       	push	r19
    2fa8:	4f 93       	push	r20
    2faa:	5f 93       	push	r21
    2fac:	6f 93       	push	r22
    2fae:	7f 93       	push	r23
    2fb0:	8f 93       	push	r24
    2fb2:	9f 93       	push	r25
    2fb4:	af 93       	push	r26
    2fb6:	bf 93       	push	r27
    2fb8:	ef 93       	push	r30
    2fba:	ff 93       	push	r31
    2fbc:	80 91 52 20 	lds	r24, 0x2052
    2fc0:	90 91 53 20 	lds	r25, 0x2053
    2fc4:	89 2b       	or	r24, r25
    2fc6:	89 f4       	brne	.+34     	; 0x2fea <__vector_100+0x62>
    2fc8:	80 91 e8 06 	lds	r24, 0x06E8
    2fcc:	65 e5       	ldi	r22, 0x55	; 85
    2fce:	70 e2       	ldi	r23, 0x20	; 32
    2fd0:	88 1f       	adc	r24, r24
    2fd2:	88 27       	eor	r24, r24
    2fd4:	88 1f       	adc	r24, r24
    2fd6:	0e 94 92 02 	call	0x524	; 0x524 <menu_check_sw>
    2fda:	80 91 a8 06 	lds	r24, 0x06A8
    2fde:	64 e5       	ldi	r22, 0x54	; 84
    2fe0:	70 e2       	ldi	r23, 0x20	; 32
    2fe2:	82 95       	swap	r24
    2fe4:	81 70       	andi	r24, 0x01	; 1
    2fe6:	0e 94 92 02 	call	0x524	; 0x524 <menu_check_sw>
    2fea:	80 e3       	ldi	r24, 0x30	; 48
    2fec:	95 e7       	ldi	r25, 0x75	; 117
    2fee:	80 93 52 20 	sts	0x2052, r24
    2ff2:	90 93 53 20 	sts	0x2053, r25
    2ff6:	8f ef       	ldi	r24, 0xFF	; 255
    2ff8:	80 93 b7 20 	sts	0x20B7, r24
    2ffc:	0e 94 a1 02 	call	0x542	; 0x542 <Menu_Display>
    3000:	ff 91       	pop	r31
    3002:	ef 91       	pop	r30
    3004:	bf 91       	pop	r27
    3006:	af 91       	pop	r26
    3008:	9f 91       	pop	r25
    300a:	8f 91       	pop	r24
    300c:	7f 91       	pop	r23
    300e:	6f 91       	pop	r22
    3010:	5f 91       	pop	r21
    3012:	4f 91       	pop	r20
    3014:	3f 91       	pop	r19
    3016:	2f 91       	pop	r18
    3018:	0f 90       	pop	r0
    301a:	0b be       	out	0x3b, r0	; 59
    301c:	0f 90       	pop	r0
    301e:	09 be       	out	0x39, r0	; 57
    3020:	0f 90       	pop	r0
    3022:	08 be       	out	0x38, r0	; 56
    3024:	0f 90       	pop	r0
    3026:	0f be       	out	0x3f, r0	; 63
    3028:	0f 90       	pop	r0
    302a:	1f 90       	pop	r1
    302c:	18 95       	reti

0000302e <disp_ans>:
    302e:	ef 92       	push	r14
    3030:	ff 92       	push	r15
    3032:	0f 93       	push	r16
    3034:	1f 93       	push	r17
    3036:	cf 93       	push	r28
    3038:	df 93       	push	r29
    303a:	cd b7       	in	r28, 0x3d	; 61
    303c:	de b7       	in	r29, 0x3e	; 62
    303e:	c8 5c       	subi	r28, 0xC8	; 200
    3040:	d1 09       	sbc	r29, r1
    3042:	cd bf       	out	0x3d, r28	; 61
    3044:	de bf       	out	0x3e, r29	; 62
    3046:	80 91 9b 23 	lds	r24, 0x239B
    304a:	8f 93       	push	r24
    304c:	80 91 9a 23 	lds	r24, 0x239A
    3050:	8f 93       	push	r24
    3052:	80 91 57 24 	lds	r24, 0x2457
    3056:	8f 93       	push	r24
    3058:	80 91 56 24 	lds	r24, 0x2456
    305c:	8f 93       	push	r24
    305e:	e5 ec       	ldi	r30, 0xC5	; 197
    3060:	f3 e2       	ldi	r31, 0x23	; 35
    3062:	81 81       	ldd	r24, Z+1	; 0x01
    3064:	8f 93       	push	r24
    3066:	80 81       	ld	r24, Z
    3068:	8f 93       	push	r24
    306a:	8c e3       	ldi	r24, 0x3C	; 60
    306c:	90 e2       	ldi	r25, 0x20	; 32
    306e:	9f 93       	push	r25
    3070:	8f 93       	push	r24
    3072:	ce 01       	movw	r24, r28
    3074:	01 96       	adiw	r24, 0x01	; 1
    3076:	9f 93       	push	r25
    3078:	8f 93       	push	r24
    307a:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <sprintf>
    307e:	cd bf       	out	0x3d, r28	; 61
    3080:	de bf       	out	0x3e, r29	; 62
    3082:	88 23       	and	r24, r24
    3084:	b1 f0       	breq	.+44     	; 0x30b2 <disp_ans+0x84>
    3086:	8e 01       	movw	r16, r28
    3088:	0f 5f       	subi	r16, 0xFF	; 255
    308a:	1f 4f       	sbci	r17, 0xFF	; 255
    308c:	81 50       	subi	r24, 0x01	; 1
    308e:	68 94       	set
    3090:	ee 24       	eor	r14, r14
    3092:	e1 f8       	bld	r14, 1
    3094:	f1 2c       	mov	r15, r1
    3096:	ec 0e       	add	r14, r28
    3098:	fd 1e       	adc	r15, r29
    309a:	e8 0e       	add	r14, r24
    309c:	f1 1c       	adc	r15, r1
    309e:	f8 01       	movw	r30, r16
    30a0:	61 91       	ld	r22, Z+
    30a2:	8f 01       	movw	r16, r30
    30a4:	80 ea       	ldi	r24, 0xA0	; 160
    30a6:	9a e0       	ldi	r25, 0x0A	; 10
    30a8:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    30ac:	0e 15       	cp	r16, r14
    30ae:	1f 05       	cpc	r17, r15
    30b0:	b1 f7       	brne	.-20     	; 0x309e <disp_ans+0x70>
    30b2:	c8 53       	subi	r28, 0x38	; 56
    30b4:	df 4f       	sbci	r29, 0xFF	; 255
    30b6:	cd bf       	out	0x3d, r28	; 61
    30b8:	de bf       	out	0x3e, r29	; 62
    30ba:	df 91       	pop	r29
    30bc:	cf 91       	pop	r28
    30be:	1f 91       	pop	r17
    30c0:	0f 91       	pop	r16
    30c2:	ff 90       	pop	r15
    30c4:	ef 90       	pop	r14
    30c6:	08 95       	ret

000030c8 <main>:
    30c8:	cf 93       	push	r28
    30ca:	df 93       	push	r29
    30cc:	cd b7       	in	r28, 0x3d	; 61
    30ce:	de b7       	in	r29, 0x3e	; 62
    30d0:	c0 5f       	subi	r28, 0xF0	; 240
    30d2:	d1 09       	sbc	r29, r1
    30d4:	cd bf       	out	0x3d, r28	; 61
    30d6:	de bf       	out	0x3e, r29	; 62
    30d8:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <En_RC32M>
    30dc:	e2 ea       	ldi	r30, 0xA2	; 162
    30de:	f0 e0       	ldi	r31, 0x00	; 0
    30e0:	80 81       	ld	r24, Z
    30e2:	87 60       	ori	r24, 0x07	; 7
    30e4:	80 83       	st	Z, r24
    30e6:	0e 94 b8 0f 	call	0x1f70	; 0x1f70 <PORT_init>
    30ea:	0e 94 1c 10 	call	0x2038	; 0x2038 <TimerD0_init>
    30ee:	0e 94 01 10 	call	0x2002	; 0x2002 <TimerC0_init>
    30f2:	0e 94 71 10 	call	0x20e2	; 0x20e2 <USARTF0_init>
    30f6:	1a d8       	rcall	.-4044   	; 0x212c <USARTF1_init>
    30f8:	0e 94 4f 10 	call	0x209e	; 0x209e <USARTE0_init>
    30fc:	3c d8       	rcall	.-3976   	; 0x2176 <ADCA_init>
    30fe:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <LCDInit>
    3102:	78 94       	sei
    3104:	88 eb       	ldi	r24, 0xB8	; 184
    3106:	9b e0       	ldi	r25, 0x0B	; 11
    3108:	a0 e0       	ldi	r26, 0x00	; 0
    310a:	b0 e0       	ldi	r27, 0x00	; 0
    310c:	80 93 34 20 	sts	0x2034, r24
    3110:	90 93 35 20 	sts	0x2035, r25
    3114:	a0 93 36 20 	sts	0x2036, r26
    3118:	b0 93 37 20 	sts	0x2037, r27
    311c:	24 ef       	ldi	r18, 0xF4	; 244
    311e:	31 e0       	ldi	r19, 0x01	; 1
    3120:	20 93 e9 23 	sts	0x23E9, r18
    3124:	30 93 ea 23 	sts	0x23EA, r19
    3128:	80 93 38 20 	sts	0x2038, r24
    312c:	90 93 39 20 	sts	0x2039, r25
    3130:	a0 93 3a 20 	sts	0x203A, r26
    3134:	b0 93 3b 20 	sts	0x203B, r27
    3138:	84 e6       	ldi	r24, 0x64	; 100
    313a:	90 e0       	ldi	r25, 0x00	; 0
    313c:	80 93 f3 21 	sts	0x21F3, r24
    3140:	90 93 f4 21 	sts	0x21F4, r25
    3144:	88 ee       	ldi	r24, 0xE8	; 232
    3146:	93 e0       	ldi	r25, 0x03	; 3
    3148:	a0 e0       	ldi	r26, 0x00	; 0
    314a:	b0 e0       	ldi	r27, 0x00	; 0
    314c:	80 93 30 20 	sts	0x2030, r24
    3150:	90 93 31 20 	sts	0x2031, r25
    3154:	a0 93 32 20 	sts	0x2032, r26
    3158:	b0 93 33 20 	sts	0x2033, r27
    315c:	88 ec       	ldi	r24, 0xC8	; 200
    315e:	90 e0       	ldi	r25, 0x00	; 0
    3160:	80 93 17 24 	sts	0x2417, r24
    3164:	90 93 18 24 	sts	0x2418, r25
    3168:	80 ed       	ldi	r24, 0xD0	; 208
    316a:	97 e0       	ldi	r25, 0x07	; 7
    316c:	a0 e0       	ldi	r26, 0x00	; 0
    316e:	b0 e0       	ldi	r27, 0x00	; 0
    3170:	80 93 2c 20 	sts	0x202C, r24
    3174:	90 93 2d 20 	sts	0x202D, r25
    3178:	a0 93 2e 20 	sts	0x202E, r26
    317c:	b0 93 2f 20 	sts	0x202F, r27
    3180:	86 e9       	ldi	r24, 0x96	; 150
    3182:	90 e0       	ldi	r25, 0x00	; 0
    3184:	80 93 3b 22 	sts	0x223B, r24
    3188:	90 93 3c 22 	sts	0x223C, r25
    318c:	e8 e0       	ldi	r30, 0x08	; 8
    318e:	f6 e0       	ldi	r31, 0x06	; 6
    3190:	90 81       	ld	r25, Z
    3192:	30 81       	ld	r19, Z
    3194:	80 81       	ld	r24, Z
    3196:	40 81       	ld	r20, Z
    3198:	e3 e0       	ldi	r30, 0x03	; 3
    319a:	f0 e2       	ldi	r31, 0x20	; 32
    319c:	88 1f       	adc	r24, r24
    319e:	88 27       	eor	r24, r24
    31a0:	88 1f       	adc	r24, r24
    31a2:	28 2f       	mov	r18, r24
    31a4:	22 0f       	add	r18, r18
    31a6:	22 0f       	add	r18, r18
    31a8:	96 fb       	bst	r25, 6
    31aa:	88 27       	eor	r24, r24
    31ac:	80 f9       	bld	r24, 0
    31ae:	28 2b       	or	r18, r24
    31b0:	34 fb       	bst	r19, 4
    31b2:	88 24       	eor	r8, r8
    31b4:	80 f8       	bld	r8, 0
    31b6:	91 2c       	mov	r9, r1
    31b8:	c4 01       	movw	r24, r8
    31ba:	88 0f       	add	r24, r24
    31bc:	99 1f       	adc	r25, r25
    31be:	28 2b       	or	r18, r24
    31c0:	45 fb       	bst	r20, 5
    31c2:	00 27       	eor	r16, r16
    31c4:	00 f9       	bld	r16, 0
    31c6:	10 e0       	ldi	r17, 0x00	; 0
    31c8:	c8 01       	movw	r24, r16
    31ca:	88 0f       	add	r24, r24
    31cc:	99 1f       	adc	r25, r25
    31ce:	88 0f       	add	r24, r24
    31d0:	99 1f       	adc	r25, r25
    31d2:	88 0f       	add	r24, r24
    31d4:	99 1f       	adc	r25, r25
    31d6:	82 2b       	or	r24, r18
    31d8:	90 81       	ld	r25, Z
    31da:	89 0f       	add	r24, r25
    31dc:	80 83       	st	Z, r24
    31de:	82 e0       	ldi	r24, 0x02	; 2
    31e0:	e0 e8       	ldi	r30, 0x80	; 128
    31e2:	f6 e0       	ldi	r31, 0x06	; 6
    31e4:	86 83       	std	Z+6, r24	; 0x06
    31e6:	0e 94 36 10 	call	0x206c	; 0x206c <SPI_Init>
    31ea:	2a e6       	ldi	r18, 0x6A	; 106
    31ec:	2a 95       	dec	r18
    31ee:	f1 f7       	brne	.-4      	; 0x31ec <main+0x124>
    31f0:	00 c0       	rjmp	.+0      	; 0x31f2 <main+0x12a>
    31f2:	3f ef       	ldi	r19, 0xFF	; 255
    31f4:	53 ec       	ldi	r21, 0xC3	; 195
    31f6:	69 e0       	ldi	r22, 0x09	; 9
    31f8:	31 50       	subi	r19, 0x01	; 1
    31fa:	50 40       	sbci	r21, 0x00	; 0
    31fc:	60 40       	sbci	r22, 0x00	; 0
    31fe:	e1 f7       	brne	.-8      	; 0x31f8 <main+0x130>
    3200:	00 c0       	rjmp	.+0      	; 0x3202 <main+0x13a>
    3202:	00 00       	nop
    3204:	0e 94 47 29 	call	0x528e	; 0x528e <NRF24L01_L_Clear_Interrupts>
    3208:	0e 94 0e 2a 	call	0x541c	; 0x541c <NRF24L01_L_Flush_TX>
    320c:	0e 94 1c 2a 	call	0x5438	; 0x5438 <NRF24L01_L_Flush_RX>
    3210:	82 e0       	ldi	r24, 0x02	; 2
    3212:	e0 e8       	ldi	r30, 0x80	; 128
    3214:	f6 e0       	ldi	r31, 0x06	; 6
    3216:	86 83       	std	Z+6, r24	; 0x06
    3218:	e8 e0       	ldi	r30, 0x08	; 8
    321a:	f6 e0       	ldi	r31, 0x06	; 6
    321c:	20 81       	ld	r18, Z
    321e:	30 81       	ld	r19, Z
    3220:	80 81       	ld	r24, Z
    3222:	40 81       	ld	r20, Z
    3224:	88 1f       	adc	r24, r24
    3226:	88 27       	eor	r24, r24
    3228:	88 1f       	adc	r24, r24
    322a:	90 e0       	ldi	r25, 0x00	; 0
    322c:	88 0f       	add	r24, r24
    322e:	99 1f       	adc	r25, r25
    3230:	88 0f       	add	r24, r24
    3232:	99 1f       	adc	r25, r25
    3234:	26 fb       	bst	r18, 6
    3236:	ee 24       	eor	r14, r14
    3238:	e0 f8       	bld	r14, 0
    323a:	f1 2c       	mov	r15, r1
    323c:	e8 2a       	or	r14, r24
    323e:	f9 2a       	or	r15, r25
    3240:	34 fb       	bst	r19, 4
    3242:	cc 24       	eor	r12, r12
    3244:	c0 f8       	bld	r12, 0
    3246:	d1 2c       	mov	r13, r1
    3248:	c6 01       	movw	r24, r12
    324a:	88 0f       	add	r24, r24
    324c:	99 1f       	adc	r25, r25
    324e:	e8 2a       	or	r14, r24
    3250:	f9 2a       	or	r15, r25
    3252:	45 fb       	bst	r20, 5
    3254:	aa 24       	eor	r10, r10
    3256:	a0 f8       	bld	r10, 0
    3258:	b1 2c       	mov	r11, r1
    325a:	c5 01       	movw	r24, r10
    325c:	88 0f       	add	r24, r24
    325e:	99 1f       	adc	r25, r25
    3260:	88 0f       	add	r24, r24
    3262:	99 1f       	adc	r25, r25
    3264:	88 0f       	add	r24, r24
    3266:	99 1f       	adc	r25, r25
    3268:	8e 29       	or	r24, r14
    326a:	9f 29       	or	r25, r15
    326c:	03 97       	sbiw	r24, 0x03	; 3
    326e:	84 f4       	brge	.+32     	; 0x3290 <main+0x1c8>
    3270:	0f 2e       	mov	r0, r31
    3272:	f6 e0       	ldi	r31, 0x06	; 6
    3274:	cf 2e       	mov	r12, r31
    3276:	f0 2d       	mov	r31, r0
    3278:	68 94       	set
    327a:	ee 24       	eor	r14, r14
    327c:	e5 f8       	bld	r14, 5
    327e:	05 e0       	ldi	r16, 0x05	; 5
    3280:	23 e0       	ldi	r18, 0x03	; 3
    3282:	30 e2       	ldi	r19, 0x20	; 32
    3284:	48 e0       	ldi	r20, 0x08	; 8
    3286:	62 e3       	ldi	r22, 0x32	; 50
    3288:	80 e0       	ldi	r24, 0x00	; 0
    328a:	0e 94 ce 29 	call	0x539c	; 0x539c <NRF24L01_L_Init_milad>
    328e:	0f c0       	rjmp	.+30     	; 0x32ae <main+0x1e6>
    3290:	0f 2e       	mov	r0, r31
    3292:	f6 e0       	ldi	r31, 0x06	; 6
    3294:	cf 2e       	mov	r12, r31
    3296:	f0 2d       	mov	r31, r0
    3298:	68 94       	set
    329a:	ee 24       	eor	r14, r14
    329c:	e5 f8       	bld	r14, 5
    329e:	05 e0       	ldi	r16, 0x05	; 5
    32a0:	23 e0       	ldi	r18, 0x03	; 3
    32a2:	30 e2       	ldi	r19, 0x20	; 32
    32a4:	48 e0       	ldi	r20, 0x08	; 8
    32a6:	61 e0       	ldi	r22, 0x01	; 1
    32a8:	80 e0       	ldi	r24, 0x00	; 0
    32aa:	0e 94 ce 29 	call	0x539c	; 0x539c <NRF24L01_L_Init_milad>
    32ae:	61 e0       	ldi	r22, 0x01	; 1
    32b0:	8c e3       	ldi	r24, 0x3C	; 60
    32b2:	0e 94 1e 29 	call	0x523c	; 0x523c <NRF24L01_L_WriteReg>
    32b6:	66 e0       	ldi	r22, 0x06	; 6
    32b8:	8d e3       	ldi	r24, 0x3D	; 61
    32ba:	0e 94 1e 29 	call	0x523c	; 0x523c <NRF24L01_L_WriteReg>
    32be:	82 e0       	ldi	r24, 0x02	; 2
    32c0:	e0 e8       	ldi	r30, 0x80	; 128
    32c2:	f6 e0       	ldi	r31, 0x06	; 6
    32c4:	85 83       	std	Z+5, r24	; 0x05
    32c6:	8f e0       	ldi	r24, 0x0F	; 15
    32c8:	94 e0       	ldi	r25, 0x04	; 4
    32ca:	01 97       	sbiw	r24, 0x01	; 1
    32cc:	f1 f7       	brne	.-4      	; 0x32ca <main+0x202>
    32ce:	00 c0       	rjmp	.+0      	; 0x32d0 <main+0x208>
    32d0:	00 00       	nop
    32d2:	07 e8       	ldi	r16, 0x87	; 135
    32d4:	13 e2       	ldi	r17, 0x23	; 35
    32d6:	0f 2e       	mov	r0, r31
    32d8:	fe e1       	ldi	r31, 0x1E	; 30
    32da:	8f 2e       	mov	r8, r31
    32dc:	f4 e2       	ldi	r31, 0x24	; 36
    32de:	9f 2e       	mov	r9, r31
    32e0:	f0 2d       	mov	r31, r0
    32e2:	0f 2e       	mov	r0, r31
    32e4:	fc e3       	ldi	r31, 0x3C	; 60
    32e6:	2f 2e       	mov	r2, r31
    32e8:	f4 e2       	ldi	r31, 0x24	; 36
    32ea:	3f 2e       	mov	r3, r31
    32ec:	f0 2d       	mov	r31, r0
    32ee:	a8 95       	wdr
    32f0:	80 91 aa 20 	lds	r24, 0x20AA
    32f4:	88 23       	and	r24, r24
    32f6:	11 f4       	brne	.+4      	; 0x32fc <main+0x234>
    32f8:	0c 94 92 27 	jmp	0x4f24	; 0x4f24 <__stack+0xf25>
    32fc:	d8 01       	movw	r26, r16
    32fe:	ed 90       	ld	r14, X+
    3300:	fc 90       	ld	r15, X
    3302:	eb e8       	ldi	r30, 0x8B	; 139
    3304:	f3 e2       	ldi	r31, 0x23	; 35
    3306:	e0 82       	st	Z, r14
    3308:	f1 82       	std	Z+1, r15	; 0x01
    330a:	a3 e8       	ldi	r26, 0x83	; 131
    330c:	b3 e2       	ldi	r27, 0x23	; 35
    330e:	6d 91       	ld	r22, X+
    3310:	7c 91       	ld	r23, X
    3312:	88 27       	eor	r24, r24
    3314:	77 fd       	sbrc	r23, 7
    3316:	80 95       	com	r24
    3318:	98 2f       	mov	r25, r24
    331a:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    331e:	20 e0       	ldi	r18, 0x00	; 0
    3320:	30 e0       	ldi	r19, 0x00	; 0
    3322:	40 ef       	ldi	r20, 0xF0	; 240
    3324:	50 e4       	ldi	r21, 0x40	; 64
    3326:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    332a:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    332e:	2b 01       	movw	r4, r22
    3330:	3c 01       	movw	r6, r24
    3332:	e3 e8       	ldi	r30, 0x83	; 131
    3334:	f3 e2       	ldi	r31, 0x23	; 35
    3336:	10 82       	st	Z, r1
    3338:	11 82       	std	Z+1, r1	; 0x01
    333a:	b7 01       	movw	r22, r14
    333c:	88 27       	eor	r24, r24
    333e:	77 fd       	sbrc	r23, 7
    3340:	80 95       	com	r24
    3342:	98 2f       	mov	r25, r24
    3344:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    3348:	69 83       	std	Y+1, r22	; 0x01
    334a:	7a 83       	std	Y+2, r23	; 0x02
    334c:	8b 83       	std	Y+3, r24	; 0x03
    334e:	9c 83       	std	Y+4, r25	; 0x04
    3350:	4e 18       	sub	r4, r14
    3352:	5f 08       	sbc	r5, r15
    3354:	b2 01       	movw	r22, r4
    3356:	88 27       	eor	r24, r24
    3358:	77 fd       	sbrc	r23, 7
    335a:	80 95       	com	r24
    335c:	98 2f       	mov	r25, r24
    335e:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    3362:	2e ea       	ldi	r18, 0xAE	; 174
    3364:	37 e4       	ldi	r19, 0x47	; 71
    3366:	41 ee       	ldi	r20, 0xE1	; 225
    3368:	5d e3       	ldi	r21, 0x3D	; 61
    336a:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    336e:	9b 01       	movw	r18, r22
    3370:	ac 01       	movw	r20, r24
    3372:	69 81       	ldd	r22, Y+1	; 0x01
    3374:	7a 81       	ldd	r23, Y+2	; 0x02
    3376:	8b 81       	ldd	r24, Y+3	; 0x03
    3378:	9c 81       	ldd	r25, Y+4	; 0x04
    337a:	0e 94 53 2a 	call	0x54a6	; 0x54a6 <__addsf3>
    337e:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    3382:	d8 01       	movw	r26, r16
    3384:	6d 93       	st	X+, r22
    3386:	7c 93       	st	X, r23
    3388:	f4 01       	movw	r30, r8
    338a:	e0 80       	ld	r14, Z
    338c:	f1 80       	ldd	r15, Z+1	; 0x01
    338e:	a2 e2       	ldi	r26, 0x22	; 34
    3390:	b4 e2       	ldi	r27, 0x24	; 36
    3392:	ed 92       	st	X+, r14
    3394:	fc 92       	st	X, r15
    3396:	ea e1       	ldi	r30, 0x1A	; 26
    3398:	f4 e2       	ldi	r31, 0x24	; 36
    339a:	60 81       	ld	r22, Z
    339c:	71 81       	ldd	r23, Z+1	; 0x01
    339e:	88 27       	eor	r24, r24
    33a0:	77 fd       	sbrc	r23, 7
    33a2:	80 95       	com	r24
    33a4:	98 2f       	mov	r25, r24
    33a6:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    33aa:	20 e0       	ldi	r18, 0x00	; 0
    33ac:	30 e0       	ldi	r19, 0x00	; 0
    33ae:	40 ef       	ldi	r20, 0xF0	; 240
    33b0:	50 e4       	ldi	r21, 0x40	; 64
    33b2:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    33b6:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    33ba:	2b 01       	movw	r4, r22
    33bc:	3c 01       	movw	r6, r24
    33be:	aa e1       	ldi	r26, 0x1A	; 26
    33c0:	b4 e2       	ldi	r27, 0x24	; 36
    33c2:	1d 92       	st	X+, r1
    33c4:	1c 92       	st	X, r1
    33c6:	b7 01       	movw	r22, r14
    33c8:	88 27       	eor	r24, r24
    33ca:	77 fd       	sbrc	r23, 7
    33cc:	80 95       	com	r24
    33ce:	98 2f       	mov	r25, r24
    33d0:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    33d4:	69 83       	std	Y+1, r22	; 0x01
    33d6:	7a 83       	std	Y+2, r23	; 0x02
    33d8:	8b 83       	std	Y+3, r24	; 0x03
    33da:	9c 83       	std	Y+4, r25	; 0x04
    33dc:	4e 18       	sub	r4, r14
    33de:	5f 08       	sbc	r5, r15
    33e0:	b2 01       	movw	r22, r4
    33e2:	88 27       	eor	r24, r24
    33e4:	77 fd       	sbrc	r23, 7
    33e6:	80 95       	com	r24
    33e8:	98 2f       	mov	r25, r24
    33ea:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    33ee:	2e ea       	ldi	r18, 0xAE	; 174
    33f0:	37 e4       	ldi	r19, 0x47	; 71
    33f2:	41 ee       	ldi	r20, 0xE1	; 225
    33f4:	5d e3       	ldi	r21, 0x3D	; 61
    33f6:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    33fa:	9b 01       	movw	r18, r22
    33fc:	ac 01       	movw	r20, r24
    33fe:	69 81       	ldd	r22, Y+1	; 0x01
    3400:	7a 81       	ldd	r23, Y+2	; 0x02
    3402:	8b 81       	ldd	r24, Y+3	; 0x03
    3404:	9c 81       	ldd	r25, Y+4	; 0x04
    3406:	0e 94 53 2a 	call	0x54a6	; 0x54a6 <__addsf3>
    340a:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    340e:	f4 01       	movw	r30, r8
    3410:	60 83       	st	Z, r22
    3412:	71 83       	std	Z+1, r23	; 0x01
    3414:	d1 01       	movw	r26, r2
    3416:	ed 90       	ld	r14, X+
    3418:	fc 90       	ld	r15, X
    341a:	e0 e4       	ldi	r30, 0x40	; 64
    341c:	f4 e2       	ldi	r31, 0x24	; 36
    341e:	e0 82       	st	Z, r14
    3420:	f1 82       	std	Z+1, r15	; 0x01
    3422:	a8 e3       	ldi	r26, 0x38	; 56
    3424:	b4 e2       	ldi	r27, 0x24	; 36
    3426:	6d 91       	ld	r22, X+
    3428:	7c 91       	ld	r23, X
    342a:	88 27       	eor	r24, r24
    342c:	77 fd       	sbrc	r23, 7
    342e:	80 95       	com	r24
    3430:	98 2f       	mov	r25, r24
    3432:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    3436:	20 e0       	ldi	r18, 0x00	; 0
    3438:	30 e0       	ldi	r19, 0x00	; 0
    343a:	40 ef       	ldi	r20, 0xF0	; 240
    343c:	50 e4       	ldi	r21, 0x40	; 64
    343e:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    3442:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    3446:	2b 01       	movw	r4, r22
    3448:	3c 01       	movw	r6, r24
    344a:	e8 e3       	ldi	r30, 0x38	; 56
    344c:	f4 e2       	ldi	r31, 0x24	; 36
    344e:	10 82       	st	Z, r1
    3450:	11 82       	std	Z+1, r1	; 0x01
    3452:	b7 01       	movw	r22, r14
    3454:	88 27       	eor	r24, r24
    3456:	77 fd       	sbrc	r23, 7
    3458:	80 95       	com	r24
    345a:	98 2f       	mov	r25, r24
    345c:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    3460:	69 83       	std	Y+1, r22	; 0x01
    3462:	7a 83       	std	Y+2, r23	; 0x02
    3464:	8b 83       	std	Y+3, r24	; 0x03
    3466:	9c 83       	std	Y+4, r25	; 0x04
    3468:	4e 18       	sub	r4, r14
    346a:	5f 08       	sbc	r5, r15
    346c:	b2 01       	movw	r22, r4
    346e:	88 27       	eor	r24, r24
    3470:	77 fd       	sbrc	r23, 7
    3472:	80 95       	com	r24
    3474:	98 2f       	mov	r25, r24
    3476:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    347a:	2e ea       	ldi	r18, 0xAE	; 174
    347c:	37 e4       	ldi	r19, 0x47	; 71
    347e:	41 ee       	ldi	r20, 0xE1	; 225
    3480:	5d e3       	ldi	r21, 0x3D	; 61
    3482:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    3486:	9b 01       	movw	r18, r22
    3488:	ac 01       	movw	r20, r24
    348a:	69 81       	ldd	r22, Y+1	; 0x01
    348c:	7a 81       	ldd	r23, Y+2	; 0x02
    348e:	8b 81       	ldd	r24, Y+3	; 0x03
    3490:	9c 81       	ldd	r25, Y+4	; 0x04
    3492:	0e 94 53 2a 	call	0x54a6	; 0x54a6 <__addsf3>
    3496:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    349a:	d1 01       	movw	r26, r2
    349c:	6d 93       	st	X+, r22
    349e:	7c 93       	st	X, r23
    34a0:	e3 ec       	ldi	r30, 0xC3	; 195
    34a2:	f3 e2       	ldi	r31, 0x23	; 35
    34a4:	e0 80       	ld	r14, Z
    34a6:	f1 80       	ldd	r15, Z+1	; 0x01
    34a8:	a7 ec       	ldi	r26, 0xC7	; 199
    34aa:	b3 e2       	ldi	r27, 0x23	; 35
    34ac:	ed 92       	st	X+, r14
    34ae:	fc 92       	st	X, r15
    34b0:	ef eb       	ldi	r30, 0xBF	; 191
    34b2:	f3 e2       	ldi	r31, 0x23	; 35
    34b4:	60 81       	ld	r22, Z
    34b6:	71 81       	ldd	r23, Z+1	; 0x01
    34b8:	88 27       	eor	r24, r24
    34ba:	77 fd       	sbrc	r23, 7
    34bc:	80 95       	com	r24
    34be:	98 2f       	mov	r25, r24
    34c0:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	40 ef       	ldi	r20, 0xF0	; 240
    34ca:	50 e4       	ldi	r21, 0x40	; 64
    34cc:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    34d0:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    34d4:	2b 01       	movw	r4, r22
    34d6:	3c 01       	movw	r6, r24
    34d8:	af eb       	ldi	r26, 0xBF	; 191
    34da:	b3 e2       	ldi	r27, 0x23	; 35
    34dc:	1d 92       	st	X+, r1
    34de:	1c 92       	st	X, r1
    34e0:	b7 01       	movw	r22, r14
    34e2:	88 27       	eor	r24, r24
    34e4:	77 fd       	sbrc	r23, 7
    34e6:	80 95       	com	r24
    34e8:	98 2f       	mov	r25, r24
    34ea:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    34ee:	69 83       	std	Y+1, r22	; 0x01
    34f0:	7a 83       	std	Y+2, r23	; 0x02
    34f2:	8b 83       	std	Y+3, r24	; 0x03
    34f4:	9c 83       	std	Y+4, r25	; 0x04
    34f6:	4e 18       	sub	r4, r14
    34f8:	5f 08       	sbc	r5, r15
    34fa:	b2 01       	movw	r22, r4
    34fc:	88 27       	eor	r24, r24
    34fe:	77 fd       	sbrc	r23, 7
    3500:	80 95       	com	r24
    3502:	98 2f       	mov	r25, r24
    3504:	0e 94 ea 2a 	call	0x55d4	; 0x55d4 <__floatsisf>
    3508:	2e ea       	ldi	r18, 0xAE	; 174
    350a:	37 e4       	ldi	r19, 0x47	; 71
    350c:	41 ee       	ldi	r20, 0xE1	; 225
    350e:	5d e3       	ldi	r21, 0x3D	; 61
    3510:	0e 94 76 2b 	call	0x56ec	; 0x56ec <__mulsf3>
    3514:	9b 01       	movw	r18, r22
    3516:	ac 01       	movw	r20, r24
    3518:	69 81       	ldd	r22, Y+1	; 0x01
    351a:	7a 81       	ldd	r23, Y+2	; 0x02
    351c:	8b 81       	ldd	r24, Y+3	; 0x03
    351e:	9c 81       	ldd	r25, Y+4	; 0x04
    3520:	0e 94 53 2a 	call	0x54a6	; 0x54a6 <__addsf3>
    3524:	0e 94 b7 2a 	call	0x556e	; 0x556e <__fixsfsi>
    3528:	e3 ec       	ldi	r30, 0xC3	; 195
    352a:	f3 e2       	ldi	r31, 0x23	; 35
    352c:	60 83       	st	Z, r22
    352e:	71 83       	std	Z+1, r23	; 0x01
    3530:	7e dd       	rcall	.-1284   	; 0x302e <disp_ans>
    3532:	10 92 aa 20 	sts	0x20AA, r1
    3536:	a8 e0       	ldi	r26, 0x08	; 8
    3538:	b6 e0       	ldi	r27, 0x06	; 6
    353a:	3c 91       	ld	r19, X
    353c:	2c 91       	ld	r18, X
    353e:	8c 91       	ld	r24, X
    3540:	4c 91       	ld	r20, X
    3542:	88 1f       	adc	r24, r24
    3544:	88 27       	eor	r24, r24
    3546:	88 1f       	adc	r24, r24
    3548:	90 e0       	ldi	r25, 0x00	; 0
    354a:	88 0f       	add	r24, r24
    354c:	99 1f       	adc	r25, r25
    354e:	88 0f       	add	r24, r24
    3550:	99 1f       	adc	r25, r25
    3552:	36 fb       	bst	r19, 6
    3554:	33 27       	eor	r19, r19
    3556:	30 f9       	bld	r19, 0
    3558:	3d 83       	std	Y+5, r19	; 0x05
    355a:	1e 82       	std	Y+6, r1	; 0x06
    355c:	ed 81       	ldd	r30, Y+5	; 0x05
    355e:	fe 81       	ldd	r31, Y+6	; 0x06
    3560:	8e 2b       	or	r24, r30
    3562:	9f 2b       	or	r25, r31
    3564:	22 95       	swap	r18
    3566:	21 70       	andi	r18, 0x01	; 1
    3568:	2f 83       	std	Y+7, r18	; 0x07
    356a:	18 86       	std	Y+8, r1	; 0x08
    356c:	2f 81       	ldd	r18, Y+7	; 0x07
    356e:	38 85       	ldd	r19, Y+8	; 0x08
    3570:	22 0f       	add	r18, r18
    3572:	33 1f       	adc	r19, r19
    3574:	82 2b       	or	r24, r18
    3576:	93 2b       	or	r25, r19
    3578:	45 fb       	bst	r20, 5
    357a:	44 27       	eor	r20, r20
    357c:	40 f9       	bld	r20, 0
    357e:	49 87       	std	Y+9, r20	; 0x09
    3580:	1a 86       	std	Y+10, r1	; 0x0a
    3582:	29 85       	ldd	r18, Y+9	; 0x09
    3584:	3a 85       	ldd	r19, Y+10	; 0x0a
    3586:	22 0f       	add	r18, r18
    3588:	33 1f       	adc	r19, r19
    358a:	22 0f       	add	r18, r18
    358c:	33 1f       	adc	r19, r19
    358e:	22 0f       	add	r18, r18
    3590:	33 1f       	adc	r19, r19
    3592:	82 2b       	or	r24, r18
    3594:	93 2b       	or	r25, r19
    3596:	0f 2e       	mov	r0, r31
    3598:	f7 e1       	ldi	r31, 0x17	; 23
    359a:	ff 2e       	mov	r15, r31
    359c:	f0 2d       	mov	r31, r0
    359e:	f8 9e       	mul	r15, r24
    35a0:	f0 01       	movw	r30, r0
    35a2:	f9 9e       	mul	r15, r25
    35a4:	f0 0d       	add	r31, r0
    35a6:	11 24       	eor	r1, r1
    35a8:	e0 54       	subi	r30, 0x40	; 64
    35aa:	ff 4d       	sbci	r31, 0xDF	; 223
    35ac:	8f e0       	ldi	r24, 0x0F	; 15
    35ae:	84 8b       	std	Z+20, r24	; 0x14
    35b0:	3c 91       	ld	r19, X
    35b2:	2c 91       	ld	r18, X
    35b4:	8c 91       	ld	r24, X
    35b6:	4c 91       	ld	r20, X
    35b8:	88 1f       	adc	r24, r24
    35ba:	88 27       	eor	r24, r24
    35bc:	88 1f       	adc	r24, r24
    35be:	90 e0       	ldi	r25, 0x00	; 0
    35c0:	88 0f       	add	r24, r24
    35c2:	99 1f       	adc	r25, r25
    35c4:	88 0f       	add	r24, r24
    35c6:	99 1f       	adc	r25, r25
    35c8:	36 fb       	bst	r19, 6
    35ca:	33 27       	eor	r19, r19
    35cc:	30 f9       	bld	r19, 0
    35ce:	3b 87       	std	Y+11, r19	; 0x0b
    35d0:	1c 86       	std	Y+12, r1	; 0x0c
    35d2:	6b 85       	ldd	r22, Y+11	; 0x0b
    35d4:	7c 85       	ldd	r23, Y+12	; 0x0c
    35d6:	86 2b       	or	r24, r22
    35d8:	97 2b       	or	r25, r23
    35da:	22 95       	swap	r18
    35dc:	21 70       	andi	r18, 0x01	; 1
    35de:	2d 87       	std	Y+13, r18	; 0x0d
    35e0:	1e 86       	std	Y+14, r1	; 0x0e
    35e2:	2d 85       	ldd	r18, Y+13	; 0x0d
    35e4:	3e 85       	ldd	r19, Y+14	; 0x0e
    35e6:	22 0f       	add	r18, r18
    35e8:	33 1f       	adc	r19, r19
    35ea:	82 2b       	or	r24, r18
    35ec:	93 2b       	or	r25, r19
    35ee:	45 fb       	bst	r20, 5
    35f0:	44 27       	eor	r20, r20
    35f2:	40 f9       	bld	r20, 0
    35f4:	4f 87       	std	Y+15, r20	; 0x0f
    35f6:	18 8a       	std	Y+16, r1	; 0x10
    35f8:	2f 85       	ldd	r18, Y+15	; 0x0f
    35fa:	38 89       	ldd	r19, Y+16	; 0x10
    35fc:	22 0f       	add	r18, r18
    35fe:	33 1f       	adc	r19, r19
    3600:	22 0f       	add	r18, r18
    3602:	33 1f       	adc	r19, r19
    3604:	22 0f       	add	r18, r18
    3606:	33 1f       	adc	r19, r19
    3608:	82 2b       	or	r24, r18
    360a:	93 2b       	or	r25, r19
    360c:	f8 9e       	mul	r15, r24
    360e:	f0 01       	movw	r30, r0
    3610:	f9 9e       	mul	r15, r25
    3612:	f0 0d       	add	r31, r0
    3614:	11 24       	eor	r1, r1
    3616:	e0 54       	subi	r30, 0x40	; 64
    3618:	ff 4d       	sbci	r31, 0xDF	; 223
    361a:	81 e4       	ldi	r24, 0x41	; 65
    361c:	85 8b       	std	Z+21, r24	; 0x15
    361e:	3c 91       	ld	r19, X
    3620:	2c 91       	ld	r18, X
    3622:	8c 91       	ld	r24, X
    3624:	4c 91       	ld	r20, X
    3626:	88 1f       	adc	r24, r24
    3628:	88 27       	eor	r24, r24
    362a:	88 1f       	adc	r24, r24
    362c:	90 e0       	ldi	r25, 0x00	; 0
    362e:	88 0f       	add	r24, r24
    3630:	99 1f       	adc	r25, r25
    3632:	88 0f       	add	r24, r24
    3634:	99 1f       	adc	r25, r25
    3636:	36 fb       	bst	r19, 6
    3638:	33 27       	eor	r19, r19
    363a:	30 f9       	bld	r19, 0
    363c:	39 8b       	std	Y+17, r19	; 0x11
    363e:	1a 8a       	std	Y+18, r1	; 0x12
    3640:	a9 89       	ldd	r26, Y+17	; 0x11
    3642:	ba 89       	ldd	r27, Y+18	; 0x12
    3644:	8a 2b       	or	r24, r26
    3646:	9b 2b       	or	r25, r27
    3648:	22 95       	swap	r18
    364a:	21 70       	andi	r18, 0x01	; 1
    364c:	2b 8b       	std	Y+19, r18	; 0x13
    364e:	1c 8a       	std	Y+20, r1	; 0x14
    3650:	2b 89       	ldd	r18, Y+19	; 0x13
    3652:	3c 89       	ldd	r19, Y+20	; 0x14
    3654:	22 0f       	add	r18, r18
    3656:	33 1f       	adc	r19, r19
    3658:	82 2b       	or	r24, r18
    365a:	93 2b       	or	r25, r19
    365c:	45 fb       	bst	r20, 5
    365e:	44 27       	eor	r20, r20
    3660:	40 f9       	bld	r20, 0
    3662:	4d 8b       	std	Y+21, r20	; 0x15
    3664:	1e 8a       	std	Y+22, r1	; 0x16
    3666:	2d 89       	ldd	r18, Y+21	; 0x15
    3668:	3e 89       	ldd	r19, Y+22	; 0x16
    366a:	22 0f       	add	r18, r18
    366c:	33 1f       	adc	r19, r19
    366e:	22 0f       	add	r18, r18
    3670:	33 1f       	adc	r19, r19
    3672:	22 0f       	add	r18, r18
    3674:	33 1f       	adc	r19, r19
    3676:	82 2b       	or	r24, r18
    3678:	93 2b       	or	r25, r19
    367a:	f8 9e       	mul	r15, r24
    367c:	f0 01       	movw	r30, r0
    367e:	f9 9e       	mul	r15, r25
    3680:	f0 0d       	add	r31, r0
    3682:	11 24       	eor	r1, r1
    3684:	e0 54       	subi	r30, 0x40	; 64
    3686:	ff 4d       	sbci	r31, 0xDF	; 223
    3688:	85 e0       	ldi	r24, 0x05	; 5
    368a:	86 8b       	std	Z+22, r24	; 0x16
    368c:	e8 e0       	ldi	r30, 0x08	; 8
    368e:	f6 e0       	ldi	r31, 0x06	; 6
    3690:	30 81       	ld	r19, Z
    3692:	20 81       	ld	r18, Z
    3694:	80 81       	ld	r24, Z
    3696:	40 81       	ld	r20, Z
    3698:	88 1f       	adc	r24, r24
    369a:	88 27       	eor	r24, r24
    369c:	88 1f       	adc	r24, r24
    369e:	90 e0       	ldi	r25, 0x00	; 0
    36a0:	88 0f       	add	r24, r24
    36a2:	99 1f       	adc	r25, r25
    36a4:	88 0f       	add	r24, r24
    36a6:	99 1f       	adc	r25, r25
    36a8:	36 fb       	bst	r19, 6
    36aa:	33 27       	eor	r19, r19
    36ac:	30 f9       	bld	r19, 0
    36ae:	3f 8b       	std	Y+23, r19	; 0x17
    36b0:	18 8e       	std	Y+24, r1	; 0x18
    36b2:	6f 89       	ldd	r22, Y+23	; 0x17
    36b4:	78 8d       	ldd	r23, Y+24	; 0x18
    36b6:	86 2b       	or	r24, r22
    36b8:	97 2b       	or	r25, r23
    36ba:	22 95       	swap	r18
    36bc:	21 70       	andi	r18, 0x01	; 1
    36be:	29 8f       	std	Y+25, r18	; 0x19
    36c0:	1a 8e       	std	Y+26, r1	; 0x1a
    36c2:	29 8d       	ldd	r18, Y+25	; 0x19
    36c4:	3a 8d       	ldd	r19, Y+26	; 0x1a
    36c6:	22 0f       	add	r18, r18
    36c8:	33 1f       	adc	r19, r19
    36ca:	82 2b       	or	r24, r18
    36cc:	93 2b       	or	r25, r19
    36ce:	45 fb       	bst	r20, 5
    36d0:	44 27       	eor	r20, r20
    36d2:	40 f9       	bld	r20, 0
    36d4:	4b 8f       	std	Y+27, r20	; 0x1b
    36d6:	1c 8e       	std	Y+28, r1	; 0x1c
    36d8:	2b 8d       	ldd	r18, Y+27	; 0x1b
    36da:	3c 8d       	ldd	r19, Y+28	; 0x1c
    36dc:	22 0f       	add	r18, r18
    36de:	33 1f       	adc	r19, r19
    36e0:	22 0f       	add	r18, r18
    36e2:	33 1f       	adc	r19, r19
    36e4:	22 0f       	add	r18, r18
    36e6:	33 1f       	adc	r19, r19
    36e8:	82 2b       	or	r24, r18
    36ea:	93 2b       	or	r25, r19
    36ec:	f8 9e       	mul	r15, r24
    36ee:	f0 01       	movw	r30, r0
    36f0:	f9 9e       	mul	r15, r25
    36f2:	f0 0d       	add	r31, r0
    36f4:	11 24       	eor	r1, r1
    36f6:	e0 54       	subi	r30, 0x40	; 64
    36f8:	ff 4d       	sbci	r31, 0xDF	; 223
    36fa:	17 86       	std	Z+15, r1	; 0x0f
    36fc:	10 8a       	std	Z+16, r1	; 0x10
    36fe:	a8 e0       	ldi	r26, 0x08	; 8
    3700:	b6 e0       	ldi	r27, 0x06	; 6
    3702:	3c 91       	ld	r19, X
    3704:	2c 91       	ld	r18, X
    3706:	8c 91       	ld	r24, X
    3708:	4c 91       	ld	r20, X
    370a:	88 1f       	adc	r24, r24
    370c:	88 27       	eor	r24, r24
    370e:	88 1f       	adc	r24, r24
    3710:	90 e0       	ldi	r25, 0x00	; 0
    3712:	88 0f       	add	r24, r24
    3714:	99 1f       	adc	r25, r25
    3716:	88 0f       	add	r24, r24
    3718:	99 1f       	adc	r25, r25
    371a:	36 fb       	bst	r19, 6
    371c:	33 27       	eor	r19, r19
    371e:	30 f9       	bld	r19, 0
    3720:	3d 8f       	std	Y+29, r19	; 0x1d
    3722:	1e 8e       	std	Y+30, r1	; 0x1e
    3724:	ed 8d       	ldd	r30, Y+29	; 0x1d
    3726:	fe 8d       	ldd	r31, Y+30	; 0x1e
    3728:	8e 2b       	or	r24, r30
    372a:	9f 2b       	or	r25, r31
    372c:	22 95       	swap	r18
    372e:	21 70       	andi	r18, 0x01	; 1
    3730:	2f 8f       	std	Y+31, r18	; 0x1f
    3732:	18 a2       	std	Y+32, r1	; 0x20
    3734:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3736:	38 a1       	ldd	r19, Y+32	; 0x20
    3738:	22 0f       	add	r18, r18
    373a:	33 1f       	adc	r19, r19
    373c:	82 2b       	or	r24, r18
    373e:	93 2b       	or	r25, r19
    3740:	45 fb       	bst	r20, 5
    3742:	44 27       	eor	r20, r20
    3744:	40 f9       	bld	r20, 0
    3746:	49 a3       	std	Y+33, r20	; 0x21
    3748:	1a a2       	std	Y+34, r1	; 0x22
    374a:	29 a1       	ldd	r18, Y+33	; 0x21
    374c:	3a a1       	ldd	r19, Y+34	; 0x22
    374e:	22 0f       	add	r18, r18
    3750:	33 1f       	adc	r19, r19
    3752:	22 0f       	add	r18, r18
    3754:	33 1f       	adc	r19, r19
    3756:	22 0f       	add	r18, r18
    3758:	33 1f       	adc	r19, r19
    375a:	82 2b       	or	r24, r18
    375c:	93 2b       	or	r25, r19
    375e:	f8 9e       	mul	r15, r24
    3760:	f0 01       	movw	r30, r0
    3762:	f9 9e       	mul	r15, r25
    3764:	f0 0d       	add	r31, r0
    3766:	11 24       	eor	r1, r1
    3768:	e0 54       	subi	r30, 0x40	; 64
    376a:	ff 4d       	sbci	r31, 0xDF	; 223
    376c:	15 86       	std	Z+13, r1	; 0x0d
    376e:	16 86       	std	Z+14, r1	; 0x0e
    3770:	6a e2       	ldi	r22, 0x2A	; 42
    3772:	80 ea       	ldi	r24, 0xA0	; 160
    3774:	9b e0       	ldi	r25, 0x0B	; 11
    3776:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    377a:	6e e7       	ldi	r22, 0x7E	; 126
    377c:	80 ea       	ldi	r24, 0xA0	; 160
    377e:	9b e0       	ldi	r25, 0x0B	; 11
    3780:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3784:	a8 e0       	ldi	r26, 0x08	; 8
    3786:	b6 e0       	ldi	r27, 0x06	; 6
    3788:	3c 91       	ld	r19, X
    378a:	2c 91       	ld	r18, X
    378c:	8c 91       	ld	r24, X
    378e:	4c 91       	ld	r20, X
    3790:	88 1f       	adc	r24, r24
    3792:	88 27       	eor	r24, r24
    3794:	88 1f       	adc	r24, r24
    3796:	90 e0       	ldi	r25, 0x00	; 0
    3798:	88 0f       	add	r24, r24
    379a:	99 1f       	adc	r25, r25
    379c:	88 0f       	add	r24, r24
    379e:	99 1f       	adc	r25, r25
    37a0:	36 fb       	bst	r19, 6
    37a2:	33 27       	eor	r19, r19
    37a4:	30 f9       	bld	r19, 0
    37a6:	3b a3       	std	Y+35, r19	; 0x23
    37a8:	1c a2       	std	Y+36, r1	; 0x24
    37aa:	eb a1       	ldd	r30, Y+35	; 0x23
    37ac:	fc a1       	ldd	r31, Y+36	; 0x24
    37ae:	8e 2b       	or	r24, r30
    37b0:	9f 2b       	or	r25, r31
    37b2:	22 95       	swap	r18
    37b4:	21 70       	andi	r18, 0x01	; 1
    37b6:	2d a3       	std	Y+37, r18	; 0x25
    37b8:	1e a2       	std	Y+38, r1	; 0x26
    37ba:	2d a1       	ldd	r18, Y+37	; 0x25
    37bc:	3e a1       	ldd	r19, Y+38	; 0x26
    37be:	22 0f       	add	r18, r18
    37c0:	33 1f       	adc	r19, r19
    37c2:	82 2b       	or	r24, r18
    37c4:	93 2b       	or	r25, r19
    37c6:	45 fb       	bst	r20, 5
    37c8:	44 27       	eor	r20, r20
    37ca:	40 f9       	bld	r20, 0
    37cc:	4f a3       	std	Y+39, r20	; 0x27
    37ce:	18 a6       	std	Y+40, r1	; 0x28
    37d0:	2f a1       	ldd	r18, Y+39	; 0x27
    37d2:	38 a5       	ldd	r19, Y+40	; 0x28
    37d4:	22 0f       	add	r18, r18
    37d6:	33 1f       	adc	r19, r19
    37d8:	22 0f       	add	r18, r18
    37da:	33 1f       	adc	r19, r19
    37dc:	22 0f       	add	r18, r18
    37de:	33 1f       	adc	r19, r19
    37e0:	82 2b       	or	r24, r18
    37e2:	93 2b       	or	r25, r19
    37e4:	f8 9e       	mul	r15, r24
    37e6:	f0 01       	movw	r30, r0
    37e8:	f9 9e       	mul	r15, r25
    37ea:	f0 0d       	add	r31, r0
    37ec:	11 24       	eor	r1, r1
    37ee:	e0 54       	subi	r30, 0x40	; 64
    37f0:	ff 4d       	sbci	r31, 0xDF	; 223
    37f2:	63 81       	ldd	r22, Z+3	; 0x03
    37f4:	80 ea       	ldi	r24, 0xA0	; 160
    37f6:	9b e0       	ldi	r25, 0x0B	; 11
    37f8:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    37fc:	a8 e0       	ldi	r26, 0x08	; 8
    37fe:	b6 e0       	ldi	r27, 0x06	; 6
    3800:	3c 91       	ld	r19, X
    3802:	2c 91       	ld	r18, X
    3804:	8c 91       	ld	r24, X
    3806:	4c 91       	ld	r20, X
    3808:	88 1f       	adc	r24, r24
    380a:	88 27       	eor	r24, r24
    380c:	88 1f       	adc	r24, r24
    380e:	90 e0       	ldi	r25, 0x00	; 0
    3810:	88 0f       	add	r24, r24
    3812:	99 1f       	adc	r25, r25
    3814:	88 0f       	add	r24, r24
    3816:	99 1f       	adc	r25, r25
    3818:	36 fb       	bst	r19, 6
    381a:	33 27       	eor	r19, r19
    381c:	30 f9       	bld	r19, 0
    381e:	39 a7       	std	Y+41, r19	; 0x29
    3820:	1a a6       	std	Y+42, r1	; 0x2a
    3822:	e9 a5       	ldd	r30, Y+41	; 0x29
    3824:	fa a5       	ldd	r31, Y+42	; 0x2a
    3826:	8e 2b       	or	r24, r30
    3828:	9f 2b       	or	r25, r31
    382a:	22 95       	swap	r18
    382c:	21 70       	andi	r18, 0x01	; 1
    382e:	2b a7       	std	Y+43, r18	; 0x2b
    3830:	1c a6       	std	Y+44, r1	; 0x2c
    3832:	2b a5       	ldd	r18, Y+43	; 0x2b
    3834:	3c a5       	ldd	r19, Y+44	; 0x2c
    3836:	22 0f       	add	r18, r18
    3838:	33 1f       	adc	r19, r19
    383a:	82 2b       	or	r24, r18
    383c:	93 2b       	or	r25, r19
    383e:	45 fb       	bst	r20, 5
    3840:	44 27       	eor	r20, r20
    3842:	40 f9       	bld	r20, 0
    3844:	4d a7       	std	Y+45, r20	; 0x2d
    3846:	1e a6       	std	Y+46, r1	; 0x2e
    3848:	2d a5       	ldd	r18, Y+45	; 0x2d
    384a:	3e a5       	ldd	r19, Y+46	; 0x2e
    384c:	22 0f       	add	r18, r18
    384e:	33 1f       	adc	r19, r19
    3850:	22 0f       	add	r18, r18
    3852:	33 1f       	adc	r19, r19
    3854:	22 0f       	add	r18, r18
    3856:	33 1f       	adc	r19, r19
    3858:	82 2b       	or	r24, r18
    385a:	93 2b       	or	r25, r19
    385c:	f8 9e       	mul	r15, r24
    385e:	f0 01       	movw	r30, r0
    3860:	f9 9e       	mul	r15, r25
    3862:	f0 0d       	add	r31, r0
    3864:	11 24       	eor	r1, r1
    3866:	e0 54       	subi	r30, 0x40	; 64
    3868:	ff 4d       	sbci	r31, 0xDF	; 223
    386a:	61 81       	ldd	r22, Z+1	; 0x01
    386c:	80 ea       	ldi	r24, 0xA0	; 160
    386e:	9b e0       	ldi	r25, 0x0B	; 11
    3870:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3874:	a8 e0       	ldi	r26, 0x08	; 8
    3876:	b6 e0       	ldi	r27, 0x06	; 6
    3878:	3c 91       	ld	r19, X
    387a:	2c 91       	ld	r18, X
    387c:	8c 91       	ld	r24, X
    387e:	4c 91       	ld	r20, X
    3880:	88 1f       	adc	r24, r24
    3882:	88 27       	eor	r24, r24
    3884:	88 1f       	adc	r24, r24
    3886:	90 e0       	ldi	r25, 0x00	; 0
    3888:	88 0f       	add	r24, r24
    388a:	99 1f       	adc	r25, r25
    388c:	88 0f       	add	r24, r24
    388e:	99 1f       	adc	r25, r25
    3890:	36 fb       	bst	r19, 6
    3892:	33 27       	eor	r19, r19
    3894:	30 f9       	bld	r19, 0
    3896:	3f a7       	std	Y+47, r19	; 0x2f
    3898:	18 aa       	std	Y+48, r1	; 0x30
    389a:	ef a5       	ldd	r30, Y+47	; 0x2f
    389c:	f8 a9       	ldd	r31, Y+48	; 0x30
    389e:	8e 2b       	or	r24, r30
    38a0:	9f 2b       	or	r25, r31
    38a2:	22 95       	swap	r18
    38a4:	21 70       	andi	r18, 0x01	; 1
    38a6:	29 ab       	std	Y+49, r18	; 0x31
    38a8:	1a aa       	std	Y+50, r1	; 0x32
    38aa:	29 a9       	ldd	r18, Y+49	; 0x31
    38ac:	3a a9       	ldd	r19, Y+50	; 0x32
    38ae:	22 0f       	add	r18, r18
    38b0:	33 1f       	adc	r19, r19
    38b2:	82 2b       	or	r24, r18
    38b4:	93 2b       	or	r25, r19
    38b6:	45 fb       	bst	r20, 5
    38b8:	44 27       	eor	r20, r20
    38ba:	40 f9       	bld	r20, 0
    38bc:	4b ab       	std	Y+51, r20	; 0x33
    38be:	1c aa       	std	Y+52, r1	; 0x34
    38c0:	2b a9       	ldd	r18, Y+51	; 0x33
    38c2:	3c a9       	ldd	r19, Y+52	; 0x34
    38c4:	22 0f       	add	r18, r18
    38c6:	33 1f       	adc	r19, r19
    38c8:	22 0f       	add	r18, r18
    38ca:	33 1f       	adc	r19, r19
    38cc:	22 0f       	add	r18, r18
    38ce:	33 1f       	adc	r19, r19
    38d0:	82 2b       	or	r24, r18
    38d2:	93 2b       	or	r25, r19
    38d4:	f8 9e       	mul	r15, r24
    38d6:	f0 01       	movw	r30, r0
    38d8:	f9 9e       	mul	r15, r25
    38da:	f0 0d       	add	r31, r0
    38dc:	11 24       	eor	r1, r1
    38de:	e0 54       	subi	r30, 0x40	; 64
    38e0:	ff 4d       	sbci	r31, 0xDF	; 223
    38e2:	67 81       	ldd	r22, Z+7	; 0x07
    38e4:	80 ea       	ldi	r24, 0xA0	; 160
    38e6:	9b e0       	ldi	r25, 0x0B	; 11
    38e8:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    38ec:	a8 e0       	ldi	r26, 0x08	; 8
    38ee:	b6 e0       	ldi	r27, 0x06	; 6
    38f0:	3c 91       	ld	r19, X
    38f2:	2c 91       	ld	r18, X
    38f4:	8c 91       	ld	r24, X
    38f6:	4c 91       	ld	r20, X
    38f8:	88 1f       	adc	r24, r24
    38fa:	88 27       	eor	r24, r24
    38fc:	88 1f       	adc	r24, r24
    38fe:	90 e0       	ldi	r25, 0x00	; 0
    3900:	88 0f       	add	r24, r24
    3902:	99 1f       	adc	r25, r25
    3904:	88 0f       	add	r24, r24
    3906:	99 1f       	adc	r25, r25
    3908:	36 fb       	bst	r19, 6
    390a:	33 27       	eor	r19, r19
    390c:	30 f9       	bld	r19, 0
    390e:	3d ab       	std	Y+53, r19	; 0x35
    3910:	1e aa       	std	Y+54, r1	; 0x36
    3912:	ed a9       	ldd	r30, Y+53	; 0x35
    3914:	fe a9       	ldd	r31, Y+54	; 0x36
    3916:	8e 2b       	or	r24, r30
    3918:	9f 2b       	or	r25, r31
    391a:	22 95       	swap	r18
    391c:	21 70       	andi	r18, 0x01	; 1
    391e:	2f ab       	std	Y+55, r18	; 0x37
    3920:	18 ae       	std	Y+56, r1	; 0x38
    3922:	2f a9       	ldd	r18, Y+55	; 0x37
    3924:	38 ad       	ldd	r19, Y+56	; 0x38
    3926:	22 0f       	add	r18, r18
    3928:	33 1f       	adc	r19, r19
    392a:	82 2b       	or	r24, r18
    392c:	93 2b       	or	r25, r19
    392e:	45 fb       	bst	r20, 5
    3930:	44 27       	eor	r20, r20
    3932:	40 f9       	bld	r20, 0
    3934:	49 af       	std	Y+57, r20	; 0x39
    3936:	1a ae       	std	Y+58, r1	; 0x3a
    3938:	29 ad       	ldd	r18, Y+57	; 0x39
    393a:	3a ad       	ldd	r19, Y+58	; 0x3a
    393c:	22 0f       	add	r18, r18
    393e:	33 1f       	adc	r19, r19
    3940:	22 0f       	add	r18, r18
    3942:	33 1f       	adc	r19, r19
    3944:	22 0f       	add	r18, r18
    3946:	33 1f       	adc	r19, r19
    3948:	82 2b       	or	r24, r18
    394a:	93 2b       	or	r25, r19
    394c:	f8 9e       	mul	r15, r24
    394e:	f0 01       	movw	r30, r0
    3950:	f9 9e       	mul	r15, r25
    3952:	f0 0d       	add	r31, r0
    3954:	11 24       	eor	r1, r1
    3956:	e0 54       	subi	r30, 0x40	; 64
    3958:	ff 4d       	sbci	r31, 0xDF	; 223
    395a:	65 81       	ldd	r22, Z+5	; 0x05
    395c:	80 ea       	ldi	r24, 0xA0	; 160
    395e:	9b e0       	ldi	r25, 0x0B	; 11
    3960:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3964:	a8 e0       	ldi	r26, 0x08	; 8
    3966:	b6 e0       	ldi	r27, 0x06	; 6
    3968:	3c 91       	ld	r19, X
    396a:	2c 91       	ld	r18, X
    396c:	8c 91       	ld	r24, X
    396e:	4c 91       	ld	r20, X
    3970:	88 1f       	adc	r24, r24
    3972:	88 27       	eor	r24, r24
    3974:	88 1f       	adc	r24, r24
    3976:	90 e0       	ldi	r25, 0x00	; 0
    3978:	88 0f       	add	r24, r24
    397a:	99 1f       	adc	r25, r25
    397c:	88 0f       	add	r24, r24
    397e:	99 1f       	adc	r25, r25
    3980:	36 fb       	bst	r19, 6
    3982:	33 27       	eor	r19, r19
    3984:	30 f9       	bld	r19, 0
    3986:	3b af       	std	Y+59, r19	; 0x3b
    3988:	1c ae       	std	Y+60, r1	; 0x3c
    398a:	eb ad       	ldd	r30, Y+59	; 0x3b
    398c:	fc ad       	ldd	r31, Y+60	; 0x3c
    398e:	8e 2b       	or	r24, r30
    3990:	9f 2b       	or	r25, r31
    3992:	22 95       	swap	r18
    3994:	21 70       	andi	r18, 0x01	; 1
    3996:	2d af       	std	Y+61, r18	; 0x3d
    3998:	1e ae       	std	Y+62, r1	; 0x3e
    399a:	2d ad       	ldd	r18, Y+61	; 0x3d
    399c:	3e ad       	ldd	r19, Y+62	; 0x3e
    399e:	22 0f       	add	r18, r18
    39a0:	33 1f       	adc	r19, r19
    39a2:	82 2b       	or	r24, r18
    39a4:	93 2b       	or	r25, r19
    39a6:	45 fb       	bst	r20, 5
    39a8:	44 27       	eor	r20, r20
    39aa:	40 f9       	bld	r20, 0
    39ac:	4f af       	std	Y+63, r20	; 0x3f
    39ae:	21 96       	adiw	r28, 0x01	; 1
    39b0:	1f ae       	std	Y+63, r1	; 0x3f
    39b2:	21 97       	sbiw	r28, 0x01	; 1
    39b4:	21 96       	adiw	r28, 0x01	; 1
    39b6:	2e ad       	ldd	r18, Y+62	; 0x3e
    39b8:	3f ad       	ldd	r19, Y+63	; 0x3f
    39ba:	21 97       	sbiw	r28, 0x01	; 1
    39bc:	22 0f       	add	r18, r18
    39be:	33 1f       	adc	r19, r19
    39c0:	22 0f       	add	r18, r18
    39c2:	33 1f       	adc	r19, r19
    39c4:	22 0f       	add	r18, r18
    39c6:	33 1f       	adc	r19, r19
    39c8:	82 2b       	or	r24, r18
    39ca:	93 2b       	or	r25, r19
    39cc:	f8 9e       	mul	r15, r24
    39ce:	f0 01       	movw	r30, r0
    39d0:	f9 9e       	mul	r15, r25
    39d2:	f0 0d       	add	r31, r0
    39d4:	11 24       	eor	r1, r1
    39d6:	e0 54       	subi	r30, 0x40	; 64
    39d8:	ff 4d       	sbci	r31, 0xDF	; 223
    39da:	63 85       	ldd	r22, Z+11	; 0x0b
    39dc:	80 ea       	ldi	r24, 0xA0	; 160
    39de:	9b e0       	ldi	r25, 0x0B	; 11
    39e0:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    39e4:	a8 e0       	ldi	r26, 0x08	; 8
    39e6:	b6 e0       	ldi	r27, 0x06	; 6
    39e8:	3c 91       	ld	r19, X
    39ea:	2c 91       	ld	r18, X
    39ec:	8c 91       	ld	r24, X
    39ee:	4c 91       	ld	r20, X
    39f0:	88 1f       	adc	r24, r24
    39f2:	88 27       	eor	r24, r24
    39f4:	88 1f       	adc	r24, r24
    39f6:	90 e0       	ldi	r25, 0x00	; 0
    39f8:	88 0f       	add	r24, r24
    39fa:	99 1f       	adc	r25, r25
    39fc:	88 0f       	add	r24, r24
    39fe:	99 1f       	adc	r25, r25
    3a00:	36 fb       	bst	r19, 6
    3a02:	33 27       	eor	r19, r19
    3a04:	30 f9       	bld	r19, 0
    3a06:	22 96       	adiw	r28, 0x02	; 2
    3a08:	3f af       	std	Y+63, r19	; 0x3f
    3a0a:	22 97       	sbiw	r28, 0x02	; 2
    3a0c:	23 96       	adiw	r28, 0x03	; 3
    3a0e:	1f ae       	std	Y+63, r1	; 0x3f
    3a10:	23 97       	sbiw	r28, 0x03	; 3
    3a12:	23 96       	adiw	r28, 0x03	; 3
    3a14:	ee ad       	ldd	r30, Y+62	; 0x3e
    3a16:	ff ad       	ldd	r31, Y+63	; 0x3f
    3a18:	23 97       	sbiw	r28, 0x03	; 3
    3a1a:	8e 2b       	or	r24, r30
    3a1c:	9f 2b       	or	r25, r31
    3a1e:	22 95       	swap	r18
    3a20:	21 70       	andi	r18, 0x01	; 1
    3a22:	24 96       	adiw	r28, 0x04	; 4
    3a24:	2f af       	std	Y+63, r18	; 0x3f
    3a26:	24 97       	sbiw	r28, 0x04	; 4
    3a28:	25 96       	adiw	r28, 0x05	; 5
    3a2a:	1f ae       	std	Y+63, r1	; 0x3f
    3a2c:	25 97       	sbiw	r28, 0x05	; 5
    3a2e:	25 96       	adiw	r28, 0x05	; 5
    3a30:	2e ad       	ldd	r18, Y+62	; 0x3e
    3a32:	3f ad       	ldd	r19, Y+63	; 0x3f
    3a34:	25 97       	sbiw	r28, 0x05	; 5
    3a36:	22 0f       	add	r18, r18
    3a38:	33 1f       	adc	r19, r19
    3a3a:	82 2b       	or	r24, r18
    3a3c:	93 2b       	or	r25, r19
    3a3e:	45 fb       	bst	r20, 5
    3a40:	44 27       	eor	r20, r20
    3a42:	40 f9       	bld	r20, 0
    3a44:	26 96       	adiw	r28, 0x06	; 6
    3a46:	4f af       	std	Y+63, r20	; 0x3f
    3a48:	26 97       	sbiw	r28, 0x06	; 6
    3a4a:	27 96       	adiw	r28, 0x07	; 7
    3a4c:	1f ae       	std	Y+63, r1	; 0x3f
    3a4e:	27 97       	sbiw	r28, 0x07	; 7
    3a50:	27 96       	adiw	r28, 0x07	; 7
    3a52:	2e ad       	ldd	r18, Y+62	; 0x3e
    3a54:	3f ad       	ldd	r19, Y+63	; 0x3f
    3a56:	27 97       	sbiw	r28, 0x07	; 7
    3a58:	22 0f       	add	r18, r18
    3a5a:	33 1f       	adc	r19, r19
    3a5c:	22 0f       	add	r18, r18
    3a5e:	33 1f       	adc	r19, r19
    3a60:	22 0f       	add	r18, r18
    3a62:	33 1f       	adc	r19, r19
    3a64:	82 2b       	or	r24, r18
    3a66:	93 2b       	or	r25, r19
    3a68:	f8 9e       	mul	r15, r24
    3a6a:	f0 01       	movw	r30, r0
    3a6c:	f9 9e       	mul	r15, r25
    3a6e:	f0 0d       	add	r31, r0
    3a70:	11 24       	eor	r1, r1
    3a72:	e0 54       	subi	r30, 0x40	; 64
    3a74:	ff 4d       	sbci	r31, 0xDF	; 223
    3a76:	61 85       	ldd	r22, Z+9	; 0x09
    3a78:	80 ea       	ldi	r24, 0xA0	; 160
    3a7a:	9b e0       	ldi	r25, 0x0B	; 11
    3a7c:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3a80:	a8 e0       	ldi	r26, 0x08	; 8
    3a82:	b6 e0       	ldi	r27, 0x06	; 6
    3a84:	3c 91       	ld	r19, X
    3a86:	2c 91       	ld	r18, X
    3a88:	8c 91       	ld	r24, X
    3a8a:	4c 91       	ld	r20, X
    3a8c:	88 1f       	adc	r24, r24
    3a8e:	88 27       	eor	r24, r24
    3a90:	88 1f       	adc	r24, r24
    3a92:	90 e0       	ldi	r25, 0x00	; 0
    3a94:	88 0f       	add	r24, r24
    3a96:	99 1f       	adc	r25, r25
    3a98:	88 0f       	add	r24, r24
    3a9a:	99 1f       	adc	r25, r25
    3a9c:	36 fb       	bst	r19, 6
    3a9e:	33 27       	eor	r19, r19
    3aa0:	30 f9       	bld	r19, 0
    3aa2:	28 96       	adiw	r28, 0x08	; 8
    3aa4:	3f af       	std	Y+63, r19	; 0x3f
    3aa6:	28 97       	sbiw	r28, 0x08	; 8
    3aa8:	29 96       	adiw	r28, 0x09	; 9
    3aaa:	1f ae       	std	Y+63, r1	; 0x3f
    3aac:	29 97       	sbiw	r28, 0x09	; 9
    3aae:	29 96       	adiw	r28, 0x09	; 9
    3ab0:	ee ad       	ldd	r30, Y+62	; 0x3e
    3ab2:	ff ad       	ldd	r31, Y+63	; 0x3f
    3ab4:	29 97       	sbiw	r28, 0x09	; 9
    3ab6:	8e 2b       	or	r24, r30
    3ab8:	9f 2b       	or	r25, r31
    3aba:	22 95       	swap	r18
    3abc:	21 70       	andi	r18, 0x01	; 1
    3abe:	2a 96       	adiw	r28, 0x0a	; 10
    3ac0:	2f af       	std	Y+63, r18	; 0x3f
    3ac2:	2a 97       	sbiw	r28, 0x0a	; 10
    3ac4:	2b 96       	adiw	r28, 0x0b	; 11
    3ac6:	1f ae       	std	Y+63, r1	; 0x3f
    3ac8:	2b 97       	sbiw	r28, 0x0b	; 11
    3aca:	2b 96       	adiw	r28, 0x0b	; 11
    3acc:	2e ad       	ldd	r18, Y+62	; 0x3e
    3ace:	3f ad       	ldd	r19, Y+63	; 0x3f
    3ad0:	2b 97       	sbiw	r28, 0x0b	; 11
    3ad2:	22 0f       	add	r18, r18
    3ad4:	33 1f       	adc	r19, r19
    3ad6:	82 2b       	or	r24, r18
    3ad8:	93 2b       	or	r25, r19
    3ada:	45 fb       	bst	r20, 5
    3adc:	44 27       	eor	r20, r20
    3ade:	40 f9       	bld	r20, 0
    3ae0:	2c 96       	adiw	r28, 0x0c	; 12
    3ae2:	4f af       	std	Y+63, r20	; 0x3f
    3ae4:	2c 97       	sbiw	r28, 0x0c	; 12
    3ae6:	2d 96       	adiw	r28, 0x0d	; 13
    3ae8:	1f ae       	std	Y+63, r1	; 0x3f
    3aea:	2d 97       	sbiw	r28, 0x0d	; 13
    3aec:	2d 96       	adiw	r28, 0x0d	; 13
    3aee:	2e ad       	ldd	r18, Y+62	; 0x3e
    3af0:	3f ad       	ldd	r19, Y+63	; 0x3f
    3af2:	2d 97       	sbiw	r28, 0x0d	; 13
    3af4:	22 0f       	add	r18, r18
    3af6:	33 1f       	adc	r19, r19
    3af8:	22 0f       	add	r18, r18
    3afa:	33 1f       	adc	r19, r19
    3afc:	22 0f       	add	r18, r18
    3afe:	33 1f       	adc	r19, r19
    3b00:	82 2b       	or	r24, r18
    3b02:	93 2b       	or	r25, r19
    3b04:	f8 9e       	mul	r15, r24
    3b06:	f0 01       	movw	r30, r0
    3b08:	f9 9e       	mul	r15, r25
    3b0a:	f0 0d       	add	r31, r0
    3b0c:	11 24       	eor	r1, r1
    3b0e:	e0 54       	subi	r30, 0x40	; 64
    3b10:	ff 4d       	sbci	r31, 0xDF	; 223
    3b12:	67 85       	ldd	r22, Z+15	; 0x0f
    3b14:	80 ea       	ldi	r24, 0xA0	; 160
    3b16:	9b e0       	ldi	r25, 0x0B	; 11
    3b18:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3b1c:	a8 e0       	ldi	r26, 0x08	; 8
    3b1e:	b6 e0       	ldi	r27, 0x06	; 6
    3b20:	3c 91       	ld	r19, X
    3b22:	2c 91       	ld	r18, X
    3b24:	8c 91       	ld	r24, X
    3b26:	4c 91       	ld	r20, X
    3b28:	88 1f       	adc	r24, r24
    3b2a:	88 27       	eor	r24, r24
    3b2c:	88 1f       	adc	r24, r24
    3b2e:	90 e0       	ldi	r25, 0x00	; 0
    3b30:	88 0f       	add	r24, r24
    3b32:	99 1f       	adc	r25, r25
    3b34:	88 0f       	add	r24, r24
    3b36:	99 1f       	adc	r25, r25
    3b38:	36 fb       	bst	r19, 6
    3b3a:	33 27       	eor	r19, r19
    3b3c:	30 f9       	bld	r19, 0
    3b3e:	2e 96       	adiw	r28, 0x0e	; 14
    3b40:	3f af       	std	Y+63, r19	; 0x3f
    3b42:	2e 97       	sbiw	r28, 0x0e	; 14
    3b44:	2f 96       	adiw	r28, 0x0f	; 15
    3b46:	1f ae       	std	Y+63, r1	; 0x3f
    3b48:	2f 97       	sbiw	r28, 0x0f	; 15
    3b4a:	2f 96       	adiw	r28, 0x0f	; 15
    3b4c:	ee ad       	ldd	r30, Y+62	; 0x3e
    3b4e:	ff ad       	ldd	r31, Y+63	; 0x3f
    3b50:	2f 97       	sbiw	r28, 0x0f	; 15
    3b52:	8e 2b       	or	r24, r30
    3b54:	9f 2b       	or	r25, r31
    3b56:	22 95       	swap	r18
    3b58:	21 70       	andi	r18, 0x01	; 1
    3b5a:	60 96       	adiw	r28, 0x10	; 16
    3b5c:	2f af       	std	Y+63, r18	; 0x3f
    3b5e:	60 97       	sbiw	r28, 0x10	; 16
    3b60:	61 96       	adiw	r28, 0x11	; 17
    3b62:	1f ae       	std	Y+63, r1	; 0x3f
    3b64:	61 97       	sbiw	r28, 0x11	; 17
    3b66:	61 96       	adiw	r28, 0x11	; 17
    3b68:	2e ad       	ldd	r18, Y+62	; 0x3e
    3b6a:	3f ad       	ldd	r19, Y+63	; 0x3f
    3b6c:	61 97       	sbiw	r28, 0x11	; 17
    3b6e:	22 0f       	add	r18, r18
    3b70:	33 1f       	adc	r19, r19
    3b72:	82 2b       	or	r24, r18
    3b74:	93 2b       	or	r25, r19
    3b76:	45 fb       	bst	r20, 5
    3b78:	44 27       	eor	r20, r20
    3b7a:	40 f9       	bld	r20, 0
    3b7c:	62 96       	adiw	r28, 0x12	; 18
    3b7e:	4f af       	std	Y+63, r20	; 0x3f
    3b80:	62 97       	sbiw	r28, 0x12	; 18
    3b82:	63 96       	adiw	r28, 0x13	; 19
    3b84:	1f ae       	std	Y+63, r1	; 0x3f
    3b86:	63 97       	sbiw	r28, 0x13	; 19
    3b88:	63 96       	adiw	r28, 0x13	; 19
    3b8a:	2e ad       	ldd	r18, Y+62	; 0x3e
    3b8c:	3f ad       	ldd	r19, Y+63	; 0x3f
    3b8e:	63 97       	sbiw	r28, 0x13	; 19
    3b90:	22 0f       	add	r18, r18
    3b92:	33 1f       	adc	r19, r19
    3b94:	22 0f       	add	r18, r18
    3b96:	33 1f       	adc	r19, r19
    3b98:	22 0f       	add	r18, r18
    3b9a:	33 1f       	adc	r19, r19
    3b9c:	82 2b       	or	r24, r18
    3b9e:	93 2b       	or	r25, r19
    3ba0:	f8 9e       	mul	r15, r24
    3ba2:	f0 01       	movw	r30, r0
    3ba4:	f9 9e       	mul	r15, r25
    3ba6:	f0 0d       	add	r31, r0
    3ba8:	11 24       	eor	r1, r1
    3baa:	e0 54       	subi	r30, 0x40	; 64
    3bac:	ff 4d       	sbci	r31, 0xDF	; 223
    3bae:	65 85       	ldd	r22, Z+13	; 0x0d
    3bb0:	80 ea       	ldi	r24, 0xA0	; 160
    3bb2:	9b e0       	ldi	r25, 0x0B	; 11
    3bb4:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3bb8:	a8 e0       	ldi	r26, 0x08	; 8
    3bba:	b6 e0       	ldi	r27, 0x06	; 6
    3bbc:	3c 91       	ld	r19, X
    3bbe:	2c 91       	ld	r18, X
    3bc0:	8c 91       	ld	r24, X
    3bc2:	4c 91       	ld	r20, X
    3bc4:	88 1f       	adc	r24, r24
    3bc6:	88 27       	eor	r24, r24
    3bc8:	88 1f       	adc	r24, r24
    3bca:	90 e0       	ldi	r25, 0x00	; 0
    3bcc:	88 0f       	add	r24, r24
    3bce:	99 1f       	adc	r25, r25
    3bd0:	88 0f       	add	r24, r24
    3bd2:	99 1f       	adc	r25, r25
    3bd4:	36 fb       	bst	r19, 6
    3bd6:	33 27       	eor	r19, r19
    3bd8:	30 f9       	bld	r19, 0
    3bda:	64 96       	adiw	r28, 0x14	; 20
    3bdc:	3f af       	std	Y+63, r19	; 0x3f
    3bde:	64 97       	sbiw	r28, 0x14	; 20
    3be0:	65 96       	adiw	r28, 0x15	; 21
    3be2:	1f ae       	std	Y+63, r1	; 0x3f
    3be4:	65 97       	sbiw	r28, 0x15	; 21
    3be6:	65 96       	adiw	r28, 0x15	; 21
    3be8:	ee ad       	ldd	r30, Y+62	; 0x3e
    3bea:	ff ad       	ldd	r31, Y+63	; 0x3f
    3bec:	65 97       	sbiw	r28, 0x15	; 21
    3bee:	8e 2b       	or	r24, r30
    3bf0:	9f 2b       	or	r25, r31
    3bf2:	22 95       	swap	r18
    3bf4:	21 70       	andi	r18, 0x01	; 1
    3bf6:	66 96       	adiw	r28, 0x16	; 22
    3bf8:	2f af       	std	Y+63, r18	; 0x3f
    3bfa:	66 97       	sbiw	r28, 0x16	; 22
    3bfc:	67 96       	adiw	r28, 0x17	; 23
    3bfe:	1f ae       	std	Y+63, r1	; 0x3f
    3c00:	67 97       	sbiw	r28, 0x17	; 23
    3c02:	67 96       	adiw	r28, 0x17	; 23
    3c04:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c06:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c08:	67 97       	sbiw	r28, 0x17	; 23
    3c0a:	22 0f       	add	r18, r18
    3c0c:	33 1f       	adc	r19, r19
    3c0e:	82 2b       	or	r24, r18
    3c10:	93 2b       	or	r25, r19
    3c12:	45 fb       	bst	r20, 5
    3c14:	44 27       	eor	r20, r20
    3c16:	40 f9       	bld	r20, 0
    3c18:	68 96       	adiw	r28, 0x18	; 24
    3c1a:	4f af       	std	Y+63, r20	; 0x3f
    3c1c:	68 97       	sbiw	r28, 0x18	; 24
    3c1e:	69 96       	adiw	r28, 0x19	; 25
    3c20:	1f ae       	std	Y+63, r1	; 0x3f
    3c22:	69 97       	sbiw	r28, 0x19	; 25
    3c24:	69 96       	adiw	r28, 0x19	; 25
    3c26:	2e ad       	ldd	r18, Y+62	; 0x3e
    3c28:	3f ad       	ldd	r19, Y+63	; 0x3f
    3c2a:	69 97       	sbiw	r28, 0x19	; 25
    3c2c:	22 0f       	add	r18, r18
    3c2e:	33 1f       	adc	r19, r19
    3c30:	22 0f       	add	r18, r18
    3c32:	33 1f       	adc	r19, r19
    3c34:	22 0f       	add	r18, r18
    3c36:	33 1f       	adc	r19, r19
    3c38:	82 2b       	or	r24, r18
    3c3a:	93 2b       	or	r25, r19
    3c3c:	f8 9e       	mul	r15, r24
    3c3e:	f0 01       	movw	r30, r0
    3c40:	f9 9e       	mul	r15, r25
    3c42:	f0 0d       	add	r31, r0
    3c44:	11 24       	eor	r1, r1
    3c46:	e0 54       	subi	r30, 0x40	; 64
    3c48:	ff 4d       	sbci	r31, 0xDF	; 223
    3c4a:	64 89       	ldd	r22, Z+20	; 0x14
    3c4c:	80 ea       	ldi	r24, 0xA0	; 160
    3c4e:	9b e0       	ldi	r25, 0x0B	; 11
    3c50:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3c54:	a8 e0       	ldi	r26, 0x08	; 8
    3c56:	b6 e0       	ldi	r27, 0x06	; 6
    3c58:	3c 91       	ld	r19, X
    3c5a:	2c 91       	ld	r18, X
    3c5c:	8c 91       	ld	r24, X
    3c5e:	4c 91       	ld	r20, X
    3c60:	88 1f       	adc	r24, r24
    3c62:	88 27       	eor	r24, r24
    3c64:	88 1f       	adc	r24, r24
    3c66:	90 e0       	ldi	r25, 0x00	; 0
    3c68:	88 0f       	add	r24, r24
    3c6a:	99 1f       	adc	r25, r25
    3c6c:	88 0f       	add	r24, r24
    3c6e:	99 1f       	adc	r25, r25
    3c70:	36 fb       	bst	r19, 6
    3c72:	33 27       	eor	r19, r19
    3c74:	30 f9       	bld	r19, 0
    3c76:	6a 96       	adiw	r28, 0x1a	; 26
    3c78:	3f af       	std	Y+63, r19	; 0x3f
    3c7a:	6a 97       	sbiw	r28, 0x1a	; 26
    3c7c:	6b 96       	adiw	r28, 0x1b	; 27
    3c7e:	1f ae       	std	Y+63, r1	; 0x3f
    3c80:	6b 97       	sbiw	r28, 0x1b	; 27
    3c82:	6b 96       	adiw	r28, 0x1b	; 27
    3c84:	ee ad       	ldd	r30, Y+62	; 0x3e
    3c86:	ff ad       	ldd	r31, Y+63	; 0x3f
    3c88:	6b 97       	sbiw	r28, 0x1b	; 27
    3c8a:	8e 2b       	or	r24, r30
    3c8c:	9f 2b       	or	r25, r31
    3c8e:	22 95       	swap	r18
    3c90:	21 70       	andi	r18, 0x01	; 1
    3c92:	6c 96       	adiw	r28, 0x1c	; 28
    3c94:	2f af       	std	Y+63, r18	; 0x3f
    3c96:	6c 97       	sbiw	r28, 0x1c	; 28
    3c98:	6d 96       	adiw	r28, 0x1d	; 29
    3c9a:	1f ae       	std	Y+63, r1	; 0x3f
    3c9c:	6d 97       	sbiw	r28, 0x1d	; 29
    3c9e:	6d 96       	adiw	r28, 0x1d	; 29
    3ca0:	2e ad       	ldd	r18, Y+62	; 0x3e
    3ca2:	3f ad       	ldd	r19, Y+63	; 0x3f
    3ca4:	6d 97       	sbiw	r28, 0x1d	; 29
    3ca6:	22 0f       	add	r18, r18
    3ca8:	33 1f       	adc	r19, r19
    3caa:	82 2b       	or	r24, r18
    3cac:	93 2b       	or	r25, r19
    3cae:	45 fb       	bst	r20, 5
    3cb0:	44 27       	eor	r20, r20
    3cb2:	40 f9       	bld	r20, 0
    3cb4:	6e 96       	adiw	r28, 0x1e	; 30
    3cb6:	4f af       	std	Y+63, r20	; 0x3f
    3cb8:	6e 97       	sbiw	r28, 0x1e	; 30
    3cba:	6f 96       	adiw	r28, 0x1f	; 31
    3cbc:	1f ae       	std	Y+63, r1	; 0x3f
    3cbe:	6f 97       	sbiw	r28, 0x1f	; 31
    3cc0:	6f 96       	adiw	r28, 0x1f	; 31
    3cc2:	2e ad       	ldd	r18, Y+62	; 0x3e
    3cc4:	3f ad       	ldd	r19, Y+63	; 0x3f
    3cc6:	6f 97       	sbiw	r28, 0x1f	; 31
    3cc8:	22 0f       	add	r18, r18
    3cca:	33 1f       	adc	r19, r19
    3ccc:	22 0f       	add	r18, r18
    3cce:	33 1f       	adc	r19, r19
    3cd0:	22 0f       	add	r18, r18
    3cd2:	33 1f       	adc	r19, r19
    3cd4:	82 2b       	or	r24, r18
    3cd6:	93 2b       	or	r25, r19
    3cd8:	f8 9e       	mul	r15, r24
    3cda:	f0 01       	movw	r30, r0
    3cdc:	f9 9e       	mul	r15, r25
    3cde:	f0 0d       	add	r31, r0
    3ce0:	11 24       	eor	r1, r1
    3ce2:	e0 54       	subi	r30, 0x40	; 64
    3ce4:	ff 4d       	sbci	r31, 0xDF	; 223
    3ce6:	65 89       	ldd	r22, Z+21	; 0x15
    3ce8:	80 ea       	ldi	r24, 0xA0	; 160
    3cea:	9b e0       	ldi	r25, 0x0B	; 11
    3cec:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3cf0:	a8 e0       	ldi	r26, 0x08	; 8
    3cf2:	b6 e0       	ldi	r27, 0x06	; 6
    3cf4:	3c 91       	ld	r19, X
    3cf6:	2c 91       	ld	r18, X
    3cf8:	8c 91       	ld	r24, X
    3cfa:	4c 91       	ld	r20, X
    3cfc:	88 1f       	adc	r24, r24
    3cfe:	88 27       	eor	r24, r24
    3d00:	88 1f       	adc	r24, r24
    3d02:	90 e0       	ldi	r25, 0x00	; 0
    3d04:	88 0f       	add	r24, r24
    3d06:	99 1f       	adc	r25, r25
    3d08:	88 0f       	add	r24, r24
    3d0a:	99 1f       	adc	r25, r25
    3d0c:	36 fb       	bst	r19, 6
    3d0e:	33 27       	eor	r19, r19
    3d10:	30 f9       	bld	r19, 0
    3d12:	a0 96       	adiw	r28, 0x20	; 32
    3d14:	3f af       	std	Y+63, r19	; 0x3f
    3d16:	a0 97       	sbiw	r28, 0x20	; 32
    3d18:	a1 96       	adiw	r28, 0x21	; 33
    3d1a:	1f ae       	std	Y+63, r1	; 0x3f
    3d1c:	a1 97       	sbiw	r28, 0x21	; 33
    3d1e:	a1 96       	adiw	r28, 0x21	; 33
    3d20:	ee ad       	ldd	r30, Y+62	; 0x3e
    3d22:	ff ad       	ldd	r31, Y+63	; 0x3f
    3d24:	a1 97       	sbiw	r28, 0x21	; 33
    3d26:	8e 2b       	or	r24, r30
    3d28:	9f 2b       	or	r25, r31
    3d2a:	22 95       	swap	r18
    3d2c:	21 70       	andi	r18, 0x01	; 1
    3d2e:	a2 96       	adiw	r28, 0x22	; 34
    3d30:	2f af       	std	Y+63, r18	; 0x3f
    3d32:	a2 97       	sbiw	r28, 0x22	; 34
    3d34:	a3 96       	adiw	r28, 0x23	; 35
    3d36:	1f ae       	std	Y+63, r1	; 0x3f
    3d38:	a3 97       	sbiw	r28, 0x23	; 35
    3d3a:	a3 96       	adiw	r28, 0x23	; 35
    3d3c:	2e ad       	ldd	r18, Y+62	; 0x3e
    3d3e:	3f ad       	ldd	r19, Y+63	; 0x3f
    3d40:	a3 97       	sbiw	r28, 0x23	; 35
    3d42:	22 0f       	add	r18, r18
    3d44:	33 1f       	adc	r19, r19
    3d46:	82 2b       	or	r24, r18
    3d48:	93 2b       	or	r25, r19
    3d4a:	45 fb       	bst	r20, 5
    3d4c:	44 27       	eor	r20, r20
    3d4e:	40 f9       	bld	r20, 0
    3d50:	a4 96       	adiw	r28, 0x24	; 36
    3d52:	4f af       	std	Y+63, r20	; 0x3f
    3d54:	a4 97       	sbiw	r28, 0x24	; 36
    3d56:	a5 96       	adiw	r28, 0x25	; 37
    3d58:	1f ae       	std	Y+63, r1	; 0x3f
    3d5a:	a5 97       	sbiw	r28, 0x25	; 37
    3d5c:	a5 96       	adiw	r28, 0x25	; 37
    3d5e:	2e ad       	ldd	r18, Y+62	; 0x3e
    3d60:	3f ad       	ldd	r19, Y+63	; 0x3f
    3d62:	a5 97       	sbiw	r28, 0x25	; 37
    3d64:	22 0f       	add	r18, r18
    3d66:	33 1f       	adc	r19, r19
    3d68:	22 0f       	add	r18, r18
    3d6a:	33 1f       	adc	r19, r19
    3d6c:	22 0f       	add	r18, r18
    3d6e:	33 1f       	adc	r19, r19
    3d70:	82 2b       	or	r24, r18
    3d72:	93 2b       	or	r25, r19
    3d74:	f8 9e       	mul	r15, r24
    3d76:	f0 01       	movw	r30, r0
    3d78:	f9 9e       	mul	r15, r25
    3d7a:	f0 0d       	add	r31, r0
    3d7c:	11 24       	eor	r1, r1
    3d7e:	e0 54       	subi	r30, 0x40	; 64
    3d80:	ff 4d       	sbci	r31, 0xDF	; 223
    3d82:	66 89       	ldd	r22, Z+22	; 0x16
    3d84:	80 ea       	ldi	r24, 0xA0	; 160
    3d86:	9b e0       	ldi	r25, 0x0B	; 11
    3d88:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3d8c:	80 91 d6 23 	lds	r24, 0x23D6
    3d90:	90 91 d7 23 	lds	r25, 0x23D7
    3d94:	00 97       	sbiw	r24, 0x00	; 0
    3d96:	19 f0       	breq	.+6      	; 0x3d9e <main+0xcd6>
    3d98:	01 97       	sbiw	r24, 0x01	; 1
    3d9a:	39 f0       	breq	.+14     	; 0x3daa <main+0xce2>
    3d9c:	0b c0       	rjmp	.+22     	; 0x3db4 <main+0xcec>
    3d9e:	63 e2       	ldi	r22, 0x23	; 35
    3da0:	80 ea       	ldi	r24, 0xA0	; 160
    3da2:	9b e0       	ldi	r25, 0x0B	; 11
    3da4:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3da8:	05 c0       	rjmp	.+10     	; 0x3db4 <main+0xcec>
    3daa:	64 e2       	ldi	r22, 0x24	; 36
    3dac:	80 ea       	ldi	r24, 0xA0	; 160
    3dae:	9b e0       	ldi	r25, 0x0B	; 11
    3db0:	0e 94 7b 0e 	call	0x1cf6	; 0x1cf6 <usart_putchar>
    3db4:	2f b7       	in	r18, 0x3f	; 63
    3db6:	f8 94       	cli
    3db8:	e0 e0       	ldi	r30, 0x00	; 0
    3dba:	f2 e0       	ldi	r31, 0x02	; 2
    3dbc:	84 a1       	ldd	r24, Z+36	; 0x24
    3dbe:	95 a1       	ldd	r25, Z+37	; 0x25
    3dc0:	2f bf       	out	0x3f, r18	; 63
    3dc2:	80 93 b3 20 	sts	0x20B3, r24
    3dc6:	90 93 b4 20 	sts	0x20B4, r25
    3dca:	89 3d       	cpi	r24, 0xD9	; 217
    3dcc:	94 40       	sbci	r25, 0x04	; 4
    3dce:	3c f4       	brge	.+14     	; 0x3dde <main+0xd16>
    3dd0:	e0 e4       	ldi	r30, 0x40	; 64
    3dd2:	f6 e0       	ldi	r31, 0x06	; 6
    3dd4:	80 e4       	ldi	r24, 0x40	; 64
    3dd6:	85 83       	std	Z+5, r24	; 0x05
    3dd8:	84 e0       	ldi	r24, 0x04	; 4
    3dda:	85 83       	std	Z+5, r24	; 0x05
    3ddc:	06 c0       	rjmp	.+12     	; 0x3dea <main+0xd22>
    3dde:	e0 e4       	ldi	r30, 0x40	; 64
    3de0:	f6 e0       	ldi	r31, 0x06	; 6
    3de2:	80 e4       	ldi	r24, 0x40	; 64
    3de4:	86 83       	std	Z+6, r24	; 0x06
    3de6:	84 e0       	ldi	r24, 0x04	; 4
    3de8:	86 83       	std	Z+6, r24	; 0x06
    3dea:	60 e0       	ldi	r22, 0x00	; 0
    3dec:	80 e0       	ldi	r24, 0x00	; 0
    3dee:	0e 94 84 02 	call	0x508	; 0x508 <LCDGotoXY>
    3df2:	a8 e0       	ldi	r26, 0x08	; 8
    3df4:	b6 e0       	ldi	r27, 0x06	; 6
    3df6:	6c 91       	ld	r22, X
    3df8:	5c 91       	ld	r21, X
    3dfa:	7c 91       	ld	r23, X
    3dfc:	4c 91       	ld	r20, X
    3dfe:	fc 90       	ld	r15, X
    3e00:	fc 91       	ld	r31, X
    3e02:	2c 91       	ld	r18, X
    3e04:	ec 91       	ld	r30, X
    3e06:	30 91 97 23 	lds	r19, 0x2397
    3e0a:	83 2f       	mov	r24, r19
    3e0c:	99 27       	eor	r25, r25
    3e0e:	87 fd       	sbrc	r24, 7
    3e10:	90 95       	com	r25
    3e12:	9f 93       	push	r25
    3e14:	3f 93       	push	r19
    3e16:	22 1f       	adc	r18, r18
    3e18:	22 27       	eor	r18, r18
    3e1a:	22 1f       	adc	r18, r18
    3e1c:	30 e0       	ldi	r19, 0x00	; 0
    3e1e:	22 0f       	add	r18, r18
    3e20:	33 1f       	adc	r19, r19
    3e22:	22 0f       	add	r18, r18
    3e24:	33 1f       	adc	r19, r19
    3e26:	f6 fa       	bst	r15, 6
    3e28:	ff 24       	eor	r15, r15
    3e2a:	f0 f8       	bld	r15, 0
    3e2c:	a6 96       	adiw	r28, 0x26	; 38
    3e2e:	ff ae       	std	Y+63, r15	; 0x3f
    3e30:	a6 97       	sbiw	r28, 0x26	; 38
    3e32:	a7 96       	adiw	r28, 0x27	; 39
    3e34:	1f ae       	std	Y+63, r1	; 0x3f
    3e36:	a7 97       	sbiw	r28, 0x27	; 39
    3e38:	a7 96       	adiw	r28, 0x27	; 39
    3e3a:	8e ad       	ldd	r24, Y+62	; 0x3e
    3e3c:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e3e:	a7 97       	sbiw	r28, 0x27	; 39
    3e40:	28 2b       	or	r18, r24
    3e42:	39 2b       	or	r19, r25
    3e44:	f2 95       	swap	r31
    3e46:	f1 70       	andi	r31, 0x01	; 1
    3e48:	a8 96       	adiw	r28, 0x28	; 40
    3e4a:	ff af       	std	Y+63, r31	; 0x3f
    3e4c:	a8 97       	sbiw	r28, 0x28	; 40
    3e4e:	a9 96       	adiw	r28, 0x29	; 41
    3e50:	1f ae       	std	Y+63, r1	; 0x3f
    3e52:	a9 97       	sbiw	r28, 0x29	; 41
    3e54:	a9 96       	adiw	r28, 0x29	; 41
    3e56:	8e ad       	ldd	r24, Y+62	; 0x3e
    3e58:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e5a:	a9 97       	sbiw	r28, 0x29	; 41
    3e5c:	88 0f       	add	r24, r24
    3e5e:	99 1f       	adc	r25, r25
    3e60:	28 2b       	or	r18, r24
    3e62:	39 2b       	or	r19, r25
    3e64:	e5 fb       	bst	r30, 5
    3e66:	ee 27       	eor	r30, r30
    3e68:	e0 f9       	bld	r30, 0
    3e6a:	aa 96       	adiw	r28, 0x2a	; 42
    3e6c:	ef af       	std	Y+63, r30	; 0x3f
    3e6e:	aa 97       	sbiw	r28, 0x2a	; 42
    3e70:	ab 96       	adiw	r28, 0x2b	; 43
    3e72:	1f ae       	std	Y+63, r1	; 0x3f
    3e74:	ab 97       	sbiw	r28, 0x2b	; 43
    3e76:	ab 96       	adiw	r28, 0x2b	; 43
    3e78:	8e ad       	ldd	r24, Y+62	; 0x3e
    3e7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e7c:	ab 97       	sbiw	r28, 0x2b	; 43
    3e7e:	88 0f       	add	r24, r24
    3e80:	99 1f       	adc	r25, r25
    3e82:	88 0f       	add	r24, r24
    3e84:	99 1f       	adc	r25, r25
    3e86:	88 0f       	add	r24, r24
    3e88:	99 1f       	adc	r25, r25
    3e8a:	28 2b       	or	r18, r24
    3e8c:	39 2b       	or	r19, r25
    3e8e:	0f 2e       	mov	r0, r31
    3e90:	f7 e1       	ldi	r31, 0x17	; 23
    3e92:	7f 2e       	mov	r7, r31
    3e94:	f0 2d       	mov	r31, r0
    3e96:	72 9e       	mul	r7, r18
    3e98:	c0 01       	movw	r24, r0
    3e9a:	73 9e       	mul	r7, r19
    3e9c:	90 0d       	add	r25, r0
    3e9e:	11 24       	eor	r1, r1
    3ea0:	fc 01       	movw	r30, r24
    3ea2:	e0 54       	subi	r30, 0x40	; 64
    3ea4:	ff 4d       	sbci	r31, 0xDF	; 223
    3ea6:	91 81       	ldd	r25, Z+1	; 0x01
    3ea8:	ad 96       	adiw	r28, 0x2d	; 45
    3eaa:	9f af       	std	Y+63, r25	; 0x3f
    3eac:	ad 97       	sbiw	r28, 0x2d	; 45
    3eae:	ac 96       	adiw	r28, 0x2c	; 44
    3eb0:	1f ae       	std	Y+63, r1	; 0x3f
    3eb2:	ac 97       	sbiw	r28, 0x2c	; 44
    3eb4:	77 1f       	adc	r23, r23
    3eb6:	77 27       	eor	r23, r23
    3eb8:	77 1f       	adc	r23, r23
    3eba:	87 2f       	mov	r24, r23
    3ebc:	90 e0       	ldi	r25, 0x00	; 0
    3ebe:	88 0f       	add	r24, r24
    3ec0:	99 1f       	adc	r25, r25
    3ec2:	88 0f       	add	r24, r24
    3ec4:	99 1f       	adc	r25, r25
    3ec6:	66 fb       	bst	r22, 6
    3ec8:	66 27       	eor	r22, r22
    3eca:	60 f9       	bld	r22, 0
    3ecc:	ae 96       	adiw	r28, 0x2e	; 46
    3ece:	6f af       	std	Y+63, r22	; 0x3f
    3ed0:	ae 97       	sbiw	r28, 0x2e	; 46
    3ed2:	af 96       	adiw	r28, 0x2f	; 47
    3ed4:	1f ae       	std	Y+63, r1	; 0x3f
    3ed6:	af 97       	sbiw	r28, 0x2f	; 47
    3ed8:	af 96       	adiw	r28, 0x2f	; 47
    3eda:	ae ad       	ldd	r26, Y+62	; 0x3e
    3edc:	bf ad       	ldd	r27, Y+63	; 0x3f
    3ede:	af 97       	sbiw	r28, 0x2f	; 47
    3ee0:	8a 2b       	or	r24, r26
    3ee2:	9b 2b       	or	r25, r27
    3ee4:	52 95       	swap	r21
    3ee6:	51 70       	andi	r21, 0x01	; 1
    3ee8:	e0 96       	adiw	r28, 0x30	; 48
    3eea:	5f af       	std	Y+63, r21	; 0x3f
    3eec:	e0 97       	sbiw	r28, 0x30	; 48
    3eee:	e1 96       	adiw	r28, 0x31	; 49
    3ef0:	1f ae       	std	Y+63, r1	; 0x3f
    3ef2:	e1 97       	sbiw	r28, 0x31	; 49
    3ef4:	e1 96       	adiw	r28, 0x31	; 49
    3ef6:	2e ad       	ldd	r18, Y+62	; 0x3e
    3ef8:	3f ad       	ldd	r19, Y+63	; 0x3f
    3efa:	e1 97       	sbiw	r28, 0x31	; 49
    3efc:	22 0f       	add	r18, r18
    3efe:	33 1f       	adc	r19, r19
    3f00:	82 2b       	or	r24, r18
    3f02:	93 2b       	or	r25, r19
    3f04:	45 fb       	bst	r20, 5
    3f06:	44 27       	eor	r20, r20
    3f08:	40 f9       	bld	r20, 0
    3f0a:	e2 96       	adiw	r28, 0x32	; 50
    3f0c:	4f af       	std	Y+63, r20	; 0x3f
    3f0e:	e2 97       	sbiw	r28, 0x32	; 50
    3f10:	e3 96       	adiw	r28, 0x33	; 51
    3f12:	1f ae       	std	Y+63, r1	; 0x3f
    3f14:	e3 97       	sbiw	r28, 0x33	; 51
    3f16:	e3 96       	adiw	r28, 0x33	; 51
    3f18:	2e ad       	ldd	r18, Y+62	; 0x3e
    3f1a:	3f ad       	ldd	r19, Y+63	; 0x3f
    3f1c:	e3 97       	sbiw	r28, 0x33	; 51
    3f1e:	22 0f       	add	r18, r18
    3f20:	33 1f       	adc	r19, r19
    3f22:	22 0f       	add	r18, r18
    3f24:	33 1f       	adc	r19, r19
    3f26:	22 0f       	add	r18, r18
    3f28:	33 1f       	adc	r19, r19
    3f2a:	82 2b       	or	r24, r18
    3f2c:	93 2b       	or	r25, r19
    3f2e:	78 9e       	mul	r7, r24
    3f30:	f0 01       	movw	r30, r0
    3f32:	79 9e       	mul	r7, r25
    3f34:	f0 0d       	add	r31, r0
    3f36:	11 24       	eor	r1, r1
    3f38:	e0 54       	subi	r30, 0x40	; 64
    3f3a:	ff 4d       	sbci	r31, 0xDF	; 223
    3f3c:	83 81       	ldd	r24, Z+3	; 0x03
    3f3e:	94 81       	ldd	r25, Z+4	; 0x04
    3f40:	ad 96       	adiw	r28, 0x2d	; 45
    3f42:	ee ad       	ldd	r30, Y+62	; 0x3e
    3f44:	ff ad       	ldd	r31, Y+63	; 0x3f
    3f46:	ad 97       	sbiw	r28, 0x2d	; 45
    3f48:	8e 2b       	or	r24, r30
    3f4a:	9f 2b       	or	r25, r31
    3f4c:	9f 93       	push	r25
    3f4e:	8f 93       	push	r24
    3f50:	86 e4       	ldi	r24, 0x46	; 70
    3f52:	90 e2       	ldi	r25, 0x20	; 32
    3f54:	9f 93       	push	r25
    3f56:	8f 93       	push	r24
    3f58:	0f 2e       	mov	r0, r31
    3f5a:	fd ee       	ldi	r31, 0xED	; 237
    3f5c:	ef 2e       	mov	r14, r31
    3f5e:	f3 e2       	ldi	r31, 0x23	; 35
    3f60:	ff 2e       	mov	r15, r31
    3f62:	f0 2d       	mov	r31, r0
    3f64:	ff 92       	push	r15
    3f66:	ef 92       	push	r14
    3f68:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <sprintf>
    3f6c:	c7 01       	movw	r24, r14
    3f6e:	0e 94 75 02 	call	0x4ea	; 0x4ea <LCDStringRam>
    3f72:	61 e0       	ldi	r22, 0x01	; 1
    3f74:	80 e0       	ldi	r24, 0x00	; 0
    3f76:	0e 94 84 02 	call	0x508	; 0x508 <LCDGotoXY>
    3f7a:	d8 01       	movw	r26, r16
    3f7c:	11 96       	adiw	r26, 0x01	; 1
    3f7e:	8c 91       	ld	r24, X
    3f80:	11 97       	sbiw	r26, 0x01	; 1
    3f82:	8f 93       	push	r24
    3f84:	8c 91       	ld	r24, X
    3f86:	8f 93       	push	r24
    3f88:	8e e4       	ldi	r24, 0x4E	; 78
    3f8a:	90 e2       	ldi	r25, 0x20	; 32
    3f8c:	9f 93       	push	r25
    3f8e:	8f 93       	push	r24
    3f90:	ff 92       	push	r15
    3f92:	ef 92       	push	r14
    3f94:	0e 94 d9 2b 	call	0x57b2	; 0x57b2 <sprintf>
    3f98:	c7 01       	movw	r24, r14
    3f9a:	0e 94 75 02 	call	0x4ea	; 0x4ea <LCDStringRam>
    3f9e:	e8 e0       	ldi	r30, 0x08	; 8
    3fa0:	f6 e0       	ldi	r31, 0x06	; 6
    3fa2:	30 81       	ld	r19, Z
    3fa4:	20 81       	ld	r18, Z
    3fa6:	80 81       	ld	r24, Z
    3fa8:	40 81       	ld	r20, Z
    3faa:	88 1f       	adc	r24, r24
    3fac:	88 27       	eor	r24, r24
    3fae:	88 1f       	adc	r24, r24
    3fb0:	90 e0       	ldi	r25, 0x00	; 0
    3fb2:	88 0f       	add	r24, r24
    3fb4:	99 1f       	adc	r25, r25
    3fb6:	88 0f       	add	r24, r24
    3fb8:	99 1f       	adc	r25, r25
    3fba:	36 fb       	bst	r19, 6
    3fbc:	33 27       	eor	r19, r19
    3fbe:	30 f9       	bld	r19, 0
    3fc0:	e4 96       	adiw	r28, 0x34	; 52
    3fc2:	3f af       	std	Y+63, r19	; 0x3f
    3fc4:	e4 97       	sbiw	r28, 0x34	; 52
    3fc6:	e5 96       	adiw	r28, 0x35	; 53
    3fc8:	1f ae       	std	Y+63, r1	; 0x3f
    3fca:	e5 97       	sbiw	r28, 0x35	; 53
    3fcc:	e5 96       	adiw	r28, 0x35	; 53
    3fce:	6e ad       	ldd	r22, Y+62	; 0x3e
    3fd0:	7f ad       	ldd	r23, Y+63	; 0x3f
    3fd2:	e5 97       	sbiw	r28, 0x35	; 53
    3fd4:	86 2b       	or	r24, r22
    3fd6:	97 2b       	or	r25, r23
    3fd8:	22 95       	swap	r18
    3fda:	21 70       	andi	r18, 0x01	; 1
    3fdc:	e6 96       	adiw	r28, 0x36	; 54
    3fde:	2f af       	std	Y+63, r18	; 0x3f
    3fe0:	e6 97       	sbiw	r28, 0x36	; 54
    3fe2:	e7 96       	adiw	r28, 0x37	; 55
    3fe4:	1f ae       	std	Y+63, r1	; 0x3f
    3fe6:	e7 97       	sbiw	r28, 0x37	; 55
    3fe8:	e7 96       	adiw	r28, 0x37	; 55
    3fea:	2e ad       	ldd	r18, Y+62	; 0x3e
    3fec:	3f ad       	ldd	r19, Y+63	; 0x3f
    3fee:	e7 97       	sbiw	r28, 0x37	; 55
    3ff0:	22 0f       	add	r18, r18
    3ff2:	33 1f       	adc	r19, r19
    3ff4:	82 2b       	or	r24, r18
    3ff6:	93 2b       	or	r25, r19
    3ff8:	45 fb       	bst	r20, 5
    3ffa:	44 27       	eor	r20, r20
    3ffc:	40 f9       	bld	r20, 0
    3ffe:	e8 96       	adiw	r28, 0x38	; 56
    4000:	4f af       	std	Y+63, r20	; 0x3f
    4002:	e8 97       	sbiw	r28, 0x38	; 56
    4004:	e9 96       	adiw	r28, 0x39	; 57
    4006:	1f ae       	std	Y+63, r1	; 0x3f
    4008:	e9 97       	sbiw	r28, 0x39	; 57
    400a:	e9 96       	adiw	r28, 0x39	; 57
    400c:	2e ad       	ldd	r18, Y+62	; 0x3e
    400e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4010:	e9 97       	sbiw	r28, 0x39	; 57
    4012:	22 0f       	add	r18, r18
    4014:	33 1f       	adc	r19, r19
    4016:	22 0f       	add	r18, r18
    4018:	33 1f       	adc	r19, r19
    401a:	22 0f       	add	r18, r18
    401c:	33 1f       	adc	r19, r19
    401e:	82 2b       	or	r24, r18
    4020:	93 2b       	or	r25, r19
    4022:	78 9e       	mul	r7, r24
    4024:	f0 01       	movw	r30, r0
    4026:	79 9e       	mul	r7, r25
    4028:	f0 0d       	add	r31, r0
    402a:	11 24       	eor	r1, r1
    402c:	e0 54       	subi	r30, 0x40	; 64
    402e:	ff 4d       	sbci	r31, 0xDF	; 223
    4030:	cd bf       	out	0x3d, r28	; 61
    4032:	de bf       	out	0x3e, r29	; 62
    4034:	81 89       	ldd	r24, Z+17	; 0x11
    4036:	88 23       	and	r24, r24
    4038:	09 f4       	brne	.+2      	; 0x403c <__stack+0x3d>
    403a:	62 c0       	rjmp	.+196    	; 0x4100 <__stack+0x101>
    403c:	a8 e0       	ldi	r26, 0x08	; 8
    403e:	b6 e0       	ldi	r27, 0x06	; 6
    4040:	3c 91       	ld	r19, X
    4042:	2c 91       	ld	r18, X
    4044:	8c 91       	ld	r24, X
    4046:	4c 91       	ld	r20, X
    4048:	88 1f       	adc	r24, r24
    404a:	88 27       	eor	r24, r24
    404c:	88 1f       	adc	r24, r24
    404e:	90 e0       	ldi	r25, 0x00	; 0
    4050:	88 0f       	add	r24, r24
    4052:	99 1f       	adc	r25, r25
    4054:	88 0f       	add	r24, r24
    4056:	99 1f       	adc	r25, r25
    4058:	36 fb       	bst	r19, 6
    405a:	33 27       	eor	r19, r19
    405c:	30 f9       	bld	r19, 0
    405e:	c5 51       	subi	r28, 0x15	; 21
    4060:	df 4f       	sbci	r29, 0xFF	; 255
    4062:	38 83       	st	Y, r19
    4064:	cb 5e       	subi	r28, 0xEB	; 235
    4066:	d0 40       	sbci	r29, 0x00	; 0
    4068:	c4 51       	subi	r28, 0x14	; 20
    406a:	df 4f       	sbci	r29, 0xFF	; 255
    406c:	18 82       	st	Y, r1
    406e:	cc 5e       	subi	r28, 0xEC	; 236
    4070:	d0 40       	sbci	r29, 0x00	; 0
    4072:	c5 51       	subi	r28, 0x15	; 21
    4074:	df 4f       	sbci	r29, 0xFF	; 255
    4076:	e8 81       	ld	r30, Y
    4078:	f9 81       	ldd	r31, Y+1	; 0x01
    407a:	cb 5e       	subi	r28, 0xEB	; 235
    407c:	d0 40       	sbci	r29, 0x00	; 0
    407e:	8e 2b       	or	r24, r30
    4080:	9f 2b       	or	r25, r31
    4082:	22 95       	swap	r18
    4084:	21 70       	andi	r18, 0x01	; 1
    4086:	c3 51       	subi	r28, 0x13	; 19
    4088:	df 4f       	sbci	r29, 0xFF	; 255
    408a:	28 83       	st	Y, r18
    408c:	cd 5e       	subi	r28, 0xED	; 237
    408e:	d0 40       	sbci	r29, 0x00	; 0
    4090:	c2 51       	subi	r28, 0x12	; 18
    4092:	df 4f       	sbci	r29, 0xFF	; 255
    4094:	18 82       	st	Y, r1
    4096:	ce 5e       	subi	r28, 0xEE	; 238
    4098:	d0 40       	sbci	r29, 0x00	; 0
    409a:	c3 51       	subi	r28, 0x13	; 19
    409c:	df 4f       	sbci	r29, 0xFF	; 255
    409e:	28 81       	ld	r18, Y
    40a0:	39 81       	ldd	r19, Y+1	; 0x01
    40a2:	cd 5e       	subi	r28, 0xED	; 237
    40a4:	d0 40       	sbci	r29, 0x00	; 0
    40a6:	22 0f       	add	r18, r18
    40a8:	33 1f       	adc	r19, r19
    40aa:	82 2b       	or	r24, r18
    40ac:	93 2b       	or	r25, r19
    40ae:	45 fb       	bst	r20, 5
    40b0:	44 27       	eor	r20, r20
    40b2:	40 f9       	bld	r20, 0
    40b4:	c1 51       	subi	r28, 0x11	; 17
    40b6:	df 4f       	sbci	r29, 0xFF	; 255
    40b8:	48 83       	st	Y, r20
    40ba:	cf 5e       	subi	r28, 0xEF	; 239
    40bc:	d0 40       	sbci	r29, 0x00	; 0
    40be:	c0 51       	subi	r28, 0x10	; 16
    40c0:	df 4f       	sbci	r29, 0xFF	; 255
    40c2:	18 82       	st	Y, r1
    40c4:	c0 5f       	subi	r28, 0xF0	; 240
    40c6:	d0 40       	sbci	r29, 0x00	; 0
    40c8:	c1 51       	subi	r28, 0x11	; 17
    40ca:	df 4f       	sbci	r29, 0xFF	; 255
    40cc:	28 81       	ld	r18, Y
    40ce:	39 81       	ldd	r19, Y+1	; 0x01
    40d0:	cf 5e       	subi	r28, 0xEF	; 239
    40d2:	d0 40       	sbci	r29, 0x00	; 0
    40d4:	22 0f       	add	r18, r18
    40d6:	33 1f       	adc	r19, r19
    40d8:	22 0f       	add	r18, r18
    40da:	33 1f       	adc	r19, r19
    40dc:	22 0f       	add	r18, r18
    40de:	33 1f       	adc	r19, r19
    40e0:	82 2b       	or	r24, r18
    40e2:	93 2b       	or	r25, r19
    40e4:	27 e1       	ldi	r18, 0x17	; 23
    40e6:	28 9f       	mul	r18, r24
    40e8:	f0 01       	movw	r30, r0
    40ea:	29 9f       	mul	r18, r25
    40ec:	f0 0d       	add	r31, r0
    40ee:	11 24       	eor	r1, r1
    40f0:	e0 54       	subi	r30, 0x40	; 64
    40f2:	ff 4d       	sbci	r31, 0xDF	; 223
    40f4:	81 89       	ldd	r24, Z+17	; 0x11
    40f6:	90 e0       	ldi	r25, 0x00	; 0
    40f8:	80 93 b1 20 	sts	0x20B1, r24
    40fc:	90 93 b2 20 	sts	0x20B2, r25
    4100:	a8 e0       	ldi	r26, 0x08	; 8
    4102:	b6 e0       	ldi	r27, 0x06	; 6
    4104:	3c 91       	ld	r19, X
    4106:	2c 91       	ld	r18, X
    4108:	8c 91       	ld	r24, X
    410a:	4c 91       	ld	r20, X
    410c:	88 1f       	adc	r24, r24
    410e:	88 27       	eor	r24, r24
    4110:	88 1f       	adc	r24, r24
    4112:	90 e0       	ldi	r25, 0x00	; 0
    4114:	88 0f       	add	r24, r24
    4116:	99 1f       	adc	r25, r25
    4118:	88 0f       	add	r24, r24
    411a:	99 1f       	adc	r25, r25
    411c:	36 fb       	bst	r19, 6
    411e:	33 27       	eor	r19, r19
    4120:	30 f9       	bld	r19, 0
    4122:	ea 96       	adiw	r28, 0x3a	; 58
    4124:	3f af       	std	Y+63, r19	; 0x3f
    4126:	ea 97       	sbiw	r28, 0x3a	; 58
    4128:	eb 96       	adiw	r28, 0x3b	; 59
    412a:	1f ae       	std	Y+63, r1	; 0x3f
    412c:	eb 97       	sbiw	r28, 0x3b	; 59
    412e:	eb 96       	adiw	r28, 0x3b	; 59
    4130:	ee ad       	ldd	r30, Y+62	; 0x3e
    4132:	ff ad       	ldd	r31, Y+63	; 0x3f
    4134:	eb 97       	sbiw	r28, 0x3b	; 59
    4136:	8e 2b       	or	r24, r30
    4138:	9f 2b       	or	r25, r31
    413a:	22 95       	swap	r18
    413c:	21 70       	andi	r18, 0x01	; 1
    413e:	ec 96       	adiw	r28, 0x3c	; 60
    4140:	2f af       	std	Y+63, r18	; 0x3f
    4142:	ec 97       	sbiw	r28, 0x3c	; 60
    4144:	ed 96       	adiw	r28, 0x3d	; 61
    4146:	1f ae       	std	Y+63, r1	; 0x3f
    4148:	ed 97       	sbiw	r28, 0x3d	; 61
    414a:	ed 96       	adiw	r28, 0x3d	; 61
    414c:	2e ad       	ldd	r18, Y+62	; 0x3e
    414e:	3f ad       	ldd	r19, Y+63	; 0x3f
    4150:	ed 97       	sbiw	r28, 0x3d	; 61
    4152:	22 0f       	add	r18, r18
    4154:	33 1f       	adc	r19, r19
    4156:	82 2b       	or	r24, r18
    4158:	93 2b       	or	r25, r19
    415a:	45 fb       	bst	r20, 5
    415c:	44 27       	eor	r20, r20
    415e:	40 f9       	bld	r20, 0
    4160:	ee 96       	adiw	r28, 0x3e	; 62
    4162:	4f af       	std	Y+63, r20	; 0x3f
    4164:	ee 97       	sbiw	r28, 0x3e	; 62
    4166:	ef 96       	adiw	r28, 0x3f	; 63
    4168:	1f ae       	std	Y+63, r1	; 0x3f
    416a:	ef 97       	sbiw	r28, 0x3f	; 63
    416c:	ef 96       	adiw	r28, 0x3f	; 63
    416e:	2e ad       	ldd	r18, Y+62	; 0x3e
    4170:	3f ad       	ldd	r19, Y+63	; 0x3f
    4172:	ef 97       	sbiw	r28, 0x3f	; 63
    4174:	22 0f       	add	r18, r18
    4176:	33 1f       	adc	r19, r19
    4178:	22 0f       	add	r18, r18
    417a:	33 1f       	adc	r19, r19
    417c:	22 0f       	add	r18, r18
    417e:	33 1f       	adc	r19, r19
    4180:	82 2b       	or	r24, r18
    4182:	93 2b       	or	r25, r19
    4184:	27 e1       	ldi	r18, 0x17	; 23
    4186:	28 9f       	mul	r18, r24
    4188:	f0 01       	movw	r30, r0
    418a:	29 9f       	mul	r18, r25
    418c:	f0 0d       	add	r31, r0
    418e:	11 24       	eor	r1, r1
    4190:	e0 54       	subi	r30, 0x40	; 64
    4192:	ff 4d       	sbci	r31, 0xDF	; 223
    4194:	82 89       	ldd	r24, Z+18	; 0x12
    4196:	88 23       	and	r24, r24
    4198:	19 f0       	breq	.+6      	; 0x41a0 <__stack+0x1a1>
    419a:	e0 e6       	ldi	r30, 0x60	; 96
    419c:	f6 e0       	ldi	r31, 0x06	; 6
    419e:	80 85       	ldd	r24, Z+8	; 0x08
    41a0:	e0 e0       	ldi	r30, 0x00	; 0
    41a2:	f6 e0       	ldi	r31, 0x06	; 6
    41a4:	80 85       	ldd	r24, Z+8	; 0x08
    41a6:	82 ff       	sbrs	r24, 2
    41a8:	18 c0       	rjmp	.+48     	; 0x41da <__stack+0x1db>
    41aa:	e0 e2       	ldi	r30, 0x20	; 32
    41ac:	f6 e0       	ldi	r31, 0x06	; 6
    41ae:	84 81       	ldd	r24, Z+4	; 0x04
    41b0:	80 64       	ori	r24, 0x40	; 64
    41b2:	84 83       	std	Z+4, r24	; 0x04
    41b4:	84 e6       	ldi	r24, 0x64	; 100
    41b6:	90 e0       	ldi	r25, 0x00	; 0
    41b8:	80 93 2a 08 	sts	0x082A, r24
    41bc:	90 93 2b 08 	sts	0x082B, r25
    41c0:	ff ef       	ldi	r31, 0xFF	; 255
    41c2:	23 ec       	ldi	r18, 0xC3	; 195
    41c4:	39 e0       	ldi	r19, 0x09	; 9
    41c6:	f1 50       	subi	r31, 0x01	; 1
    41c8:	20 40       	sbci	r18, 0x00	; 0
    41ca:	30 40       	sbci	r19, 0x00	; 0
    41cc:	e1 f7       	brne	.-8      	; 0x41c6 <__stack+0x1c7>
    41ce:	00 c0       	rjmp	.+0      	; 0x41d0 <__stack+0x1d1>
    41d0:	00 00       	nop
    41d2:	10 92 2a 08 	sts	0x082A, r1
    41d6:	10 92 2b 08 	sts	0x082B, r1
    41da:	a8 e0       	ldi	r26, 0x08	; 8
    41dc:	b6 e0       	ldi	r27, 0x06	; 6
    41de:	7c 91       	ld	r23, X
    41e0:	6c 91       	ld	r22, X
    41e2:	fc 90       	ld	r15, X
    41e4:	5c 91       	ld	r21, X
    41e6:	9c 91       	ld	r25, X
    41e8:	8c 91       	ld	r24, X
    41ea:	2c 91       	ld	r18, X
    41ec:	4c 91       	ld	r20, X
    41ee:	22 1f       	adc	r18, r18
    41f0:	22 27       	eor	r18, r18
    41f2:	22 1f       	adc	r18, r18
    41f4:	30 e0       	ldi	r19, 0x00	; 0
    41f6:	22 0f       	add	r18, r18
    41f8:	33 1f       	adc	r19, r19
    41fa:	22 0f       	add	r18, r18
    41fc:	33 1f       	adc	r19, r19
    41fe:	96 fb       	bst	r25, 6
    4200:	99 27       	eor	r25, r25
    4202:	90 f9       	bld	r25, 0
    4204:	c1 58       	subi	r28, 0x81	; 129
    4206:	df 4f       	sbci	r29, 0xFF	; 255
    4208:	98 83       	st	Y, r25
    420a:	cf 57       	subi	r28, 0x7F	; 127
    420c:	d0 40       	sbci	r29, 0x00	; 0
    420e:	c0 58       	subi	r28, 0x80	; 128
    4210:	df 4f       	sbci	r29, 0xFF	; 255
    4212:	18 82       	st	Y, r1
    4214:	c0 58       	subi	r28, 0x80	; 128
    4216:	d0 40       	sbci	r29, 0x00	; 0
    4218:	c1 58       	subi	r28, 0x81	; 129
    421a:	df 4f       	sbci	r29, 0xFF	; 255
    421c:	e8 81       	ld	r30, Y
    421e:	f9 81       	ldd	r31, Y+1	; 0x01
    4220:	cf 57       	subi	r28, 0x7F	; 127
    4222:	d0 40       	sbci	r29, 0x00	; 0
    4224:	2e 2b       	or	r18, r30
    4226:	3f 2b       	or	r19, r31
    4228:	82 95       	swap	r24
    422a:	81 70       	andi	r24, 0x01	; 1
    422c:	cf 57       	subi	r28, 0x7F	; 127
    422e:	df 4f       	sbci	r29, 0xFF	; 255
    4230:	88 83       	st	Y, r24
    4232:	c1 58       	subi	r28, 0x81	; 129
    4234:	d0 40       	sbci	r29, 0x00	; 0
    4236:	ce 57       	subi	r28, 0x7E	; 126
    4238:	df 4f       	sbci	r29, 0xFF	; 255
    423a:	18 82       	st	Y, r1
    423c:	c2 58       	subi	r28, 0x82	; 130
    423e:	d0 40       	sbci	r29, 0x00	; 0
    4240:	cf 57       	subi	r28, 0x7F	; 127
    4242:	df 4f       	sbci	r29, 0xFF	; 255
    4244:	88 81       	ld	r24, Y
    4246:	99 81       	ldd	r25, Y+1	; 0x01
    4248:	c1 58       	subi	r28, 0x81	; 129
    424a:	d0 40       	sbci	r29, 0x00	; 0
    424c:	88 0f       	add	r24, r24
    424e:	99 1f       	adc	r25, r25
    4250:	28 2b       	or	r18, r24
    4252:	39 2b       	or	r19, r25
    4254:	45 fb       	bst	r20, 5
    4256:	44 27       	eor	r20, r20
    4258:	40 f9       	bld	r20, 0
    425a:	cd 57       	subi	r28, 0x7D	; 125
    425c:	df 4f       	sbci	r29, 0xFF	; 255
    425e:	48 83       	st	Y, r20
    4260:	c3 58       	subi	r28, 0x83	; 131
    4262:	d0 40       	sbci	r29, 0x00	; 0
    4264:	cc 57       	subi	r28, 0x7C	; 124
    4266:	df 4f       	sbci	r29, 0xFF	; 255
    4268:	18 82       	st	Y, r1
    426a:	c4 58       	subi	r28, 0x84	; 132
    426c:	d0 40       	sbci	r29, 0x00	; 0
    426e:	cd 57       	subi	r28, 0x7D	; 125
    4270:	df 4f       	sbci	r29, 0xFF	; 255
    4272:	88 81       	ld	r24, Y
    4274:	99 81       	ldd	r25, Y+1	; 0x01
    4276:	c3 58       	subi	r28, 0x83	; 131
    4278:	d0 40       	sbci	r29, 0x00	; 0
    427a:	88 0f       	add	r24, r24
    427c:	99 1f       	adc	r25, r25
    427e:	88 0f       	add	r24, r24
    4280:	99 1f       	adc	r25, r25
    4282:	88 0f       	add	r24, r24
    4284:	99 1f       	adc	r25, r25
    4286:	28 2b       	or	r18, r24
    4288:	39 2b       	or	r19, r25
    428a:	47 e1       	ldi	r20, 0x17	; 23
    428c:	42 9f       	mul	r20, r18
    428e:	c0 01       	movw	r24, r0
    4290:	43 9f       	mul	r20, r19
    4292:	90 0d       	add	r25, r0
    4294:	11 24       	eor	r1, r1
    4296:	dc 01       	movw	r26, r24
    4298:	a0 54       	subi	r26, 0x40	; 64
    429a:	bf 4d       	sbci	r27, 0xDF	; 223
    429c:	11 96       	adiw	r26, 0x01	; 1
    429e:	fc 91       	ld	r31, X
    42a0:	ca 57       	subi	r28, 0x7A	; 122
    42a2:	df 4f       	sbci	r29, 0xFF	; 255
    42a4:	f8 83       	st	Y, r31
    42a6:	c6 58       	subi	r28, 0x86	; 134
    42a8:	d0 40       	sbci	r29, 0x00	; 0
    42aa:	cb 57       	subi	r28, 0x7B	; 123
    42ac:	df 4f       	sbci	r29, 0xFF	; 255
    42ae:	18 82       	st	Y, r1
    42b0:	c5 58       	subi	r28, 0x85	; 133
    42b2:	d0 40       	sbci	r29, 0x00	; 0
    42b4:	ef 2d       	mov	r30, r15
    42b6:	ee 1f       	adc	r30, r30
    42b8:	ee 27       	eor	r30, r30
    42ba:	ee 1f       	adc	r30, r30
    42bc:	8e 2f       	mov	r24, r30
    42be:	90 e0       	ldi	r25, 0x00	; 0
    42c0:	88 0f       	add	r24, r24
    42c2:	99 1f       	adc	r25, r25
    42c4:	88 0f       	add	r24, r24
    42c6:	99 1f       	adc	r25, r25
    42c8:	76 fb       	bst	r23, 6
    42ca:	77 27       	eor	r23, r23
    42cc:	70 f9       	bld	r23, 0
    42ce:	c9 57       	subi	r28, 0x79	; 121
    42d0:	df 4f       	sbci	r29, 0xFF	; 255
    42d2:	78 83       	st	Y, r23
    42d4:	c7 58       	subi	r28, 0x87	; 135
    42d6:	d0 40       	sbci	r29, 0x00	; 0
    42d8:	c8 57       	subi	r28, 0x78	; 120
    42da:	df 4f       	sbci	r29, 0xFF	; 255
    42dc:	18 82       	st	Y, r1
    42de:	c8 58       	subi	r28, 0x88	; 136
    42e0:	d0 40       	sbci	r29, 0x00	; 0
    42e2:	c9 57       	subi	r28, 0x79	; 121
    42e4:	df 4f       	sbci	r29, 0xFF	; 255
    42e6:	28 81       	ld	r18, Y
    42e8:	39 81       	ldd	r19, Y+1	; 0x01
    42ea:	c7 58       	subi	r28, 0x87	; 135
    42ec:	d0 40       	sbci	r29, 0x00	; 0
    42ee:	82 2b       	or	r24, r18
    42f0:	93 2b       	or	r25, r19
    42f2:	62 95       	swap	r22
    42f4:	61 70       	andi	r22, 0x01	; 1
    42f6:	c7 57       	subi	r28, 0x77	; 119
    42f8:	df 4f       	sbci	r29, 0xFF	; 255
    42fa:	68 83       	st	Y, r22
    42fc:	c9 58       	subi	r28, 0x89	; 137
    42fe:	d0 40       	sbci	r29, 0x00	; 0
    4300:	c6 57       	subi	r28, 0x76	; 118
    4302:	df 4f       	sbci	r29, 0xFF	; 255
    4304:	18 82       	st	Y, r1
    4306:	ca 58       	subi	r28, 0x8A	; 138
    4308:	d0 40       	sbci	r29, 0x00	; 0
    430a:	c7 57       	subi	r28, 0x77	; 119
    430c:	df 4f       	sbci	r29, 0xFF	; 255
    430e:	28 81       	ld	r18, Y
    4310:	39 81       	ldd	r19, Y+1	; 0x01
    4312:	c9 58       	subi	r28, 0x89	; 137
    4314:	d0 40       	sbci	r29, 0x00	; 0
    4316:	22 0f       	add	r18, r18
    4318:	33 1f       	adc	r19, r19
    431a:	82 2b       	or	r24, r18
    431c:	93 2b       	or	r25, r19
    431e:	55 fb       	bst	r21, 5
    4320:	55 27       	eor	r21, r21
    4322:	50 f9       	bld	r21, 0
    4324:	c5 57       	subi	r28, 0x75	; 117
    4326:	df 4f       	sbci	r29, 0xFF	; 255
    4328:	58 83       	st	Y, r21
    432a:	cb 58       	subi	r28, 0x8B	; 139
    432c:	d0 40       	sbci	r29, 0x00	; 0
    432e:	c4 57       	subi	r28, 0x74	; 116
    4330:	df 4f       	sbci	r29, 0xFF	; 255
    4332:	18 82       	st	Y, r1
    4334:	cc 58       	subi	r28, 0x8C	; 140
    4336:	d0 40       	sbci	r29, 0x00	; 0
    4338:	c5 57       	subi	r28, 0x75	; 117
    433a:	df 4f       	sbci	r29, 0xFF	; 255
    433c:	28 81       	ld	r18, Y
    433e:	39 81       	ldd	r19, Y+1	; 0x01
    4340:	cb 58       	subi	r28, 0x8B	; 139
    4342:	d0 40       	sbci	r29, 0x00	; 0
    4344:	22 0f       	add	r18, r18
    4346:	33 1f       	adc	r19, r19
    4348:	22 0f       	add	r18, r18
    434a:	33 1f       	adc	r19, r19
    434c:	22 0f       	add	r18, r18
    434e:	33 1f       	adc	r19, r19
    4350:	82 2b       	or	r24, r18
    4352:	93 2b       	or	r25, r19
    4354:	48 9f       	mul	r20, r24
    4356:	f0 01       	movw	r30, r0
    4358:	49 9f       	mul	r20, r25
    435a:	f0 0d       	add	r31, r0
    435c:	11 24       	eor	r1, r1
    435e:	e0 54       	subi	r30, 0x40	; 64
    4360:	ff 4d       	sbci	r31, 0xDF	; 223
    4362:	83 81       	ldd	r24, Z+3	; 0x03
    4364:	94 81       	ldd	r25, Z+4	; 0x04
    4366:	cb 57       	subi	r28, 0x7B	; 123
    4368:	df 4f       	sbci	r29, 0xFF	; 255
    436a:	68 81       	ld	r22, Y
    436c:	79 81       	ldd	r23, Y+1	; 0x01
    436e:	c5 58       	subi	r28, 0x85	; 133
    4370:	d0 40       	sbci	r29, 0x00	; 0
    4372:	86 2b       	or	r24, r22
    4374:	97 2b       	or	r25, r23
    4376:	58 e2       	ldi	r21, 0x28	; 40
    4378:	85 9f       	mul	r24, r21
    437a:	80 2d       	mov	r24, r0
    437c:	11 24       	eor	r1, r1
    437e:	80 93 9d 23 	sts	0x239D, r24
    4382:	a8 e0       	ldi	r26, 0x08	; 8
    4384:	b6 e0       	ldi	r27, 0x06	; 6
    4386:	fc 90       	ld	r15, X
    4388:	7c 91       	ld	r23, X
    438a:	ec 90       	ld	r14, X
    438c:	6c 91       	ld	r22, X
    438e:	3c 91       	ld	r19, X
    4390:	2c 91       	ld	r18, X
    4392:	8c 91       	ld	r24, X
    4394:	ac 91       	ld	r26, X
    4396:	88 1f       	adc	r24, r24
    4398:	88 27       	eor	r24, r24
    439a:	88 1f       	adc	r24, r24
    439c:	90 e0       	ldi	r25, 0x00	; 0
    439e:	88 0f       	add	r24, r24
    43a0:	99 1f       	adc	r25, r25
    43a2:	88 0f       	add	r24, r24
    43a4:	99 1f       	adc	r25, r25
    43a6:	36 fb       	bst	r19, 6
    43a8:	33 27       	eor	r19, r19
    43aa:	30 f9       	bld	r19, 0
    43ac:	c3 57       	subi	r28, 0x73	; 115
    43ae:	df 4f       	sbci	r29, 0xFF	; 255
    43b0:	38 83       	st	Y, r19
    43b2:	cd 58       	subi	r28, 0x8D	; 141
    43b4:	d0 40       	sbci	r29, 0x00	; 0
    43b6:	c2 57       	subi	r28, 0x72	; 114
    43b8:	df 4f       	sbci	r29, 0xFF	; 255
    43ba:	18 82       	st	Y, r1
    43bc:	ce 58       	subi	r28, 0x8E	; 142
    43be:	d0 40       	sbci	r29, 0x00	; 0
    43c0:	c3 57       	subi	r28, 0x73	; 115
    43c2:	df 4f       	sbci	r29, 0xFF	; 255
    43c4:	e8 81       	ld	r30, Y
    43c6:	f9 81       	ldd	r31, Y+1	; 0x01
    43c8:	cd 58       	subi	r28, 0x8D	; 141
    43ca:	d0 40       	sbci	r29, 0x00	; 0
    43cc:	8e 2b       	or	r24, r30
    43ce:	9f 2b       	or	r25, r31
    43d0:	22 95       	swap	r18
    43d2:	21 70       	andi	r18, 0x01	; 1
    43d4:	c1 57       	subi	r28, 0x71	; 113
    43d6:	df 4f       	sbci	r29, 0xFF	; 255
    43d8:	28 83       	st	Y, r18
    43da:	cf 58       	subi	r28, 0x8F	; 143
    43dc:	d0 40       	sbci	r29, 0x00	; 0
    43de:	c0 57       	subi	r28, 0x70	; 112
    43e0:	df 4f       	sbci	r29, 0xFF	; 255
    43e2:	18 82       	st	Y, r1
    43e4:	c0 59       	subi	r28, 0x90	; 144
    43e6:	d0 40       	sbci	r29, 0x00	; 0
    43e8:	c1 57       	subi	r28, 0x71	; 113
    43ea:	df 4f       	sbci	r29, 0xFF	; 255
    43ec:	28 81       	ld	r18, Y
    43ee:	39 81       	ldd	r19, Y+1	; 0x01
    43f0:	cf 58       	subi	r28, 0x8F	; 143
    43f2:	d0 40       	sbci	r29, 0x00	; 0
    43f4:	22 0f       	add	r18, r18
    43f6:	33 1f       	adc	r19, r19
    43f8:	82 2b       	or	r24, r18
    43fa:	93 2b       	or	r25, r19
    43fc:	a5 fb       	bst	r26, 5
    43fe:	aa 27       	eor	r26, r26
    4400:	a0 f9       	bld	r26, 0
    4402:	cf 56       	subi	r28, 0x6F	; 111
    4404:	df 4f       	sbci	r29, 0xFF	; 255
    4406:	a8 83       	st	Y, r26
    4408:	c1 59       	subi	r28, 0x91	; 145
    440a:	d0 40       	sbci	r29, 0x00	; 0
    440c:	ce 56       	subi	r28, 0x6E	; 110
    440e:	df 4f       	sbci	r29, 0xFF	; 255
    4410:	18 82       	st	Y, r1
    4412:	c2 59       	subi	r28, 0x92	; 146
    4414:	d0 40       	sbci	r29, 0x00	; 0
    4416:	cf 56       	subi	r28, 0x6F	; 111
    4418:	df 4f       	sbci	r29, 0xFF	; 255
    441a:	28 81       	ld	r18, Y
    441c:	39 81       	ldd	r19, Y+1	; 0x01
    441e:	c1 59       	subi	r28, 0x91	; 145
    4420:	d0 40       	sbci	r29, 0x00	; 0
    4422:	22 0f       	add	r18, r18
    4424:	33 1f       	adc	r19, r19
    4426:	22 0f       	add	r18, r18
    4428:	33 1f       	adc	r19, r19
    442a:	22 0f       	add	r18, r18
    442c:	33 1f       	adc	r19, r19
    442e:	82 2b       	or	r24, r18
    4430:	93 2b       	or	r25, r19
    4432:	48 9f       	mul	r20, r24
    4434:	f0 01       	movw	r30, r0
    4436:	49 9f       	mul	r20, r25
    4438:	f0 0d       	add	r31, r0
    443a:	11 24       	eor	r1, r1
    443c:	e0 54       	subi	r30, 0x40	; 64
    443e:	ff 4d       	sbci	r31, 0xDF	; 223
    4440:	21 81       	ldd	r18, Z+1	; 0x01
    4442:	cc 56       	subi	r28, 0x6C	; 108
    4444:	df 4f       	sbci	r29, 0xFF	; 255
    4446:	28 83       	st	Y, r18
    4448:	c4 59       	subi	r28, 0x94	; 148
    444a:	d0 40       	sbci	r29, 0x00	; 0
    444c:	cd 56       	subi	r28, 0x6D	; 109
    444e:	df 4f       	sbci	r29, 0xFF	; 255
    4450:	18 82       	st	Y, r1
    4452:	c3 59       	subi	r28, 0x93	; 147
    4454:	d0 40       	sbci	r29, 0x00	; 0
    4456:	be 2d       	mov	r27, r14
    4458:	bb 1f       	adc	r27, r27
    445a:	bb 27       	eor	r27, r27
    445c:	bb 1f       	adc	r27, r27
    445e:	8b 2f       	mov	r24, r27
    4460:	90 e0       	ldi	r25, 0x00	; 0
    4462:	88 0f       	add	r24, r24
    4464:	99 1f       	adc	r25, r25
    4466:	88 0f       	add	r24, r24
    4468:	99 1f       	adc	r25, r25
    446a:	f6 fa       	bst	r15, 6
    446c:	ff 24       	eor	r15, r15
    446e:	f0 f8       	bld	r15, 0
    4470:	cb 56       	subi	r28, 0x6B	; 107
    4472:	df 4f       	sbci	r29, 0xFF	; 255
    4474:	f8 82       	st	Y, r15
    4476:	c5 59       	subi	r28, 0x95	; 149
    4478:	d0 40       	sbci	r29, 0x00	; 0
    447a:	ca 56       	subi	r28, 0x6A	; 106
    447c:	df 4f       	sbci	r29, 0xFF	; 255
    447e:	18 82       	st	Y, r1
    4480:	c6 59       	subi	r28, 0x96	; 150
    4482:	d0 40       	sbci	r29, 0x00	; 0
    4484:	cb 56       	subi	r28, 0x6B	; 107
    4486:	df 4f       	sbci	r29, 0xFF	; 255
    4488:	a8 81       	ld	r26, Y
    448a:	b9 81       	ldd	r27, Y+1	; 0x01
    448c:	c5 59       	subi	r28, 0x95	; 149
    448e:	d0 40       	sbci	r29, 0x00	; 0
    4490:	8a 2b       	or	r24, r26
    4492:	9b 2b       	or	r25, r27
    4494:	72 95       	swap	r23
    4496:	71 70       	andi	r23, 0x01	; 1
    4498:	c9 56       	subi	r28, 0x69	; 105
    449a:	df 4f       	sbci	r29, 0xFF	; 255
    449c:	78 83       	st	Y, r23
    449e:	c7 59       	subi	r28, 0x97	; 151
    44a0:	d0 40       	sbci	r29, 0x00	; 0
    44a2:	c8 56       	subi	r28, 0x68	; 104
    44a4:	df 4f       	sbci	r29, 0xFF	; 255
    44a6:	18 82       	st	Y, r1
    44a8:	c8 59       	subi	r28, 0x98	; 152
    44aa:	d0 40       	sbci	r29, 0x00	; 0
    44ac:	c9 56       	subi	r28, 0x69	; 105
    44ae:	df 4f       	sbci	r29, 0xFF	; 255
    44b0:	28 81       	ld	r18, Y
    44b2:	39 81       	ldd	r19, Y+1	; 0x01
    44b4:	c7 59       	subi	r28, 0x97	; 151
    44b6:	d0 40       	sbci	r29, 0x00	; 0
    44b8:	22 0f       	add	r18, r18
    44ba:	33 1f       	adc	r19, r19
    44bc:	82 2b       	or	r24, r18
    44be:	93 2b       	or	r25, r19
    44c0:	65 fb       	bst	r22, 5
    44c2:	66 27       	eor	r22, r22
    44c4:	60 f9       	bld	r22, 0
    44c6:	c7 56       	subi	r28, 0x67	; 103
    44c8:	df 4f       	sbci	r29, 0xFF	; 255
    44ca:	68 83       	st	Y, r22
    44cc:	c9 59       	subi	r28, 0x99	; 153
    44ce:	d0 40       	sbci	r29, 0x00	; 0
    44d0:	c6 56       	subi	r28, 0x66	; 102
    44d2:	df 4f       	sbci	r29, 0xFF	; 255
    44d4:	18 82       	st	Y, r1
    44d6:	ca 59       	subi	r28, 0x9A	; 154
    44d8:	d0 40       	sbci	r29, 0x00	; 0
    44da:	c7 56       	subi	r28, 0x67	; 103
    44dc:	df 4f       	sbci	r29, 0xFF	; 255
    44de:	28 81       	ld	r18, Y
    44e0:	39 81       	ldd	r19, Y+1	; 0x01
    44e2:	c9 59       	subi	r28, 0x99	; 153
    44e4:	d0 40       	sbci	r29, 0x00	; 0
    44e6:	22 0f       	add	r18, r18
    44e8:	33 1f       	adc	r19, r19
    44ea:	22 0f       	add	r18, r18
    44ec:	33 1f       	adc	r19, r19
    44ee:	22 0f       	add	r18, r18
    44f0:	33 1f       	adc	r19, r19
    44f2:	82 2b       	or	r24, r18
    44f4:	93 2b       	or	r25, r19
    44f6:	48 9f       	mul	r20, r24
    44f8:	f0 01       	movw	r30, r0
    44fa:	49 9f       	mul	r20, r25
    44fc:	f0 0d       	add	r31, r0
    44fe:	11 24       	eor	r1, r1
    4500:	e0 54       	subi	r30, 0x40	; 64
    4502:	ff 4d       	sbci	r31, 0xDF	; 223
    4504:	23 81       	ldd	r18, Z+3	; 0x03
    4506:	34 81       	ldd	r19, Z+4	; 0x04
    4508:	cd 56       	subi	r28, 0x6D	; 109
    450a:	df 4f       	sbci	r29, 0xFF	; 255
    450c:	e8 81       	ld	r30, Y
    450e:	f9 81       	ldd	r31, Y+1	; 0x01
    4510:	c3 59       	subi	r28, 0x93	; 147
    4512:	d0 40       	sbci	r29, 0x00	; 0
    4514:	2e 2b       	or	r18, r30
    4516:	3f 2b       	or	r19, r31
    4518:	52 9f       	mul	r21, r18
    451a:	c0 01       	movw	r24, r0
    451c:	53 9f       	mul	r21, r19
    451e:	90 0d       	add	r25, r0
    4520:	11 24       	eor	r1, r1
    4522:	90 93 9e 23 	sts	0x239E, r25
    4526:	a8 e0       	ldi	r26, 0x08	; 8
    4528:	b6 e0       	ldi	r27, 0x06	; 6
    452a:	fc 90       	ld	r15, X
    452c:	7c 91       	ld	r23, X
    452e:	ec 90       	ld	r14, X
    4530:	6c 91       	ld	r22, X
    4532:	3c 91       	ld	r19, X
    4534:	2c 91       	ld	r18, X
    4536:	8c 91       	ld	r24, X
    4538:	ac 91       	ld	r26, X
    453a:	88 1f       	adc	r24, r24
    453c:	88 27       	eor	r24, r24
    453e:	88 1f       	adc	r24, r24
    4540:	90 e0       	ldi	r25, 0x00	; 0
    4542:	88 0f       	add	r24, r24
    4544:	99 1f       	adc	r25, r25
    4546:	88 0f       	add	r24, r24
    4548:	99 1f       	adc	r25, r25
    454a:	36 fb       	bst	r19, 6
    454c:	33 27       	eor	r19, r19
    454e:	30 f9       	bld	r19, 0
    4550:	c5 56       	subi	r28, 0x65	; 101
    4552:	df 4f       	sbci	r29, 0xFF	; 255
    4554:	38 83       	st	Y, r19
    4556:	cb 59       	subi	r28, 0x9B	; 155
    4558:	d0 40       	sbci	r29, 0x00	; 0
    455a:	c4 56       	subi	r28, 0x64	; 100
    455c:	df 4f       	sbci	r29, 0xFF	; 255
    455e:	18 82       	st	Y, r1
    4560:	cc 59       	subi	r28, 0x9C	; 156
    4562:	d0 40       	sbci	r29, 0x00	; 0
    4564:	c5 56       	subi	r28, 0x65	; 101
    4566:	df 4f       	sbci	r29, 0xFF	; 255
    4568:	e8 81       	ld	r30, Y
    456a:	f9 81       	ldd	r31, Y+1	; 0x01
    456c:	cb 59       	subi	r28, 0x9B	; 155
    456e:	d0 40       	sbci	r29, 0x00	; 0
    4570:	8e 2b       	or	r24, r30
    4572:	9f 2b       	or	r25, r31
    4574:	22 95       	swap	r18
    4576:	21 70       	andi	r18, 0x01	; 1
    4578:	c3 56       	subi	r28, 0x63	; 99
    457a:	df 4f       	sbci	r29, 0xFF	; 255
    457c:	28 83       	st	Y, r18
    457e:	cd 59       	subi	r28, 0x9D	; 157
    4580:	d0 40       	sbci	r29, 0x00	; 0
    4582:	c2 56       	subi	r28, 0x62	; 98
    4584:	df 4f       	sbci	r29, 0xFF	; 255
    4586:	18 82       	st	Y, r1
    4588:	ce 59       	subi	r28, 0x9E	; 158
    458a:	d0 40       	sbci	r29, 0x00	; 0
    458c:	c3 56       	subi	r28, 0x63	; 99
    458e:	df 4f       	sbci	r29, 0xFF	; 255
    4590:	28 81       	ld	r18, Y
    4592:	39 81       	ldd	r19, Y+1	; 0x01
    4594:	cd 59       	subi	r28, 0x9D	; 157
    4596:	d0 40       	sbci	r29, 0x00	; 0
    4598:	22 0f       	add	r18, r18
    459a:	33 1f       	adc	r19, r19
    459c:	82 2b       	or	r24, r18
    459e:	93 2b       	or	r25, r19
    45a0:	a5 fb       	bst	r26, 5
    45a2:	aa 27       	eor	r26, r26
    45a4:	a0 f9       	bld	r26, 0
    45a6:	c1 56       	subi	r28, 0x61	; 97
    45a8:	df 4f       	sbci	r29, 0xFF	; 255
    45aa:	a8 83       	st	Y, r26
    45ac:	cf 59       	subi	r28, 0x9F	; 159
    45ae:	d0 40       	sbci	r29, 0x00	; 0
    45b0:	c0 56       	subi	r28, 0x60	; 96
    45b2:	df 4f       	sbci	r29, 0xFF	; 255
    45b4:	18 82       	st	Y, r1
    45b6:	c0 5a       	subi	r28, 0xA0	; 160
    45b8:	d0 40       	sbci	r29, 0x00	; 0
    45ba:	c1 56       	subi	r28, 0x61	; 97
    45bc:	df 4f       	sbci	r29, 0xFF	; 255
    45be:	28 81       	ld	r18, Y
    45c0:	39 81       	ldd	r19, Y+1	; 0x01
    45c2:	cf 59       	subi	r28, 0x9F	; 159
    45c4:	d0 40       	sbci	r29, 0x00	; 0
    45c6:	22 0f       	add	r18, r18
    45c8:	33 1f       	adc	r19, r19
    45ca:	22 0f       	add	r18, r18
    45cc:	33 1f       	adc	r19, r19
    45ce:	22 0f       	add	r18, r18
    45d0:	33 1f       	adc	r19, r19
    45d2:	82 2b       	or	r24, r18
    45d4:	93 2b       	or	r25, r19
    45d6:	48 9f       	mul	r20, r24
    45d8:	f0 01       	movw	r30, r0
    45da:	49 9f       	mul	r20, r25
    45dc:	f0 0d       	add	r31, r0
    45de:	11 24       	eor	r1, r1
    45e0:	e0 54       	subi	r30, 0x40	; 64
    45e2:	ff 4d       	sbci	r31, 0xDF	; 223
    45e4:	25 81       	ldd	r18, Z+5	; 0x05
    45e6:	ce 55       	subi	r28, 0x5E	; 94
    45e8:	df 4f       	sbci	r29, 0xFF	; 255
    45ea:	28 83       	st	Y, r18
    45ec:	c2 5a       	subi	r28, 0xA2	; 162
    45ee:	d0 40       	sbci	r29, 0x00	; 0
    45f0:	cf 55       	subi	r28, 0x5F	; 95
    45f2:	df 4f       	sbci	r29, 0xFF	; 255
    45f4:	18 82       	st	Y, r1
    45f6:	c1 5a       	subi	r28, 0xA1	; 161
    45f8:	d0 40       	sbci	r29, 0x00	; 0
    45fa:	be 2d       	mov	r27, r14
    45fc:	bb 1f       	adc	r27, r27
    45fe:	bb 27       	eor	r27, r27
    4600:	bb 1f       	adc	r27, r27
    4602:	8b 2f       	mov	r24, r27
    4604:	90 e0       	ldi	r25, 0x00	; 0
    4606:	88 0f       	add	r24, r24
    4608:	99 1f       	adc	r25, r25
    460a:	88 0f       	add	r24, r24
    460c:	99 1f       	adc	r25, r25
    460e:	f6 fa       	bst	r15, 6
    4610:	ff 24       	eor	r15, r15
    4612:	f0 f8       	bld	r15, 0
    4614:	cd 55       	subi	r28, 0x5D	; 93
    4616:	df 4f       	sbci	r29, 0xFF	; 255
    4618:	f8 82       	st	Y, r15
    461a:	c3 5a       	subi	r28, 0xA3	; 163
    461c:	d0 40       	sbci	r29, 0x00	; 0
    461e:	cc 55       	subi	r28, 0x5C	; 92
    4620:	df 4f       	sbci	r29, 0xFF	; 255
    4622:	18 82       	st	Y, r1
    4624:	c4 5a       	subi	r28, 0xA4	; 164
    4626:	d0 40       	sbci	r29, 0x00	; 0
    4628:	cd 55       	subi	r28, 0x5D	; 93
    462a:	df 4f       	sbci	r29, 0xFF	; 255
    462c:	a8 81       	ld	r26, Y
    462e:	b9 81       	ldd	r27, Y+1	; 0x01
    4630:	c3 5a       	subi	r28, 0xA3	; 163
    4632:	d0 40       	sbci	r29, 0x00	; 0
    4634:	8a 2b       	or	r24, r26
    4636:	9b 2b       	or	r25, r27
    4638:	72 95       	swap	r23
    463a:	71 70       	andi	r23, 0x01	; 1
    463c:	cb 55       	subi	r28, 0x5B	; 91
    463e:	df 4f       	sbci	r29, 0xFF	; 255
    4640:	78 83       	st	Y, r23
    4642:	c5 5a       	subi	r28, 0xA5	; 165
    4644:	d0 40       	sbci	r29, 0x00	; 0
    4646:	ca 55       	subi	r28, 0x5A	; 90
    4648:	df 4f       	sbci	r29, 0xFF	; 255
    464a:	18 82       	st	Y, r1
    464c:	c6 5a       	subi	r28, 0xA6	; 166
    464e:	d0 40       	sbci	r29, 0x00	; 0
    4650:	cb 55       	subi	r28, 0x5B	; 91
    4652:	df 4f       	sbci	r29, 0xFF	; 255
    4654:	28 81       	ld	r18, Y
    4656:	39 81       	ldd	r19, Y+1	; 0x01
    4658:	c5 5a       	subi	r28, 0xA5	; 165
    465a:	d0 40       	sbci	r29, 0x00	; 0
    465c:	22 0f       	add	r18, r18
    465e:	33 1f       	adc	r19, r19
    4660:	82 2b       	or	r24, r18
    4662:	93 2b       	or	r25, r19
    4664:	65 fb       	bst	r22, 5
    4666:	66 27       	eor	r22, r22
    4668:	60 f9       	bld	r22, 0
    466a:	c9 55       	subi	r28, 0x59	; 89
    466c:	df 4f       	sbci	r29, 0xFF	; 255
    466e:	68 83       	st	Y, r22
    4670:	c7 5a       	subi	r28, 0xA7	; 167
    4672:	d0 40       	sbci	r29, 0x00	; 0
    4674:	c8 55       	subi	r28, 0x58	; 88
    4676:	df 4f       	sbci	r29, 0xFF	; 255
    4678:	18 82       	st	Y, r1
    467a:	c8 5a       	subi	r28, 0xA8	; 168
    467c:	d0 40       	sbci	r29, 0x00	; 0
    467e:	c9 55       	subi	r28, 0x59	; 89
    4680:	df 4f       	sbci	r29, 0xFF	; 255
    4682:	28 81       	ld	r18, Y
    4684:	39 81       	ldd	r19, Y+1	; 0x01
    4686:	c7 5a       	subi	r28, 0xA7	; 167
    4688:	d0 40       	sbci	r29, 0x00	; 0
    468a:	22 0f       	add	r18, r18
    468c:	33 1f       	adc	r19, r19
    468e:	22 0f       	add	r18, r18
    4690:	33 1f       	adc	r19, r19
    4692:	22 0f       	add	r18, r18
    4694:	33 1f       	adc	r19, r19
    4696:	82 2b       	or	r24, r18
    4698:	93 2b       	or	r25, r19
    469a:	48 9f       	mul	r20, r24
    469c:	f0 01       	movw	r30, r0
    469e:	49 9f       	mul	r20, r25
    46a0:	f0 0d       	add	r31, r0
    46a2:	11 24       	eor	r1, r1
    46a4:	e0 54       	subi	r30, 0x40	; 64
    46a6:	ff 4d       	sbci	r31, 0xDF	; 223
    46a8:	87 81       	ldd	r24, Z+7	; 0x07
    46aa:	90 85       	ldd	r25, Z+8	; 0x08
    46ac:	cf 55       	subi	r28, 0x5F	; 95
    46ae:	df 4f       	sbci	r29, 0xFF	; 255
    46b0:	e8 81       	ld	r30, Y
    46b2:	f9 81       	ldd	r31, Y+1	; 0x01
    46b4:	c1 5a       	subi	r28, 0xA1	; 161
    46b6:	d0 40       	sbci	r29, 0x00	; 0
    46b8:	8e 2b       	or	r24, r30
    46ba:	9f 2b       	or	r25, r31
    46bc:	85 9f       	mul	r24, r21
    46be:	80 2d       	mov	r24, r0
    46c0:	11 24       	eor	r1, r1
    46c2:	80 93 9f 23 	sts	0x239F, r24
    46c6:	a8 e0       	ldi	r26, 0x08	; 8
    46c8:	b6 e0       	ldi	r27, 0x06	; 6
    46ca:	fc 90       	ld	r15, X
    46cc:	7c 91       	ld	r23, X
    46ce:	ec 90       	ld	r14, X
    46d0:	6c 91       	ld	r22, X
    46d2:	3c 91       	ld	r19, X
    46d4:	2c 91       	ld	r18, X
    46d6:	8c 91       	ld	r24, X
    46d8:	ac 91       	ld	r26, X
    46da:	88 1f       	adc	r24, r24
    46dc:	88 27       	eor	r24, r24
    46de:	88 1f       	adc	r24, r24
    46e0:	90 e0       	ldi	r25, 0x00	; 0
    46e2:	88 0f       	add	r24, r24
    46e4:	99 1f       	adc	r25, r25
    46e6:	88 0f       	add	r24, r24
    46e8:	99 1f       	adc	r25, r25
    46ea:	36 fb       	bst	r19, 6
    46ec:	33 27       	eor	r19, r19
    46ee:	30 f9       	bld	r19, 0
    46f0:	c7 55       	subi	r28, 0x57	; 87
    46f2:	df 4f       	sbci	r29, 0xFF	; 255
    46f4:	38 83       	st	Y, r19
    46f6:	c9 5a       	subi	r28, 0xA9	; 169
    46f8:	d0 40       	sbci	r29, 0x00	; 0
    46fa:	c6 55       	subi	r28, 0x56	; 86
    46fc:	df 4f       	sbci	r29, 0xFF	; 255
    46fe:	18 82       	st	Y, r1
    4700:	ca 5a       	subi	r28, 0xAA	; 170
    4702:	d0 40       	sbci	r29, 0x00	; 0
    4704:	c7 55       	subi	r28, 0x57	; 87
    4706:	df 4f       	sbci	r29, 0xFF	; 255
    4708:	e8 81       	ld	r30, Y
    470a:	f9 81       	ldd	r31, Y+1	; 0x01
    470c:	c9 5a       	subi	r28, 0xA9	; 169
    470e:	d0 40       	sbci	r29, 0x00	; 0
    4710:	8e 2b       	or	r24, r30
    4712:	9f 2b       	or	r25, r31
    4714:	22 95       	swap	r18
    4716:	21 70       	andi	r18, 0x01	; 1
    4718:	c5 55       	subi	r28, 0x55	; 85
    471a:	df 4f       	sbci	r29, 0xFF	; 255
    471c:	28 83       	st	Y, r18
    471e:	cb 5a       	subi	r28, 0xAB	; 171
    4720:	d0 40       	sbci	r29, 0x00	; 0
    4722:	c4 55       	subi	r28, 0x54	; 84
    4724:	df 4f       	sbci	r29, 0xFF	; 255
    4726:	18 82       	st	Y, r1
    4728:	cc 5a       	subi	r28, 0xAC	; 172
    472a:	d0 40       	sbci	r29, 0x00	; 0
    472c:	c5 55       	subi	r28, 0x55	; 85
    472e:	df 4f       	sbci	r29, 0xFF	; 255
    4730:	28 81       	ld	r18, Y
    4732:	39 81       	ldd	r19, Y+1	; 0x01
    4734:	cb 5a       	subi	r28, 0xAB	; 171
    4736:	d0 40       	sbci	r29, 0x00	; 0
    4738:	22 0f       	add	r18, r18
    473a:	33 1f       	adc	r19, r19
    473c:	82 2b       	or	r24, r18
    473e:	93 2b       	or	r25, r19
    4740:	a5 fb       	bst	r26, 5
    4742:	aa 27       	eor	r26, r26
    4744:	a0 f9       	bld	r26, 0
    4746:	c3 55       	subi	r28, 0x53	; 83
    4748:	df 4f       	sbci	r29, 0xFF	; 255
    474a:	a8 83       	st	Y, r26
    474c:	cd 5a       	subi	r28, 0xAD	; 173
    474e:	d0 40       	sbci	r29, 0x00	; 0
    4750:	c2 55       	subi	r28, 0x52	; 82
    4752:	df 4f       	sbci	r29, 0xFF	; 255
    4754:	18 82       	st	Y, r1
    4756:	ce 5a       	subi	r28, 0xAE	; 174
    4758:	d0 40       	sbci	r29, 0x00	; 0
    475a:	c3 55       	subi	r28, 0x53	; 83
    475c:	df 4f       	sbci	r29, 0xFF	; 255
    475e:	28 81       	ld	r18, Y
    4760:	39 81       	ldd	r19, Y+1	; 0x01
    4762:	cd 5a       	subi	r28, 0xAD	; 173
    4764:	d0 40       	sbci	r29, 0x00	; 0
    4766:	22 0f       	add	r18, r18
    4768:	33 1f       	adc	r19, r19
    476a:	22 0f       	add	r18, r18
    476c:	33 1f       	adc	r19, r19
    476e:	22 0f       	add	r18, r18
    4770:	33 1f       	adc	r19, r19
    4772:	82 2b       	or	r24, r18
    4774:	93 2b       	or	r25, r19
    4776:	48 9f       	mul	r20, r24
    4778:	f0 01       	movw	r30, r0
    477a:	49 9f       	mul	r20, r25
    477c:	f0 0d       	add	r31, r0
    477e:	11 24       	eor	r1, r1
    4780:	e0 54       	subi	r30, 0x40	; 64
    4782:	ff 4d       	sbci	r31, 0xDF	; 223
    4784:	25 81       	ldd	r18, Z+5	; 0x05
    4786:	c0 55       	subi	r28, 0x50	; 80
    4788:	df 4f       	sbci	r29, 0xFF	; 255
    478a:	28 83       	st	Y, r18
    478c:	c0 5b       	subi	r28, 0xB0	; 176
    478e:	d0 40       	sbci	r29, 0x00	; 0
    4790:	c1 55       	subi	r28, 0x51	; 81
    4792:	df 4f       	sbci	r29, 0xFF	; 255
    4794:	18 82       	st	Y, r1
    4796:	cf 5a       	subi	r28, 0xAF	; 175
    4798:	d0 40       	sbci	r29, 0x00	; 0
    479a:	be 2d       	mov	r27, r14
    479c:	bb 1f       	adc	r27, r27
    479e:	bb 27       	eor	r27, r27
    47a0:	bb 1f       	adc	r27, r27
    47a2:	8b 2f       	mov	r24, r27
    47a4:	90 e0       	ldi	r25, 0x00	; 0
    47a6:	88 0f       	add	r24, r24
    47a8:	99 1f       	adc	r25, r25
    47aa:	88 0f       	add	r24, r24
    47ac:	99 1f       	adc	r25, r25
    47ae:	f6 fa       	bst	r15, 6
    47b0:	ff 24       	eor	r15, r15
    47b2:	f0 f8       	bld	r15, 0
    47b4:	cf 54       	subi	r28, 0x4F	; 79
    47b6:	df 4f       	sbci	r29, 0xFF	; 255
    47b8:	f8 82       	st	Y, r15
    47ba:	c1 5b       	subi	r28, 0xB1	; 177
    47bc:	d0 40       	sbci	r29, 0x00	; 0
    47be:	ce 54       	subi	r28, 0x4E	; 78
    47c0:	df 4f       	sbci	r29, 0xFF	; 255
    47c2:	18 82       	st	Y, r1
    47c4:	c2 5b       	subi	r28, 0xB2	; 178
    47c6:	d0 40       	sbci	r29, 0x00	; 0
    47c8:	cf 54       	subi	r28, 0x4F	; 79
    47ca:	df 4f       	sbci	r29, 0xFF	; 255
    47cc:	a8 81       	ld	r26, Y
    47ce:	b9 81       	ldd	r27, Y+1	; 0x01
    47d0:	c1 5b       	subi	r28, 0xB1	; 177
    47d2:	d0 40       	sbci	r29, 0x00	; 0
    47d4:	8a 2b       	or	r24, r26
    47d6:	9b 2b       	or	r25, r27
    47d8:	72 95       	swap	r23
    47da:	71 70       	andi	r23, 0x01	; 1
    47dc:	cd 54       	subi	r28, 0x4D	; 77
    47de:	df 4f       	sbci	r29, 0xFF	; 255
    47e0:	78 83       	st	Y, r23
    47e2:	c3 5b       	subi	r28, 0xB3	; 179
    47e4:	d0 40       	sbci	r29, 0x00	; 0
    47e6:	cc 54       	subi	r28, 0x4C	; 76
    47e8:	df 4f       	sbci	r29, 0xFF	; 255
    47ea:	18 82       	st	Y, r1
    47ec:	c4 5b       	subi	r28, 0xB4	; 180
    47ee:	d0 40       	sbci	r29, 0x00	; 0
    47f0:	cd 54       	subi	r28, 0x4D	; 77
    47f2:	df 4f       	sbci	r29, 0xFF	; 255
    47f4:	28 81       	ld	r18, Y
    47f6:	39 81       	ldd	r19, Y+1	; 0x01
    47f8:	c3 5b       	subi	r28, 0xB3	; 179
    47fa:	d0 40       	sbci	r29, 0x00	; 0
    47fc:	22 0f       	add	r18, r18
    47fe:	33 1f       	adc	r19, r19
    4800:	82 2b       	or	r24, r18
    4802:	93 2b       	or	r25, r19
    4804:	65 fb       	bst	r22, 5
    4806:	66 27       	eor	r22, r22
    4808:	60 f9       	bld	r22, 0
    480a:	cb 54       	subi	r28, 0x4B	; 75
    480c:	df 4f       	sbci	r29, 0xFF	; 255
    480e:	68 83       	st	Y, r22
    4810:	c5 5b       	subi	r28, 0xB5	; 181
    4812:	d0 40       	sbci	r29, 0x00	; 0
    4814:	ca 54       	subi	r28, 0x4A	; 74
    4816:	df 4f       	sbci	r29, 0xFF	; 255
    4818:	18 82       	st	Y, r1
    481a:	c6 5b       	subi	r28, 0xB6	; 182
    481c:	d0 40       	sbci	r29, 0x00	; 0
    481e:	cb 54       	subi	r28, 0x4B	; 75
    4820:	df 4f       	sbci	r29, 0xFF	; 255
    4822:	28 81       	ld	r18, Y
    4824:	39 81       	ldd	r19, Y+1	; 0x01
    4826:	c5 5b       	subi	r28, 0xB5	; 181
    4828:	d0 40       	sbci	r29, 0x00	; 0
    482a:	22 0f       	add	r18, r18
    482c:	33 1f       	adc	r19, r19
    482e:	22 0f       	add	r18, r18
    4830:	33 1f       	adc	r19, r19
    4832:	22 0f       	add	r18, r18
    4834:	33 1f       	adc	r19, r19
    4836:	82 2b       	or	r24, r18
    4838:	93 2b       	or	r25, r19
    483a:	48 9f       	mul	r20, r24
    483c:	f0 01       	movw	r30, r0
    483e:	49 9f       	mul	r20, r25
    4840:	f0 0d       	add	r31, r0
    4842:	11 24       	eor	r1, r1
    4844:	e0 54       	subi	r30, 0x40	; 64
    4846:	ff 4d       	sbci	r31, 0xDF	; 223
    4848:	27 81       	ldd	r18, Z+7	; 0x07
    484a:	30 85       	ldd	r19, Z+8	; 0x08
    484c:	c1 55       	subi	r28, 0x51	; 81
    484e:	df 4f       	sbci	r29, 0xFF	; 255
    4850:	e8 81       	ld	r30, Y
    4852:	f9 81       	ldd	r31, Y+1	; 0x01
    4854:	cf 5a       	subi	r28, 0xAF	; 175
    4856:	d0 40       	sbci	r29, 0x00	; 0
    4858:	2e 2b       	or	r18, r30
    485a:	3f 2b       	or	r19, r31
    485c:	52 9f       	mul	r21, r18
    485e:	c0 01       	movw	r24, r0
    4860:	53 9f       	mul	r21, r19
    4862:	90 0d       	add	r25, r0
    4864:	11 24       	eor	r1, r1
    4866:	90 93 a0 23 	sts	0x23A0, r25
    486a:	a8 e0       	ldi	r26, 0x08	; 8
    486c:	b6 e0       	ldi	r27, 0x06	; 6
    486e:	fc 90       	ld	r15, X
    4870:	7c 91       	ld	r23, X
    4872:	ec 90       	ld	r14, X
    4874:	6c 91       	ld	r22, X
    4876:	3c 91       	ld	r19, X
    4878:	2c 91       	ld	r18, X
    487a:	8c 91       	ld	r24, X
    487c:	ac 91       	ld	r26, X
    487e:	88 1f       	adc	r24, r24
    4880:	88 27       	eor	r24, r24
    4882:	88 1f       	adc	r24, r24
    4884:	90 e0       	ldi	r25, 0x00	; 0
    4886:	88 0f       	add	r24, r24
    4888:	99 1f       	adc	r25, r25
    488a:	88 0f       	add	r24, r24
    488c:	99 1f       	adc	r25, r25
    488e:	36 fb       	bst	r19, 6
    4890:	33 27       	eor	r19, r19
    4892:	30 f9       	bld	r19, 0
    4894:	c9 54       	subi	r28, 0x49	; 73
    4896:	df 4f       	sbci	r29, 0xFF	; 255
    4898:	38 83       	st	Y, r19
    489a:	c7 5b       	subi	r28, 0xB7	; 183
    489c:	d0 40       	sbci	r29, 0x00	; 0
    489e:	c8 54       	subi	r28, 0x48	; 72
    48a0:	df 4f       	sbci	r29, 0xFF	; 255
    48a2:	18 82       	st	Y, r1
    48a4:	c8 5b       	subi	r28, 0xB8	; 184
    48a6:	d0 40       	sbci	r29, 0x00	; 0
    48a8:	c9 54       	subi	r28, 0x49	; 73
    48aa:	df 4f       	sbci	r29, 0xFF	; 255
    48ac:	e8 81       	ld	r30, Y
    48ae:	f9 81       	ldd	r31, Y+1	; 0x01
    48b0:	c7 5b       	subi	r28, 0xB7	; 183
    48b2:	d0 40       	sbci	r29, 0x00	; 0
    48b4:	8e 2b       	or	r24, r30
    48b6:	9f 2b       	or	r25, r31
    48b8:	22 95       	swap	r18
    48ba:	21 70       	andi	r18, 0x01	; 1
    48bc:	c7 54       	subi	r28, 0x47	; 71
    48be:	df 4f       	sbci	r29, 0xFF	; 255
    48c0:	28 83       	st	Y, r18
    48c2:	c9 5b       	subi	r28, 0xB9	; 185
    48c4:	d0 40       	sbci	r29, 0x00	; 0
    48c6:	c6 54       	subi	r28, 0x46	; 70
    48c8:	df 4f       	sbci	r29, 0xFF	; 255
    48ca:	18 82       	st	Y, r1
    48cc:	ca 5b       	subi	r28, 0xBA	; 186
    48ce:	d0 40       	sbci	r29, 0x00	; 0
    48d0:	c7 54       	subi	r28, 0x47	; 71
    48d2:	df 4f       	sbci	r29, 0xFF	; 255
    48d4:	28 81       	ld	r18, Y
    48d6:	39 81       	ldd	r19, Y+1	; 0x01
    48d8:	c9 5b       	subi	r28, 0xB9	; 185
    48da:	d0 40       	sbci	r29, 0x00	; 0
    48dc:	22 0f       	add	r18, r18
    48de:	33 1f       	adc	r19, r19
    48e0:	82 2b       	or	r24, r18
    48e2:	93 2b       	or	r25, r19
    48e4:	a5 fb       	bst	r26, 5
    48e6:	aa 27       	eor	r26, r26
    48e8:	a0 f9       	bld	r26, 0
    48ea:	c5 54       	subi	r28, 0x45	; 69
    48ec:	df 4f       	sbci	r29, 0xFF	; 255
    48ee:	a8 83       	st	Y, r26
    48f0:	cb 5b       	subi	r28, 0xBB	; 187
    48f2:	d0 40       	sbci	r29, 0x00	; 0
    48f4:	c4 54       	subi	r28, 0x44	; 68
    48f6:	df 4f       	sbci	r29, 0xFF	; 255
    48f8:	18 82       	st	Y, r1
    48fa:	cc 5b       	subi	r28, 0xBC	; 188
    48fc:	d0 40       	sbci	r29, 0x00	; 0
    48fe:	c5 54       	subi	r28, 0x45	; 69
    4900:	df 4f       	sbci	r29, 0xFF	; 255
    4902:	28 81       	ld	r18, Y
    4904:	39 81       	ldd	r19, Y+1	; 0x01
    4906:	cb 5b       	subi	r28, 0xBB	; 187
    4908:	d0 40       	sbci	r29, 0x00	; 0
    490a:	22 0f       	add	r18, r18
    490c:	33 1f       	adc	r19, r19
    490e:	22 0f       	add	r18, r18
    4910:	33 1f       	adc	r19, r19
    4912:	22 0f       	add	r18, r18
    4914:	33 1f       	adc	r19, r19
    4916:	82 2b       	or	r24, r18
    4918:	93 2b       	or	r25, r19
    491a:	48 9f       	mul	r20, r24
    491c:	f0 01       	movw	r30, r0
    491e:	49 9f       	mul	r20, r25
    4920:	f0 0d       	add	r31, r0
    4922:	11 24       	eor	r1, r1
    4924:	e0 54       	subi	r30, 0x40	; 64
    4926:	ff 4d       	sbci	r31, 0xDF	; 223
    4928:	21 85       	ldd	r18, Z+9	; 0x09
    492a:	c2 54       	subi	r28, 0x42	; 66
    492c:	df 4f       	sbci	r29, 0xFF	; 255
    492e:	28 83       	st	Y, r18
    4930:	ce 5b       	subi	r28, 0xBE	; 190
    4932:	d0 40       	sbci	r29, 0x00	; 0
    4934:	c3 54       	subi	r28, 0x43	; 67
    4936:	df 4f       	sbci	r29, 0xFF	; 255
    4938:	18 82       	st	Y, r1
    493a:	cd 5b       	subi	r28, 0xBD	; 189
    493c:	d0 40       	sbci	r29, 0x00	; 0
    493e:	be 2d       	mov	r27, r14
    4940:	bb 1f       	adc	r27, r27
    4942:	bb 27       	eor	r27, r27
    4944:	bb 1f       	adc	r27, r27
    4946:	8b 2f       	mov	r24, r27
    4948:	90 e0       	ldi	r25, 0x00	; 0
    494a:	88 0f       	add	r24, r24
    494c:	99 1f       	adc	r25, r25
    494e:	88 0f       	add	r24, r24
    4950:	99 1f       	adc	r25, r25
    4952:	f6 fa       	bst	r15, 6
    4954:	ff 24       	eor	r15, r15
    4956:	f0 f8       	bld	r15, 0
    4958:	c1 54       	subi	r28, 0x41	; 65
    495a:	df 4f       	sbci	r29, 0xFF	; 255
    495c:	f8 82       	st	Y, r15
    495e:	cf 5b       	subi	r28, 0xBF	; 191
    4960:	d0 40       	sbci	r29, 0x00	; 0
    4962:	c0 54       	subi	r28, 0x40	; 64
    4964:	df 4f       	sbci	r29, 0xFF	; 255
    4966:	18 82       	st	Y, r1
    4968:	c0 5c       	subi	r28, 0xC0	; 192
    496a:	d0 40       	sbci	r29, 0x00	; 0
    496c:	c1 54       	subi	r28, 0x41	; 65
    496e:	df 4f       	sbci	r29, 0xFF	; 255
    4970:	a8 81       	ld	r26, Y
    4972:	b9 81       	ldd	r27, Y+1	; 0x01
    4974:	cf 5b       	subi	r28, 0xBF	; 191
    4976:	d0 40       	sbci	r29, 0x00	; 0
    4978:	8a 2b       	or	r24, r26
    497a:	9b 2b       	or	r25, r27
    497c:	72 95       	swap	r23
    497e:	71 70       	andi	r23, 0x01	; 1
    4980:	cf 53       	subi	r28, 0x3F	; 63
    4982:	df 4f       	sbci	r29, 0xFF	; 255
    4984:	78 83       	st	Y, r23
    4986:	c1 5c       	subi	r28, 0xC1	; 193
    4988:	d0 40       	sbci	r29, 0x00	; 0
    498a:	ce 53       	subi	r28, 0x3E	; 62
    498c:	df 4f       	sbci	r29, 0xFF	; 255
    498e:	18 82       	st	Y, r1
    4990:	c2 5c       	subi	r28, 0xC2	; 194
    4992:	d0 40       	sbci	r29, 0x00	; 0
    4994:	cf 53       	subi	r28, 0x3F	; 63
    4996:	df 4f       	sbci	r29, 0xFF	; 255
    4998:	28 81       	ld	r18, Y
    499a:	39 81       	ldd	r19, Y+1	; 0x01
    499c:	c1 5c       	subi	r28, 0xC1	; 193
    499e:	d0 40       	sbci	r29, 0x00	; 0
    49a0:	22 0f       	add	r18, r18
    49a2:	33 1f       	adc	r19, r19
    49a4:	82 2b       	or	r24, r18
    49a6:	93 2b       	or	r25, r19
    49a8:	65 fb       	bst	r22, 5
    49aa:	66 27       	eor	r22, r22
    49ac:	60 f9       	bld	r22, 0
    49ae:	cd 53       	subi	r28, 0x3D	; 61
    49b0:	df 4f       	sbci	r29, 0xFF	; 255
    49b2:	68 83       	st	Y, r22
    49b4:	c3 5c       	subi	r28, 0xC3	; 195
    49b6:	d0 40       	sbci	r29, 0x00	; 0
    49b8:	cc 53       	subi	r28, 0x3C	; 60
    49ba:	df 4f       	sbci	r29, 0xFF	; 255
    49bc:	18 82       	st	Y, r1
    49be:	c4 5c       	subi	r28, 0xC4	; 196
    49c0:	d0 40       	sbci	r29, 0x00	; 0
    49c2:	cd 53       	subi	r28, 0x3D	; 61
    49c4:	df 4f       	sbci	r29, 0xFF	; 255
    49c6:	28 81       	ld	r18, Y
    49c8:	39 81       	ldd	r19, Y+1	; 0x01
    49ca:	c3 5c       	subi	r28, 0xC3	; 195
    49cc:	d0 40       	sbci	r29, 0x00	; 0
    49ce:	22 0f       	add	r18, r18
    49d0:	33 1f       	adc	r19, r19
    49d2:	22 0f       	add	r18, r18
    49d4:	33 1f       	adc	r19, r19
    49d6:	22 0f       	add	r18, r18
    49d8:	33 1f       	adc	r19, r19
    49da:	82 2b       	or	r24, r18
    49dc:	93 2b       	or	r25, r19
    49de:	48 9f       	mul	r20, r24
    49e0:	f0 01       	movw	r30, r0
    49e2:	49 9f       	mul	r20, r25
    49e4:	f0 0d       	add	r31, r0
    49e6:	11 24       	eor	r1, r1
    49e8:	e0 54       	subi	r30, 0x40	; 64
    49ea:	ff 4d       	sbci	r31, 0xDF	; 223
    49ec:	83 85       	ldd	r24, Z+11	; 0x0b
    49ee:	94 85       	ldd	r25, Z+12	; 0x0c
    49f0:	c3 54       	subi	r28, 0x43	; 67
    49f2:	df 4f       	sbci	r29, 0xFF	; 255
    49f4:	e8 81       	ld	r30, Y
    49f6:	f9 81       	ldd	r31, Y+1	; 0x01
    49f8:	cd 5b       	subi	r28, 0xBD	; 189
    49fa:	d0 40       	sbci	r29, 0x00	; 0
    49fc:	8e 2b       	or	r24, r30
    49fe:	9f 2b       	or	r25, r31
    4a00:	85 9f       	mul	r24, r21
    4a02:	80 2d       	mov	r24, r0
    4a04:	11 24       	eor	r1, r1
    4a06:	80 93 a1 23 	sts	0x23A1, r24
    4a0a:	a8 e0       	ldi	r26, 0x08	; 8
    4a0c:	b6 e0       	ldi	r27, 0x06	; 6
    4a0e:	fc 90       	ld	r15, X
    4a10:	7c 91       	ld	r23, X
    4a12:	ec 90       	ld	r14, X
    4a14:	6c 91       	ld	r22, X
    4a16:	3c 91       	ld	r19, X
    4a18:	2c 91       	ld	r18, X
    4a1a:	8c 91       	ld	r24, X
    4a1c:	ac 91       	ld	r26, X
    4a1e:	88 1f       	adc	r24, r24
    4a20:	88 27       	eor	r24, r24
    4a22:	88 1f       	adc	r24, r24
    4a24:	90 e0       	ldi	r25, 0x00	; 0
    4a26:	88 0f       	add	r24, r24
    4a28:	99 1f       	adc	r25, r25
    4a2a:	88 0f       	add	r24, r24
    4a2c:	99 1f       	adc	r25, r25
    4a2e:	36 fb       	bst	r19, 6
    4a30:	33 27       	eor	r19, r19
    4a32:	30 f9       	bld	r19, 0
    4a34:	cb 53       	subi	r28, 0x3B	; 59
    4a36:	df 4f       	sbci	r29, 0xFF	; 255
    4a38:	38 83       	st	Y, r19
    4a3a:	c5 5c       	subi	r28, 0xC5	; 197
    4a3c:	d0 40       	sbci	r29, 0x00	; 0
    4a3e:	ca 53       	subi	r28, 0x3A	; 58
    4a40:	df 4f       	sbci	r29, 0xFF	; 255
    4a42:	18 82       	st	Y, r1
    4a44:	c6 5c       	subi	r28, 0xC6	; 198
    4a46:	d0 40       	sbci	r29, 0x00	; 0
    4a48:	cb 53       	subi	r28, 0x3B	; 59
    4a4a:	df 4f       	sbci	r29, 0xFF	; 255
    4a4c:	e8 81       	ld	r30, Y
    4a4e:	f9 81       	ldd	r31, Y+1	; 0x01
    4a50:	c5 5c       	subi	r28, 0xC5	; 197
    4a52:	d0 40       	sbci	r29, 0x00	; 0
    4a54:	8e 2b       	or	r24, r30
    4a56:	9f 2b       	or	r25, r31
    4a58:	22 95       	swap	r18
    4a5a:	21 70       	andi	r18, 0x01	; 1
    4a5c:	c9 53       	subi	r28, 0x39	; 57
    4a5e:	df 4f       	sbci	r29, 0xFF	; 255
    4a60:	28 83       	st	Y, r18
    4a62:	c7 5c       	subi	r28, 0xC7	; 199
    4a64:	d0 40       	sbci	r29, 0x00	; 0
    4a66:	c8 53       	subi	r28, 0x38	; 56
    4a68:	df 4f       	sbci	r29, 0xFF	; 255
    4a6a:	18 82       	st	Y, r1
    4a6c:	c8 5c       	subi	r28, 0xC8	; 200
    4a6e:	d0 40       	sbci	r29, 0x00	; 0
    4a70:	c9 53       	subi	r28, 0x39	; 57
    4a72:	df 4f       	sbci	r29, 0xFF	; 255
    4a74:	28 81       	ld	r18, Y
    4a76:	39 81       	ldd	r19, Y+1	; 0x01
    4a78:	c7 5c       	subi	r28, 0xC7	; 199
    4a7a:	d0 40       	sbci	r29, 0x00	; 0
    4a7c:	22 0f       	add	r18, r18
    4a7e:	33 1f       	adc	r19, r19
    4a80:	82 2b       	or	r24, r18
    4a82:	93 2b       	or	r25, r19
    4a84:	a5 fb       	bst	r26, 5
    4a86:	aa 27       	eor	r26, r26
    4a88:	a0 f9       	bld	r26, 0
    4a8a:	c7 53       	subi	r28, 0x37	; 55
    4a8c:	df 4f       	sbci	r29, 0xFF	; 255
    4a8e:	a8 83       	st	Y, r26
    4a90:	c9 5c       	subi	r28, 0xC9	; 201
    4a92:	d0 40       	sbci	r29, 0x00	; 0
    4a94:	c6 53       	subi	r28, 0x36	; 54
    4a96:	df 4f       	sbci	r29, 0xFF	; 255
    4a98:	18 82       	st	Y, r1
    4a9a:	ca 5c       	subi	r28, 0xCA	; 202
    4a9c:	d0 40       	sbci	r29, 0x00	; 0
    4a9e:	c7 53       	subi	r28, 0x37	; 55
    4aa0:	df 4f       	sbci	r29, 0xFF	; 255
    4aa2:	28 81       	ld	r18, Y
    4aa4:	39 81       	ldd	r19, Y+1	; 0x01
    4aa6:	c9 5c       	subi	r28, 0xC9	; 201
    4aa8:	d0 40       	sbci	r29, 0x00	; 0
    4aaa:	22 0f       	add	r18, r18
    4aac:	33 1f       	adc	r19, r19
    4aae:	22 0f       	add	r18, r18
    4ab0:	33 1f       	adc	r19, r19
    4ab2:	22 0f       	add	r18, r18
    4ab4:	33 1f       	adc	r19, r19
    4ab6:	82 2b       	or	r24, r18
    4ab8:	93 2b       	or	r25, r19
    4aba:	48 9f       	mul	r20, r24
    4abc:	f0 01       	movw	r30, r0
    4abe:	49 9f       	mul	r20, r25
    4ac0:	f0 0d       	add	r31, r0
    4ac2:	11 24       	eor	r1, r1
    4ac4:	e0 54       	subi	r30, 0x40	; 64
    4ac6:	ff 4d       	sbci	r31, 0xDF	; 223
    4ac8:	21 85       	ldd	r18, Z+9	; 0x09
    4aca:	c4 53       	subi	r28, 0x34	; 52
    4acc:	df 4f       	sbci	r29, 0xFF	; 255
    4ace:	28 83       	st	Y, r18
    4ad0:	cc 5c       	subi	r28, 0xCC	; 204
    4ad2:	d0 40       	sbci	r29, 0x00	; 0
    4ad4:	c5 53       	subi	r28, 0x35	; 53
    4ad6:	df 4f       	sbci	r29, 0xFF	; 255
    4ad8:	18 82       	st	Y, r1
    4ada:	cb 5c       	subi	r28, 0xCB	; 203
    4adc:	d0 40       	sbci	r29, 0x00	; 0
    4ade:	be 2d       	mov	r27, r14
    4ae0:	bb 1f       	adc	r27, r27
    4ae2:	bb 27       	eor	r27, r27
    4ae4:	bb 1f       	adc	r27, r27
    4ae6:	8b 2f       	mov	r24, r27
    4ae8:	90 e0       	ldi	r25, 0x00	; 0
    4aea:	88 0f       	add	r24, r24
    4aec:	99 1f       	adc	r25, r25
    4aee:	88 0f       	add	r24, r24
    4af0:	99 1f       	adc	r25, r25
    4af2:	f6 fa       	bst	r15, 6
    4af4:	ff 24       	eor	r15, r15
    4af6:	f0 f8       	bld	r15, 0
    4af8:	c3 53       	subi	r28, 0x33	; 51
    4afa:	df 4f       	sbci	r29, 0xFF	; 255
    4afc:	f8 82       	st	Y, r15
    4afe:	cd 5c       	subi	r28, 0xCD	; 205
    4b00:	d0 40       	sbci	r29, 0x00	; 0
    4b02:	c2 53       	subi	r28, 0x32	; 50
    4b04:	df 4f       	sbci	r29, 0xFF	; 255
    4b06:	18 82       	st	Y, r1
    4b08:	ce 5c       	subi	r28, 0xCE	; 206
    4b0a:	d0 40       	sbci	r29, 0x00	; 0
    4b0c:	c3 53       	subi	r28, 0x33	; 51
    4b0e:	df 4f       	sbci	r29, 0xFF	; 255
    4b10:	a8 81       	ld	r26, Y
    4b12:	b9 81       	ldd	r27, Y+1	; 0x01
    4b14:	cd 5c       	subi	r28, 0xCD	; 205
    4b16:	d0 40       	sbci	r29, 0x00	; 0
    4b18:	8a 2b       	or	r24, r26
    4b1a:	9b 2b       	or	r25, r27
    4b1c:	72 95       	swap	r23
    4b1e:	71 70       	andi	r23, 0x01	; 1
    4b20:	c1 53       	subi	r28, 0x31	; 49
    4b22:	df 4f       	sbci	r29, 0xFF	; 255
    4b24:	78 83       	st	Y, r23
    4b26:	cf 5c       	subi	r28, 0xCF	; 207
    4b28:	d0 40       	sbci	r29, 0x00	; 0
    4b2a:	c0 53       	subi	r28, 0x30	; 48
    4b2c:	df 4f       	sbci	r29, 0xFF	; 255
    4b2e:	18 82       	st	Y, r1
    4b30:	c0 5d       	subi	r28, 0xD0	; 208
    4b32:	d0 40       	sbci	r29, 0x00	; 0
    4b34:	c1 53       	subi	r28, 0x31	; 49
    4b36:	df 4f       	sbci	r29, 0xFF	; 255
    4b38:	28 81       	ld	r18, Y
    4b3a:	39 81       	ldd	r19, Y+1	; 0x01
    4b3c:	cf 5c       	subi	r28, 0xCF	; 207
    4b3e:	d0 40       	sbci	r29, 0x00	; 0
    4b40:	22 0f       	add	r18, r18
    4b42:	33 1f       	adc	r19, r19
    4b44:	82 2b       	or	r24, r18
    4b46:	93 2b       	or	r25, r19
    4b48:	65 fb       	bst	r22, 5
    4b4a:	66 27       	eor	r22, r22
    4b4c:	60 f9       	bld	r22, 0
    4b4e:	cf 52       	subi	r28, 0x2F	; 47
    4b50:	df 4f       	sbci	r29, 0xFF	; 255
    4b52:	68 83       	st	Y, r22
    4b54:	c1 5d       	subi	r28, 0xD1	; 209
    4b56:	d0 40       	sbci	r29, 0x00	; 0
    4b58:	ce 52       	subi	r28, 0x2E	; 46
    4b5a:	df 4f       	sbci	r29, 0xFF	; 255
    4b5c:	18 82       	st	Y, r1
    4b5e:	c2 5d       	subi	r28, 0xD2	; 210
    4b60:	d0 40       	sbci	r29, 0x00	; 0
    4b62:	cf 52       	subi	r28, 0x2F	; 47
    4b64:	df 4f       	sbci	r29, 0xFF	; 255
    4b66:	28 81       	ld	r18, Y
    4b68:	39 81       	ldd	r19, Y+1	; 0x01
    4b6a:	c1 5d       	subi	r28, 0xD1	; 209
    4b6c:	d0 40       	sbci	r29, 0x00	; 0
    4b6e:	22 0f       	add	r18, r18
    4b70:	33 1f       	adc	r19, r19
    4b72:	22 0f       	add	r18, r18
    4b74:	33 1f       	adc	r19, r19
    4b76:	22 0f       	add	r18, r18
    4b78:	33 1f       	adc	r19, r19
    4b7a:	82 2b       	or	r24, r18
    4b7c:	93 2b       	or	r25, r19
    4b7e:	48 9f       	mul	r20, r24
    4b80:	f0 01       	movw	r30, r0
    4b82:	49 9f       	mul	r20, r25
    4b84:	f0 0d       	add	r31, r0
    4b86:	11 24       	eor	r1, r1
    4b88:	e0 54       	subi	r30, 0x40	; 64
    4b8a:	ff 4d       	sbci	r31, 0xDF	; 223
    4b8c:	23 85       	ldd	r18, Z+11	; 0x0b
    4b8e:	34 85       	ldd	r19, Z+12	; 0x0c
    4b90:	c5 53       	subi	r28, 0x35	; 53
    4b92:	df 4f       	sbci	r29, 0xFF	; 255
    4b94:	e8 81       	ld	r30, Y
    4b96:	f9 81       	ldd	r31, Y+1	; 0x01
    4b98:	cb 5c       	subi	r28, 0xCB	; 203
    4b9a:	d0 40       	sbci	r29, 0x00	; 0
    4b9c:	2e 2b       	or	r18, r30
    4b9e:	3f 2b       	or	r19, r31
    4ba0:	52 9f       	mul	r21, r18
    4ba2:	c0 01       	movw	r24, r0
    4ba4:	53 9f       	mul	r21, r19
    4ba6:	90 0d       	add	r25, r0
    4ba8:	11 24       	eor	r1, r1
    4baa:	90 93 a2 23 	sts	0x23A2, r25
    4bae:	a8 e0       	ldi	r26, 0x08	; 8
    4bb0:	b6 e0       	ldi	r27, 0x06	; 6
    4bb2:	fc 90       	ld	r15, X
    4bb4:	7c 91       	ld	r23, X
    4bb6:	ec 90       	ld	r14, X
    4bb8:	6c 91       	ld	r22, X
    4bba:	3c 91       	ld	r19, X
    4bbc:	2c 91       	ld	r18, X
    4bbe:	8c 91       	ld	r24, X
    4bc0:	ac 91       	ld	r26, X
    4bc2:	88 1f       	adc	r24, r24
    4bc4:	88 27       	eor	r24, r24
    4bc6:	88 1f       	adc	r24, r24
    4bc8:	90 e0       	ldi	r25, 0x00	; 0
    4bca:	88 0f       	add	r24, r24
    4bcc:	99 1f       	adc	r25, r25
    4bce:	88 0f       	add	r24, r24
    4bd0:	99 1f       	adc	r25, r25
    4bd2:	36 fb       	bst	r19, 6
    4bd4:	33 27       	eor	r19, r19
    4bd6:	30 f9       	bld	r19, 0
    4bd8:	cd 52       	subi	r28, 0x2D	; 45
    4bda:	df 4f       	sbci	r29, 0xFF	; 255
    4bdc:	38 83       	st	Y, r19
    4bde:	c3 5d       	subi	r28, 0xD3	; 211
    4be0:	d0 40       	sbci	r29, 0x00	; 0
    4be2:	cc 52       	subi	r28, 0x2C	; 44
    4be4:	df 4f       	sbci	r29, 0xFF	; 255
    4be6:	18 82       	st	Y, r1
    4be8:	c4 5d       	subi	r28, 0xD4	; 212
    4bea:	d0 40       	sbci	r29, 0x00	; 0
    4bec:	cd 52       	subi	r28, 0x2D	; 45
    4bee:	df 4f       	sbci	r29, 0xFF	; 255
    4bf0:	e8 81       	ld	r30, Y
    4bf2:	f9 81       	ldd	r31, Y+1	; 0x01
    4bf4:	c3 5d       	subi	r28, 0xD3	; 211
    4bf6:	d0 40       	sbci	r29, 0x00	; 0
    4bf8:	8e 2b       	or	r24, r30
    4bfa:	9f 2b       	or	r25, r31
    4bfc:	22 95       	swap	r18
    4bfe:	21 70       	andi	r18, 0x01	; 1
    4c00:	cb 52       	subi	r28, 0x2B	; 43
    4c02:	df 4f       	sbci	r29, 0xFF	; 255
    4c04:	28 83       	st	Y, r18
    4c06:	c5 5d       	subi	r28, 0xD5	; 213
    4c08:	d0 40       	sbci	r29, 0x00	; 0
    4c0a:	ca 52       	subi	r28, 0x2A	; 42
    4c0c:	df 4f       	sbci	r29, 0xFF	; 255
    4c0e:	18 82       	st	Y, r1
    4c10:	c6 5d       	subi	r28, 0xD6	; 214
    4c12:	d0 40       	sbci	r29, 0x00	; 0
    4c14:	cb 52       	subi	r28, 0x2B	; 43
    4c16:	df 4f       	sbci	r29, 0xFF	; 255
    4c18:	28 81       	ld	r18, Y
    4c1a:	39 81       	ldd	r19, Y+1	; 0x01
    4c1c:	c5 5d       	subi	r28, 0xD5	; 213
    4c1e:	d0 40       	sbci	r29, 0x00	; 0
    4c20:	22 0f       	add	r18, r18
    4c22:	33 1f       	adc	r19, r19
    4c24:	82 2b       	or	r24, r18
    4c26:	93 2b       	or	r25, r19
    4c28:	a5 fb       	bst	r26, 5
    4c2a:	aa 27       	eor	r26, r26
    4c2c:	a0 f9       	bld	r26, 0
    4c2e:	c9 52       	subi	r28, 0x29	; 41
    4c30:	df 4f       	sbci	r29, 0xFF	; 255
    4c32:	a8 83       	st	Y, r26
    4c34:	c7 5d       	subi	r28, 0xD7	; 215
    4c36:	d0 40       	sbci	r29, 0x00	; 0
    4c38:	c8 52       	subi	r28, 0x28	; 40
    4c3a:	df 4f       	sbci	r29, 0xFF	; 255
    4c3c:	18 82       	st	Y, r1
    4c3e:	c8 5d       	subi	r28, 0xD8	; 216
    4c40:	d0 40       	sbci	r29, 0x00	; 0
    4c42:	c9 52       	subi	r28, 0x29	; 41
    4c44:	df 4f       	sbci	r29, 0xFF	; 255
    4c46:	28 81       	ld	r18, Y
    4c48:	39 81       	ldd	r19, Y+1	; 0x01
    4c4a:	c7 5d       	subi	r28, 0xD7	; 215
    4c4c:	d0 40       	sbci	r29, 0x00	; 0
    4c4e:	22 0f       	add	r18, r18
    4c50:	33 1f       	adc	r19, r19
    4c52:	22 0f       	add	r18, r18
    4c54:	33 1f       	adc	r19, r19
    4c56:	22 0f       	add	r18, r18
    4c58:	33 1f       	adc	r19, r19
    4c5a:	82 2b       	or	r24, r18
    4c5c:	93 2b       	or	r25, r19
    4c5e:	48 9f       	mul	r20, r24
    4c60:	f0 01       	movw	r30, r0
    4c62:	49 9f       	mul	r20, r25
    4c64:	f0 0d       	add	r31, r0
    4c66:	11 24       	eor	r1, r1
    4c68:	e0 54       	subi	r30, 0x40	; 64
    4c6a:	ff 4d       	sbci	r31, 0xDF	; 223
    4c6c:	25 85       	ldd	r18, Z+13	; 0x0d
    4c6e:	c6 52       	subi	r28, 0x26	; 38
    4c70:	df 4f       	sbci	r29, 0xFF	; 255
    4c72:	28 83       	st	Y, r18
    4c74:	ca 5d       	subi	r28, 0xDA	; 218
    4c76:	d0 40       	sbci	r29, 0x00	; 0
    4c78:	c7 52       	subi	r28, 0x27	; 39
    4c7a:	df 4f       	sbci	r29, 0xFF	; 255
    4c7c:	18 82       	st	Y, r1
    4c7e:	c9 5d       	subi	r28, 0xD9	; 217
    4c80:	d0 40       	sbci	r29, 0x00	; 0
    4c82:	be 2d       	mov	r27, r14
    4c84:	bb 1f       	adc	r27, r27
    4c86:	bb 27       	eor	r27, r27
    4c88:	bb 1f       	adc	r27, r27
    4c8a:	8b 2f       	mov	r24, r27
    4c8c:	90 e0       	ldi	r25, 0x00	; 0
    4c8e:	88 0f       	add	r24, r24
    4c90:	99 1f       	adc	r25, r25
    4c92:	88 0f       	add	r24, r24
    4c94:	99 1f       	adc	r25, r25
    4c96:	f6 fa       	bst	r15, 6
    4c98:	ff 24       	eor	r15, r15
    4c9a:	f0 f8       	bld	r15, 0
    4c9c:	c5 52       	subi	r28, 0x25	; 37
    4c9e:	df 4f       	sbci	r29, 0xFF	; 255
    4ca0:	f8 82       	st	Y, r15
    4ca2:	cb 5d       	subi	r28, 0xDB	; 219
    4ca4:	d0 40       	sbci	r29, 0x00	; 0
    4ca6:	c4 52       	subi	r28, 0x24	; 36
    4ca8:	df 4f       	sbci	r29, 0xFF	; 255
    4caa:	18 82       	st	Y, r1
    4cac:	cc 5d       	subi	r28, 0xDC	; 220
    4cae:	d0 40       	sbci	r29, 0x00	; 0
    4cb0:	c5 52       	subi	r28, 0x25	; 37
    4cb2:	df 4f       	sbci	r29, 0xFF	; 255
    4cb4:	a8 81       	ld	r26, Y
    4cb6:	b9 81       	ldd	r27, Y+1	; 0x01
    4cb8:	cb 5d       	subi	r28, 0xDB	; 219
    4cba:	d0 40       	sbci	r29, 0x00	; 0
    4cbc:	8a 2b       	or	r24, r26
    4cbe:	9b 2b       	or	r25, r27
    4cc0:	72 95       	swap	r23
    4cc2:	71 70       	andi	r23, 0x01	; 1
    4cc4:	c3 52       	subi	r28, 0x23	; 35
    4cc6:	df 4f       	sbci	r29, 0xFF	; 255
    4cc8:	78 83       	st	Y, r23
    4cca:	cd 5d       	subi	r28, 0xDD	; 221
    4ccc:	d0 40       	sbci	r29, 0x00	; 0
    4cce:	c2 52       	subi	r28, 0x22	; 34
    4cd0:	df 4f       	sbci	r29, 0xFF	; 255
    4cd2:	18 82       	st	Y, r1
    4cd4:	ce 5d       	subi	r28, 0xDE	; 222
    4cd6:	d0 40       	sbci	r29, 0x00	; 0
    4cd8:	c3 52       	subi	r28, 0x23	; 35
    4cda:	df 4f       	sbci	r29, 0xFF	; 255
    4cdc:	28 81       	ld	r18, Y
    4cde:	39 81       	ldd	r19, Y+1	; 0x01
    4ce0:	cd 5d       	subi	r28, 0xDD	; 221
    4ce2:	d0 40       	sbci	r29, 0x00	; 0
    4ce4:	22 0f       	add	r18, r18
    4ce6:	33 1f       	adc	r19, r19
    4ce8:	82 2b       	or	r24, r18
    4cea:	93 2b       	or	r25, r19
    4cec:	65 fb       	bst	r22, 5
    4cee:	66 27       	eor	r22, r22
    4cf0:	60 f9       	bld	r22, 0
    4cf2:	c1 52       	subi	r28, 0x21	; 33
    4cf4:	df 4f       	sbci	r29, 0xFF	; 255
    4cf6:	68 83       	st	Y, r22
    4cf8:	cf 5d       	subi	r28, 0xDF	; 223
    4cfa:	d0 40       	sbci	r29, 0x00	; 0
    4cfc:	c0 52       	subi	r28, 0x20	; 32
    4cfe:	df 4f       	sbci	r29, 0xFF	; 255
    4d00:	18 82       	st	Y, r1
    4d02:	c0 5e       	subi	r28, 0xE0	; 224
    4d04:	d0 40       	sbci	r29, 0x00	; 0
    4d06:	c1 52       	subi	r28, 0x21	; 33
    4d08:	df 4f       	sbci	r29, 0xFF	; 255
    4d0a:	28 81       	ld	r18, Y
    4d0c:	39 81       	ldd	r19, Y+1	; 0x01
    4d0e:	cf 5d       	subi	r28, 0xDF	; 223
    4d10:	d0 40       	sbci	r29, 0x00	; 0
    4d12:	22 0f       	add	r18, r18
    4d14:	33 1f       	adc	r19, r19
    4d16:	22 0f       	add	r18, r18
    4d18:	33 1f       	adc	r19, r19
    4d1a:	22 0f       	add	r18, r18
    4d1c:	33 1f       	adc	r19, r19
    4d1e:	82 2b       	or	r24, r18
    4d20:	93 2b       	or	r25, r19
    4d22:	48 9f       	mul	r20, r24
    4d24:	f0 01       	movw	r30, r0
    4d26:	49 9f       	mul	r20, r25
    4d28:	f0 0d       	add	r31, r0
    4d2a:	11 24       	eor	r1, r1
    4d2c:	e0 54       	subi	r30, 0x40	; 64
    4d2e:	ff 4d       	sbci	r31, 0xDF	; 223
    4d30:	87 85       	ldd	r24, Z+15	; 0x0f
    4d32:	90 89       	ldd	r25, Z+16	; 0x10
    4d34:	c7 52       	subi	r28, 0x27	; 39
    4d36:	df 4f       	sbci	r29, 0xFF	; 255
    4d38:	e8 81       	ld	r30, Y
    4d3a:	f9 81       	ldd	r31, Y+1	; 0x01
    4d3c:	c9 5d       	subi	r28, 0xD9	; 217
    4d3e:	d0 40       	sbci	r29, 0x00	; 0
    4d40:	8e 2b       	or	r24, r30
    4d42:	9f 2b       	or	r25, r31
    4d44:	85 9f       	mul	r24, r21
    4d46:	80 2d       	mov	r24, r0
    4d48:	11 24       	eor	r1, r1
    4d4a:	80 93 a3 23 	sts	0x23A3, r24
    4d4e:	a8 e0       	ldi	r26, 0x08	; 8
    4d50:	b6 e0       	ldi	r27, 0x06	; 6
    4d52:	fc 90       	ld	r15, X
    4d54:	7c 91       	ld	r23, X
    4d56:	ec 90       	ld	r14, X
    4d58:	6c 91       	ld	r22, X
    4d5a:	3c 91       	ld	r19, X
    4d5c:	2c 91       	ld	r18, X
    4d5e:	8c 91       	ld	r24, X
    4d60:	ac 91       	ld	r26, X
    4d62:	88 1f       	adc	r24, r24
    4d64:	88 27       	eor	r24, r24
    4d66:	88 1f       	adc	r24, r24
    4d68:	90 e0       	ldi	r25, 0x00	; 0
    4d6a:	88 0f       	add	r24, r24
    4d6c:	99 1f       	adc	r25, r25
    4d6e:	88 0f       	add	r24, r24
    4d70:	99 1f       	adc	r25, r25
    4d72:	36 fb       	bst	r19, 6
    4d74:	33 27       	eor	r19, r19
    4d76:	30 f9       	bld	r19, 0
    4d78:	cf 51       	subi	r28, 0x1F	; 31
    4d7a:	df 4f       	sbci	r29, 0xFF	; 255
    4d7c:	38 83       	st	Y, r19
    4d7e:	c1 5e       	subi	r28, 0xE1	; 225
    4d80:	d0 40       	sbci	r29, 0x00	; 0
    4d82:	ce 51       	subi	r28, 0x1E	; 30
    4d84:	df 4f       	sbci	r29, 0xFF	; 255
    4d86:	18 82       	st	Y, r1
    4d88:	c2 5e       	subi	r28, 0xE2	; 226
    4d8a:	d0 40       	sbci	r29, 0x00	; 0
    4d8c:	cf 51       	subi	r28, 0x1F	; 31
    4d8e:	df 4f       	sbci	r29, 0xFF	; 255
    4d90:	e8 81       	ld	r30, Y
    4d92:	f9 81       	ldd	r31, Y+1	; 0x01
    4d94:	c1 5e       	subi	r28, 0xE1	; 225
    4d96:	d0 40       	sbci	r29, 0x00	; 0
    4d98:	8e 2b       	or	r24, r30
    4d9a:	9f 2b       	or	r25, r31
    4d9c:	22 95       	swap	r18
    4d9e:	21 70       	andi	r18, 0x01	; 1
    4da0:	cd 51       	subi	r28, 0x1D	; 29
    4da2:	df 4f       	sbci	r29, 0xFF	; 255
    4da4:	28 83       	st	Y, r18
    4da6:	c3 5e       	subi	r28, 0xE3	; 227
    4da8:	d0 40       	sbci	r29, 0x00	; 0
    4daa:	cc 51       	subi	r28, 0x1C	; 28
    4dac:	df 4f       	sbci	r29, 0xFF	; 255
    4dae:	18 82       	st	Y, r1
    4db0:	c4 5e       	subi	r28, 0xE4	; 228
    4db2:	d0 40       	sbci	r29, 0x00	; 0
    4db4:	cd 51       	subi	r28, 0x1D	; 29
    4db6:	df 4f       	sbci	r29, 0xFF	; 255
    4db8:	28 81       	ld	r18, Y
    4dba:	39 81       	ldd	r19, Y+1	; 0x01
    4dbc:	c3 5e       	subi	r28, 0xE3	; 227
    4dbe:	d0 40       	sbci	r29, 0x00	; 0
    4dc0:	22 0f       	add	r18, r18
    4dc2:	33 1f       	adc	r19, r19
    4dc4:	82 2b       	or	r24, r18
    4dc6:	93 2b       	or	r25, r19
    4dc8:	a5 fb       	bst	r26, 5
    4dca:	aa 27       	eor	r26, r26
    4dcc:	a0 f9       	bld	r26, 0
    4dce:	cb 51       	subi	r28, 0x1B	; 27
    4dd0:	df 4f       	sbci	r29, 0xFF	; 255
    4dd2:	a8 83       	st	Y, r26
    4dd4:	c5 5e       	subi	r28, 0xE5	; 229
    4dd6:	d0 40       	sbci	r29, 0x00	; 0
    4dd8:	ca 51       	subi	r28, 0x1A	; 26
    4dda:	df 4f       	sbci	r29, 0xFF	; 255
    4ddc:	18 82       	st	Y, r1
    4dde:	c6 5e       	subi	r28, 0xE6	; 230
    4de0:	d0 40       	sbci	r29, 0x00	; 0
    4de2:	cb 51       	subi	r28, 0x1B	; 27
    4de4:	df 4f       	sbci	r29, 0xFF	; 255
    4de6:	28 81       	ld	r18, Y
    4de8:	39 81       	ldd	r19, Y+1	; 0x01
    4dea:	c5 5e       	subi	r28, 0xE5	; 229
    4dec:	d0 40       	sbci	r29, 0x00	; 0
    4dee:	22 0f       	add	r18, r18
    4df0:	33 1f       	adc	r19, r19
    4df2:	22 0f       	add	r18, r18
    4df4:	33 1f       	adc	r19, r19
    4df6:	22 0f       	add	r18, r18
    4df8:	33 1f       	adc	r19, r19
    4dfa:	82 2b       	or	r24, r18
    4dfc:	93 2b       	or	r25, r19
    4dfe:	48 9f       	mul	r20, r24
    4e00:	f0 01       	movw	r30, r0
    4e02:	49 9f       	mul	r20, r25
    4e04:	f0 0d       	add	r31, r0
    4e06:	11 24       	eor	r1, r1
    4e08:	e0 54       	subi	r30, 0x40	; 64
    4e0a:	ff 4d       	sbci	r31, 0xDF	; 223
    4e0c:	25 85       	ldd	r18, Z+13	; 0x0d
    4e0e:	c8 51       	subi	r28, 0x18	; 24
    4e10:	df 4f       	sbci	r29, 0xFF	; 255
    4e12:	28 83       	st	Y, r18
    4e14:	c8 5e       	subi	r28, 0xE8	; 232
    4e16:	d0 40       	sbci	r29, 0x00	; 0
    4e18:	c9 51       	subi	r28, 0x19	; 25
    4e1a:	df 4f       	sbci	r29, 0xFF	; 255
    4e1c:	18 82       	st	Y, r1
    4e1e:	c7 5e       	subi	r28, 0xE7	; 231
    4e20:	d0 40       	sbci	r29, 0x00	; 0
    4e22:	be 2d       	mov	r27, r14
    4e24:	bb 1f       	adc	r27, r27
    4e26:	bb 27       	eor	r27, r27
    4e28:	bb 1f       	adc	r27, r27
    4e2a:	8b 2f       	mov	r24, r27
    4e2c:	90 e0       	ldi	r25, 0x00	; 0
    4e2e:	88 0f       	add	r24, r24
    4e30:	99 1f       	adc	r25, r25
    4e32:	88 0f       	add	r24, r24
    4e34:	99 1f       	adc	r25, r25
    4e36:	f6 fa       	bst	r15, 6
    4e38:	ff 24       	eor	r15, r15
    4e3a:	f0 f8       	bld	r15, 0
    4e3c:	c7 51       	subi	r28, 0x17	; 23
    4e3e:	df 4f       	sbci	r29, 0xFF	; 255
    4e40:	f8 82       	st	Y, r15
    4e42:	c9 5e       	subi	r28, 0xE9	; 233
    4e44:	d0 40       	sbci	r29, 0x00	; 0
    4e46:	c6 51       	subi	r28, 0x16	; 22
    4e48:	df 4f       	sbci	r29, 0xFF	; 255
    4e4a:	18 82       	st	Y, r1
    4e4c:	ca 5e       	subi	r28, 0xEA	; 234
    4e4e:	d0 40       	sbci	r29, 0x00	; 0
    4e50:	c7 51       	subi	r28, 0x17	; 23
    4e52:	df 4f       	sbci	r29, 0xFF	; 255
    4e54:	a8 81       	ld	r26, Y
    4e56:	b9 81       	ldd	r27, Y+1	; 0x01
    4e58:	c9 5e       	subi	r28, 0xE9	; 233
    4e5a:	d0 40       	sbci	r29, 0x00	; 0
    4e5c:	8a 2b       	or	r24, r26
    4e5e:	9b 2b       	or	r25, r27
    4e60:	74 fb       	bst	r23, 4
    4e62:	aa 24       	eor	r10, r10
    4e64:	a0 f8       	bld	r10, 0
    4e66:	b1 2c       	mov	r11, r1
    4e68:	95 01       	movw	r18, r10
    4e6a:	22 0f       	add	r18, r18
    4e6c:	33 1f       	adc	r19, r19
    4e6e:	82 2b       	or	r24, r18
    4e70:	93 2b       	or	r25, r19
    4e72:	65 fb       	bst	r22, 5
    4e74:	cc 24       	eor	r12, r12
    4e76:	c0 f8       	bld	r12, 0
    4e78:	d1 2c       	mov	r13, r1
    4e7a:	96 01       	movw	r18, r12
    4e7c:	22 0f       	add	r18, r18
    4e7e:	33 1f       	adc	r19, r19
    4e80:	22 0f       	add	r18, r18
    4e82:	33 1f       	adc	r19, r19
    4e84:	22 0f       	add	r18, r18
    4e86:	33 1f       	adc	r19, r19
    4e88:	82 2b       	or	r24, r18
    4e8a:	93 2b       	or	r25, r19
    4e8c:	48 9f       	mul	r20, r24
    4e8e:	f0 01       	movw	r30, r0
    4e90:	49 9f       	mul	r20, r25
    4e92:	f0 0d       	add	r31, r0
    4e94:	11 24       	eor	r1, r1
    4e96:	e0 54       	subi	r30, 0x40	; 64
    4e98:	ff 4d       	sbci	r31, 0xDF	; 223
    4e9a:	27 85       	ldd	r18, Z+15	; 0x0f
    4e9c:	30 89       	ldd	r19, Z+16	; 0x10
    4e9e:	c9 51       	subi	r28, 0x19	; 25
    4ea0:	df 4f       	sbci	r29, 0xFF	; 255
    4ea2:	e8 81       	ld	r30, Y
    4ea4:	f9 81       	ldd	r31, Y+1	; 0x01
    4ea6:	c7 5e       	subi	r28, 0xE7	; 231
    4ea8:	d0 40       	sbci	r29, 0x00	; 0
    4eaa:	2e 2b       	or	r18, r30
    4eac:	3f 2b       	or	r19, r31
    4eae:	52 9f       	mul	r21, r18
    4eb0:	c0 01       	movw	r24, r0
    4eb2:	53 9f       	mul	r21, r19
    4eb4:	90 0d       	add	r25, r0
    4eb6:	11 24       	eor	r1, r1
    4eb8:	90 93 a4 23 	sts	0x23A4, r25
    4ebc:	d8 01       	movw	r26, r16
    4ebe:	9c 91       	ld	r25, X
    4ec0:	11 96       	adiw	r26, 0x01	; 1
    4ec2:	8c 91       	ld	r24, X
    4ec4:	90 93 a5 23 	sts	0x23A5, r25
    4ec8:	80 93 a6 23 	sts	0x23A6, r24
    4ecc:	f4 01       	movw	r30, r8
    4ece:	90 81       	ld	r25, Z
    4ed0:	81 81       	ldd	r24, Z+1	; 0x01
    4ed2:	90 93 a7 23 	sts	0x23A7, r25
    4ed6:	80 93 a8 23 	sts	0x23A8, r24
    4eda:	d1 01       	movw	r26, r2
    4edc:	9c 91       	ld	r25, X
    4ede:	11 96       	adiw	r26, 0x01	; 1
    4ee0:	8c 91       	ld	r24, X
    4ee2:	90 93 a9 23 	sts	0x23A9, r25
    4ee6:	80 93 aa 23 	sts	0x23AA, r24
    4eea:	e3 ec       	ldi	r30, 0xC3	; 195
    4eec:	f3 e2       	ldi	r31, 0x23	; 35
    4eee:	90 81       	ld	r25, Z
    4ef0:	80 91 c4 23 	lds	r24, 0x23C4
    4ef4:	90 93 ab 23 	sts	0x23AB, r25
    4ef8:	80 93 ac 23 	sts	0x23AC, r24
    4efc:	80 91 b3 20 	lds	r24, 0x20B3
    4f00:	90 91 b4 20 	lds	r25, 0x20B4
    4f04:	95 95       	asr	r25
    4f06:	87 95       	ror	r24
    4f08:	95 95       	asr	r25
    4f0a:	87 95       	ror	r24
    4f0c:	95 95       	asr	r25
    4f0e:	87 95       	ror	r24
    4f10:	95 95       	asr	r25
    4f12:	87 95       	ror	r24
    4f14:	80 93 ad 23 	sts	0x23AD, r24
    4f18:	60 e2       	ldi	r22, 0x20	; 32
    4f1a:	70 e0       	ldi	r23, 0x00	; 0
    4f1c:	8d e9       	ldi	r24, 0x9D	; 157
    4f1e:	93 e2       	ldi	r25, 0x23	; 35
    4f20:	78 d2       	rcall	.+1264   	; 0x5412 <NRF24L01_L_Write_TX_Buf>
    4f22:	67 d1       	rcall	.+718    	; 0x51f2 <NRF24L01_L_RF_TX>
    4f24:	fa e0       	ldi	r31, 0x0A	; 10
    4f26:	fa 95       	dec	r31
    4f28:	f1 f7       	brne	.-4      	; 0x4f26 <__stack+0xf27>
    4f2a:	00 c0       	rjmp	.+0      	; 0x4f2c <__stack+0xf2d>
    4f2c:	0c 94 77 19 	jmp	0x32ee	; 0x32ee <main+0x226>

00004f30 <__vector_119>:
int buff_d_temp;
int buff_u_temp;
unsigned char reply2_tmp;

ISR(USARTF0_RXC_vect)        ///////////Driver M.2  &  M.3
{
    4f30:	1f 92       	push	r1
    4f32:	0f 92       	push	r0
    4f34:	0f b6       	in	r0, 0x3f	; 63
    4f36:	0f 92       	push	r0
    4f38:	11 24       	eor	r1, r1
    4f3a:	08 b6       	in	r0, 0x38	; 56
    4f3c:	0f 92       	push	r0
    4f3e:	18 be       	out	0x38, r1	; 56
    4f40:	0b b6       	in	r0, 0x3b	; 59
    4f42:	0f 92       	push	r0
    4f44:	1b be       	out	0x3b, r1	; 59
    4f46:	2f 93       	push	r18
    4f48:	8f 93       	push	r24
    4f4a:	9f 93       	push	r25
    4f4c:	ef 93       	push	r30
    4f4e:	ff 93       	push	r31
	
	//char buff_reply [16];
	unsigned char data;
	data=USARTF0_DATA;
    4f50:	20 91 a0 0b 	lds	r18, 0x0BA0
	
	

	switch(ask_cnt0)
    4f54:	80 91 a8 20 	lds	r24, 0x20A8
    4f58:	90 91 a9 20 	lds	r25, 0x20A9
    4f5c:	89 30       	cpi	r24, 0x09	; 9
    4f5e:	91 05       	cpc	r25, r1
    4f60:	08 f0       	brcs	.+2      	; 0x4f64 <__vector_119+0x34>
    4f62:	aa c0       	rjmp	.+340    	; 0x50b8 <__vector_119+0x188>
    4f64:	fc 01       	movw	r30, r24
    4f66:	e6 50       	subi	r30, 0x06	; 6
    4f68:	ff 4f       	sbci	r31, 0xFF	; 255
    4f6a:	96 c2       	rjmp	.+1324   	; 0x5498 <__tablejump2__>
	{
		case 0:
		if (data== '*')
    4f6c:	2a 32       	cpi	r18, 0x2A	; 42
    4f6e:	09 f0       	breq	.+2      	; 0x4f72 <__vector_119+0x42>
    4f70:	a3 c0       	rjmp	.+326    	; 0x50b8 <__vector_119+0x188>
		{
			LED_Green_PORT.OUTTGL = LED_Green_PIN_bm;
    4f72:	84 e0       	ldi	r24, 0x04	; 4
    4f74:	e0 e6       	ldi	r30, 0x60	; 96
    4f76:	f6 e0       	ldi	r31, 0x06	; 6
    4f78:	87 83       	std	Z+7, r24	; 0x07
			ask_cnt0++;
    4f7a:	81 e0       	ldi	r24, 0x01	; 1
    4f7c:	90 e0       	ldi	r25, 0x00	; 0
    4f7e:	80 93 a8 20 	sts	0x20A8, r24
    4f82:	90 93 a9 20 	sts	0x20A9, r25
    4f86:	98 c0       	rjmp	.+304    	; 0x50b8 <__vector_119+0x188>
		}
		break;

		case 1:
		buff_reply_tmp0=data&0x0ff;
    4f88:	82 2f       	mov	r24, r18
    4f8a:	90 e0       	ldi	r25, 0x00	; 0
    4f8c:	80 93 58 24 	sts	0x2458, r24
    4f90:	90 93 59 24 	sts	0x2459, r25
		//tmp=data;
		ask_cnt0++;
    4f94:	82 e0       	ldi	r24, 0x02	; 2
    4f96:	90 e0       	ldi	r25, 0x00	; 0
    4f98:	80 93 a8 20 	sts	0x20A8, r24
    4f9c:	90 93 a9 20 	sts	0x20A9, r25
		break;
    4fa0:	8b c0       	rjmp	.+278    	; 0x50b8 <__vector_119+0x188>

		case 2:
		buff_reply_tmp0|=(data<<8)&0x0ff00;
    4fa2:	80 91 58 24 	lds	r24, 0x2458
    4fa6:	90 91 59 24 	lds	r25, 0x2459
    4faa:	92 2b       	or	r25, r18
    4fac:	80 93 58 24 	sts	0x2458, r24
    4fb0:	90 93 59 24 	sts	0x2459, r25
		//master=data;
		ask_cnt0++;
    4fb4:	83 e0       	ldi	r24, 0x03	; 3
    4fb6:	90 e0       	ldi	r25, 0x00	; 0
    4fb8:	80 93 a8 20 	sts	0x20A8, r24
    4fbc:	90 93 a9 20 	sts	0x20A9, r25
		break;
    4fc0:	7b c0       	rjmp	.+246    	; 0x50b8 <__vector_119+0x188>

		case 3:
		reply2_tmp = data;
    4fc2:	20 93 e6 23 	sts	0x23E6, r18
		ask_cnt0++;
    4fc6:	84 e0       	ldi	r24, 0x04	; 4
    4fc8:	90 e0       	ldi	r25, 0x00	; 0
    4fca:	80 93 a8 20 	sts	0x20A8, r24
    4fce:	90 93 a9 20 	sts	0x20A9, r25
		break;
    4fd2:	72 c0       	rjmp	.+228    	; 0x50b8 <__vector_119+0x188>

		case 4:
		buff_p_temp=data&0x0ff;
    4fd4:	82 2f       	mov	r24, r18
    4fd6:	90 e0       	ldi	r25, 0x00	; 0
    4fd8:	80 93 bd 23 	sts	0x23BD, r24
    4fdc:	90 93 be 23 	sts	0x23BE, r25
		ask_cnt0++;
    4fe0:	85 e0       	ldi	r24, 0x05	; 5
    4fe2:	90 e0       	ldi	r25, 0x00	; 0
    4fe4:	80 93 a8 20 	sts	0x20A8, r24
    4fe8:	90 93 a9 20 	sts	0x20A9, r25
		break;
    4fec:	65 c0       	rjmp	.+202    	; 0x50b8 <__vector_119+0x188>
		
		case 5:
		buff_p_temp|=(data<<8)&0x0ff00;
    4fee:	80 91 bd 23 	lds	r24, 0x23BD
    4ff2:	90 91 be 23 	lds	r25, 0x23BE
    4ff6:	92 2b       	or	r25, r18
    4ff8:	80 93 bd 23 	sts	0x23BD, r24
    4ffc:	90 93 be 23 	sts	0x23BE, r25
		ask_cnt0++;
    5000:	86 e0       	ldi	r24, 0x06	; 6
    5002:	90 e0       	ldi	r25, 0x00	; 0
    5004:	80 93 a8 20 	sts	0x20A8, r24
    5008:	90 93 a9 20 	sts	0x20A9, r25
		break;
    500c:	55 c0       	rjmp	.+170    	; 0x50b8 <__vector_119+0x188>
		
		case 6:
		buff_i_temp=data&0x0ff;
    500e:	82 2f       	mov	r24, r18
    5010:	90 e0       	ldi	r25, 0x00	; 0
    5012:	80 93 e7 23 	sts	0x23E7, r24
    5016:	90 93 e8 23 	sts	0x23E8, r25
		ask_cnt0++;
    501a:	87 e0       	ldi	r24, 0x07	; 7
    501c:	90 e0       	ldi	r25, 0x00	; 0
    501e:	80 93 a8 20 	sts	0x20A8, r24
    5022:	90 93 a9 20 	sts	0x20A9, r25
		break;
    5026:	48 c0       	rjmp	.+144    	; 0x50b8 <__vector_119+0x188>
		
		case 7:
		buff_i_temp|=(data<<8)&0x0ff00;
    5028:	80 91 e7 23 	lds	r24, 0x23E7
    502c:	90 91 e8 23 	lds	r25, 0x23E8
    5030:	92 2b       	or	r25, r18
    5032:	80 93 e7 23 	sts	0x23E7, r24
    5036:	90 93 e8 23 	sts	0x23E8, r25
		ask_cnt0++;
    503a:	88 e0       	ldi	r24, 0x08	; 8
    503c:	90 e0       	ldi	r25, 0x00	; 0
    503e:	80 93 a8 20 	sts	0x20A8, r24
    5042:	90 93 a9 20 	sts	0x20A9, r25
		break;
    5046:	38 c0       	rjmp	.+112    	; 0x50b8 <__vector_119+0x188>
		//ask_cnt++;
		//break;


		case 8:
		if (data=='#')
    5048:	23 32       	cpi	r18, 0x23	; 35
    504a:	91 f5       	brne	.+100    	; 0x50b0 <__vector_119+0x180>
		{
			
			
			switch(reply2_tmp)
    504c:	20 91 e6 23 	lds	r18, 0x23E6
    5050:	22 30       	cpi	r18, 0x02	; 2
    5052:	19 f0       	breq	.+6      	; 0x505a <__vector_119+0x12a>
    5054:	23 30       	cpi	r18, 0x03	; 3
    5056:	51 f0       	breq	.+20     	; 0x506c <__vector_119+0x13c>
    5058:	11 c0       	rjmp	.+34     	; 0x507c <__vector_119+0x14c>
			{
				case 2:
				M2.Hall=buff_reply_tmp0;
    505a:	80 91 58 24 	lds	r24, 0x2458
    505e:	90 91 59 24 	lds	r25, 0x2459
    5062:	80 93 3a 24 	sts	0x243A, r24
    5066:	90 93 3b 24 	sts	0x243B, r25
				break;
    506a:	08 c0       	rjmp	.+16     	; 0x507c <__vector_119+0x14c>
				
				case 3:
				M3.Hall=buff_reply_tmp0;
    506c:	80 91 58 24 	lds	r24, 0x2458
    5070:	90 91 59 24 	lds	r25, 0x2459
    5074:	80 93 c1 23 	sts	0x23C1, r24
    5078:	90 93 c2 23 	sts	0x23C2, r25
				break;
			}
			driver_Data0=buff_p_temp;
    507c:	80 91 bd 23 	lds	r24, 0x23BD
    5080:	90 91 be 23 	lds	r25, 0x23BE
    5084:	80 93 9a 23 	sts	0x239A, r24
    5088:	90 93 9b 23 	sts	0x239B, r25
			driver_Data1=buff_i_temp;
    508c:	80 91 e7 23 	lds	r24, 0x23E7
    5090:	90 91 e8 23 	lds	r25, 0x23E8
    5094:	80 93 56 24 	sts	0x2456, r24
    5098:	90 93 57 24 	sts	0x2457, r25
			buff_reply=buff_reply_tmp0;
    509c:	80 91 58 24 	lds	r24, 0x2458
    50a0:	90 91 59 24 	lds	r25, 0x2459
    50a4:	80 93 7b 23 	sts	0x237B, r24
    50a8:	90 93 7c 23 	sts	0x237C, r25
			reply2 = reply2_tmp;
    50ac:	20 93 e1 21 	sts	0x21E1, r18


			//flg_reply=0;
			ask_cnt0=0;
		}
		ask_cnt0=0;
    50b0:	10 92 a8 20 	sts	0x20A8, r1
    50b4:	10 92 a9 20 	sts	0x20A9, r1
		break;
	}
}
    50b8:	ff 91       	pop	r31
    50ba:	ef 91       	pop	r30
    50bc:	9f 91       	pop	r25
    50be:	8f 91       	pop	r24
    50c0:	2f 91       	pop	r18
    50c2:	0f 90       	pop	r0
    50c4:	0b be       	out	0x3b, r0	; 59
    50c6:	0f 90       	pop	r0
    50c8:	08 be       	out	0x38, r0	; 56
    50ca:	0f 90       	pop	r0
    50cc:	0f be       	out	0x3f, r0	; 63
    50ce:	0f 90       	pop	r0
    50d0:	1f 90       	pop	r1
    50d2:	18 95       	reti

000050d4 <__vector_122>:


ISR(USARTF1_RXC_vect)   ///////////// Driver  M.0  &  M.1
{
    50d4:	1f 92       	push	r1
    50d6:	0f 92       	push	r0
    50d8:	0f b6       	in	r0, 0x3f	; 63
    50da:	0f 92       	push	r0
    50dc:	11 24       	eor	r1, r1
    50de:	08 b6       	in	r0, 0x38	; 56
    50e0:	0f 92       	push	r0
    50e2:	18 be       	out	0x38, r1	; 56
    50e4:	0b b6       	in	r0, 0x3b	; 59
    50e6:	0f 92       	push	r0
    50e8:	1b be       	out	0x3b, r1	; 59
    50ea:	2f 93       	push	r18
    50ec:	8f 93       	push	r24
    50ee:	9f 93       	push	r25
    50f0:	ef 93       	push	r30
    50f2:	ff 93       	push	r31
	
	
	unsigned char data;
	data=USARTF1_DATA;
    50f4:	20 91 b0 0b 	lds	r18, 0x0BB0

	


	switch(ask_cnt1)
    50f8:	80 91 a6 20 	lds	r24, 0x20A6
    50fc:	90 91 a7 20 	lds	r25, 0x20A7
    5100:	82 30       	cpi	r24, 0x02	; 2
    5102:	91 05       	cpc	r25, r1
    5104:	39 f1       	breq	.+78     	; 0x5154 <__vector_122+0x80>
    5106:	2c f4       	brge	.+10     	; 0x5112 <__vector_122+0x3e>
    5108:	00 97       	sbiw	r24, 0x00	; 0
    510a:	49 f0       	breq	.+18     	; 0x511e <__vector_122+0x4a>
    510c:	01 97       	sbiw	r24, 0x01	; 1
    510e:	a9 f0       	breq	.+42     	; 0x513a <__vector_122+0x66>
    5110:	62 c0       	rjmp	.+196    	; 0x51d6 <__vector_122+0x102>
    5112:	83 30       	cpi	r24, 0x03	; 3
    5114:	91 05       	cpc	r25, r1
    5116:	71 f1       	breq	.+92     	; 0x5174 <__vector_122+0xa0>
    5118:	04 97       	sbiw	r24, 0x04	; 4
    511a:	a9 f1       	breq	.+106    	; 0x5186 <__vector_122+0xb2>
    511c:	5c c0       	rjmp	.+184    	; 0x51d6 <__vector_122+0x102>
	{
		case 0:
		if (data== '*')
    511e:	2a 32       	cpi	r18, 0x2A	; 42
    5120:	09 f0       	breq	.+2      	; 0x5124 <__vector_122+0x50>
    5122:	59 c0       	rjmp	.+178    	; 0x51d6 <__vector_122+0x102>
		{
			LED_Red_PORT.OUTTGL=LED_Red_PIN_bm;
    5124:	80 e2       	ldi	r24, 0x20	; 32
    5126:	e0 e6       	ldi	r30, 0x60	; 96
    5128:	f6 e0       	ldi	r31, 0x06	; 6
    512a:	87 83       	std	Z+7, r24	; 0x07
			ask_cnt1++;
    512c:	81 e0       	ldi	r24, 0x01	; 1
    512e:	90 e0       	ldi	r25, 0x00	; 0
    5130:	80 93 a6 20 	sts	0x20A6, r24
    5134:	90 93 a7 20 	sts	0x20A7, r25
    5138:	4e c0       	rjmp	.+156    	; 0x51d6 <__vector_122+0x102>
		}
		break;

		case 1:
		buff_reply_tmp1=data&0x0ff;
    513a:	82 2f       	mov	r24, r18
    513c:	90 e0       	ldi	r25, 0x00	; 0
    513e:	80 93 31 24 	sts	0x2431, r24
    5142:	90 93 32 24 	sts	0x2432, r25
		ask_cnt1++;
    5146:	82 e0       	ldi	r24, 0x02	; 2
    5148:	90 e0       	ldi	r25, 0x00	; 0
    514a:	80 93 a6 20 	sts	0x20A6, r24
    514e:	90 93 a7 20 	sts	0x20A7, r25
		break;
    5152:	41 c0       	rjmp	.+130    	; 0x51d6 <__vector_122+0x102>

		case 2:
		buff_reply_tmp1|=(data<<8)&0x0ff00;
    5154:	80 91 31 24 	lds	r24, 0x2431
    5158:	90 91 32 24 	lds	r25, 0x2432
    515c:	92 2b       	or	r25, r18
    515e:	80 93 31 24 	sts	0x2431, r24
    5162:	90 93 32 24 	sts	0x2432, r25
		ask_cnt1++;
    5166:	83 e0       	ldi	r24, 0x03	; 3
    5168:	90 e0       	ldi	r25, 0x00	; 0
    516a:	80 93 a6 20 	sts	0x20A6, r24
    516e:	90 93 a7 20 	sts	0x20A7, r25
		break;
    5172:	31 c0       	rjmp	.+98     	; 0x51d6 <__vector_122+0x102>

		case 3:
		reply2_tmp = data;
    5174:	20 93 e6 23 	sts	0x23E6, r18
		ask_cnt1++;
    5178:	84 e0       	ldi	r24, 0x04	; 4
    517a:	90 e0       	ldi	r25, 0x00	; 0
    517c:	80 93 a6 20 	sts	0x20A6, r24
    5180:	90 93 a7 20 	sts	0x20A7, r25
		break;
    5184:	28 c0       	rjmp	.+80     	; 0x51d6 <__vector_122+0x102>
		//ask_cnt++;
		//break;


		case 4:
		if (data=='#')
    5186:	23 32       	cpi	r18, 0x23	; 35
    5188:	11 f5       	brne	.+68     	; 0x51ce <__vector_122+0xfa>
		{

			switch(reply2_tmp)
    518a:	20 91 e6 23 	lds	r18, 0x23E6
    518e:	22 23       	and	r18, r18
    5190:	19 f0       	breq	.+6      	; 0x5198 <__vector_122+0xc4>
    5192:	21 30       	cpi	r18, 0x01	; 1
    5194:	51 f0       	breq	.+20     	; 0x51aa <__vector_122+0xd6>
    5196:	11 c0       	rjmp	.+34     	; 0x51ba <__vector_122+0xe6>
			{
				case 0:
				M0.Hall=buff_reply_tmp1;
    5198:	80 91 31 24 	lds	r24, 0x2431
    519c:	90 91 32 24 	lds	r25, 0x2432
    51a0:	80 93 85 23 	sts	0x2385, r24
    51a4:	90 93 86 23 	sts	0x2386, r25
				break;
    51a8:	08 c0       	rjmp	.+16     	; 0x51ba <__vector_122+0xe6>
				
				case 1:
				M1.Hall=buff_reply_tmp1;
    51aa:	80 91 31 24 	lds	r24, 0x2431
    51ae:	90 91 32 24 	lds	r25, 0x2432
    51b2:	80 93 1c 24 	sts	0x241C, r24
    51b6:	90 93 1d 24 	sts	0x241D, r25
				break;
			}
			
			//LED_Green_PORT.OUTTGL = LED_Green_PIN_bm;
			buff_reply=buff_reply_tmp1;
    51ba:	80 91 31 24 	lds	r24, 0x2431
    51be:	90 91 32 24 	lds	r25, 0x2432
    51c2:	80 93 7b 23 	sts	0x237B, r24
    51c6:	90 93 7c 23 	sts	0x237C, r25
			reply2 = reply2_tmp;
    51ca:	20 93 e1 21 	sts	0x21E1, r18


			//flg_reply=0;
			ask_cnt1=0;
		}
		ask_cnt1=0;
    51ce:	10 92 a6 20 	sts	0x20A6, r1
    51d2:	10 92 a7 20 	sts	0x20A7, r1
		break;
	}
	
}
    51d6:	ff 91       	pop	r31
    51d8:	ef 91       	pop	r30
    51da:	9f 91       	pop	r25
    51dc:	8f 91       	pop	r24
    51de:	2f 91       	pop	r18
    51e0:	0f 90       	pop	r0
    51e2:	0b be       	out	0x3b, r0	; 59
    51e4:	0f 90       	pop	r0
    51e6:	08 be       	out	0x38, r0	; 56
    51e8:	0f 90       	pop	r0
    51ea:	0f be       	out	0x3f, r0	; 63
    51ec:	0f 90       	pop	r0
    51ee:	1f 90       	pop	r1
    51f0:	18 95       	reti

000051f2 <NRF24L01_L_RF_TX>:
		NRF24L01_L_RF_TX();
	while ((NRF24L01_L_Get_Status() & _TX_DS) != _TX_DS)
	{
		
	}		
	NRF24L01_L_Clear_Interrupts();
    51f2:	e0 e8       	ldi	r30, 0x80	; 128
    51f4:	f6 e0       	ldi	r31, 0x06	; 6
    51f6:	82 e0       	ldi	r24, 0x02	; 2
    51f8:	86 83       	std	Z+6, r24	; 0x06
    51fa:	85 83       	std	Z+5, r24	; 0x05
    51fc:	8a e6       	ldi	r24, 0x6A	; 106
    51fe:	8a 95       	dec	r24
    5200:	f1 f7       	brne	.-4      	; 0x51fe <NRF24L01_L_RF_TX+0xc>
    5202:	00 c0       	rjmp	.+0      	; 0x5204 <NRF24L01_L_RF_TX+0x12>
    5204:	82 e0       	ldi	r24, 0x02	; 2
    5206:	86 83       	std	Z+6, r24	; 0x06
    5208:	08 95       	ret

0000520a <SPI_L>:
    520a:	e0 ec       	ldi	r30, 0xC0	; 192
    520c:	fa e0       	ldi	r31, 0x0A	; 10
    520e:	83 83       	std	Z+3, r24	; 0x03
    5210:	82 81       	ldd	r24, Z+2	; 0x02
    5212:	88 23       	and	r24, r24
    5214:	ec f7       	brge	.-6      	; 0x5210 <SPI_L+0x6>
    5216:	e0 ec       	ldi	r30, 0xC0	; 192
    5218:	fa e0       	ldi	r31, 0x0A	; 10
    521a:	83 81       	ldd	r24, Z+3	; 0x03
    521c:	08 95       	ret

0000521e <NRF24L01_L_ReadReg>:
    521e:	1f 93       	push	r17
    5220:	cf 93       	push	r28
    5222:	df 93       	push	r29
    5224:	c0 e8       	ldi	r28, 0x80	; 128
    5226:	d6 e0       	ldi	r29, 0x06	; 6
    5228:	10 e1       	ldi	r17, 0x10	; 16
    522a:	1e 83       	std	Y+6, r17	; 0x06
    522c:	ee df       	rcall	.-36     	; 0x520a <SPI_L>
    522e:	8f ef       	ldi	r24, 0xFF	; 255
    5230:	ec df       	rcall	.-40     	; 0x520a <SPI_L>
    5232:	1d 83       	std	Y+5, r17	; 0x05
    5234:	df 91       	pop	r29
    5236:	cf 91       	pop	r28
    5238:	1f 91       	pop	r17
    523a:	08 95       	ret

0000523c <NRF24L01_L_WriteReg>:
    523c:	ff 92       	push	r15
    523e:	0f 93       	push	r16
    5240:	1f 93       	push	r17
    5242:	cf 93       	push	r28
    5244:	df 93       	push	r29
    5246:	f6 2e       	mov	r15, r22
    5248:	c0 e8       	ldi	r28, 0x80	; 128
    524a:	d6 e0       	ldi	r29, 0x06	; 6
    524c:	10 e1       	ldi	r17, 0x10	; 16
    524e:	1e 83       	std	Y+6, r17	; 0x06
    5250:	dc df       	rcall	.-72     	; 0x520a <SPI_L>
    5252:	08 2f       	mov	r16, r24
    5254:	8f 2d       	mov	r24, r15
    5256:	d9 df       	rcall	.-78     	; 0x520a <SPI_L>
    5258:	1d 83       	std	Y+5, r17	; 0x05
    525a:	80 2f       	mov	r24, r16
    525c:	df 91       	pop	r29
    525e:	cf 91       	pop	r28
    5260:	1f 91       	pop	r17
    5262:	0f 91       	pop	r16
    5264:	ff 90       	pop	r15
    5266:	08 95       	ret

00005268 <NRF24L01_L_Set_CH>:
    5268:	68 2f       	mov	r22, r24
    526a:	6f 77       	andi	r22, 0x7F	; 127
    526c:	85 e2       	ldi	r24, 0x25	; 37
    526e:	e6 cf       	rjmp	.-52     	; 0x523c <NRF24L01_L_WriteReg>
    5270:	08 95       	ret

00005272 <NRF24L01_L_Set_ShockBurst>:
    5272:	cf 93       	push	r28
    5274:	c8 2f       	mov	r28, r24
    5276:	68 2f       	mov	r22, r24
    5278:	84 e2       	ldi	r24, 0x24	; 36
    527a:	e0 df       	rcall	.-64     	; 0x523c <NRF24L01_L_WriteReg>
    527c:	6c 2f       	mov	r22, r28
    527e:	81 e2       	ldi	r24, 0x21	; 33
    5280:	dd df       	rcall	.-70     	; 0x523c <NRF24L01_L_WriteReg>
    5282:	cf 91       	pop	r28
    5284:	08 95       	ret

00005286 <NRF24L01_L_Set_Address_Width>:
    5286:	63 e0       	ldi	r22, 0x03	; 3
    5288:	83 e2       	ldi	r24, 0x23	; 35
    528a:	d8 cf       	rjmp	.-80     	; 0x523c <NRF24L01_L_WriteReg>
    528c:	08 95       	ret

0000528e <NRF24L01_L_Clear_Interrupts>:
    528e:	60 e7       	ldi	r22, 0x70	; 112
    5290:	87 e2       	ldi	r24, 0x27	; 39
    5292:	d4 cf       	rjmp	.-88     	; 0x523c <NRF24L01_L_WriteReg>
    5294:	08 95       	ret

00005296 <NRF24L01_L_ReadRegBuf>:
    5296:	df 92       	push	r13
    5298:	ef 92       	push	r14
    529a:	ff 92       	push	r15
    529c:	0f 93       	push	r16
    529e:	1f 93       	push	r17
    52a0:	cf 93       	push	r28
    52a2:	df 93       	push	r29
    52a4:	7b 01       	movw	r14, r22
    52a6:	8a 01       	movw	r16, r20
    52a8:	90 e1       	ldi	r25, 0x10	; 16
    52aa:	e0 e8       	ldi	r30, 0x80	; 128
    52ac:	f6 e0       	ldi	r31, 0x06	; 6
    52ae:	96 83       	std	Z+6, r25	; 0x06
    52b0:	ac df       	rcall	.-168    	; 0x520a <SPI_L>
    52b2:	d8 2e       	mov	r13, r24
    52b4:	10 16       	cp	r1, r16
    52b6:	11 06       	cpc	r1, r17
    52b8:	4c f4       	brge	.+18     	; 0x52cc <NRF24L01_L_ReadRegBuf+0x36>
    52ba:	e7 01       	movw	r28, r14
    52bc:	0e 0d       	add	r16, r14
    52be:	1f 1d       	adc	r17, r15
    52c0:	8f ef       	ldi	r24, 0xFF	; 255
    52c2:	a3 df       	rcall	.-186    	; 0x520a <SPI_L>
    52c4:	89 93       	st	Y+, r24
    52c6:	c0 17       	cp	r28, r16
    52c8:	d1 07       	cpc	r29, r17
    52ca:	d1 f7       	brne	.-12     	; 0x52c0 <NRF24L01_L_ReadRegBuf+0x2a>
    52cc:	80 e1       	ldi	r24, 0x10	; 16
    52ce:	e0 e8       	ldi	r30, 0x80	; 128
    52d0:	f6 e0       	ldi	r31, 0x06	; 6
    52d2:	85 83       	std	Z+5, r24	; 0x05
    52d4:	8d 2d       	mov	r24, r13
    52d6:	df 91       	pop	r29
    52d8:	cf 91       	pop	r28
    52da:	1f 91       	pop	r17
    52dc:	0f 91       	pop	r16
    52de:	ff 90       	pop	r15
    52e0:	ef 90       	pop	r14
    52e2:	df 90       	pop	r13
    52e4:	08 95       	ret

000052e6 <NRF24L01_L_Read_RX_Buf>:
    52e6:	ab 01       	movw	r20, r22
    52e8:	bc 01       	movw	r22, r24
    52ea:	81 e6       	ldi	r24, 0x61	; 97
    52ec:	d4 cf       	rjmp	.-88     	; 0x5296 <NRF24L01_L_ReadRegBuf>
    52ee:	08 95       	ret

000052f0 <NRF24L01_L_WriteRegBuf>:
    52f0:	df 92       	push	r13
    52f2:	ef 92       	push	r14
    52f4:	ff 92       	push	r15
    52f6:	0f 93       	push	r16
    52f8:	1f 93       	push	r17
    52fa:	cf 93       	push	r28
    52fc:	df 93       	push	r29
    52fe:	7b 01       	movw	r14, r22
    5300:	8a 01       	movw	r16, r20
    5302:	90 e1       	ldi	r25, 0x10	; 16
    5304:	e0 e8       	ldi	r30, 0x80	; 128
    5306:	f6 e0       	ldi	r31, 0x06	; 6
    5308:	96 83       	std	Z+6, r25	; 0x06
    530a:	7f df       	rcall	.-258    	; 0x520a <SPI_L>
    530c:	d8 2e       	mov	r13, r24
    530e:	10 16       	cp	r1, r16
    5310:	11 06       	cpc	r1, r17
    5312:	44 f4       	brge	.+16     	; 0x5324 <NRF24L01_L_WriteRegBuf+0x34>
    5314:	e7 01       	movw	r28, r14
    5316:	0e 0d       	add	r16, r14
    5318:	1f 1d       	adc	r17, r15
    531a:	89 91       	ld	r24, Y+
    531c:	76 df       	rcall	.-276    	; 0x520a <SPI_L>
    531e:	c0 17       	cp	r28, r16
    5320:	d1 07       	cpc	r29, r17
    5322:	d9 f7       	brne	.-10     	; 0x531a <NRF24L01_L_WriteRegBuf+0x2a>
    5324:	80 e1       	ldi	r24, 0x10	; 16
    5326:	e0 e8       	ldi	r30, 0x80	; 128
    5328:	f6 e0       	ldi	r31, 0x06	; 6
    532a:	85 83       	std	Z+5, r24	; 0x05
    532c:	8d 2d       	mov	r24, r13
    532e:	df 91       	pop	r29
    5330:	cf 91       	pop	r28
    5332:	1f 91       	pop	r17
    5334:	0f 91       	pop	r16
    5336:	ff 90       	pop	r15
    5338:	ef 90       	pop	r14
    533a:	df 90       	pop	r13
    533c:	08 95       	ret

0000533e <NRF24L01_L_Set_RX_Pipe>:
    533e:	ef 92       	push	r14
    5340:	ff 92       	push	r15
    5342:	0f 93       	push	r16
    5344:	1f 93       	push	r17
    5346:	cf 93       	push	r28
    5348:	df 93       	push	r29
    534a:	f8 2e       	mov	r15, r24
    534c:	eb 01       	movw	r28, r22
    534e:	8a 01       	movw	r16, r20
    5350:	e2 2e       	mov	r14, r18
    5352:	82 e0       	ldi	r24, 0x02	; 2
    5354:	64 df       	rcall	.-312    	; 0x521e <NRF24L01_L_ReadReg>
    5356:	41 e0       	ldi	r20, 0x01	; 1
    5358:	50 e0       	ldi	r21, 0x00	; 0
    535a:	0f 2c       	mov	r0, r15
    535c:	02 c0       	rjmp	.+4      	; 0x5362 <NRF24L01_L_Set_RX_Pipe+0x24>
    535e:	44 0f       	add	r20, r20
    5360:	55 1f       	adc	r21, r21
    5362:	0a 94       	dec	r0
    5364:	e2 f7       	brpl	.-8      	; 0x535e <NRF24L01_L_Set_RX_Pipe+0x20>
    5366:	68 2f       	mov	r22, r24
    5368:	64 2b       	or	r22, r20
    536a:	82 e2       	ldi	r24, 0x22	; 34
    536c:	67 df       	rcall	.-306    	; 0x523c <NRF24L01_L_WriteReg>
    536e:	81 e1       	ldi	r24, 0x11	; 17
    5370:	8f 0d       	add	r24, r15
    5372:	6e 2d       	mov	r22, r14
    5374:	80 62       	ori	r24, 0x20	; 32
    5376:	62 df       	rcall	.-316    	; 0x523c <NRF24L01_L_WriteReg>
    5378:	8a e0       	ldi	r24, 0x0A	; 10
    537a:	8f 0d       	add	r24, r15
    537c:	a8 01       	movw	r20, r16
    537e:	be 01       	movw	r22, r28
    5380:	80 62       	ori	r24, 0x20	; 32
    5382:	b6 df       	rcall	.-148    	; 0x52f0 <NRF24L01_L_WriteRegBuf>
    5384:	df 91       	pop	r29
    5386:	cf 91       	pop	r28
    5388:	1f 91       	pop	r17
    538a:	0f 91       	pop	r16
    538c:	ff 90       	pop	r15
    538e:	ef 90       	pop	r14
    5390:	08 95       	ret

00005392 <NRF24L01_L_Set_TX_Address>:
    5392:	ab 01       	movw	r20, r22
    5394:	bc 01       	movw	r22, r24
    5396:	80 e3       	ldi	r24, 0x30	; 48
    5398:	ab cf       	rjmp	.-170    	; 0x52f0 <NRF24L01_L_WriteRegBuf>
    539a:	08 95       	ret

0000539c <NRF24L01_L_Init_milad>:
    539c:	cf 92       	push	r12
    539e:	df 92       	push	r13
    53a0:	ef 92       	push	r14
    53a2:	ff 92       	push	r15
    53a4:	0f 93       	push	r16
    53a6:	1f 93       	push	r17
    53a8:	cf 93       	push	r28
    53aa:	df 93       	push	r29
    53ac:	f8 2e       	mov	r15, r24
    53ae:	d6 2e       	mov	r13, r22
    53b0:	14 2f       	mov	r17, r20
    53b2:	e9 01       	movw	r28, r18
    53b4:	80 e0       	ldi	r24, 0x00	; 0
    53b6:	5d df       	rcall	.-326    	; 0x5272 <NRF24L01_L_Set_ShockBurst>
    53b8:	61 e0       	ldi	r22, 0x01	; 1
    53ba:	81 e2       	ldi	r24, 0x21	; 33
    53bc:	3f df       	rcall	.-386    	; 0x523c <NRF24L01_L_WriteReg>
    53be:	6f e2       	ldi	r22, 0x2F	; 47
    53c0:	84 e2       	ldi	r24, 0x24	; 36
    53c2:	3c df       	rcall	.-392    	; 0x523c <NRF24L01_L_WriteReg>
    53c4:	11 60       	ori	r17, 0x01	; 1
    53c6:	61 2f       	mov	r22, r17
    53c8:	6c 29       	or	r22, r12
    53ca:	86 e2       	ldi	r24, 0x26	; 38
    53cc:	37 df       	rcall	.-402    	; 0x523c <NRF24L01_L_WriteReg>
    53ce:	80 2f       	mov	r24, r16
    53d0:	5a df       	rcall	.-332    	; 0x5286 <NRF24L01_L_Set_Address_Width>
    53d2:	11 27       	eor	r17, r17
    53d4:	07 fd       	sbrc	r16, 7
    53d6:	10 95       	com	r17
    53d8:	2e 2d       	mov	r18, r14
    53da:	a8 01       	movw	r20, r16
    53dc:	be 01       	movw	r22, r28
    53de:	80 e0       	ldi	r24, 0x00	; 0
    53e0:	ae df       	rcall	.-164    	; 0x533e <NRF24L01_L_Set_RX_Pipe>
    53e2:	8d 2d       	mov	r24, r13
    53e4:	41 df       	rcall	.-382    	; 0x5268 <NRF24L01_L_Set_CH>
    53e6:	b8 01       	movw	r22, r16
    53e8:	ce 01       	movw	r24, r28
    53ea:	d3 df       	rcall	.-90     	; 0x5392 <NRF24L01_L_Set_TX_Address>
    53ec:	6f 2d       	mov	r22, r15
    53ee:	6a 60       	ori	r22, 0x0A	; 10
    53f0:	80 e2       	ldi	r24, 0x20	; 32
    53f2:	24 df       	rcall	.-440    	; 0x523c <NRF24L01_L_WriteReg>
    53f4:	8f ed       	ldi	r24, 0xDF	; 223
    53f6:	9e e2       	ldi	r25, 0x2E	; 46
    53f8:	01 97       	sbiw	r24, 0x01	; 1
    53fa:	f1 f7       	brne	.-4      	; 0x53f8 <NRF24L01_L_Init_milad+0x5c>
    53fc:	00 c0       	rjmp	.+0      	; 0x53fe <NRF24L01_L_Init_milad+0x62>
    53fe:	00 00       	nop
    5400:	df 91       	pop	r29
    5402:	cf 91       	pop	r28
    5404:	1f 91       	pop	r17
    5406:	0f 91       	pop	r16
    5408:	ff 90       	pop	r15
    540a:	ef 90       	pop	r14
    540c:	df 90       	pop	r13
    540e:	cf 90       	pop	r12
    5410:	08 95       	ret

00005412 <NRF24L01_L_Write_TX_Buf>:
    5412:	ab 01       	movw	r20, r22
    5414:	bc 01       	movw	r22, r24
    5416:	80 ea       	ldi	r24, 0xA0	; 160
    5418:	6b cf       	rjmp	.-298    	; 0x52f0 <NRF24L01_L_WriteRegBuf>
    541a:	08 95       	ret

0000541c <NRF24L01_L_Flush_TX>:

/**
 Empty the transmit buffer

*/
void NRF24L01_L_Flush_TX(void) {
    541c:	1f 93       	push	r17
    541e:	cf 93       	push	r28
    5420:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    5422:	c0 e8       	ldi	r28, 0x80	; 128
    5424:	d6 e0       	ldi	r29, 0x06	; 6
    5426:	10 e1       	ldi	r17, 0x10	; 16
    5428:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_TX);
    542a:	81 ee       	ldi	r24, 0xE1	; 225
    542c:	ee de       	rcall	.-548    	; 0x520a <SPI_L>
	NRF24L01_L_CS_HIGH;
    542e:	1d 83       	std	Y+5, r17	; 0x05
}
    5430:	df 91       	pop	r29
    5432:	cf 91       	pop	r28
    5434:	1f 91       	pop	r17
    5436:	08 95       	ret

00005438 <NRF24L01_L_Flush_RX>:

/**
 Empty the receive buffer
*/
void NRF24L01_L_Flush_RX(void) {
    5438:	1f 93       	push	r17
    543a:	cf 93       	push	r28
    543c:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    543e:	c0 e8       	ldi	r28, 0x80	; 128
    5440:	d6 e0       	ldi	r29, 0x06	; 6
    5442:	10 e1       	ldi	r17, 0x10	; 16
    5444:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_RX);
    5446:	82 ee       	ldi	r24, 0xE2	; 226
    5448:	e0 de       	rcall	.-576    	; 0x520a <SPI_L>
	NRF24L01_L_CS_HIGH;
    544a:	1d 83       	std	Y+5, r17	; 0x05
}
    544c:	df 91       	pop	r29
    544e:	cf 91       	pop	r28
    5450:	1f 91       	pop	r17
    5452:	08 95       	ret

00005454 <__udivmodsi4>:
    5454:	a1 e2       	ldi	r26, 0x21	; 33
    5456:	1a 2e       	mov	r1, r26
    5458:	aa 1b       	sub	r26, r26
    545a:	bb 1b       	sub	r27, r27
    545c:	fd 01       	movw	r30, r26
    545e:	0d c0       	rjmp	.+26     	; 0x547a <__udivmodsi4_ep>

00005460 <__udivmodsi4_loop>:
    5460:	aa 1f       	adc	r26, r26
    5462:	bb 1f       	adc	r27, r27
    5464:	ee 1f       	adc	r30, r30
    5466:	ff 1f       	adc	r31, r31
    5468:	a2 17       	cp	r26, r18
    546a:	b3 07       	cpc	r27, r19
    546c:	e4 07       	cpc	r30, r20
    546e:	f5 07       	cpc	r31, r21
    5470:	20 f0       	brcs	.+8      	; 0x547a <__udivmodsi4_ep>
    5472:	a2 1b       	sub	r26, r18
    5474:	b3 0b       	sbc	r27, r19
    5476:	e4 0b       	sbc	r30, r20
    5478:	f5 0b       	sbc	r31, r21

0000547a <__udivmodsi4_ep>:
    547a:	66 1f       	adc	r22, r22
    547c:	77 1f       	adc	r23, r23
    547e:	88 1f       	adc	r24, r24
    5480:	99 1f       	adc	r25, r25
    5482:	1a 94       	dec	r1
    5484:	69 f7       	brne	.-38     	; 0x5460 <__udivmodsi4_loop>
    5486:	60 95       	com	r22
    5488:	70 95       	com	r23
    548a:	80 95       	com	r24
    548c:	90 95       	com	r25
    548e:	9b 01       	movw	r18, r22
    5490:	ac 01       	movw	r20, r24
    5492:	bd 01       	movw	r22, r26
    5494:	cf 01       	movw	r24, r30
    5496:	08 95       	ret

00005498 <__tablejump2__>:
    5498:	ee 0f       	add	r30, r30
    549a:	ff 1f       	adc	r31, r31

0000549c <__tablejump__>:
    549c:	05 90       	lpm	r0, Z+
    549e:	f4 91       	lpm	r31, Z
    54a0:	e0 2d       	mov	r30, r0
    54a2:	19 94       	eijmp

000054a4 <__subsf3>:
    54a4:	50 58       	subi	r21, 0x80	; 128

000054a6 <__addsf3>:
    54a6:	bb 27       	eor	r27, r27
    54a8:	aa 27       	eor	r26, r26
    54aa:	0e d0       	rcall	.+28     	; 0x54c8 <__addsf3x>
    54ac:	e5 c0       	rjmp	.+458    	; 0x5678 <__fp_round>
    54ae:	d6 d0       	rcall	.+428    	; 0x565c <__fp_pscA>
    54b0:	30 f0       	brcs	.+12     	; 0x54be <__addsf3+0x18>
    54b2:	db d0       	rcall	.+438    	; 0x566a <__fp_pscB>
    54b4:	20 f0       	brcs	.+8      	; 0x54be <__addsf3+0x18>
    54b6:	31 f4       	brne	.+12     	; 0x54c4 <__addsf3+0x1e>
    54b8:	9f 3f       	cpi	r25, 0xFF	; 255
    54ba:	11 f4       	brne	.+4      	; 0x54c0 <__addsf3+0x1a>
    54bc:	1e f4       	brtc	.+6      	; 0x54c4 <__addsf3+0x1e>
    54be:	cb c0       	rjmp	.+406    	; 0x5656 <__fp_nan>
    54c0:	0e f4       	brtc	.+2      	; 0x54c4 <__addsf3+0x1e>
    54c2:	e0 95       	com	r30
    54c4:	e7 fb       	bst	r30, 7
    54c6:	c1 c0       	rjmp	.+386    	; 0x564a <__fp_inf>

000054c8 <__addsf3x>:
    54c8:	e9 2f       	mov	r30, r25
    54ca:	e7 d0       	rcall	.+462    	; 0x569a <__fp_split3>
    54cc:	80 f3       	brcs	.-32     	; 0x54ae <__addsf3+0x8>
    54ce:	ba 17       	cp	r27, r26
    54d0:	62 07       	cpc	r22, r18
    54d2:	73 07       	cpc	r23, r19
    54d4:	84 07       	cpc	r24, r20
    54d6:	95 07       	cpc	r25, r21
    54d8:	18 f0       	brcs	.+6      	; 0x54e0 <__addsf3x+0x18>
    54da:	71 f4       	brne	.+28     	; 0x54f8 <__addsf3x+0x30>
    54dc:	9e f5       	brtc	.+102    	; 0x5544 <__addsf3x+0x7c>
    54de:	ff c0       	rjmp	.+510    	; 0x56de <__fp_zero>
    54e0:	0e f4       	brtc	.+2      	; 0x54e4 <__addsf3x+0x1c>
    54e2:	e0 95       	com	r30
    54e4:	0b 2e       	mov	r0, r27
    54e6:	ba 2f       	mov	r27, r26
    54e8:	a0 2d       	mov	r26, r0
    54ea:	0b 01       	movw	r0, r22
    54ec:	b9 01       	movw	r22, r18
    54ee:	90 01       	movw	r18, r0
    54f0:	0c 01       	movw	r0, r24
    54f2:	ca 01       	movw	r24, r20
    54f4:	a0 01       	movw	r20, r0
    54f6:	11 24       	eor	r1, r1
    54f8:	ff 27       	eor	r31, r31
    54fa:	59 1b       	sub	r21, r25
    54fc:	99 f0       	breq	.+38     	; 0x5524 <__addsf3x+0x5c>
    54fe:	59 3f       	cpi	r21, 0xF9	; 249
    5500:	50 f4       	brcc	.+20     	; 0x5516 <__addsf3x+0x4e>
    5502:	50 3e       	cpi	r21, 0xE0	; 224
    5504:	68 f1       	brcs	.+90     	; 0x5560 <__addsf3x+0x98>
    5506:	1a 16       	cp	r1, r26
    5508:	f0 40       	sbci	r31, 0x00	; 0
    550a:	a2 2f       	mov	r26, r18
    550c:	23 2f       	mov	r18, r19
    550e:	34 2f       	mov	r19, r20
    5510:	44 27       	eor	r20, r20
    5512:	58 5f       	subi	r21, 0xF8	; 248
    5514:	f3 cf       	rjmp	.-26     	; 0x54fc <__addsf3x+0x34>
    5516:	46 95       	lsr	r20
    5518:	37 95       	ror	r19
    551a:	27 95       	ror	r18
    551c:	a7 95       	ror	r26
    551e:	f0 40       	sbci	r31, 0x00	; 0
    5520:	53 95       	inc	r21
    5522:	c9 f7       	brne	.-14     	; 0x5516 <__addsf3x+0x4e>
    5524:	7e f4       	brtc	.+30     	; 0x5544 <__addsf3x+0x7c>
    5526:	1f 16       	cp	r1, r31
    5528:	ba 0b       	sbc	r27, r26
    552a:	62 0b       	sbc	r22, r18
    552c:	73 0b       	sbc	r23, r19
    552e:	84 0b       	sbc	r24, r20
    5530:	ba f0       	brmi	.+46     	; 0x5560 <__addsf3x+0x98>
    5532:	91 50       	subi	r25, 0x01	; 1
    5534:	a1 f0       	breq	.+40     	; 0x555e <__addsf3x+0x96>
    5536:	ff 0f       	add	r31, r31
    5538:	bb 1f       	adc	r27, r27
    553a:	66 1f       	adc	r22, r22
    553c:	77 1f       	adc	r23, r23
    553e:	88 1f       	adc	r24, r24
    5540:	c2 f7       	brpl	.-16     	; 0x5532 <__addsf3x+0x6a>
    5542:	0e c0       	rjmp	.+28     	; 0x5560 <__addsf3x+0x98>
    5544:	ba 0f       	add	r27, r26
    5546:	62 1f       	adc	r22, r18
    5548:	73 1f       	adc	r23, r19
    554a:	84 1f       	adc	r24, r20
    554c:	48 f4       	brcc	.+18     	; 0x5560 <__addsf3x+0x98>
    554e:	87 95       	ror	r24
    5550:	77 95       	ror	r23
    5552:	67 95       	ror	r22
    5554:	b7 95       	ror	r27
    5556:	f7 95       	ror	r31
    5558:	9e 3f       	cpi	r25, 0xFE	; 254
    555a:	08 f0       	brcs	.+2      	; 0x555e <__addsf3x+0x96>
    555c:	b3 cf       	rjmp	.-154    	; 0x54c4 <__addsf3+0x1e>
    555e:	93 95       	inc	r25
    5560:	88 0f       	add	r24, r24
    5562:	08 f0       	brcs	.+2      	; 0x5566 <__addsf3x+0x9e>
    5564:	99 27       	eor	r25, r25
    5566:	ee 0f       	add	r30, r30
    5568:	97 95       	ror	r25
    556a:	87 95       	ror	r24
    556c:	08 95       	ret

0000556e <__fixsfsi>:
    556e:	04 d0       	rcall	.+8      	; 0x5578 <__fixunssfsi>
    5570:	68 94       	set
    5572:	b1 11       	cpse	r27, r1
    5574:	b5 c0       	rjmp	.+362    	; 0x56e0 <__fp_szero>
    5576:	08 95       	ret

00005578 <__fixunssfsi>:
    5578:	98 d0       	rcall	.+304    	; 0x56aa <__fp_splitA>
    557a:	88 f0       	brcs	.+34     	; 0x559e <__fixunssfsi+0x26>
    557c:	9f 57       	subi	r25, 0x7F	; 127
    557e:	90 f0       	brcs	.+36     	; 0x55a4 <__fixunssfsi+0x2c>
    5580:	b9 2f       	mov	r27, r25
    5582:	99 27       	eor	r25, r25
    5584:	b7 51       	subi	r27, 0x17	; 23
    5586:	a0 f0       	brcs	.+40     	; 0x55b0 <__fixunssfsi+0x38>
    5588:	d1 f0       	breq	.+52     	; 0x55be <__fixunssfsi+0x46>
    558a:	66 0f       	add	r22, r22
    558c:	77 1f       	adc	r23, r23
    558e:	88 1f       	adc	r24, r24
    5590:	99 1f       	adc	r25, r25
    5592:	1a f0       	brmi	.+6      	; 0x559a <__fixunssfsi+0x22>
    5594:	ba 95       	dec	r27
    5596:	c9 f7       	brne	.-14     	; 0x558a <__fixunssfsi+0x12>
    5598:	12 c0       	rjmp	.+36     	; 0x55be <__fixunssfsi+0x46>
    559a:	b1 30       	cpi	r27, 0x01	; 1
    559c:	81 f0       	breq	.+32     	; 0x55be <__fixunssfsi+0x46>
    559e:	9f d0       	rcall	.+318    	; 0x56de <__fp_zero>
    55a0:	b1 e0       	ldi	r27, 0x01	; 1
    55a2:	08 95       	ret
    55a4:	9c c0       	rjmp	.+312    	; 0x56de <__fp_zero>
    55a6:	67 2f       	mov	r22, r23
    55a8:	78 2f       	mov	r23, r24
    55aa:	88 27       	eor	r24, r24
    55ac:	b8 5f       	subi	r27, 0xF8	; 248
    55ae:	39 f0       	breq	.+14     	; 0x55be <__fixunssfsi+0x46>
    55b0:	b9 3f       	cpi	r27, 0xF9	; 249
    55b2:	cc f3       	brlt	.-14     	; 0x55a6 <__fixunssfsi+0x2e>
    55b4:	86 95       	lsr	r24
    55b6:	77 95       	ror	r23
    55b8:	67 95       	ror	r22
    55ba:	b3 95       	inc	r27
    55bc:	d9 f7       	brne	.-10     	; 0x55b4 <__fixunssfsi+0x3c>
    55be:	3e f4       	brtc	.+14     	; 0x55ce <__fixunssfsi+0x56>
    55c0:	90 95       	com	r25
    55c2:	80 95       	com	r24
    55c4:	70 95       	com	r23
    55c6:	61 95       	neg	r22
    55c8:	7f 4f       	sbci	r23, 0xFF	; 255
    55ca:	8f 4f       	sbci	r24, 0xFF	; 255
    55cc:	9f 4f       	sbci	r25, 0xFF	; 255
    55ce:	08 95       	ret

000055d0 <__floatunsisf>:
    55d0:	e8 94       	clt
    55d2:	09 c0       	rjmp	.+18     	; 0x55e6 <__floatsisf+0x12>

000055d4 <__floatsisf>:
    55d4:	97 fb       	bst	r25, 7
    55d6:	3e f4       	brtc	.+14     	; 0x55e6 <__floatsisf+0x12>
    55d8:	90 95       	com	r25
    55da:	80 95       	com	r24
    55dc:	70 95       	com	r23
    55de:	61 95       	neg	r22
    55e0:	7f 4f       	sbci	r23, 0xFF	; 255
    55e2:	8f 4f       	sbci	r24, 0xFF	; 255
    55e4:	9f 4f       	sbci	r25, 0xFF	; 255
    55e6:	99 23       	and	r25, r25
    55e8:	a9 f0       	breq	.+42     	; 0x5614 <__floatsisf+0x40>
    55ea:	f9 2f       	mov	r31, r25
    55ec:	96 e9       	ldi	r25, 0x96	; 150
    55ee:	bb 27       	eor	r27, r27
    55f0:	93 95       	inc	r25
    55f2:	f6 95       	lsr	r31
    55f4:	87 95       	ror	r24
    55f6:	77 95       	ror	r23
    55f8:	67 95       	ror	r22
    55fa:	b7 95       	ror	r27
    55fc:	f1 11       	cpse	r31, r1
    55fe:	f8 cf       	rjmp	.-16     	; 0x55f0 <__floatsisf+0x1c>
    5600:	fa f4       	brpl	.+62     	; 0x5640 <__floatsisf+0x6c>
    5602:	bb 0f       	add	r27, r27
    5604:	11 f4       	brne	.+4      	; 0x560a <__floatsisf+0x36>
    5606:	60 ff       	sbrs	r22, 0
    5608:	1b c0       	rjmp	.+54     	; 0x5640 <__floatsisf+0x6c>
    560a:	6f 5f       	subi	r22, 0xFF	; 255
    560c:	7f 4f       	sbci	r23, 0xFF	; 255
    560e:	8f 4f       	sbci	r24, 0xFF	; 255
    5610:	9f 4f       	sbci	r25, 0xFF	; 255
    5612:	16 c0       	rjmp	.+44     	; 0x5640 <__floatsisf+0x6c>
    5614:	88 23       	and	r24, r24
    5616:	11 f0       	breq	.+4      	; 0x561c <__floatsisf+0x48>
    5618:	96 e9       	ldi	r25, 0x96	; 150
    561a:	11 c0       	rjmp	.+34     	; 0x563e <__floatsisf+0x6a>
    561c:	77 23       	and	r23, r23
    561e:	21 f0       	breq	.+8      	; 0x5628 <__floatsisf+0x54>
    5620:	9e e8       	ldi	r25, 0x8E	; 142
    5622:	87 2f       	mov	r24, r23
    5624:	76 2f       	mov	r23, r22
    5626:	05 c0       	rjmp	.+10     	; 0x5632 <__floatsisf+0x5e>
    5628:	66 23       	and	r22, r22
    562a:	71 f0       	breq	.+28     	; 0x5648 <__floatsisf+0x74>
    562c:	96 e8       	ldi	r25, 0x86	; 134
    562e:	86 2f       	mov	r24, r22
    5630:	70 e0       	ldi	r23, 0x00	; 0
    5632:	60 e0       	ldi	r22, 0x00	; 0
    5634:	2a f0       	brmi	.+10     	; 0x5640 <__floatsisf+0x6c>
    5636:	9a 95       	dec	r25
    5638:	66 0f       	add	r22, r22
    563a:	77 1f       	adc	r23, r23
    563c:	88 1f       	adc	r24, r24
    563e:	da f7       	brpl	.-10     	; 0x5636 <__floatsisf+0x62>
    5640:	88 0f       	add	r24, r24
    5642:	96 95       	lsr	r25
    5644:	87 95       	ror	r24
    5646:	97 f9       	bld	r25, 7
    5648:	08 95       	ret

0000564a <__fp_inf>:
    564a:	97 f9       	bld	r25, 7
    564c:	9f 67       	ori	r25, 0x7F	; 127
    564e:	80 e8       	ldi	r24, 0x80	; 128
    5650:	70 e0       	ldi	r23, 0x00	; 0
    5652:	60 e0       	ldi	r22, 0x00	; 0
    5654:	08 95       	ret

00005656 <__fp_nan>:
    5656:	9f ef       	ldi	r25, 0xFF	; 255
    5658:	80 ec       	ldi	r24, 0xC0	; 192
    565a:	08 95       	ret

0000565c <__fp_pscA>:
    565c:	00 24       	eor	r0, r0
    565e:	0a 94       	dec	r0
    5660:	16 16       	cp	r1, r22
    5662:	17 06       	cpc	r1, r23
    5664:	18 06       	cpc	r1, r24
    5666:	09 06       	cpc	r0, r25
    5668:	08 95       	ret

0000566a <__fp_pscB>:
    566a:	00 24       	eor	r0, r0
    566c:	0a 94       	dec	r0
    566e:	12 16       	cp	r1, r18
    5670:	13 06       	cpc	r1, r19
    5672:	14 06       	cpc	r1, r20
    5674:	05 06       	cpc	r0, r21
    5676:	08 95       	ret

00005678 <__fp_round>:
    5678:	09 2e       	mov	r0, r25
    567a:	03 94       	inc	r0
    567c:	00 0c       	add	r0, r0
    567e:	11 f4       	brne	.+4      	; 0x5684 <__fp_round+0xc>
    5680:	88 23       	and	r24, r24
    5682:	52 f0       	brmi	.+20     	; 0x5698 <__fp_round+0x20>
    5684:	bb 0f       	add	r27, r27
    5686:	40 f4       	brcc	.+16     	; 0x5698 <__fp_round+0x20>
    5688:	bf 2b       	or	r27, r31
    568a:	11 f4       	brne	.+4      	; 0x5690 <__fp_round+0x18>
    568c:	60 ff       	sbrs	r22, 0
    568e:	04 c0       	rjmp	.+8      	; 0x5698 <__fp_round+0x20>
    5690:	6f 5f       	subi	r22, 0xFF	; 255
    5692:	7f 4f       	sbci	r23, 0xFF	; 255
    5694:	8f 4f       	sbci	r24, 0xFF	; 255
    5696:	9f 4f       	sbci	r25, 0xFF	; 255
    5698:	08 95       	ret

0000569a <__fp_split3>:
    569a:	57 fd       	sbrc	r21, 7
    569c:	90 58       	subi	r25, 0x80	; 128
    569e:	44 0f       	add	r20, r20
    56a0:	55 1f       	adc	r21, r21
    56a2:	59 f0       	breq	.+22     	; 0x56ba <__fp_splitA+0x10>
    56a4:	5f 3f       	cpi	r21, 0xFF	; 255
    56a6:	71 f0       	breq	.+28     	; 0x56c4 <__fp_splitA+0x1a>
    56a8:	47 95       	ror	r20

000056aa <__fp_splitA>:
    56aa:	88 0f       	add	r24, r24
    56ac:	97 fb       	bst	r25, 7
    56ae:	99 1f       	adc	r25, r25
    56b0:	61 f0       	breq	.+24     	; 0x56ca <__fp_splitA+0x20>
    56b2:	9f 3f       	cpi	r25, 0xFF	; 255
    56b4:	79 f0       	breq	.+30     	; 0x56d4 <__fp_splitA+0x2a>
    56b6:	87 95       	ror	r24
    56b8:	08 95       	ret
    56ba:	12 16       	cp	r1, r18
    56bc:	13 06       	cpc	r1, r19
    56be:	14 06       	cpc	r1, r20
    56c0:	55 1f       	adc	r21, r21
    56c2:	f2 cf       	rjmp	.-28     	; 0x56a8 <__fp_split3+0xe>
    56c4:	46 95       	lsr	r20
    56c6:	f1 df       	rcall	.-30     	; 0x56aa <__fp_splitA>
    56c8:	08 c0       	rjmp	.+16     	; 0x56da <__fp_splitA+0x30>
    56ca:	16 16       	cp	r1, r22
    56cc:	17 06       	cpc	r1, r23
    56ce:	18 06       	cpc	r1, r24
    56d0:	99 1f       	adc	r25, r25
    56d2:	f1 cf       	rjmp	.-30     	; 0x56b6 <__fp_splitA+0xc>
    56d4:	86 95       	lsr	r24
    56d6:	71 05       	cpc	r23, r1
    56d8:	61 05       	cpc	r22, r1
    56da:	08 94       	sec
    56dc:	08 95       	ret

000056de <__fp_zero>:
    56de:	e8 94       	clt

000056e0 <__fp_szero>:
    56e0:	bb 27       	eor	r27, r27
    56e2:	66 27       	eor	r22, r22
    56e4:	77 27       	eor	r23, r23
    56e6:	cb 01       	movw	r24, r22
    56e8:	97 f9       	bld	r25, 7
    56ea:	08 95       	ret

000056ec <__mulsf3>:
    56ec:	0b d0       	rcall	.+22     	; 0x5704 <__mulsf3x>
    56ee:	c4 cf       	rjmp	.-120    	; 0x5678 <__fp_round>
    56f0:	b5 df       	rcall	.-150    	; 0x565c <__fp_pscA>
    56f2:	28 f0       	brcs	.+10     	; 0x56fe <__mulsf3+0x12>
    56f4:	ba df       	rcall	.-140    	; 0x566a <__fp_pscB>
    56f6:	18 f0       	brcs	.+6      	; 0x56fe <__mulsf3+0x12>
    56f8:	95 23       	and	r25, r21
    56fa:	09 f0       	breq	.+2      	; 0x56fe <__mulsf3+0x12>
    56fc:	a6 cf       	rjmp	.-180    	; 0x564a <__fp_inf>
    56fe:	ab cf       	rjmp	.-170    	; 0x5656 <__fp_nan>
    5700:	11 24       	eor	r1, r1
    5702:	ee cf       	rjmp	.-36     	; 0x56e0 <__fp_szero>

00005704 <__mulsf3x>:
    5704:	ca df       	rcall	.-108    	; 0x569a <__fp_split3>
    5706:	a0 f3       	brcs	.-24     	; 0x56f0 <__mulsf3+0x4>

00005708 <__mulsf3_pse>:
    5708:	95 9f       	mul	r25, r21
    570a:	d1 f3       	breq	.-12     	; 0x5700 <__mulsf3+0x14>
    570c:	95 0f       	add	r25, r21
    570e:	50 e0       	ldi	r21, 0x00	; 0
    5710:	55 1f       	adc	r21, r21
    5712:	62 9f       	mul	r22, r18
    5714:	f0 01       	movw	r30, r0
    5716:	72 9f       	mul	r23, r18
    5718:	bb 27       	eor	r27, r27
    571a:	f0 0d       	add	r31, r0
    571c:	b1 1d       	adc	r27, r1
    571e:	63 9f       	mul	r22, r19
    5720:	aa 27       	eor	r26, r26
    5722:	f0 0d       	add	r31, r0
    5724:	b1 1d       	adc	r27, r1
    5726:	aa 1f       	adc	r26, r26
    5728:	64 9f       	mul	r22, r20
    572a:	66 27       	eor	r22, r22
    572c:	b0 0d       	add	r27, r0
    572e:	a1 1d       	adc	r26, r1
    5730:	66 1f       	adc	r22, r22
    5732:	82 9f       	mul	r24, r18
    5734:	22 27       	eor	r18, r18
    5736:	b0 0d       	add	r27, r0
    5738:	a1 1d       	adc	r26, r1
    573a:	62 1f       	adc	r22, r18
    573c:	73 9f       	mul	r23, r19
    573e:	b0 0d       	add	r27, r0
    5740:	a1 1d       	adc	r26, r1
    5742:	62 1f       	adc	r22, r18
    5744:	83 9f       	mul	r24, r19
    5746:	a0 0d       	add	r26, r0
    5748:	61 1d       	adc	r22, r1
    574a:	22 1f       	adc	r18, r18
    574c:	74 9f       	mul	r23, r20
    574e:	33 27       	eor	r19, r19
    5750:	a0 0d       	add	r26, r0
    5752:	61 1d       	adc	r22, r1
    5754:	23 1f       	adc	r18, r19
    5756:	84 9f       	mul	r24, r20
    5758:	60 0d       	add	r22, r0
    575a:	21 1d       	adc	r18, r1
    575c:	82 2f       	mov	r24, r18
    575e:	76 2f       	mov	r23, r22
    5760:	6a 2f       	mov	r22, r26
    5762:	11 24       	eor	r1, r1
    5764:	9f 57       	subi	r25, 0x7F	; 127
    5766:	50 40       	sbci	r21, 0x00	; 0
    5768:	8a f0       	brmi	.+34     	; 0x578c <__mulsf3_pse+0x84>
    576a:	e1 f0       	breq	.+56     	; 0x57a4 <__mulsf3_pse+0x9c>
    576c:	88 23       	and	r24, r24
    576e:	4a f0       	brmi	.+18     	; 0x5782 <__mulsf3_pse+0x7a>
    5770:	ee 0f       	add	r30, r30
    5772:	ff 1f       	adc	r31, r31
    5774:	bb 1f       	adc	r27, r27
    5776:	66 1f       	adc	r22, r22
    5778:	77 1f       	adc	r23, r23
    577a:	88 1f       	adc	r24, r24
    577c:	91 50       	subi	r25, 0x01	; 1
    577e:	50 40       	sbci	r21, 0x00	; 0
    5780:	a9 f7       	brne	.-22     	; 0x576c <__mulsf3_pse+0x64>
    5782:	9e 3f       	cpi	r25, 0xFE	; 254
    5784:	51 05       	cpc	r21, r1
    5786:	70 f0       	brcs	.+28     	; 0x57a4 <__mulsf3_pse+0x9c>
    5788:	60 cf       	rjmp	.-320    	; 0x564a <__fp_inf>
    578a:	aa cf       	rjmp	.-172    	; 0x56e0 <__fp_szero>
    578c:	5f 3f       	cpi	r21, 0xFF	; 255
    578e:	ec f3       	brlt	.-6      	; 0x578a <__mulsf3_pse+0x82>
    5790:	98 3e       	cpi	r25, 0xE8	; 232
    5792:	dc f3       	brlt	.-10     	; 0x578a <__mulsf3_pse+0x82>
    5794:	86 95       	lsr	r24
    5796:	77 95       	ror	r23
    5798:	67 95       	ror	r22
    579a:	b7 95       	ror	r27
    579c:	f7 95       	ror	r31
    579e:	e7 95       	ror	r30
    57a0:	9f 5f       	subi	r25, 0xFF	; 255
    57a2:	c1 f7       	brne	.-16     	; 0x5794 <__mulsf3_pse+0x8c>
    57a4:	fe 2b       	or	r31, r30
    57a6:	88 0f       	add	r24, r24
    57a8:	91 1d       	adc	r25, r1
    57aa:	96 95       	lsr	r25
    57ac:	87 95       	ror	r24
    57ae:	97 f9       	bld	r25, 7
    57b0:	08 95       	ret

000057b2 <sprintf>:
    57b2:	0f 93       	push	r16
    57b4:	1f 93       	push	r17
    57b6:	cf 93       	push	r28
    57b8:	df 93       	push	r29
    57ba:	cd b7       	in	r28, 0x3d	; 61
    57bc:	de b7       	in	r29, 0x3e	; 62
    57be:	2e 97       	sbiw	r28, 0x0e	; 14
    57c0:	cd bf       	out	0x3d, r28	; 61
    57c2:	de bf       	out	0x3e, r29	; 62
    57c4:	0e 89       	ldd	r16, Y+22	; 0x16
    57c6:	1f 89       	ldd	r17, Y+23	; 0x17
    57c8:	86 e0       	ldi	r24, 0x06	; 6
    57ca:	8c 83       	std	Y+4, r24	; 0x04
    57cc:	09 83       	std	Y+1, r16	; 0x01
    57ce:	1a 83       	std	Y+2, r17	; 0x02
    57d0:	8f ef       	ldi	r24, 0xFF	; 255
    57d2:	9f e7       	ldi	r25, 0x7F	; 127
    57d4:	8d 83       	std	Y+5, r24	; 0x05
    57d6:	9e 83       	std	Y+6, r25	; 0x06
    57d8:	ae 01       	movw	r20, r28
    57da:	46 5e       	subi	r20, 0xE6	; 230
    57dc:	5f 4f       	sbci	r21, 0xFF	; 255
    57de:	68 8d       	ldd	r22, Y+24	; 0x18
    57e0:	79 8d       	ldd	r23, Y+25	; 0x19
    57e2:	ce 01       	movw	r24, r28
    57e4:	01 96       	adiw	r24, 0x01	; 1
    57e6:	0d d0       	rcall	.+26     	; 0x5802 <vfprintf>
    57e8:	ef 81       	ldd	r30, Y+7	; 0x07
    57ea:	f8 85       	ldd	r31, Y+8	; 0x08
    57ec:	e0 0f       	add	r30, r16
    57ee:	f1 1f       	adc	r31, r17
    57f0:	10 82       	st	Z, r1
    57f2:	2e 96       	adiw	r28, 0x0e	; 14
    57f4:	cd bf       	out	0x3d, r28	; 61
    57f6:	de bf       	out	0x3e, r29	; 62
    57f8:	df 91       	pop	r29
    57fa:	cf 91       	pop	r28
    57fc:	1f 91       	pop	r17
    57fe:	0f 91       	pop	r16
    5800:	08 95       	ret

00005802 <vfprintf>:
    5802:	2f 92       	push	r2
    5804:	3f 92       	push	r3
    5806:	4f 92       	push	r4
    5808:	5f 92       	push	r5
    580a:	6f 92       	push	r6
    580c:	7f 92       	push	r7
    580e:	8f 92       	push	r8
    5810:	9f 92       	push	r9
    5812:	af 92       	push	r10
    5814:	bf 92       	push	r11
    5816:	cf 92       	push	r12
    5818:	df 92       	push	r13
    581a:	ef 92       	push	r14
    581c:	ff 92       	push	r15
    581e:	0f 93       	push	r16
    5820:	1f 93       	push	r17
    5822:	cf 93       	push	r28
    5824:	df 93       	push	r29
    5826:	cd b7       	in	r28, 0x3d	; 61
    5828:	de b7       	in	r29, 0x3e	; 62
    582a:	2c 97       	sbiw	r28, 0x0c	; 12
    582c:	cd bf       	out	0x3d, r28	; 61
    582e:	de bf       	out	0x3e, r29	; 62
    5830:	7c 01       	movw	r14, r24
    5832:	6b 01       	movw	r12, r22
    5834:	8a 01       	movw	r16, r20
    5836:	fc 01       	movw	r30, r24
    5838:	16 82       	std	Z+6, r1	; 0x06
    583a:	17 82       	std	Z+7, r1	; 0x07
    583c:	83 81       	ldd	r24, Z+3	; 0x03
    583e:	81 ff       	sbrs	r24, 1
    5840:	b0 c1       	rjmp	.+864    	; 0x5ba2 <vfprintf+0x3a0>
    5842:	ce 01       	movw	r24, r28
    5844:	01 96       	adiw	r24, 0x01	; 1
    5846:	4c 01       	movw	r8, r24
    5848:	f7 01       	movw	r30, r14
    584a:	93 81       	ldd	r25, Z+3	; 0x03
    584c:	f6 01       	movw	r30, r12
    584e:	93 fd       	sbrc	r25, 3
    5850:	85 91       	lpm	r24, Z+
    5852:	93 ff       	sbrs	r25, 3
    5854:	81 91       	ld	r24, Z+
    5856:	6f 01       	movw	r12, r30
    5858:	88 23       	and	r24, r24
    585a:	09 f4       	brne	.+2      	; 0x585e <vfprintf+0x5c>
    585c:	9e c1       	rjmp	.+828    	; 0x5b9a <vfprintf+0x398>
    585e:	85 32       	cpi	r24, 0x25	; 37
    5860:	39 f4       	brne	.+14     	; 0x5870 <vfprintf+0x6e>
    5862:	93 fd       	sbrc	r25, 3
    5864:	85 91       	lpm	r24, Z+
    5866:	93 ff       	sbrs	r25, 3
    5868:	81 91       	ld	r24, Z+
    586a:	6f 01       	movw	r12, r30
    586c:	85 32       	cpi	r24, 0x25	; 37
    586e:	21 f4       	brne	.+8      	; 0x5878 <vfprintf+0x76>
    5870:	b7 01       	movw	r22, r14
    5872:	90 e0       	ldi	r25, 0x00	; 0
    5874:	c4 d1       	rcall	.+904    	; 0x5bfe <fputc>
    5876:	e8 cf       	rjmp	.-48     	; 0x5848 <vfprintf+0x46>
    5878:	51 2c       	mov	r5, r1
    587a:	31 2c       	mov	r3, r1
    587c:	20 e0       	ldi	r18, 0x00	; 0
    587e:	20 32       	cpi	r18, 0x20	; 32
    5880:	a0 f4       	brcc	.+40     	; 0x58aa <vfprintf+0xa8>
    5882:	8b 32       	cpi	r24, 0x2B	; 43
    5884:	69 f0       	breq	.+26     	; 0x58a0 <vfprintf+0x9e>
    5886:	30 f4       	brcc	.+12     	; 0x5894 <vfprintf+0x92>
    5888:	80 32       	cpi	r24, 0x20	; 32
    588a:	59 f0       	breq	.+22     	; 0x58a2 <vfprintf+0xa0>
    588c:	83 32       	cpi	r24, 0x23	; 35
    588e:	69 f4       	brne	.+26     	; 0x58aa <vfprintf+0xa8>
    5890:	20 61       	ori	r18, 0x10	; 16
    5892:	2c c0       	rjmp	.+88     	; 0x58ec <vfprintf+0xea>
    5894:	8d 32       	cpi	r24, 0x2D	; 45
    5896:	39 f0       	breq	.+14     	; 0x58a6 <vfprintf+0xa4>
    5898:	80 33       	cpi	r24, 0x30	; 48
    589a:	39 f4       	brne	.+14     	; 0x58aa <vfprintf+0xa8>
    589c:	21 60       	ori	r18, 0x01	; 1
    589e:	26 c0       	rjmp	.+76     	; 0x58ec <vfprintf+0xea>
    58a0:	22 60       	ori	r18, 0x02	; 2
    58a2:	24 60       	ori	r18, 0x04	; 4
    58a4:	23 c0       	rjmp	.+70     	; 0x58ec <vfprintf+0xea>
    58a6:	28 60       	ori	r18, 0x08	; 8
    58a8:	21 c0       	rjmp	.+66     	; 0x58ec <vfprintf+0xea>
    58aa:	27 fd       	sbrc	r18, 7
    58ac:	27 c0       	rjmp	.+78     	; 0x58fc <vfprintf+0xfa>
    58ae:	30 ed       	ldi	r19, 0xD0	; 208
    58b0:	38 0f       	add	r19, r24
    58b2:	3a 30       	cpi	r19, 0x0A	; 10
    58b4:	78 f4       	brcc	.+30     	; 0x58d4 <vfprintf+0xd2>
    58b6:	26 ff       	sbrs	r18, 6
    58b8:	06 c0       	rjmp	.+12     	; 0x58c6 <vfprintf+0xc4>
    58ba:	fa e0       	ldi	r31, 0x0A	; 10
    58bc:	5f 9e       	mul	r5, r31
    58be:	30 0d       	add	r19, r0
    58c0:	11 24       	eor	r1, r1
    58c2:	53 2e       	mov	r5, r19
    58c4:	13 c0       	rjmp	.+38     	; 0x58ec <vfprintf+0xea>
    58c6:	8a e0       	ldi	r24, 0x0A	; 10
    58c8:	38 9e       	mul	r3, r24
    58ca:	30 0d       	add	r19, r0
    58cc:	11 24       	eor	r1, r1
    58ce:	33 2e       	mov	r3, r19
    58d0:	20 62       	ori	r18, 0x20	; 32
    58d2:	0c c0       	rjmp	.+24     	; 0x58ec <vfprintf+0xea>
    58d4:	8e 32       	cpi	r24, 0x2E	; 46
    58d6:	21 f4       	brne	.+8      	; 0x58e0 <vfprintf+0xde>
    58d8:	26 fd       	sbrc	r18, 6
    58da:	5f c1       	rjmp	.+702    	; 0x5b9a <vfprintf+0x398>
    58dc:	20 64       	ori	r18, 0x40	; 64
    58de:	06 c0       	rjmp	.+12     	; 0x58ec <vfprintf+0xea>
    58e0:	8c 36       	cpi	r24, 0x6C	; 108
    58e2:	11 f4       	brne	.+4      	; 0x58e8 <vfprintf+0xe6>
    58e4:	20 68       	ori	r18, 0x80	; 128
    58e6:	02 c0       	rjmp	.+4      	; 0x58ec <vfprintf+0xea>
    58e8:	88 36       	cpi	r24, 0x68	; 104
    58ea:	41 f4       	brne	.+16     	; 0x58fc <vfprintf+0xfa>
    58ec:	f6 01       	movw	r30, r12
    58ee:	93 fd       	sbrc	r25, 3
    58f0:	85 91       	lpm	r24, Z+
    58f2:	93 ff       	sbrs	r25, 3
    58f4:	81 91       	ld	r24, Z+
    58f6:	6f 01       	movw	r12, r30
    58f8:	81 11       	cpse	r24, r1
    58fa:	c1 cf       	rjmp	.-126    	; 0x587e <vfprintf+0x7c>
    58fc:	98 2f       	mov	r25, r24
    58fe:	9f 7d       	andi	r25, 0xDF	; 223
    5900:	95 54       	subi	r25, 0x45	; 69
    5902:	93 30       	cpi	r25, 0x03	; 3
    5904:	28 f4       	brcc	.+10     	; 0x5910 <vfprintf+0x10e>
    5906:	0c 5f       	subi	r16, 0xFC	; 252
    5908:	1f 4f       	sbci	r17, 0xFF	; 255
    590a:	ff e3       	ldi	r31, 0x3F	; 63
    590c:	f9 83       	std	Y+1, r31	; 0x01
    590e:	0d c0       	rjmp	.+26     	; 0x592a <vfprintf+0x128>
    5910:	83 36       	cpi	r24, 0x63	; 99
    5912:	31 f0       	breq	.+12     	; 0x5920 <vfprintf+0x11e>
    5914:	83 37       	cpi	r24, 0x73	; 115
    5916:	71 f0       	breq	.+28     	; 0x5934 <vfprintf+0x132>
    5918:	83 35       	cpi	r24, 0x53	; 83
    591a:	09 f0       	breq	.+2      	; 0x591e <vfprintf+0x11c>
    591c:	57 c0       	rjmp	.+174    	; 0x59cc <vfprintf+0x1ca>
    591e:	21 c0       	rjmp	.+66     	; 0x5962 <vfprintf+0x160>
    5920:	f8 01       	movw	r30, r16
    5922:	80 81       	ld	r24, Z
    5924:	89 83       	std	Y+1, r24	; 0x01
    5926:	0e 5f       	subi	r16, 0xFE	; 254
    5928:	1f 4f       	sbci	r17, 0xFF	; 255
    592a:	44 24       	eor	r4, r4
    592c:	43 94       	inc	r4
    592e:	51 2c       	mov	r5, r1
    5930:	54 01       	movw	r10, r8
    5932:	14 c0       	rjmp	.+40     	; 0x595c <vfprintf+0x15a>
    5934:	38 01       	movw	r6, r16
    5936:	f2 e0       	ldi	r31, 0x02	; 2
    5938:	6f 0e       	add	r6, r31
    593a:	71 1c       	adc	r7, r1
    593c:	f8 01       	movw	r30, r16
    593e:	a0 80       	ld	r10, Z
    5940:	b1 80       	ldd	r11, Z+1	; 0x01
    5942:	26 ff       	sbrs	r18, 6
    5944:	03 c0       	rjmp	.+6      	; 0x594c <vfprintf+0x14a>
    5946:	65 2d       	mov	r22, r5
    5948:	70 e0       	ldi	r23, 0x00	; 0
    594a:	02 c0       	rjmp	.+4      	; 0x5950 <vfprintf+0x14e>
    594c:	6f ef       	ldi	r22, 0xFF	; 255
    594e:	7f ef       	ldi	r23, 0xFF	; 255
    5950:	c5 01       	movw	r24, r10
    5952:	2c 87       	std	Y+12, r18	; 0x0c
    5954:	49 d1       	rcall	.+658    	; 0x5be8 <strnlen>
    5956:	2c 01       	movw	r4, r24
    5958:	83 01       	movw	r16, r6
    595a:	2c 85       	ldd	r18, Y+12	; 0x0c
    595c:	2f 77       	andi	r18, 0x7F	; 127
    595e:	22 2e       	mov	r2, r18
    5960:	16 c0       	rjmp	.+44     	; 0x598e <vfprintf+0x18c>
    5962:	38 01       	movw	r6, r16
    5964:	f2 e0       	ldi	r31, 0x02	; 2
    5966:	6f 0e       	add	r6, r31
    5968:	71 1c       	adc	r7, r1
    596a:	f8 01       	movw	r30, r16
    596c:	a0 80       	ld	r10, Z
    596e:	b1 80       	ldd	r11, Z+1	; 0x01
    5970:	26 ff       	sbrs	r18, 6
    5972:	03 c0       	rjmp	.+6      	; 0x597a <vfprintf+0x178>
    5974:	65 2d       	mov	r22, r5
    5976:	70 e0       	ldi	r23, 0x00	; 0
    5978:	02 c0       	rjmp	.+4      	; 0x597e <vfprintf+0x17c>
    597a:	6f ef       	ldi	r22, 0xFF	; 255
    597c:	7f ef       	ldi	r23, 0xFF	; 255
    597e:	c5 01       	movw	r24, r10
    5980:	2c 87       	std	Y+12, r18	; 0x0c
    5982:	27 d1       	rcall	.+590    	; 0x5bd2 <strnlen_P>
    5984:	2c 01       	movw	r4, r24
    5986:	2c 85       	ldd	r18, Y+12	; 0x0c
    5988:	20 68       	ori	r18, 0x80	; 128
    598a:	22 2e       	mov	r2, r18
    598c:	83 01       	movw	r16, r6
    598e:	23 fc       	sbrc	r2, 3
    5990:	19 c0       	rjmp	.+50     	; 0x59c4 <vfprintf+0x1c2>
    5992:	83 2d       	mov	r24, r3
    5994:	90 e0       	ldi	r25, 0x00	; 0
    5996:	48 16       	cp	r4, r24
    5998:	59 06       	cpc	r5, r25
    599a:	a0 f4       	brcc	.+40     	; 0x59c4 <vfprintf+0x1c2>
    599c:	b7 01       	movw	r22, r14
    599e:	80 e2       	ldi	r24, 0x20	; 32
    59a0:	90 e0       	ldi	r25, 0x00	; 0
    59a2:	2d d1       	rcall	.+602    	; 0x5bfe <fputc>
    59a4:	3a 94       	dec	r3
    59a6:	f5 cf       	rjmp	.-22     	; 0x5992 <vfprintf+0x190>
    59a8:	f5 01       	movw	r30, r10
    59aa:	27 fc       	sbrc	r2, 7
    59ac:	85 91       	lpm	r24, Z+
    59ae:	27 fe       	sbrs	r2, 7
    59b0:	81 91       	ld	r24, Z+
    59b2:	5f 01       	movw	r10, r30
    59b4:	b7 01       	movw	r22, r14
    59b6:	90 e0       	ldi	r25, 0x00	; 0
    59b8:	22 d1       	rcall	.+580    	; 0x5bfe <fputc>
    59ba:	31 10       	cpse	r3, r1
    59bc:	3a 94       	dec	r3
    59be:	f1 e0       	ldi	r31, 0x01	; 1
    59c0:	4f 1a       	sub	r4, r31
    59c2:	51 08       	sbc	r5, r1
    59c4:	41 14       	cp	r4, r1
    59c6:	51 04       	cpc	r5, r1
    59c8:	79 f7       	brne	.-34     	; 0x59a8 <vfprintf+0x1a6>
    59ca:	de c0       	rjmp	.+444    	; 0x5b88 <vfprintf+0x386>
    59cc:	84 36       	cpi	r24, 0x64	; 100
    59ce:	11 f0       	breq	.+4      	; 0x59d4 <vfprintf+0x1d2>
    59d0:	89 36       	cpi	r24, 0x69	; 105
    59d2:	31 f5       	brne	.+76     	; 0x5a20 <vfprintf+0x21e>
    59d4:	f8 01       	movw	r30, r16
    59d6:	27 ff       	sbrs	r18, 7
    59d8:	07 c0       	rjmp	.+14     	; 0x59e8 <vfprintf+0x1e6>
    59da:	60 81       	ld	r22, Z
    59dc:	71 81       	ldd	r23, Z+1	; 0x01
    59de:	82 81       	ldd	r24, Z+2	; 0x02
    59e0:	93 81       	ldd	r25, Z+3	; 0x03
    59e2:	0c 5f       	subi	r16, 0xFC	; 252
    59e4:	1f 4f       	sbci	r17, 0xFF	; 255
    59e6:	08 c0       	rjmp	.+16     	; 0x59f8 <vfprintf+0x1f6>
    59e8:	60 81       	ld	r22, Z
    59ea:	71 81       	ldd	r23, Z+1	; 0x01
    59ec:	88 27       	eor	r24, r24
    59ee:	77 fd       	sbrc	r23, 7
    59f0:	80 95       	com	r24
    59f2:	98 2f       	mov	r25, r24
    59f4:	0e 5f       	subi	r16, 0xFE	; 254
    59f6:	1f 4f       	sbci	r17, 0xFF	; 255
    59f8:	2f 76       	andi	r18, 0x6F	; 111
    59fa:	b2 2e       	mov	r11, r18
    59fc:	97 ff       	sbrs	r25, 7
    59fe:	09 c0       	rjmp	.+18     	; 0x5a12 <vfprintf+0x210>
    5a00:	90 95       	com	r25
    5a02:	80 95       	com	r24
    5a04:	70 95       	com	r23
    5a06:	61 95       	neg	r22
    5a08:	7f 4f       	sbci	r23, 0xFF	; 255
    5a0a:	8f 4f       	sbci	r24, 0xFF	; 255
    5a0c:	9f 4f       	sbci	r25, 0xFF	; 255
    5a0e:	20 68       	ori	r18, 0x80	; 128
    5a10:	b2 2e       	mov	r11, r18
    5a12:	2a e0       	ldi	r18, 0x0A	; 10
    5a14:	30 e0       	ldi	r19, 0x00	; 0
    5a16:	a4 01       	movw	r20, r8
    5a18:	24 d1       	rcall	.+584    	; 0x5c62 <__ultoa_invert>
    5a1a:	a8 2e       	mov	r10, r24
    5a1c:	a8 18       	sub	r10, r8
    5a1e:	43 c0       	rjmp	.+134    	; 0x5aa6 <vfprintf+0x2a4>
    5a20:	85 37       	cpi	r24, 0x75	; 117
    5a22:	29 f4       	brne	.+10     	; 0x5a2e <vfprintf+0x22c>
    5a24:	2f 7e       	andi	r18, 0xEF	; 239
    5a26:	b2 2e       	mov	r11, r18
    5a28:	2a e0       	ldi	r18, 0x0A	; 10
    5a2a:	30 e0       	ldi	r19, 0x00	; 0
    5a2c:	25 c0       	rjmp	.+74     	; 0x5a78 <vfprintf+0x276>
    5a2e:	f2 2f       	mov	r31, r18
    5a30:	f9 7f       	andi	r31, 0xF9	; 249
    5a32:	bf 2e       	mov	r11, r31
    5a34:	8f 36       	cpi	r24, 0x6F	; 111
    5a36:	c1 f0       	breq	.+48     	; 0x5a68 <vfprintf+0x266>
    5a38:	18 f4       	brcc	.+6      	; 0x5a40 <vfprintf+0x23e>
    5a3a:	88 35       	cpi	r24, 0x58	; 88
    5a3c:	79 f0       	breq	.+30     	; 0x5a5c <vfprintf+0x25a>
    5a3e:	ad c0       	rjmp	.+346    	; 0x5b9a <vfprintf+0x398>
    5a40:	80 37       	cpi	r24, 0x70	; 112
    5a42:	19 f0       	breq	.+6      	; 0x5a4a <vfprintf+0x248>
    5a44:	88 37       	cpi	r24, 0x78	; 120
    5a46:	21 f0       	breq	.+8      	; 0x5a50 <vfprintf+0x24e>
    5a48:	a8 c0       	rjmp	.+336    	; 0x5b9a <vfprintf+0x398>
    5a4a:	2f 2f       	mov	r18, r31
    5a4c:	20 61       	ori	r18, 0x10	; 16
    5a4e:	b2 2e       	mov	r11, r18
    5a50:	b4 fe       	sbrs	r11, 4
    5a52:	0d c0       	rjmp	.+26     	; 0x5a6e <vfprintf+0x26c>
    5a54:	8b 2d       	mov	r24, r11
    5a56:	84 60       	ori	r24, 0x04	; 4
    5a58:	b8 2e       	mov	r11, r24
    5a5a:	09 c0       	rjmp	.+18     	; 0x5a6e <vfprintf+0x26c>
    5a5c:	24 ff       	sbrs	r18, 4
    5a5e:	0a c0       	rjmp	.+20     	; 0x5a74 <vfprintf+0x272>
    5a60:	9f 2f       	mov	r25, r31
    5a62:	96 60       	ori	r25, 0x06	; 6
    5a64:	b9 2e       	mov	r11, r25
    5a66:	06 c0       	rjmp	.+12     	; 0x5a74 <vfprintf+0x272>
    5a68:	28 e0       	ldi	r18, 0x08	; 8
    5a6a:	30 e0       	ldi	r19, 0x00	; 0
    5a6c:	05 c0       	rjmp	.+10     	; 0x5a78 <vfprintf+0x276>
    5a6e:	20 e1       	ldi	r18, 0x10	; 16
    5a70:	30 e0       	ldi	r19, 0x00	; 0
    5a72:	02 c0       	rjmp	.+4      	; 0x5a78 <vfprintf+0x276>
    5a74:	20 e1       	ldi	r18, 0x10	; 16
    5a76:	32 e0       	ldi	r19, 0x02	; 2
    5a78:	f8 01       	movw	r30, r16
    5a7a:	b7 fe       	sbrs	r11, 7
    5a7c:	07 c0       	rjmp	.+14     	; 0x5a8c <vfprintf+0x28a>
    5a7e:	60 81       	ld	r22, Z
    5a80:	71 81       	ldd	r23, Z+1	; 0x01
    5a82:	82 81       	ldd	r24, Z+2	; 0x02
    5a84:	93 81       	ldd	r25, Z+3	; 0x03
    5a86:	0c 5f       	subi	r16, 0xFC	; 252
    5a88:	1f 4f       	sbci	r17, 0xFF	; 255
    5a8a:	06 c0       	rjmp	.+12     	; 0x5a98 <vfprintf+0x296>
    5a8c:	60 81       	ld	r22, Z
    5a8e:	71 81       	ldd	r23, Z+1	; 0x01
    5a90:	80 e0       	ldi	r24, 0x00	; 0
    5a92:	90 e0       	ldi	r25, 0x00	; 0
    5a94:	0e 5f       	subi	r16, 0xFE	; 254
    5a96:	1f 4f       	sbci	r17, 0xFF	; 255
    5a98:	a4 01       	movw	r20, r8
    5a9a:	e3 d0       	rcall	.+454    	; 0x5c62 <__ultoa_invert>
    5a9c:	a8 2e       	mov	r10, r24
    5a9e:	a8 18       	sub	r10, r8
    5aa0:	fb 2d       	mov	r31, r11
    5aa2:	ff 77       	andi	r31, 0x7F	; 127
    5aa4:	bf 2e       	mov	r11, r31
    5aa6:	b6 fe       	sbrs	r11, 6
    5aa8:	0b c0       	rjmp	.+22     	; 0x5ac0 <vfprintf+0x2be>
    5aaa:	2b 2d       	mov	r18, r11
    5aac:	2e 7f       	andi	r18, 0xFE	; 254
    5aae:	a5 14       	cp	r10, r5
    5ab0:	50 f4       	brcc	.+20     	; 0x5ac6 <vfprintf+0x2c4>
    5ab2:	b4 fe       	sbrs	r11, 4
    5ab4:	0a c0       	rjmp	.+20     	; 0x5aca <vfprintf+0x2c8>
    5ab6:	b2 fc       	sbrc	r11, 2
    5ab8:	08 c0       	rjmp	.+16     	; 0x5aca <vfprintf+0x2c8>
    5aba:	2b 2d       	mov	r18, r11
    5abc:	2e 7e       	andi	r18, 0xEE	; 238
    5abe:	05 c0       	rjmp	.+10     	; 0x5aca <vfprintf+0x2c8>
    5ac0:	7a 2c       	mov	r7, r10
    5ac2:	2b 2d       	mov	r18, r11
    5ac4:	03 c0       	rjmp	.+6      	; 0x5acc <vfprintf+0x2ca>
    5ac6:	7a 2c       	mov	r7, r10
    5ac8:	01 c0       	rjmp	.+2      	; 0x5acc <vfprintf+0x2ca>
    5aca:	75 2c       	mov	r7, r5
    5acc:	24 ff       	sbrs	r18, 4
    5ace:	0d c0       	rjmp	.+26     	; 0x5aea <vfprintf+0x2e8>
    5ad0:	fe 01       	movw	r30, r28
    5ad2:	ea 0d       	add	r30, r10
    5ad4:	f1 1d       	adc	r31, r1
    5ad6:	80 81       	ld	r24, Z
    5ad8:	80 33       	cpi	r24, 0x30	; 48
    5ada:	11 f4       	brne	.+4      	; 0x5ae0 <vfprintf+0x2de>
    5adc:	29 7e       	andi	r18, 0xE9	; 233
    5ade:	09 c0       	rjmp	.+18     	; 0x5af2 <vfprintf+0x2f0>
    5ae0:	22 ff       	sbrs	r18, 2
    5ae2:	06 c0       	rjmp	.+12     	; 0x5af0 <vfprintf+0x2ee>
    5ae4:	73 94       	inc	r7
    5ae6:	73 94       	inc	r7
    5ae8:	04 c0       	rjmp	.+8      	; 0x5af2 <vfprintf+0x2f0>
    5aea:	82 2f       	mov	r24, r18
    5aec:	86 78       	andi	r24, 0x86	; 134
    5aee:	09 f0       	breq	.+2      	; 0x5af2 <vfprintf+0x2f0>
    5af0:	73 94       	inc	r7
    5af2:	23 fd       	sbrc	r18, 3
    5af4:	12 c0       	rjmp	.+36     	; 0x5b1a <vfprintf+0x318>
    5af6:	20 ff       	sbrs	r18, 0
    5af8:	06 c0       	rjmp	.+12     	; 0x5b06 <vfprintf+0x304>
    5afa:	5a 2c       	mov	r5, r10
    5afc:	73 14       	cp	r7, r3
    5afe:	18 f4       	brcc	.+6      	; 0x5b06 <vfprintf+0x304>
    5b00:	53 0c       	add	r5, r3
    5b02:	57 18       	sub	r5, r7
    5b04:	73 2c       	mov	r7, r3
    5b06:	73 14       	cp	r7, r3
    5b08:	60 f4       	brcc	.+24     	; 0x5b22 <vfprintf+0x320>
    5b0a:	b7 01       	movw	r22, r14
    5b0c:	80 e2       	ldi	r24, 0x20	; 32
    5b0e:	90 e0       	ldi	r25, 0x00	; 0
    5b10:	2c 87       	std	Y+12, r18	; 0x0c
    5b12:	75 d0       	rcall	.+234    	; 0x5bfe <fputc>
    5b14:	73 94       	inc	r7
    5b16:	2c 85       	ldd	r18, Y+12	; 0x0c
    5b18:	f6 cf       	rjmp	.-20     	; 0x5b06 <vfprintf+0x304>
    5b1a:	73 14       	cp	r7, r3
    5b1c:	10 f4       	brcc	.+4      	; 0x5b22 <vfprintf+0x320>
    5b1e:	37 18       	sub	r3, r7
    5b20:	01 c0       	rjmp	.+2      	; 0x5b24 <vfprintf+0x322>
    5b22:	31 2c       	mov	r3, r1
    5b24:	24 ff       	sbrs	r18, 4
    5b26:	11 c0       	rjmp	.+34     	; 0x5b4a <vfprintf+0x348>
    5b28:	b7 01       	movw	r22, r14
    5b2a:	80 e3       	ldi	r24, 0x30	; 48
    5b2c:	90 e0       	ldi	r25, 0x00	; 0
    5b2e:	2c 87       	std	Y+12, r18	; 0x0c
    5b30:	66 d0       	rcall	.+204    	; 0x5bfe <fputc>
    5b32:	2c 85       	ldd	r18, Y+12	; 0x0c
    5b34:	22 ff       	sbrs	r18, 2
    5b36:	16 c0       	rjmp	.+44     	; 0x5b64 <vfprintf+0x362>
    5b38:	21 ff       	sbrs	r18, 1
    5b3a:	03 c0       	rjmp	.+6      	; 0x5b42 <vfprintf+0x340>
    5b3c:	88 e5       	ldi	r24, 0x58	; 88
    5b3e:	90 e0       	ldi	r25, 0x00	; 0
    5b40:	02 c0       	rjmp	.+4      	; 0x5b46 <vfprintf+0x344>
    5b42:	88 e7       	ldi	r24, 0x78	; 120
    5b44:	90 e0       	ldi	r25, 0x00	; 0
    5b46:	b7 01       	movw	r22, r14
    5b48:	0c c0       	rjmp	.+24     	; 0x5b62 <vfprintf+0x360>
    5b4a:	82 2f       	mov	r24, r18
    5b4c:	86 78       	andi	r24, 0x86	; 134
    5b4e:	51 f0       	breq	.+20     	; 0x5b64 <vfprintf+0x362>
    5b50:	21 fd       	sbrc	r18, 1
    5b52:	02 c0       	rjmp	.+4      	; 0x5b58 <vfprintf+0x356>
    5b54:	80 e2       	ldi	r24, 0x20	; 32
    5b56:	01 c0       	rjmp	.+2      	; 0x5b5a <vfprintf+0x358>
    5b58:	8b e2       	ldi	r24, 0x2B	; 43
    5b5a:	27 fd       	sbrc	r18, 7
    5b5c:	8d e2       	ldi	r24, 0x2D	; 45
    5b5e:	b7 01       	movw	r22, r14
    5b60:	90 e0       	ldi	r25, 0x00	; 0
    5b62:	4d d0       	rcall	.+154    	; 0x5bfe <fputc>
    5b64:	a5 14       	cp	r10, r5
    5b66:	30 f4       	brcc	.+12     	; 0x5b74 <vfprintf+0x372>
    5b68:	b7 01       	movw	r22, r14
    5b6a:	80 e3       	ldi	r24, 0x30	; 48
    5b6c:	90 e0       	ldi	r25, 0x00	; 0
    5b6e:	47 d0       	rcall	.+142    	; 0x5bfe <fputc>
    5b70:	5a 94       	dec	r5
    5b72:	f8 cf       	rjmp	.-16     	; 0x5b64 <vfprintf+0x362>
    5b74:	aa 94       	dec	r10
    5b76:	f4 01       	movw	r30, r8
    5b78:	ea 0d       	add	r30, r10
    5b7a:	f1 1d       	adc	r31, r1
    5b7c:	80 81       	ld	r24, Z
    5b7e:	b7 01       	movw	r22, r14
    5b80:	90 e0       	ldi	r25, 0x00	; 0
    5b82:	3d d0       	rcall	.+122    	; 0x5bfe <fputc>
    5b84:	a1 10       	cpse	r10, r1
    5b86:	f6 cf       	rjmp	.-20     	; 0x5b74 <vfprintf+0x372>
    5b88:	33 20       	and	r3, r3
    5b8a:	09 f4       	brne	.+2      	; 0x5b8e <vfprintf+0x38c>
    5b8c:	5d ce       	rjmp	.-838    	; 0x5848 <vfprintf+0x46>
    5b8e:	b7 01       	movw	r22, r14
    5b90:	80 e2       	ldi	r24, 0x20	; 32
    5b92:	90 e0       	ldi	r25, 0x00	; 0
    5b94:	34 d0       	rcall	.+104    	; 0x5bfe <fputc>
    5b96:	3a 94       	dec	r3
    5b98:	f7 cf       	rjmp	.-18     	; 0x5b88 <vfprintf+0x386>
    5b9a:	f7 01       	movw	r30, r14
    5b9c:	86 81       	ldd	r24, Z+6	; 0x06
    5b9e:	97 81       	ldd	r25, Z+7	; 0x07
    5ba0:	02 c0       	rjmp	.+4      	; 0x5ba6 <vfprintf+0x3a4>
    5ba2:	8f ef       	ldi	r24, 0xFF	; 255
    5ba4:	9f ef       	ldi	r25, 0xFF	; 255
    5ba6:	2c 96       	adiw	r28, 0x0c	; 12
    5ba8:	cd bf       	out	0x3d, r28	; 61
    5baa:	de bf       	out	0x3e, r29	; 62
    5bac:	df 91       	pop	r29
    5bae:	cf 91       	pop	r28
    5bb0:	1f 91       	pop	r17
    5bb2:	0f 91       	pop	r16
    5bb4:	ff 90       	pop	r15
    5bb6:	ef 90       	pop	r14
    5bb8:	df 90       	pop	r13
    5bba:	cf 90       	pop	r12
    5bbc:	bf 90       	pop	r11
    5bbe:	af 90       	pop	r10
    5bc0:	9f 90       	pop	r9
    5bc2:	8f 90       	pop	r8
    5bc4:	7f 90       	pop	r7
    5bc6:	6f 90       	pop	r6
    5bc8:	5f 90       	pop	r5
    5bca:	4f 90       	pop	r4
    5bcc:	3f 90       	pop	r3
    5bce:	2f 90       	pop	r2
    5bd0:	08 95       	ret

00005bd2 <strnlen_P>:
    5bd2:	fc 01       	movw	r30, r24
    5bd4:	05 90       	lpm	r0, Z+
    5bd6:	61 50       	subi	r22, 0x01	; 1
    5bd8:	70 40       	sbci	r23, 0x00	; 0
    5bda:	01 10       	cpse	r0, r1
    5bdc:	d8 f7       	brcc	.-10     	; 0x5bd4 <strnlen_P+0x2>
    5bde:	80 95       	com	r24
    5be0:	90 95       	com	r25
    5be2:	8e 0f       	add	r24, r30
    5be4:	9f 1f       	adc	r25, r31
    5be6:	08 95       	ret

00005be8 <strnlen>:
    5be8:	fc 01       	movw	r30, r24
    5bea:	61 50       	subi	r22, 0x01	; 1
    5bec:	70 40       	sbci	r23, 0x00	; 0
    5bee:	01 90       	ld	r0, Z+
    5bf0:	01 10       	cpse	r0, r1
    5bf2:	d8 f7       	brcc	.-10     	; 0x5bea <strnlen+0x2>
    5bf4:	80 95       	com	r24
    5bf6:	90 95       	com	r25
    5bf8:	8e 0f       	add	r24, r30
    5bfa:	9f 1f       	adc	r25, r31
    5bfc:	08 95       	ret

00005bfe <fputc>:
    5bfe:	0f 93       	push	r16
    5c00:	1f 93       	push	r17
    5c02:	cf 93       	push	r28
    5c04:	df 93       	push	r29
    5c06:	18 2f       	mov	r17, r24
    5c08:	09 2f       	mov	r16, r25
    5c0a:	eb 01       	movw	r28, r22
    5c0c:	8b 81       	ldd	r24, Y+3	; 0x03
    5c0e:	81 fd       	sbrc	r24, 1
    5c10:	03 c0       	rjmp	.+6      	; 0x5c18 <fputc+0x1a>
    5c12:	8f ef       	ldi	r24, 0xFF	; 255
    5c14:	9f ef       	ldi	r25, 0xFF	; 255
    5c16:	20 c0       	rjmp	.+64     	; 0x5c58 <fputc+0x5a>
    5c18:	82 ff       	sbrs	r24, 2
    5c1a:	10 c0       	rjmp	.+32     	; 0x5c3c <fputc+0x3e>
    5c1c:	4e 81       	ldd	r20, Y+6	; 0x06
    5c1e:	5f 81       	ldd	r21, Y+7	; 0x07
    5c20:	2c 81       	ldd	r18, Y+4	; 0x04
    5c22:	3d 81       	ldd	r19, Y+5	; 0x05
    5c24:	42 17       	cp	r20, r18
    5c26:	53 07       	cpc	r21, r19
    5c28:	7c f4       	brge	.+30     	; 0x5c48 <fputc+0x4a>
    5c2a:	e8 81       	ld	r30, Y
    5c2c:	f9 81       	ldd	r31, Y+1	; 0x01
    5c2e:	9f 01       	movw	r18, r30
    5c30:	2f 5f       	subi	r18, 0xFF	; 255
    5c32:	3f 4f       	sbci	r19, 0xFF	; 255
    5c34:	28 83       	st	Y, r18
    5c36:	39 83       	std	Y+1, r19	; 0x01
    5c38:	10 83       	st	Z, r17
    5c3a:	06 c0       	rjmp	.+12     	; 0x5c48 <fputc+0x4a>
    5c3c:	e8 85       	ldd	r30, Y+8	; 0x08
    5c3e:	f9 85       	ldd	r31, Y+9	; 0x09
    5c40:	81 2f       	mov	r24, r17
    5c42:	19 95       	eicall
    5c44:	89 2b       	or	r24, r25
    5c46:	29 f7       	brne	.-54     	; 0x5c12 <fputc+0x14>
    5c48:	2e 81       	ldd	r18, Y+6	; 0x06
    5c4a:	3f 81       	ldd	r19, Y+7	; 0x07
    5c4c:	2f 5f       	subi	r18, 0xFF	; 255
    5c4e:	3f 4f       	sbci	r19, 0xFF	; 255
    5c50:	2e 83       	std	Y+6, r18	; 0x06
    5c52:	3f 83       	std	Y+7, r19	; 0x07
    5c54:	81 2f       	mov	r24, r17
    5c56:	90 2f       	mov	r25, r16
    5c58:	df 91       	pop	r29
    5c5a:	cf 91       	pop	r28
    5c5c:	1f 91       	pop	r17
    5c5e:	0f 91       	pop	r16
    5c60:	08 95       	ret

00005c62 <__ultoa_invert>:
    5c62:	fa 01       	movw	r30, r20
    5c64:	aa 27       	eor	r26, r26
    5c66:	28 30       	cpi	r18, 0x08	; 8
    5c68:	51 f1       	breq	.+84     	; 0x5cbe <__ultoa_invert+0x5c>
    5c6a:	20 31       	cpi	r18, 0x10	; 16
    5c6c:	81 f1       	breq	.+96     	; 0x5cce <__ultoa_invert+0x6c>
    5c6e:	e8 94       	clt
    5c70:	6f 93       	push	r22
    5c72:	6e 7f       	andi	r22, 0xFE	; 254
    5c74:	6e 5f       	subi	r22, 0xFE	; 254
    5c76:	7f 4f       	sbci	r23, 0xFF	; 255
    5c78:	8f 4f       	sbci	r24, 0xFF	; 255
    5c7a:	9f 4f       	sbci	r25, 0xFF	; 255
    5c7c:	af 4f       	sbci	r26, 0xFF	; 255
    5c7e:	b1 e0       	ldi	r27, 0x01	; 1
    5c80:	3e d0       	rcall	.+124    	; 0x5cfe <__ultoa_invert+0x9c>
    5c82:	b4 e0       	ldi	r27, 0x04	; 4
    5c84:	3c d0       	rcall	.+120    	; 0x5cfe <__ultoa_invert+0x9c>
    5c86:	67 0f       	add	r22, r23
    5c88:	78 1f       	adc	r23, r24
    5c8a:	89 1f       	adc	r24, r25
    5c8c:	9a 1f       	adc	r25, r26
    5c8e:	a1 1d       	adc	r26, r1
    5c90:	68 0f       	add	r22, r24
    5c92:	79 1f       	adc	r23, r25
    5c94:	8a 1f       	adc	r24, r26
    5c96:	91 1d       	adc	r25, r1
    5c98:	a1 1d       	adc	r26, r1
    5c9a:	6a 0f       	add	r22, r26
    5c9c:	71 1d       	adc	r23, r1
    5c9e:	81 1d       	adc	r24, r1
    5ca0:	91 1d       	adc	r25, r1
    5ca2:	a1 1d       	adc	r26, r1
    5ca4:	20 d0       	rcall	.+64     	; 0x5ce6 <__ultoa_invert+0x84>
    5ca6:	09 f4       	brne	.+2      	; 0x5caa <__ultoa_invert+0x48>
    5ca8:	68 94       	set
    5caa:	3f 91       	pop	r19
    5cac:	2a e0       	ldi	r18, 0x0A	; 10
    5cae:	26 9f       	mul	r18, r22
    5cb0:	11 24       	eor	r1, r1
    5cb2:	30 19       	sub	r19, r0
    5cb4:	30 5d       	subi	r19, 0xD0	; 208
    5cb6:	31 93       	st	Z+, r19
    5cb8:	de f6       	brtc	.-74     	; 0x5c70 <__ultoa_invert+0xe>
    5cba:	cf 01       	movw	r24, r30
    5cbc:	08 95       	ret
    5cbe:	46 2f       	mov	r20, r22
    5cc0:	47 70       	andi	r20, 0x07	; 7
    5cc2:	40 5d       	subi	r20, 0xD0	; 208
    5cc4:	41 93       	st	Z+, r20
    5cc6:	b3 e0       	ldi	r27, 0x03	; 3
    5cc8:	0f d0       	rcall	.+30     	; 0x5ce8 <__ultoa_invert+0x86>
    5cca:	c9 f7       	brne	.-14     	; 0x5cbe <__ultoa_invert+0x5c>
    5ccc:	f6 cf       	rjmp	.-20     	; 0x5cba <__ultoa_invert+0x58>
    5cce:	46 2f       	mov	r20, r22
    5cd0:	4f 70       	andi	r20, 0x0F	; 15
    5cd2:	40 5d       	subi	r20, 0xD0	; 208
    5cd4:	4a 33       	cpi	r20, 0x3A	; 58
    5cd6:	18 f0       	brcs	.+6      	; 0x5cde <__ultoa_invert+0x7c>
    5cd8:	49 5d       	subi	r20, 0xD9	; 217
    5cda:	31 fd       	sbrc	r19, 1
    5cdc:	40 52       	subi	r20, 0x20	; 32
    5cde:	41 93       	st	Z+, r20
    5ce0:	02 d0       	rcall	.+4      	; 0x5ce6 <__ultoa_invert+0x84>
    5ce2:	a9 f7       	brne	.-22     	; 0x5cce <__ultoa_invert+0x6c>
    5ce4:	ea cf       	rjmp	.-44     	; 0x5cba <__ultoa_invert+0x58>
    5ce6:	b4 e0       	ldi	r27, 0x04	; 4
    5ce8:	a6 95       	lsr	r26
    5cea:	97 95       	ror	r25
    5cec:	87 95       	ror	r24
    5cee:	77 95       	ror	r23
    5cf0:	67 95       	ror	r22
    5cf2:	ba 95       	dec	r27
    5cf4:	c9 f7       	brne	.-14     	; 0x5ce8 <__ultoa_invert+0x86>
    5cf6:	00 97       	sbiw	r24, 0x00	; 0
    5cf8:	61 05       	cpc	r22, r1
    5cfa:	71 05       	cpc	r23, r1
    5cfc:	08 95       	ret
    5cfe:	9b 01       	movw	r18, r22
    5d00:	ac 01       	movw	r20, r24
    5d02:	0a 2e       	mov	r0, r26
    5d04:	06 94       	lsr	r0
    5d06:	57 95       	ror	r21
    5d08:	47 95       	ror	r20
    5d0a:	37 95       	ror	r19
    5d0c:	27 95       	ror	r18
    5d0e:	ba 95       	dec	r27
    5d10:	c9 f7       	brne	.-14     	; 0x5d04 <__ultoa_invert+0xa2>
    5d12:	62 0f       	add	r22, r18
    5d14:	73 1f       	adc	r23, r19
    5d16:	84 1f       	adc	r24, r20
    5d18:	95 1f       	adc	r25, r21
    5d1a:	a0 1d       	adc	r26, r0
    5d1c:	08 95       	ret

00005d1e <_exit>:
    5d1e:	f8 94       	cli

00005d20 <__stop_program>:
    5d20:	ff cf       	rjmp	.-2      	; 0x5d20 <__stop_program>
