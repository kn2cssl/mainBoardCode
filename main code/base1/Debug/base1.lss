
base1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005e78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000048  00802000  00005e78  00005f0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000003e0  00802048  00802048  00005f54  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005f54  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007c0  00000000  00000000  00005fb0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000c40d  00000000  00000000  00006770  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002123  00000000  00000000  00012b7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000857c  00000000  00000000  00014ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000206c  00000000  00000000  0001d21c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00026569  00000000  00000000  0001f288  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00007241  00000000  00000000  000457f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006a0  00000000  00000000  0004ca38  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000ad5c  00000000  00000000  0004d0d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	f9 c0       	rjmp	.+498    	; 0x1f4 <__ctors_end>
       2:	00 00       	nop
       4:	1d c1       	rjmp	.+570    	; 0x240 <__bad_interrupt>
       6:	00 00       	nop
       8:	0c 94 2e 28 	jmp	0x505c	; 0x505c <__vector_2>
       c:	19 c1       	rjmp	.+562    	; 0x240 <__bad_interrupt>
       e:	00 00       	nop
      10:	17 c1       	rjmp	.+558    	; 0x240 <__bad_interrupt>
      12:	00 00       	nop
      14:	15 c1       	rjmp	.+554    	; 0x240 <__bad_interrupt>
      16:	00 00       	nop
      18:	13 c1       	rjmp	.+550    	; 0x240 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	11 c1       	rjmp	.+546    	; 0x240 <__bad_interrupt>
      1e:	00 00       	nop
      20:	0f c1       	rjmp	.+542    	; 0x240 <__bad_interrupt>
      22:	00 00       	nop
      24:	0d c1       	rjmp	.+538    	; 0x240 <__bad_interrupt>
      26:	00 00       	nop
      28:	0b c1       	rjmp	.+534    	; 0x240 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	09 c1       	rjmp	.+530    	; 0x240 <__bad_interrupt>
      2e:	00 00       	nop
      30:	07 c1       	rjmp	.+526    	; 0x240 <__bad_interrupt>
      32:	00 00       	nop
      34:	05 c1       	rjmp	.+522    	; 0x240 <__bad_interrupt>
      36:	00 00       	nop
      38:	45 c5       	rjmp	.+2698   	; 0xac4 <__vector_14>
      3a:	00 00       	nop
      3c:	7b c5       	rjmp	.+2806   	; 0xb34 <__vector_15>
      3e:	00 00       	nop
      40:	b1 c5       	rjmp	.+2914   	; 0xba4 <__vector_16>
      42:	00 00       	nop
      44:	e7 c5       	rjmp	.+3022   	; 0xc14 <__vector_17>
      46:	00 00       	nop
      48:	1d c6       	rjmp	.+3130   	; 0xc84 <__vector_18>
      4a:	00 00       	nop
      4c:	53 c6       	rjmp	.+3238   	; 0xcf4 <__vector_19>
      4e:	00 00       	nop
      50:	89 c6       	rjmp	.+3346   	; 0xd64 <__vector_20>
      52:	00 00       	nop
      54:	bf c6       	rjmp	.+3454   	; 0xdd4 <__vector_21>
      56:	00 00       	nop
      58:	f5 c6       	rjmp	.+3562   	; 0xe44 <__vector_22>
      5a:	00 00       	nop
      5c:	2b c7       	rjmp	.+3670   	; 0xeb4 <__vector_23>
      5e:	00 00       	nop
      60:	ef c0       	rjmp	.+478    	; 0x240 <__bad_interrupt>
      62:	00 00       	nop
      64:	ed c0       	rjmp	.+474    	; 0x240 <__bad_interrupt>
      66:	00 00       	nop
      68:	eb c0       	rjmp	.+470    	; 0x240 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	e9 c0       	rjmp	.+466    	; 0x240 <__bad_interrupt>
      6e:	00 00       	nop
      70:	e7 c0       	rjmp	.+462    	; 0x240 <__bad_interrupt>
      72:	00 00       	nop
      74:	e5 c0       	rjmp	.+458    	; 0x240 <__bad_interrupt>
      76:	00 00       	nop
      78:	e3 c0       	rjmp	.+454    	; 0x240 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	e1 c0       	rjmp	.+450    	; 0x240 <__bad_interrupt>
      7e:	00 00       	nop
      80:	df c0       	rjmp	.+446    	; 0x240 <__bad_interrupt>
      82:	00 00       	nop
      84:	dd c0       	rjmp	.+442    	; 0x240 <__bad_interrupt>
      86:	00 00       	nop
      88:	db c0       	rjmp	.+438    	; 0x240 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	d9 c0       	rjmp	.+434    	; 0x240 <__bad_interrupt>
      8e:	00 00       	nop
      90:	d7 c0       	rjmp	.+430    	; 0x240 <__bad_interrupt>
      92:	00 00       	nop
      94:	d5 c0       	rjmp	.+426    	; 0x240 <__bad_interrupt>
      96:	00 00       	nop
      98:	d3 c0       	rjmp	.+422    	; 0x240 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	d1 c0       	rjmp	.+418    	; 0x240 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	cf c0       	rjmp	.+414    	; 0x240 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	cd c0       	rjmp	.+410    	; 0x240 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	cb c0       	rjmp	.+406    	; 0x240 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	0c 94 bb 21 	jmp	0x4376	; 0x4376 <__vector_43>
      b0:	c7 c0       	rjmp	.+398    	; 0x240 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	c5 c0       	rjmp	.+394    	; 0x240 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	c3 c0       	rjmp	.+390    	; 0x240 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	0c 94 8a 09 	jmp	0x1314	; 0x1314 <__vector_47>
      c0:	0c 94 c2 09 	jmp	0x1384	; 0x1384 <__vector_48>
      c4:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__vector_49>
      c8:	0c 94 32 0a 	jmp	0x1464	; 0x1464 <__vector_50>
      cc:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__vector_51>
      d0:	0c 94 a2 0a 	jmp	0x1544	; 0x1544 <__vector_52>
      d4:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__vector_53>
      d8:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__vector_54>
      dc:	0c 94 4a 0b 	jmp	0x1694	; 0x1694 <__vector_55>
      e0:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <__vector_56>
      e4:	ad c0       	rjmp	.+346    	; 0x240 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ab c0       	rjmp	.+342    	; 0x240 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	a9 c0       	rjmp	.+338    	; 0x240 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	a7 c0       	rjmp	.+334    	; 0x240 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	a5 c0       	rjmp	.+330    	; 0x240 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	a3 c0       	rjmp	.+326    	; 0x240 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	a1 c0       	rjmp	.+322    	; 0x240 <__bad_interrupt>
      fe:	00 00       	nop
     100:	9f c0       	rjmp	.+318    	; 0x240 <__bad_interrupt>
     102:	00 00       	nop
     104:	9d c0       	rjmp	.+314    	; 0x240 <__bad_interrupt>
     106:	00 00       	nop
     108:	9b c0       	rjmp	.+310    	; 0x240 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	99 c0       	rjmp	.+306    	; 0x240 <__bad_interrupt>
     10e:	00 00       	nop
     110:	97 c0       	rjmp	.+302    	; 0x240 <__bad_interrupt>
     112:	00 00       	nop
     114:	95 c0       	rjmp	.+298    	; 0x240 <__bad_interrupt>
     116:	00 00       	nop
     118:	93 c0       	rjmp	.+294    	; 0x240 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	91 c0       	rjmp	.+290    	; 0x240 <__bad_interrupt>
     11e:	00 00       	nop
     120:	8f c0       	rjmp	.+286    	; 0x240 <__bad_interrupt>
     122:	00 00       	nop
     124:	8d c0       	rjmp	.+282    	; 0x240 <__bad_interrupt>
     126:	00 00       	nop
     128:	8b c0       	rjmp	.+278    	; 0x240 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	89 c0       	rjmp	.+274    	; 0x240 <__bad_interrupt>
     12e:	00 00       	nop
     130:	87 c0       	rjmp	.+270    	; 0x240 <__bad_interrupt>
     132:	00 00       	nop
     134:	0c 94 26 26 	jmp	0x4c4c	; 0x4c4c <__vector_77>
     138:	f5 c6       	rjmp	.+3562   	; 0xf24 <__vector_78>
     13a:	00 00       	nop
     13c:	2b c7       	rjmp	.+3670   	; 0xf94 <__vector_79>
     13e:	00 00       	nop
     140:	61 c7       	rjmp	.+3778   	; 0x1004 <__vector_80>
     142:	00 00       	nop
     144:	97 c7       	rjmp	.+3886   	; 0x1074 <__vector_81>
     146:	00 00       	nop
     148:	cd c7       	rjmp	.+3994   	; 0x10e4 <__vector_82>
     14a:	00 00       	nop
     14c:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__vector_83>
     150:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__vector_84>
     154:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__vector_85>
     158:	0c 94 52 09 	jmp	0x12a4	; 0x12a4 <__vector_86>
     15c:	71 c0       	rjmp	.+226    	; 0x240 <__bad_interrupt>
     15e:	00 00       	nop
     160:	6f c0       	rjmp	.+222    	; 0x240 <__bad_interrupt>
     162:	00 00       	nop
     164:	6d c0       	rjmp	.+218    	; 0x240 <__bad_interrupt>
     166:	00 00       	nop
     168:	6b c0       	rjmp	.+214    	; 0x240 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	69 c0       	rjmp	.+210    	; 0x240 <__bad_interrupt>
     16e:	00 00       	nop
     170:	67 c0       	rjmp	.+206    	; 0x240 <__bad_interrupt>
     172:	00 00       	nop
     174:	65 c0       	rjmp	.+202    	; 0x240 <__bad_interrupt>
     176:	00 00       	nop
     178:	0c 94 da 27 	jmp	0x4fb4	; 0x4fb4 <__vector_94>
     17c:	0c 94 58 28 	jmp	0x50b0	; 0x50b0 <__vector_95>
     180:	0c 94 04 28 	jmp	0x5008	; 0x5008 <__vector_96>
     184:	5d c0       	rjmp	.+186    	; 0x240 <__bad_interrupt>
     186:	00 00       	nop
     188:	5b c0       	rjmp	.+182    	; 0x240 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	59 c0       	rjmp	.+178    	; 0x240 <__bad_interrupt>
     18e:	00 00       	nop
     190:	0c 94 82 28 	jmp	0x5104	; 0x5104 <__vector_100>
     194:	55 c0       	rjmp	.+170    	; 0x240 <__bad_interrupt>
     196:	00 00       	nop
     198:	53 c0       	rjmp	.+166    	; 0x240 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	51 c0       	rjmp	.+162    	; 0x240 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	0c 94 cb 27 	jmp	0x4f96	; 0x4f96 <__vector_104>
     1a4:	4d c0       	rjmp	.+154    	; 0x240 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	4b c0       	rjmp	.+150    	; 0x240 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	49 c0       	rjmp	.+146    	; 0x240 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0c 94 ba 0b 	jmp	0x1774	; 0x1774 <__vector_108>
     1b4:	0c 94 f2 0b 	jmp	0x17e4	; 0x17e4 <__vector_109>
     1b8:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <__vector_110>
     1bc:	0c 94 62 0c 	jmp	0x18c4	; 0x18c4 <__vector_111>
     1c0:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__vector_112>
     1c4:	0c 94 d2 0c 	jmp	0x19a4	; 0x19a4 <__vector_113>
     1c8:	0c 94 0a 0d 	jmp	0x1a14	; 0x1a14 <__vector_114>
     1cc:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__vector_115>
     1d0:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <__vector_116>
     1d4:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <__vector_117>
     1d8:	33 c0       	rjmp	.+102    	; 0x240 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	0c 94 d6 28 	jmp	0x51ac	; 0x51ac <__vector_119>
     1e0:	2f c0       	rjmp	.+94     	; 0x240 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	2d c0       	rjmp	.+90     	; 0x240 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	2b c0       	rjmp	.+86     	; 0x240 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	29 c0       	rjmp	.+82     	; 0x240 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	27 c0       	rjmp	.+78     	; 0x240 <__bad_interrupt>
	...

000001f4 <__ctors_end>:
     1f4:	11 24       	eor	r1, r1
     1f6:	1f be       	out	0x3f, r1	; 63
     1f8:	cf ef       	ldi	r28, 0xFF	; 255
     1fa:	cd bf       	out	0x3d, r28	; 61
     1fc:	df e3       	ldi	r29, 0x3F	; 63
     1fe:	de bf       	out	0x3e, r29	; 62
     200:	00 e0       	ldi	r16, 0x00	; 0
     202:	0c bf       	out	0x3c, r16	; 60
     204:	18 be       	out	0x38, r1	; 56
     206:	19 be       	out	0x39, r1	; 57
     208:	1a be       	out	0x3a, r1	; 58
     20a:	1b be       	out	0x3b, r1	; 59

0000020c <__do_copy_data>:
     20c:	10 e2       	ldi	r17, 0x20	; 32
     20e:	a0 e0       	ldi	r26, 0x00	; 0
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	e8 e7       	ldi	r30, 0x78	; 120
     214:	fe e5       	ldi	r31, 0x5E	; 94
     216:	00 e0       	ldi	r16, 0x00	; 0
     218:	0b bf       	out	0x3b, r16	; 59
     21a:	02 c0       	rjmp	.+4      	; 0x220 <__do_copy_data+0x14>
     21c:	07 90       	elpm	r0, Z+
     21e:	0d 92       	st	X+, r0
     220:	a8 34       	cpi	r26, 0x48	; 72
     222:	b1 07       	cpc	r27, r17
     224:	d9 f7       	brne	.-10     	; 0x21c <__do_copy_data+0x10>
     226:	1b be       	out	0x3b, r1	; 59

00000228 <__do_clear_bss>:
     228:	24 e2       	ldi	r18, 0x24	; 36
     22a:	a8 e4       	ldi	r26, 0x48	; 72
     22c:	b0 e2       	ldi	r27, 0x20	; 32
     22e:	01 c0       	rjmp	.+2      	; 0x232 <.do_clear_bss_start>

00000230 <.do_clear_bss_loop>:
     230:	1d 92       	st	X+, r1

00000232 <.do_clear_bss_start>:
     232:	a8 32       	cpi	r26, 0x28	; 40
     234:	b2 07       	cpc	r27, r18
     236:	e1 f7       	brne	.-8      	; 0x230 <.do_clear_bss_loop>
     238:	0e 94 ed 10 	call	0x21da	; 0x21da <main>
     23c:	0c 94 3a 2f 	jmp	0x5e74	; 0x5e74 <_exit>

00000240 <__bad_interrupt>:
     240:	df ce       	rjmp	.-578    	; 0x0 <__vectors>

00000242 <LCDDataLines>:
}
void LCDStringFlash(char *data)	
{ 
 char k;
 while (k=*data++) LCDSendData(k);
}
     242:	e4 e2       	ldi	r30, 0x24	; 36
     244:	f6 e0       	ldi	r31, 0x06	; 6
     246:	90 81       	ld	r25, Z
     248:	a8 2f       	mov	r26, r24
     24a:	a1 70       	andi	r26, 0x01	; 1
     24c:	b0 e0       	ldi	r27, 0x00	; 0
     24e:	aa 0f       	add	r26, r26
     250:	bb 1f       	adc	r27, r27
     252:	aa 0f       	add	r26, r26
     254:	bb 1f       	adc	r27, r27
     256:	9b 7f       	andi	r25, 0xFB	; 251
     258:	a9 2b       	or	r26, r25
     25a:	a0 83       	st	Z, r26
     25c:	90 81       	ld	r25, Z
     25e:	81 fb       	bst	r24, 1
     260:	66 27       	eor	r22, r22
     262:	60 f9       	bld	r22, 0
     264:	70 e0       	ldi	r23, 0x00	; 0
     266:	66 0f       	add	r22, r22
     268:	77 1f       	adc	r23, r23
     26a:	62 95       	swap	r22
     26c:	72 95       	swap	r23
     26e:	70 7f       	andi	r23, 0xF0	; 240
     270:	76 27       	eor	r23, r22
     272:	60 7f       	andi	r22, 0xF0	; 240
     274:	76 27       	eor	r23, r22
     276:	9f 7d       	andi	r25, 0xDF	; 223
     278:	69 2b       	or	r22, r25
     27a:	60 83       	st	Z, r22
     27c:	90 81       	ld	r25, Z
     27e:	82 fb       	bst	r24, 2
     280:	44 27       	eor	r20, r20
     282:	40 f9       	bld	r20, 0
     284:	50 e0       	ldi	r21, 0x00	; 0
     286:	42 95       	swap	r20
     288:	52 95       	swap	r21
     28a:	50 7f       	andi	r21, 0xF0	; 240
     28c:	54 27       	eor	r21, r20
     28e:	40 7f       	andi	r20, 0xF0	; 240
     290:	54 27       	eor	r21, r20
     292:	9f 7e       	andi	r25, 0xEF	; 239
     294:	49 2b       	or	r20, r25
     296:	40 83       	st	Z, r20
     298:	e4 e4       	ldi	r30, 0x44	; 68
     29a:	f6 e0       	ldi	r31, 0x06	; 6
     29c:	90 81       	ld	r25, Z
     29e:	83 fb       	bst	r24, 3
     2a0:	22 27       	eor	r18, r18
     2a2:	20 f9       	bld	r18, 0
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	22 0f       	add	r18, r18
     2a8:	33 1f       	adc	r19, r19
     2aa:	22 95       	swap	r18
     2ac:	32 95       	swap	r19
     2ae:	30 7f       	andi	r19, 0xF0	; 240
     2b0:	32 27       	eor	r19, r18
     2b2:	20 7f       	andi	r18, 0xF0	; 240
     2b4:	32 27       	eor	r19, r18
     2b6:	89 2f       	mov	r24, r25
     2b8:	8f 7d       	andi	r24, 0xDF	; 223
     2ba:	28 2b       	or	r18, r24
     2bc:	20 83       	st	Z, r18
     2be:	08 95       	ret

000002c0 <LCDDirOut>:
     2c0:	e0 e2       	ldi	r30, 0x20	; 32
     2c2:	f6 e0       	ldi	r31, 0x06	; 6
     2c4:	80 81       	ld	r24, Z
     2c6:	84 60       	ori	r24, 0x04	; 4
     2c8:	80 83       	st	Z, r24
     2ca:	80 81       	ld	r24, Z
     2cc:	80 62       	ori	r24, 0x20	; 32
     2ce:	80 83       	st	Z, r24
     2d0:	80 81       	ld	r24, Z
     2d2:	80 61       	ori	r24, 0x10	; 16
     2d4:	80 83       	st	Z, r24
     2d6:	e0 e4       	ldi	r30, 0x40	; 64
     2d8:	f6 e0       	ldi	r31, 0x06	; 6
     2da:	80 81       	ld	r24, Z
     2dc:	80 62       	ori	r24, 0x20	; 32
     2de:	80 83       	st	Z, r24
     2e0:	08 95       	ret

000002e2 <LCDDirIn>:
     2e2:	e0 e2       	ldi	r30, 0x20	; 32
     2e4:	f6 e0       	ldi	r31, 0x06	; 6
     2e6:	80 81       	ld	r24, Z
     2e8:	8b 7f       	andi	r24, 0xFB	; 251
     2ea:	80 83       	st	Z, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	8f 7d       	andi	r24, 0xDF	; 223
     2f0:	80 83       	st	Z, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	8f 7e       	andi	r24, 0xEF	; 239
     2f6:	80 83       	st	Z, r24
     2f8:	e0 e4       	ldi	r30, 0x40	; 64
     2fa:	f6 e0       	ldi	r31, 0x06	; 6
     2fc:	80 81       	ld	r24, Z
     2fe:	8f 7d       	andi	r24, 0xDF	; 223
     300:	80 83       	st	Z, r24
     302:	08 95       	ret

00000304 <LCDSendData>:
     304:	cf 93       	push	r28
     306:	c8 2f       	mov	r28, r24
     308:	8f e1       	ldi	r24, 0x1F	; 31
     30a:	93 e0       	ldi	r25, 0x03	; 3
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <LCDSendData+0x8>
     310:	00 c0       	rjmp	.+0      	; 0x312 <LCDSendData+0xe>
     312:	00 00       	nop
     314:	8c 2f       	mov	r24, r28
     316:	82 95       	swap	r24
     318:	8f 70       	andi	r24, 0x0F	; 15
     31a:	93 df       	rcall	.-218    	; 0x242 <LCDDataLines>
     31c:	e4 e2       	ldi	r30, 0x24	; 36
     31e:	f6 e0       	ldi	r31, 0x06	; 6
     320:	80 81       	ld	r24, Z
     322:	82 60       	ori	r24, 0x02	; 2
     324:	80 83       	st	Z, r24
     326:	80 81       	ld	r24, Z
     328:	88 60       	ori	r24, 0x08	; 8
     32a:	80 83       	st	Z, r24
     32c:	95 ed       	ldi	r25, 0xD5	; 213
     32e:	9a 95       	dec	r25
     330:	f1 f7       	brne	.-4      	; 0x32e <LCDSendData+0x2a>
     332:	00 00       	nop
     334:	80 81       	ld	r24, Z
     336:	87 7f       	andi	r24, 0xF7	; 247
     338:	80 83       	st	Z, r24
     33a:	85 ed       	ldi	r24, 0xD5	; 213
     33c:	8a 95       	dec	r24
     33e:	f1 f7       	brne	.-4      	; 0x33c <LCDSendData+0x38>
     340:	00 00       	nop
     342:	8c 2f       	mov	r24, r28
     344:	7e df       	rcall	.-260    	; 0x242 <LCDDataLines>
     346:	e4 e2       	ldi	r30, 0x24	; 36
     348:	f6 e0       	ldi	r31, 0x06	; 6
     34a:	80 81       	ld	r24, Z
     34c:	88 60       	ori	r24, 0x08	; 8
     34e:	80 83       	st	Z, r24
     350:	95 ed       	ldi	r25, 0xD5	; 213
     352:	9a 95       	dec	r25
     354:	f1 f7       	brne	.-4      	; 0x352 <LCDSendData+0x4e>
     356:	00 00       	nop
     358:	80 81       	ld	r24, Z
     35a:	87 7f       	andi	r24, 0xF7	; 247
     35c:	80 83       	st	Z, r24
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <LCDSendCommand>:
     362:	cf 93       	push	r28
     364:	c8 2f       	mov	r28, r24
     366:	8f ef       	ldi	r24, 0xFF	; 255
     368:	8c 0f       	add	r24, r28
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	38 f4       	brcc	.+14     	; 0x37c <LCDSendCommand+0x1a>
     36e:	8f e3       	ldi	r24, 0x3F	; 63
     370:	9c e9       	ldi	r25, 0x9C	; 156
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <LCDSendCommand+0x10>
     376:	00 c0       	rjmp	.+0      	; 0x378 <LCDSendCommand+0x16>
     378:	00 00       	nop
     37a:	06 c0       	rjmp	.+12     	; 0x388 <LCDSendCommand+0x26>
     37c:	8f e3       	ldi	r24, 0x3F	; 63
     37e:	9f e1       	ldi	r25, 0x1F	; 31
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <LCDSendCommand+0x1e>
     384:	00 c0       	rjmp	.+0      	; 0x386 <LCDSendCommand+0x24>
     386:	00 00       	nop
     388:	8c 2f       	mov	r24, r28
     38a:	82 95       	swap	r24
     38c:	8f 70       	andi	r24, 0x0F	; 15
     38e:	59 df       	rcall	.-334    	; 0x242 <LCDDataLines>
     390:	e4 e2       	ldi	r30, 0x24	; 36
     392:	f6 e0       	ldi	r31, 0x06	; 6
     394:	80 81       	ld	r24, Z
     396:	8d 7f       	andi	r24, 0xFD	; 253
     398:	80 83       	st	Z, r24
     39a:	80 81       	ld	r24, Z
     39c:	88 60       	ori	r24, 0x08	; 8
     39e:	80 83       	st	Z, r24
     3a0:	95 ed       	ldi	r25, 0xD5	; 213
     3a2:	9a 95       	dec	r25
     3a4:	f1 f7       	brne	.-4      	; 0x3a2 <LCDSendCommand+0x40>
     3a6:	00 00       	nop
     3a8:	80 81       	ld	r24, Z
     3aa:	87 7f       	andi	r24, 0xF7	; 247
     3ac:	80 83       	st	Z, r24
     3ae:	85 ed       	ldi	r24, 0xD5	; 213
     3b0:	8a 95       	dec	r24
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <LCDSendCommand+0x4e>
     3b4:	00 00       	nop
     3b6:	8c 2f       	mov	r24, r28
     3b8:	44 df       	rcall	.-376    	; 0x242 <LCDDataLines>
     3ba:	e4 e2       	ldi	r30, 0x24	; 36
     3bc:	f6 e0       	ldi	r31, 0x06	; 6
     3be:	80 81       	ld	r24, Z
     3c0:	88 60       	ori	r24, 0x08	; 8
     3c2:	80 83       	st	Z, r24
     3c4:	95 ed       	ldi	r25, 0xD5	; 213
     3c6:	9a 95       	dec	r25
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <LCDSendCommand+0x64>
     3ca:	00 00       	nop
     3cc:	80 81       	ld	r24, Z
     3ce:	87 7f       	andi	r24, 0xF7	; 247
     3d0:	80 83       	st	Z, r24
     3d2:	cf 91       	pop	r28
     3d4:	08 95       	ret

000003d6 <LCDInit>:
     3d6:	e4 e2       	ldi	r30, 0x24	; 36
     3d8:	f6 e0       	ldi	r31, 0x06	; 6
     3da:	80 81       	ld	r24, Z
     3dc:	87 7f       	andi	r24, 0xF7	; 247
     3de:	80 83       	st	Z, r24
     3e0:	80 df       	rcall	.-256    	; 0x2e2 <LCDDirIn>
     3e2:	2f ef       	ldi	r18, 0xFF	; 255
     3e4:	87 ee       	ldi	r24, 0xE7	; 231
     3e6:	93 e0       	ldi	r25, 0x03	; 3
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <LCDInit+0x12>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <LCDInit+0x1c>
     3f2:	00 00       	nop
     3f4:	65 df       	rcall	.-310    	; 0x2c0 <LCDDirOut>
     3f6:	83 e0       	ldi	r24, 0x03	; 3
     3f8:	24 df       	rcall	.-440    	; 0x242 <LCDDataLines>
     3fa:	e0 e2       	ldi	r30, 0x20	; 32
     3fc:	f6 e0       	ldi	r31, 0x06	; 6
     3fe:	80 81       	ld	r24, Z
     400:	82 60       	ori	r24, 0x02	; 2
     402:	80 83       	st	Z, r24
     404:	80 81       	ld	r24, Z
     406:	81 60       	ori	r24, 0x01	; 1
     408:	80 83       	st	Z, r24
     40a:	a4 e2       	ldi	r26, 0x24	; 36
     40c:	b6 e0       	ldi	r27, 0x06	; 6
     40e:	8c 91       	ld	r24, X
     410:	8d 7f       	andi	r24, 0xFD	; 253
     412:	8c 93       	st	X, r24
     414:	8c 91       	ld	r24, X
     416:	8e 7f       	andi	r24, 0xFE	; 254
     418:	8c 93       	st	X, r24
     41a:	80 81       	ld	r24, Z
     41c:	88 60       	ori	r24, 0x08	; 8
     41e:	80 83       	st	Z, r24
     420:	25 ed       	ldi	r18, 0xD5	; 213
     422:	2a 95       	dec	r18
     424:	f1 f7       	brne	.-4      	; 0x422 <LCDInit+0x4c>
     426:	00 00       	nop
     428:	e4 e2       	ldi	r30, 0x24	; 36
     42a:	f6 e0       	ldi	r31, 0x06	; 6
     42c:	80 81       	ld	r24, Z
     42e:	88 60       	ori	r24, 0x08	; 8
     430:	80 83       	st	Z, r24
     432:	85 ed       	ldi	r24, 0xD5	; 213
     434:	8a 95       	dec	r24
     436:	f1 f7       	brne	.-4      	; 0x434 <LCDInit+0x5e>
     438:	00 00       	nop
     43a:	80 81       	ld	r24, Z
     43c:	87 7f       	andi	r24, 0xF7	; 247
     43e:	80 83       	st	Z, r24
     440:	9f ef       	ldi	r25, 0xFF	; 255
     442:	23 ef       	ldi	r18, 0xF3	; 243
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	91 50       	subi	r25, 0x01	; 1
     448:	20 40       	sbci	r18, 0x00	; 0
     44a:	80 40       	sbci	r24, 0x00	; 0
     44c:	e1 f7       	brne	.-8      	; 0x446 <LCDInit+0x70>
     44e:	00 c0       	rjmp	.+0      	; 0x450 <LCDInit+0x7a>
     450:	00 00       	nop
     452:	80 81       	ld	r24, Z
     454:	88 60       	ori	r24, 0x08	; 8
     456:	80 83       	st	Z, r24
     458:	95 ed       	ldi	r25, 0xD5	; 213
     45a:	9a 95       	dec	r25
     45c:	f1 f7       	brne	.-4      	; 0x45a <LCDInit+0x84>
     45e:	00 00       	nop
     460:	80 81       	ld	r24, Z
     462:	87 7f       	andi	r24, 0xF7	; 247
     464:	80 83       	st	Z, r24
     466:	8f e1       	ldi	r24, 0x1F	; 31
     468:	93 e0       	ldi	r25, 0x03	; 3
     46a:	01 97       	sbiw	r24, 0x01	; 1
     46c:	f1 f7       	brne	.-4      	; 0x46a <LCDInit+0x94>
     46e:	00 c0       	rjmp	.+0      	; 0x470 <LCDInit+0x9a>
     470:	00 00       	nop
     472:	80 81       	ld	r24, Z
     474:	88 60       	ori	r24, 0x08	; 8
     476:	80 83       	st	Z, r24
     478:	95 ed       	ldi	r25, 0xD5	; 213
     47a:	9a 95       	dec	r25
     47c:	f1 f7       	brne	.-4      	; 0x47a <LCDInit+0xa4>
     47e:	00 00       	nop
     480:	80 81       	ld	r24, Z
     482:	87 7f       	andi	r24, 0xF7	; 247
     484:	80 83       	st	Z, r24
     486:	8f e1       	ldi	r24, 0x1F	; 31
     488:	93 e0       	ldi	r25, 0x03	; 3
     48a:	01 97       	sbiw	r24, 0x01	; 1
     48c:	f1 f7       	brne	.-4      	; 0x48a <LCDInit+0xb4>
     48e:	00 c0       	rjmp	.+0      	; 0x490 <LCDInit+0xba>
     490:	00 00       	nop
     492:	82 e0       	ldi	r24, 0x02	; 2
     494:	d6 de       	rcall	.-596    	; 0x242 <LCDDataLines>
     496:	95 ed       	ldi	r25, 0xD5	; 213
     498:	9a 95       	dec	r25
     49a:	f1 f7       	brne	.-4      	; 0x498 <LCDInit+0xc2>
     49c:	00 00       	nop
     49e:	e4 e2       	ldi	r30, 0x24	; 36
     4a0:	f6 e0       	ldi	r31, 0x06	; 6
     4a2:	80 81       	ld	r24, Z
     4a4:	88 60       	ori	r24, 0x08	; 8
     4a6:	80 83       	st	Z, r24
     4a8:	25 ed       	ldi	r18, 0xD5	; 213
     4aa:	2a 95       	dec	r18
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <LCDInit+0xd4>
     4ae:	00 00       	nop
     4b0:	80 81       	ld	r24, Z
     4b2:	87 7f       	andi	r24, 0xF7	; 247
     4b4:	80 83       	st	Z, r24
     4b6:	8f e1       	ldi	r24, 0x1F	; 31
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <LCDInit+0xe4>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <LCDInit+0xea>
     4c0:	00 00       	nop
     4c2:	88 e2       	ldi	r24, 0x28	; 40
     4c4:	4e df       	rcall	.-356    	; 0x362 <LCDSendCommand>
     4c6:	88 e0       	ldi	r24, 0x08	; 8
     4c8:	4c df       	rcall	.-360    	; 0x362 <LCDSendCommand>
     4ca:	81 e0       	ldi	r24, 0x01	; 1
     4cc:	4a df       	rcall	.-364    	; 0x362 <LCDSendCommand>
     4ce:	86 e0       	ldi	r24, 0x06	; 6
     4d0:	48 df       	rcall	.-368    	; 0x362 <LCDSendCommand>
     4d2:	8c e0       	ldi	r24, 0x0C	; 12
     4d4:	46 cf       	rjmp	.-372    	; 0x362 <LCDSendCommand>
     4d6:	08 95       	ret

000004d8 <LCDStringRam>:
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
     4de:	21 96       	adiw	r28, 0x01	; 1
     4e0:	fc 01       	movw	r30, r24
     4e2:	80 81       	ld	r24, Z
     4e4:	88 23       	and	r24, r24
     4e6:	21 f0       	breq	.+8      	; 0x4f0 <LCDStringRam+0x18>
     4e8:	0d df       	rcall	.-486    	; 0x304 <LCDSendData>
     4ea:	89 91       	ld	r24, Y+
     4ec:	81 11       	cpse	r24, r1
     4ee:	fc cf       	rjmp	.-8      	; 0x4e8 <LCDStringRam+0x10>
     4f0:	df 91       	pop	r29
     4f2:	cf 91       	pop	r28
     4f4:	08 95       	ret

000004f6 <LCDGotoXY>:
void LCDGotoXY(unsigned char x, unsigned char y)	//Cursor to X Y position
{
 unsigned char DDRAMAddr;	
 switch(y)
     4f6:	62 30       	cpi	r22, 0x02	; 2
     4f8:	31 f0       	breq	.+12     	; 0x506 <LCDGotoXY+0x10>
     4fa:	63 30       	cpi	r22, 0x03	; 3
     4fc:	31 f0       	breq	.+12     	; 0x50a <LCDGotoXY+0x14>
     4fe:	61 30       	cpi	r22, 0x01	; 1
     500:	29 f4       	brne	.+10     	; 0x50c <LCDGotoXY+0x16>
 {
  case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
  case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     502:	80 5c       	subi	r24, 0xC0	; 192
     504:	03 c0       	rjmp	.+6      	; 0x50c <LCDGotoXY+0x16>
  case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     506:	8c 5e       	subi	r24, 0xEC	; 236
     508:	01 c0       	rjmp	.+2      	; 0x50c <LCDGotoXY+0x16>
  case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     50a:	8c 5a       	subi	r24, 0xAC	; 172
  default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
 }	
 LCDSendCommand(1<<LCD_DDRAM | DDRAMAddr);	
     50c:	80 68       	ori	r24, 0x80	; 128
     50e:	29 cf       	rjmp	.-430    	; 0x362 <LCDSendCommand>
     510:	08 95       	ret

00000512 <menu_check_sw>:
    menu_index[2] = 0;
}

bool menu_check_sw(uint8_t SW,uint8_t *SW_Flag)
{
    if(SW && !(*SW_Flag))
     512:	88 23       	and	r24, r24
     514:	39 f0       	breq	.+14     	; 0x524 <menu_check_sw+0x12>
     516:	fb 01       	movw	r30, r22
     518:	80 81       	ld	r24, Z
     51a:	81 11       	cpse	r24, r1
     51c:	07 c0       	rjmp	.+14     	; 0x52c <menu_check_sw+0x1a>
    {
        *SW_Flag = true;
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	80 83       	st	Z, r24
        return 1;
     522:	08 95       	ret
    }
    else if(SW == 0)
        *SW_Flag = false;
     524:	fb 01       	movw	r30, r22
     526:	10 82       	st	Z, r1
    return 0;
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	08 95       	ret
     52c:	80 e0       	ldi	r24, 0x00	; 0
}
     52e:	08 95       	ret

00000530 <Menu_Display>:
	}
}

void Menu_Display(void)
{
    Disp_R(menu_index[0]);
     530:	e0 e0       	ldi	r30, 0x00	; 0
     532:	f7 e0       	ldi	r31, 0x07	; 7
     534:	94 81       	ldd	r25, Z+4	; 0x04
     536:	80 91 ad 20 	lds	r24, 0x20AD
     53a:	a0 91 00 20 	lds	r26, 0x2000
     53e:	b0 e0       	ldi	r27, 0x00	; 0
     540:	aa 0f       	add	r26, r26
     542:	bb 1f       	adc	r27, r27
     544:	a8 5f       	subi	r26, 0xF8	; 248
     546:	bf 4d       	sbci	r27, 0xDF	; 223
     548:	90 78       	andi	r25, 0x80	; 128
     54a:	2c 91       	ld	r18, X
     54c:	92 2b       	or	r25, r18
     54e:	98 23       	and	r25, r24
     550:	94 83       	std	Z+4, r25	; 0x04
    Disp_L(menu_index[1]);
     552:	e0 ee       	ldi	r30, 0xE0	; 224
     554:	f6 e0       	ldi	r31, 0x06	; 6
     556:	94 81       	ldd	r25, Z+4	; 0x04
     558:	a0 91 01 20 	lds	r26, 0x2001
     55c:	b0 e0       	ldi	r27, 0x00	; 0
     55e:	aa 0f       	add	r26, r26
     560:	bb 1f       	adc	r27, r27
     562:	a8 5f       	subi	r26, 0xF8	; 248
     564:	bf 4d       	sbci	r27, 0xDF	; 223
     566:	90 78       	andi	r25, 0x80	; 128
     568:	2c 91       	ld	r18, X
     56a:	92 2b       	or	r25, r18
     56c:	89 23       	and	r24, r25
     56e:	84 83       	std	Z+4, r24	; 0x04
     570:	08 95       	ret

00000572 <menu_table>:
}

void menu_table(void)
{

    switch(menu_index[1])
     572:	80 91 01 20 	lds	r24, 0x2001
     576:	8e 30       	cpi	r24, 0x0E	; 14
     578:	31 f4       	brne	.+12     	; 0x586 <menu_table+0x14>
			break;
			
		}
		break;
	case 0xE:
		switch(menu_index[0])
     57a:	80 91 00 20 	lds	r24, 0x2000
     57e:	8f 30       	cpi	r24, 0x0F	; 15
     580:	11 f4       	brne	.+4      	; 0x586 <menu_table+0x14>
		{
		case 0xF:
			wdt_reset_mcu();
     582:	0c 94 85 0f 	jmp	0x1f0a	; 0x1f0a <wdt_reset_mcu>
     586:	08 95       	ret

00000588 <Menu_Reset>:
uint8_t menu_index[3]={Menu_Clear,Menu_Clear,0};
uint8_t disp;
uint16_t menu_time = 0;

void Menu_Reset(void)
{
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
    uint8_t i=0;
    for (i=0;i<16;i++)
     594:	f1 2c       	mov	r15, r1
    {
        menu_index[1] = i;
     596:	01 e0       	ldi	r16, 0x01	; 1
     598:	10 e2       	ldi	r17, 0x20	; 32
        menu_index[0] = Menu_Default;
     59a:	c0 e0       	ldi	r28, 0x00	; 0
     59c:	d0 e2       	ldi	r29, 0x20	; 32
     59e:	0f 2e       	mov	r0, r31
     5a0:	f1 e1       	ldi	r31, 0x11	; 17
     5a2:	ef 2e       	mov	r14, r31
     5a4:	f0 2d       	mov	r31, r0
void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
    {
        menu_index[1] = i;
     5a6:	f8 01       	movw	r30, r16
     5a8:	f0 82       	st	Z, r15
        menu_index[0] = Menu_Default;
     5aa:	e8 82       	st	Y, r14
        menu_table();
     5ac:	e2 df       	rcall	.-60     	; 0x572 <menu_table>
uint16_t menu_time = 0;

void Menu_Reset(void)
{
    uint8_t i=0;
    for (i=0;i<16;i++)
     5ae:	f3 94       	inc	r15
     5b0:	f0 e1       	ldi	r31, 0x10	; 16
     5b2:	ff 12       	cpse	r15, r31
     5b4:	f8 cf       	rjmp	.-16     	; 0x5a6 <Menu_Reset+0x1e>
    {
        menu_index[1] = i;
        menu_index[0] = Menu_Default;
        menu_table();
    }
    menu_index[0] = Menu_Clear;
     5b6:	80 e1       	ldi	r24, 0x10	; 16
     5b8:	80 93 00 20 	sts	0x2000, r24
    menu_index[1] = Menu_Clear;
     5bc:	80 93 01 20 	sts	0x2001, r24
    menu_index[2] = 0;
     5c0:	10 92 02 20 	sts	0x2002, r1
}
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	0f 91       	pop	r16
     5cc:	ff 90       	pop	r15
     5ce:	ef 90       	pop	r14
     5d0:	08 95       	ret

000005d2 <menu_check_status>:
        *SW_Flag = false;
    return 0;
}

void menu_check_status(void)
{
     5d2:	8f 92       	push	r8
     5d4:	9f 92       	push	r9
     5d6:	af 92       	push	r10
     5d8:	bf 92       	push	r11
     5da:	cf 92       	push	r12
     5dc:	df 92       	push	r13
     5de:	ef 92       	push	r14
     5e0:	ff 92       	push	r15
     5e2:	0f 93       	push	r16
     5e4:	1f 93       	push	r17
     5e6:	cf 93       	push	r28
     5e8:	df 93       	push	r29
	switch(menu_index[2])
     5ea:	80 91 02 20 	lds	r24, 0x2002
     5ee:	81 30       	cpi	r24, 0x01	; 1
     5f0:	09 f4       	brne	.+2      	; 0x5f4 <menu_check_status+0x22>
     5f2:	66 c0       	rjmp	.+204    	; 0x6c0 <menu_check_status+0xee>
     5f4:	20 f0       	brcs	.+8      	; 0x5fe <menu_check_status+0x2c>
     5f6:	82 30       	cpi	r24, 0x02	; 2
     5f8:	09 f4       	brne	.+2      	; 0x5fc <menu_check_status+0x2a>
     5fa:	c4 c0       	rjmp	.+392    	; 0x784 <menu_check_status+0x1b2>
     5fc:	e0 c0       	rjmp	.+448    	; 0x7be <menu_check_status+0x1ec>
	{
		case 0://Wait for Index0
		Disp_L_PORT.OUT = (Disp_L_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     5fe:	c0 ee       	ldi	r28, 0xE0	; 224
     600:	d6 e0       	ldi	r29, 0x06	; 6
     602:	1c 81       	ldd	r17, Y+4	; 0x04
     604:	60 91 9f 20 	lds	r22, 0x209F
     608:	70 91 a0 20 	lds	r23, 0x20A0
     60c:	80 91 a1 20 	lds	r24, 0x20A1
     610:	90 91 a2 20 	lds	r25, 0x20A2
     614:	24 e6       	ldi	r18, 0x64	; 100
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	40 e0       	ldi	r20, 0x00	; 0
     61a:	50 e0       	ldi	r21, 0x00	; 0
     61c:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>
     620:	20 fb       	bst	r18, 0
     622:	17 f9       	bld	r17, 7
     624:	1c 83       	std	Y+4, r17	; 0x04
		Disp_R_PORT.OUTCLR = Segment_DP_bm;
     626:	80 e8       	ldi	r24, 0x80	; 128
     628:	e0 e0       	ldi	r30, 0x00	; 0
     62a:	f7 e0       	ldi	r31, 0x07	; 7
     62c:	86 83       	std	Z+6, r24	; 0x06
		menu_index[1] = Menu_Num;
     62e:	98 85       	ldd	r25, Y+8	; 0x08
     630:	28 85       	ldd	r18, Y+8	; 0x08
     632:	88 85       	ldd	r24, Y+8	; 0x08
     634:	38 85       	ldd	r19, Y+8	; 0x08
     636:	30 fb       	bst	r19, 0
     638:	88 24       	eor	r8, r8
     63a:	80 f8       	bld	r8, 0
     63c:	91 2c       	mov	r9, r1
     63e:	88 0c       	add	r8, r8
     640:	99 1c       	adc	r9, r9
     642:	22 fb       	bst	r18, 2
     644:	22 27       	eor	r18, r18
     646:	20 f9       	bld	r18, 0
     648:	82 2a       	or	r8, r18
     64a:	93 fb       	bst	r25, 3
     64c:	aa 24       	eor	r10, r10
     64e:	a0 f8       	bld	r10, 0
     650:	b1 2c       	mov	r11, r1
     652:	aa 0c       	add	r10, r10
     654:	bb 1c       	adc	r11, r11
     656:	aa 0c       	add	r10, r10
     658:	bb 1c       	adc	r11, r11
     65a:	a8 28       	or	r10, r8
     65c:	81 fb       	bst	r24, 1
     65e:	cc 24       	eor	r12, r12
     660:	c0 f8       	bld	r12, 0
     662:	d1 2c       	mov	r13, r1
     664:	cc 0c       	add	r12, r12
     666:	dd 1c       	adc	r13, r13
     668:	cc 0c       	add	r12, r12
     66a:	dd 1c       	adc	r13, r13
     66c:	cc 0c       	add	r12, r12
     66e:	dd 1c       	adc	r13, r13
     670:	ca 28       	or	r12, r10
     672:	c0 92 01 20 	sts	0x2001, r12
		menu_index[0] = Menu_Clear;
     676:	80 e1       	ldi	r24, 0x10	; 16
     678:	80 93 00 20 	sts	0x2000, r24
		Menu_Display();
     67c:	59 df       	rcall	.-334    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     67e:	80 91 28 07 	lds	r24, 0x0728
     682:	6b e4       	ldi	r22, 0x4B	; 75
     684:	70 e2       	ldi	r23, 0x20	; 32
     686:	88 1f       	adc	r24, r24
     688:	88 27       	eor	r24, r24
     68a:	88 1f       	adc	r24, r24
     68c:	42 df       	rcall	.-380    	; 0x512 <menu_check_sw>
     68e:	88 23       	and	r24, r24
     690:	29 f0       	breq	.+10     	; 0x69c <menu_check_status+0xca>
		{
			menu_index[2]++;
     692:	e2 e0       	ldi	r30, 0x02	; 2
     694:	f0 e2       	ldi	r31, 0x20	; 32
     696:	80 81       	ld	r24, Z
     698:	8f 5f       	subi	r24, 0xFF	; 255
     69a:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     69c:	e0 ee       	ldi	r30, 0xE0	; 224
     69e:	f6 e0       	ldi	r31, 0x06	; 6
     6a0:	80 85       	ldd	r24, Z+8	; 0x08
     6a2:	6a e4       	ldi	r22, 0x4A	; 74
     6a4:	70 e2       	ldi	r23, 0x20	; 32
     6a6:	82 95       	swap	r24
     6a8:	81 70       	andi	r24, 0x01	; 1
     6aa:	33 df       	rcall	.-410    	; 0x512 <menu_check_sw>
     6ac:	88 23       	and	r24, r24
     6ae:	09 f4       	brne	.+2      	; 0x6b2 <menu_check_status+0xe0>
     6b0:	86 c0       	rjmp	.+268    	; 0x7be <menu_check_status+0x1ec>
		{
			 menu_time=100;
     6b2:	84 e6       	ldi	r24, 0x64	; 100
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	80 93 48 20 	sts	0x2048, r24
     6ba:	90 93 49 20 	sts	0x2049, r25
     6be:	7f c0       	rjmp	.+254    	; 0x7be <menu_check_status+0x1ec>
		}
		break;
		case 1://Wait for Index1
		Disp_R_PORT.OUT = (Disp_R_PORT.OUT & ~(1<<Segment_DP_bp)) | (((time_ms / 100) & 1) << Segment_DP_bp);
     6c0:	0f 2e       	mov	r0, r31
     6c2:	c1 2c       	mov	r12, r1
     6c4:	f7 e0       	ldi	r31, 0x07	; 7
     6c6:	df 2e       	mov	r13, r31
     6c8:	f0 2d       	mov	r31, r0
     6ca:	f6 01       	movw	r30, r12
     6cc:	b4 80       	ldd	r11, Z+4	; 0x04
     6ce:	60 91 9f 20 	lds	r22, 0x209F
     6d2:	70 91 a0 20 	lds	r23, 0x20A0
     6d6:	80 91 a1 20 	lds	r24, 0x20A1
     6da:	90 91 a2 20 	lds	r25, 0x20A2
     6de:	24 e6       	ldi	r18, 0x64	; 100
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	40 e0       	ldi	r20, 0x00	; 0
     6e4:	50 e0       	ldi	r21, 0x00	; 0
     6e6:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>
     6ea:	20 fb       	bst	r18, 0
     6ec:	b7 f8       	bld	r11, 7
     6ee:	f6 01       	movw	r30, r12
     6f0:	b4 82       	std	Z+4, r11	; 0x04
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     6f2:	e0 ee       	ldi	r30, 0xE0	; 224
     6f4:	f6 e0       	ldi	r31, 0x06	; 6
     6f6:	80 e8       	ldi	r24, 0x80	; 128
     6f8:	85 83       	std	Z+5, r24	; 0x05
		menu_index[0] = Menu_Num;
     6fa:	90 85       	ldd	r25, Z+8	; 0x08
     6fc:	20 85       	ldd	r18, Z+8	; 0x08
     6fe:	80 85       	ldd	r24, Z+8	; 0x08
     700:	30 85       	ldd	r19, Z+8	; 0x08
     702:	30 fb       	bst	r19, 0
     704:	ee 24       	eor	r14, r14
     706:	e0 f8       	bld	r14, 0
     708:	f1 2c       	mov	r15, r1
     70a:	ee 0c       	add	r14, r14
     70c:	ff 1c       	adc	r15, r15
     70e:	22 fb       	bst	r18, 2
     710:	22 27       	eor	r18, r18
     712:	20 f9       	bld	r18, 0
     714:	e2 2a       	or	r14, r18
     716:	93 fb       	bst	r25, 3
     718:	00 27       	eor	r16, r16
     71a:	00 f9       	bld	r16, 0
     71c:	10 e0       	ldi	r17, 0x00	; 0
     71e:	00 0f       	add	r16, r16
     720:	11 1f       	adc	r17, r17
     722:	00 0f       	add	r16, r16
     724:	11 1f       	adc	r17, r17
     726:	0e 29       	or	r16, r14
     728:	86 95       	lsr	r24
     72a:	81 70       	andi	r24, 0x01	; 1
     72c:	c8 2f       	mov	r28, r24
     72e:	f0 e0       	ldi	r31, 0x00	; 0
     730:	df 2f       	mov	r29, r31
     732:	cc 0f       	add	r28, r28
     734:	dd 1f       	adc	r29, r29
     736:	cc 0f       	add	r28, r28
     738:	dd 1f       	adc	r29, r29
     73a:	cc 0f       	add	r28, r28
     73c:	dd 1f       	adc	r29, r29
     73e:	c0 2b       	or	r28, r16
     740:	c0 93 00 20 	sts	0x2000, r28
		Menu_Display();
     744:	f5 de       	rcall	.-534    	; 0x530 <Menu_Display>
		if(menu_check_sw(Menu_Set,&Menu_Set_flg))
     746:	80 91 28 07 	lds	r24, 0x0728
     74a:	6b e4       	ldi	r22, 0x4B	; 75
     74c:	70 e2       	ldi	r23, 0x20	; 32
     74e:	88 1f       	adc	r24, r24
     750:	88 27       	eor	r24, r24
     752:	88 1f       	adc	r24, r24
     754:	de de       	rcall	.-580    	; 0x512 <menu_check_sw>
     756:	88 23       	and	r24, r24
     758:	29 f0       	breq	.+10     	; 0x764 <menu_check_status+0x192>
		{
			menu_index[2]++;
     75a:	e2 e0       	ldi	r30, 0x02	; 2
     75c:	f0 e2       	ldi	r31, 0x20	; 32
     75e:	80 81       	ld	r24, Z
     760:	8f 5f       	subi	r24, 0xFF	; 255
     762:	80 83       	st	Z, r24
		}
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     764:	e0 ee       	ldi	r30, 0xE0	; 224
     766:	f6 e0       	ldi	r31, 0x06	; 6
     768:	80 85       	ldd	r24, Z+8	; 0x08
     76a:	6a e4       	ldi	r22, 0x4A	; 74
     76c:	70 e2       	ldi	r23, 0x20	; 32
     76e:	82 95       	swap	r24
     770:	81 70       	andi	r24, 0x01	; 1
     772:	cf de       	rcall	.-610    	; 0x512 <menu_check_sw>
     774:	88 23       	and	r24, r24
     776:	19 f1       	breq	.+70     	; 0x7be <menu_check_status+0x1ec>
		{
			menu_index[2]--;
     778:	e2 e0       	ldi	r30, 0x02	; 2
     77a:	f0 e2       	ldi	r31, 0x20	; 32
     77c:	80 81       	ld	r24, Z
     77e:	81 50       	subi	r24, 0x01	; 1
     780:	80 83       	st	Z, r24
     782:	1d c0       	rjmp	.+58     	; 0x7be <menu_check_status+0x1ec>
		}
		break;
		case 2:
		Disp_R_PORT.OUTSET = Segment_DP_bm;
     784:	80 e8       	ldi	r24, 0x80	; 128
     786:	e0 e0       	ldi	r30, 0x00	; 0
     788:	f7 e0       	ldi	r31, 0x07	; 7
     78a:	85 83       	std	Z+5, r24	; 0x05
		Disp_L_PORT.OUTSET = Segment_DP_bm;
     78c:	c0 ee       	ldi	r28, 0xE0	; 224
     78e:	d6 e0       	ldi	r29, 0x06	; 6
     790:	8d 83       	std	Y+5, r24	; 0x05
		menu_table();
     792:	ef de       	rcall	.-546    	; 0x572 <menu_table>
		if(menu_check_sw(Menu_Cancel,&Menu_Cancel_flg))
     794:	88 85       	ldd	r24, Y+8	; 0x08
     796:	6a e4       	ldi	r22, 0x4A	; 74
     798:	70 e2       	ldi	r23, 0x20	; 32
     79a:	82 95       	swap	r24
     79c:	81 70       	andi	r24, 0x01	; 1
     79e:	b9 de       	rcall	.-654    	; 0x512 <menu_check_sw>
     7a0:	88 23       	and	r24, r24
     7a2:	69 f0       	breq	.+26     	; 0x7be <menu_check_status+0x1ec>
		{
			menu_index[2]--;
     7a4:	e2 e0       	ldi	r30, 0x02	; 2
     7a6:	f0 e2       	ldi	r31, 0x20	; 32
     7a8:	80 81       	ld	r24, Z
     7aa:	81 50       	subi	r24, 0x01	; 1
     7ac:	80 83       	st	Z, r24
			menu_index[0] = Menu_Default;
     7ae:	c0 e0       	ldi	r28, 0x00	; 0
     7b0:	d0 e2       	ldi	r29, 0x20	; 32
     7b2:	81 e1       	ldi	r24, 0x11	; 17
     7b4:	88 83       	st	Y, r24
			menu_table();
     7b6:	dd de       	rcall	.-582    	; 0x572 <menu_table>
			menu_index[0] = Menu_Clear;
     7b8:	80 e1       	ldi	r24, 0x10	; 16
     7ba:	88 83       	st	Y, r24
			Menu_Display();
     7bc:	b9 de       	rcall	.-654    	; 0x530 <Menu_Display>
		}

		break;
	}
}
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	1f 91       	pop	r17
     7c4:	0f 91       	pop	r16
     7c6:	ff 90       	pop	r15
     7c8:	ef 90       	pop	r14
     7ca:	df 90       	pop	r13
     7cc:	cf 90       	pop	r12
     7ce:	bf 90       	pop	r11
     7d0:	af 90       	pop	r10
     7d2:	9f 90       	pop	r9
     7d4:	8f 90       	pop	r8
     7d6:	08 95       	ret

000007d8 <sysclk_enable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7d8:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7da:	f8 94       	cli

void sysclk_enable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) &= ~id;
     7dc:	fc 01       	movw	r30, r24
     7de:	e0 59       	subi	r30, 0x90	; 144
     7e0:	ff 4f       	sbci	r31, 0xFF	; 255
     7e2:	60 95       	com	r22
     7e4:	80 81       	ld	r24, Z
     7e6:	68 23       	and	r22, r24
     7e8:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7ea:	2f bf       	out	0x3f, r18	; 63
     7ec:	08 95       	ret

000007ee <sysclk_disable_module>:

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     7ee:	2f b7       	in	r18, 0x3f	; 63
	cpu_irq_disable();
     7f0:	f8 94       	cli

void sysclk_disable_module(enum sysclk_port_id port, uint8_t id)
{
	irqflags_t flags = cpu_irq_save();

	*((uint8_t *)&PR.PRGEN + port) |= id;
     7f2:	fc 01       	movw	r30, r24
     7f4:	e0 59       	subi	r30, 0x90	; 144
     7f6:	ff 4f       	sbci	r31, 0xFF	; 255
     7f8:	80 81       	ld	r24, Z
     7fa:	68 2b       	or	r22, r24
     7fc:	60 83       	st	Z, r22
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     7fe:	2f bf       	out	0x3f, r18	; 63
     800:	08 95       	ret

00000802 <adc_enable_clock>:
	conf->ctrlb = adc->CTRLB;

	adc_disable_clock(adc);

	cpu_irq_restore(flags);
}
     802:	81 15       	cp	r24, r1
     804:	22 e0       	ldi	r18, 0x02	; 2
     806:	92 07       	cpc	r25, r18
     808:	69 f4       	brne	.+26     	; 0x824 <adc_enable_clock+0x22>
     80a:	80 91 4d 20 	lds	r24, 0x204D
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	98 0f       	add	r25, r24
     812:	90 93 4d 20 	sts	0x204D, r25
     816:	81 11       	cpse	r24, r1
     818:	14 c0       	rjmp	.+40     	; 0x842 <adc_enable_clock+0x40>
     81a:	62 e0       	ldi	r22, 0x02	; 2
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	db cf       	rjmp	.-74     	; 0x7d8 <sysclk_enable_module>
     822:	08 95       	ret
     824:	80 34       	cpi	r24, 0x40	; 64
     826:	92 40       	sbci	r25, 0x02	; 2
     828:	61 f4       	brne	.+24     	; 0x842 <adc_enable_clock+0x40>
     82a:	80 91 4c 20 	lds	r24, 0x204C
     82e:	91 e0       	ldi	r25, 0x01	; 1
     830:	98 0f       	add	r25, r24
     832:	90 93 4c 20 	sts	0x204C, r25
     836:	81 11       	cpse	r24, r1
     838:	04 c0       	rjmp	.+8      	; 0x842 <adc_enable_clock+0x40>
     83a:	62 e0       	ldi	r22, 0x02	; 2
     83c:	82 e0       	ldi	r24, 0x02	; 2
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	cb cf       	rjmp	.-106    	; 0x7d8 <sysclk_enable_module>
     842:	08 95       	ret

00000844 <adc_disable_clock>:
     844:	81 15       	cp	r24, r1
     846:	22 e0       	ldi	r18, 0x02	; 2
     848:	92 07       	cpc	r25, r18
     84a:	61 f4       	brne	.+24     	; 0x864 <adc_disable_clock+0x20>
     84c:	80 91 4d 20 	lds	r24, 0x204D
     850:	81 50       	subi	r24, 0x01	; 1
     852:	80 93 4d 20 	sts	0x204D, r24
     856:	81 11       	cpse	r24, r1
     858:	13 c0       	rjmp	.+38     	; 0x880 <adc_disable_clock+0x3c>
     85a:	62 e0       	ldi	r22, 0x02	; 2
     85c:	81 e0       	ldi	r24, 0x01	; 1
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	c6 cf       	rjmp	.-116    	; 0x7ee <sysclk_disable_module>
     862:	08 95       	ret
     864:	80 34       	cpi	r24, 0x40	; 64
     866:	92 40       	sbci	r25, 0x02	; 2
     868:	59 f4       	brne	.+22     	; 0x880 <adc_disable_clock+0x3c>
     86a:	80 91 4c 20 	lds	r24, 0x204C
     86e:	81 50       	subi	r24, 0x01	; 1
     870:	80 93 4c 20 	sts	0x204C, r24
     874:	81 11       	cpse	r24, r1
     876:	04 c0       	rjmp	.+8      	; 0x880 <adc_disable_clock+0x3c>
     878:	62 e0       	ldi	r22, 0x02	; 2
     87a:	82 e0       	ldi	r24, 0x02	; 2
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	b7 cf       	rjmp	.-146    	; 0x7ee <sysclk_disable_module>
     880:	08 95       	ret

00000882 <adc_enable>:
     882:	1f 93       	push	r17
     884:	cf 93       	push	r28
     886:	df 93       	push	r29
     888:	ec 01       	movw	r28, r24
     88a:	1f b7       	in	r17, 0x3f	; 63
     88c:	f8 94       	cli
     88e:	b9 df       	rcall	.-142    	; 0x802 <adc_enable_clock>
     890:	88 81       	ld	r24, Y
     892:	81 60       	ori	r24, 0x01	; 1
     894:	88 83       	st	Y, r24
     896:	1f bf       	out	0x3f, r17	; 63
     898:	8f b7       	in	r24, 0x3f	; 63
     89a:	f8 94       	cli
     89c:	ef ea       	ldi	r30, 0xAF	; 175
     89e:	f0 e2       	ldi	r31, 0x20	; 32
     8a0:	90 81       	ld	r25, Z
     8a2:	9f 5f       	subi	r25, 0xFF	; 255
     8a4:	90 83       	st	Z, r25
     8a6:	8f bf       	out	0x3f, r24	; 63
     8a8:	df 91       	pop	r29
     8aa:	cf 91       	pop	r28
     8ac:	1f 91       	pop	r17
     8ae:	08 95       	ret

000008b0 <adc_write_configuration>:
     8b0:	df 92       	push	r13
     8b2:	ef 92       	push	r14
     8b4:	ff 92       	push	r15
     8b6:	0f 93       	push	r16
     8b8:	1f 93       	push	r17
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	ec 01       	movw	r28, r24
     8c0:	8b 01       	movw	r16, r22
     8c2:	c1 15       	cp	r28, r1
     8c4:	22 e0       	ldi	r18, 0x02	; 2
     8c6:	d2 07       	cpc	r29, r18
     8c8:	71 f4       	brne	.+28     	; 0x8e6 <adc_write_configuration+0x36>
     8ca:	61 e2       	ldi	r22, 0x21	; 33
     8cc:	70 e0       	ldi	r23, 0x00	; 0
     8ce:	82 e0       	ldi	r24, 0x02	; 2
     8d0:	a7 d0       	rcall	.+334    	; 0xa20 <nvm_read_byte>
     8d2:	e8 2e       	mov	r14, r24
     8d4:	f1 2c       	mov	r15, r1
     8d6:	60 e2       	ldi	r22, 0x20	; 32
     8d8:	70 e0       	ldi	r23, 0x00	; 0
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	a1 d0       	rcall	.+322    	; 0xa20 <nvm_read_byte>
     8de:	fe 2c       	mov	r15, r14
     8e0:	ee 24       	eor	r14, r14
     8e2:	e8 2a       	or	r14, r24
     8e4:	10 c0       	rjmp	.+32     	; 0x906 <adc_write_configuration+0x56>
     8e6:	80 34       	cpi	r24, 0x40	; 64
     8e8:	92 40       	sbci	r25, 0x02	; 2
     8ea:	59 f5       	brne	.+86     	; 0x942 <adc_write_configuration+0x92>
     8ec:	65 e2       	ldi	r22, 0x25	; 37
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	82 e0       	ldi	r24, 0x02	; 2
     8f2:	96 d0       	rcall	.+300    	; 0xa20 <nvm_read_byte>
     8f4:	e8 2e       	mov	r14, r24
     8f6:	f1 2c       	mov	r15, r1
     8f8:	64 e2       	ldi	r22, 0x24	; 36
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	90 d0       	rcall	.+288    	; 0xa20 <nvm_read_byte>
     900:	fe 2c       	mov	r15, r14
     902:	ee 24       	eor	r14, r14
     904:	e8 2a       	or	r14, r24
     906:	df b6       	in	r13, 0x3f	; 63
     908:	f8 94       	cli
     90a:	ce 01       	movw	r24, r28
     90c:	7a df       	rcall	.-268    	; 0x802 <adc_enable_clock>
     90e:	28 81       	ld	r18, Y
     910:	82 e0       	ldi	r24, 0x02	; 2
     912:	88 83       	st	Y, r24
     914:	ec 86       	std	Y+12, r14	; 0x0c
     916:	fd 86       	std	Y+13, r15	; 0x0d
     918:	f8 01       	movw	r30, r16
     91a:	85 81       	ldd	r24, Z+5	; 0x05
     91c:	96 81       	ldd	r25, Z+6	; 0x06
     91e:	88 8f       	std	Y+24, r24	; 0x18
     920:	99 8f       	std	Y+25, r25	; 0x19
     922:	82 81       	ldd	r24, Z+2	; 0x02
     924:	8a 83       	std	Y+2, r24	; 0x02
     926:	84 81       	ldd	r24, Z+4	; 0x04
     928:	8c 83       	std	Y+4, r24	; 0x04
     92a:	83 81       	ldd	r24, Z+3	; 0x03
     92c:	8b 83       	std	Y+3, r24	; 0x03
     92e:	81 81       	ldd	r24, Z+1	; 0x01
     930:	89 83       	std	Y+1, r24	; 0x01
     932:	82 2f       	mov	r24, r18
     934:	81 70       	andi	r24, 0x01	; 1
     936:	90 81       	ld	r25, Z
     938:	89 2b       	or	r24, r25
     93a:	88 83       	st	Y, r24
     93c:	ce 01       	movw	r24, r28
     93e:	82 df       	rcall	.-252    	; 0x844 <adc_disable_clock>
     940:	df be       	out	0x3f, r13	; 63
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	1f 91       	pop	r17
     948:	0f 91       	pop	r16
     94a:	ff 90       	pop	r15
     94c:	ef 90       	pop	r14
     94e:	df 90       	pop	r13
     950:	08 95       	ret

00000952 <adcch_write_configuration>:
 * is called if callbacks are enabled and interrupts are enabled in the
 * channel configuration.
 */
void adcch_write_configuration(ADC_t *adc, uint8_t ch_mask,
		const struct adc_channel_config *ch_conf)
{
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	cf 93       	push	r28
     95e:	df 93       	push	r29
     960:	7c 01       	movw	r14, r24
     962:	8a 01       	movw	r16, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     964:	86 2f       	mov	r24, r22
     966:	83 70       	andi	r24, 0x03	; 3
     968:	21 f4       	brne	.+8      	; 0x972 <adcch_write_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     96a:	66 95       	lsr	r22
     96c:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     96e:	82 e0       	ldi	r24, 0x02	; 2
     970:	01 c0       	rjmp	.+2      	; 0x974 <adcch_write_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     972:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     974:	60 ff       	sbrs	r22, 0
		index++;
     976:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     978:	e7 01       	movw	r28, r14
     97a:	a0 96       	adiw	r28, 0x20	; 32
     97c:	98 e0       	ldi	r25, 0x08	; 8
     97e:	89 9f       	mul	r24, r25
     980:	c0 0d       	add	r28, r0
     982:	d1 1d       	adc	r29, r1
     984:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     986:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     988:	f8 94       	cli
			return;
		}
	}
#endif /* CONFIG_ADC_CALLBACK_ENABLE */

	adc_enable_clock(adc);
     98a:	c7 01       	movw	r24, r14
     98c:	3a df       	rcall	.-396    	; 0x802 <adc_enable_clock>
	adc_ch->CTRL = ch_conf->ctrl;
     98e:	f8 01       	movw	r30, r16
     990:	80 81       	ld	r24, Z
     992:	88 83       	st	Y, r24
	adc_ch->INTCTRL = ch_conf->intctrl;
     994:	82 81       	ldd	r24, Z+2	; 0x02
     996:	8a 83       	std	Y+2, r24	; 0x02
	adc_ch->MUXCTRL = ch_conf->muxctrl;
     998:	81 81       	ldd	r24, Z+1	; 0x01
     99a:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		adc_ch->SCAN = ch_conf->scan;
	}
#endif
	adc_disable_clock(adc);
     99c:	c7 01       	movw	r24, r14
     99e:	52 df       	rcall	.-348    	; 0x844 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     9a0:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	08 95       	ret

000009b2 <adcch_read_configuration>:
 * can be given in mask)
 * \param ch_conf Pointer to ADC channel configuration.
 */
void adcch_read_configuration(ADC_t *adc, uint8_t ch_mask,
		struct adc_channel_config *ch_conf)
{
     9b2:	df 92       	push	r13
     9b4:	ef 92       	push	r14
     9b6:	ff 92       	push	r15
     9b8:	0f 93       	push	r16
     9ba:	1f 93       	push	r17
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	7c 01       	movw	r14, r24
     9c2:	ea 01       	movw	r28, r20
		index += 4;
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
     9c4:	86 2f       	mov	r24, r22
     9c6:	83 70       	andi	r24, 0x03	; 3
     9c8:	21 f4       	brne	.+8      	; 0x9d2 <adcch_read_configuration+0x20>
		index += 2;
		ch_mask >>= 2;
     9ca:	66 95       	lsr	r22
     9cc:	66 95       	lsr	r22
		ch_mask >>= 4;
	}
#endif
#if ADC_NR_OF_CHANNELS > 2
	if (!(ch_mask & 0x03)) {
		index += 2;
     9ce:	82 e0       	ldi	r24, 0x02	; 2
     9d0:	01 c0       	rjmp	.+2      	; 0x9d4 <adcch_read_configuration+0x22>
 * \return Pointer to ADC channel
 */
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask);
__always_inline ADC_CH_t *adc_get_channel(ADC_t *adc, uint8_t ch_mask)
{
	uint8_t index = 0;
     9d2:	80 e0       	ldi	r24, 0x00	; 0
		index += 2;
		ch_mask >>= 2;
	}
#endif
#if ADC_NR_OF_CHANNELS > 1
	if (!(ch_mask & 0x01)) {
     9d4:	60 ff       	sbrs	r22, 0
		index++;
     9d6:	8f 5f       	subi	r24, 0xFF	; 255
	}
#endif

	return &adc->CH0 + index;
     9d8:	87 01       	movw	r16, r14
     9da:	00 5e       	subi	r16, 0xE0	; 224
     9dc:	1f 4f       	sbci	r17, 0xFF	; 255
     9de:	98 e0       	ldi	r25, 0x08	; 8
     9e0:	89 9f       	mul	r24, r25
     9e2:	00 0d       	add	r16, r0
     9e4:	11 1d       	adc	r17, r1
     9e6:	11 24       	eor	r1, r1

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
     9e8:	df b6       	in	r13, 0x3f	; 63
	cpu_irq_disable();
     9ea:	f8 94       	cli

	adc_ch = adc_get_channel(adc, ch_mask);

	flags = cpu_irq_save();

	adc_enable_clock(adc);
     9ec:	c7 01       	movw	r24, r14
     9ee:	09 df       	rcall	.-494    	; 0x802 <adc_enable_clock>
	ch_conf->ctrl = adc_ch->CTRL;
     9f0:	f8 01       	movw	r30, r16
     9f2:	80 81       	ld	r24, Z
     9f4:	88 83       	st	Y, r24
	ch_conf->intctrl = adc_ch->INTCTRL;
     9f6:	82 81       	ldd	r24, Z+2	; 0x02
     9f8:	8a 83       	std	Y+2, r24	; 0x02
	ch_conf->muxctrl = adc_ch->MUXCTRL;
     9fa:	81 81       	ldd	r24, Z+1	; 0x01
     9fc:	89 83       	std	Y+1, r24	; 0x01
	if (ch_mask & ADC_CH0) {
		// USB devices has channel scan available on ADC channel 0
		ch_conf->scan = adc_ch->SCAN;
	}
#endif
	adc_disable_clock(adc);
     9fe:	c7 01       	movw	r24, r14
     a00:	21 df       	rcall	.-446    	; 0x844 <adc_disable_clock>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
     a02:	df be       	out	0x3f, r13	; 63

	cpu_irq_restore(flags);
}
     a04:	df 91       	pop	r29
     a06:	cf 91       	pop	r28
     a08:	1f 91       	pop	r17
     a0a:	0f 91       	pop	r16
     a0c:	ff 90       	pop	r15
     a0e:	ef 90       	pop	r14
     a10:	df 90       	pop	r13
     a12:	08 95       	ret

00000a14 <ccp_write_io>:
     a14:	1b be       	out	0x3b, r1	; 59
     a16:	fc 01       	movw	r30, r24
     a18:	28 ed       	ldi	r18, 0xD8	; 216
     a1a:	24 bf       	out	0x34, r18	; 52
     a1c:	60 83       	st	Z, r22
     a1e:	08 95       	ret

00000a20 <nvm_read_byte>:
     a20:	40 91 ca 01 	lds	r20, 0x01CA
     a24:	e6 2f       	mov	r30, r22
     a26:	f7 2f       	mov	r31, r23
     a28:	80 93 ca 01 	sts	0x01CA, r24
     a2c:	84 91       	lpm	r24, Z
     a2e:	40 93 ca 01 	sts	0x01CA, r20
     a32:	08 95       	ret

00000a34 <spi_xmega_set_baud_div>:
 * \return Status of operation.
 *   \retval >=0  Success.
 *   \retval  <0  Error.
 */
int8_t spi_xmega_set_baud_div(SPI_t *spi, uint32_t baudrate, uint32_t clkper_hz)
{
     a34:	cf 92       	push	r12
     a36:	df 92       	push	r13
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	cf 93       	push	r28
     a42:	df 93       	push	r29
     a44:	ec 01       	movw	r28, r24
     a46:	6a 01       	movw	r12, r20
     a48:	7b 01       	movw	r14, r22

	/*
	 * Get wanted divisor rounded up so we don't get speed higher than
	 * requested baudrate.
	 */
	divisor = (clkper_hz + baudrate - 1) / baudrate;
     a4a:	db 01       	movw	r26, r22
     a4c:	ca 01       	movw	r24, r20
     a4e:	01 97       	sbiw	r24, 0x01	; 1
     a50:	a1 09       	sbc	r26, r1
     a52:	b1 09       	sbc	r27, r1
     a54:	bc 01       	movw	r22, r24
     a56:	cd 01       	movw	r24, r26
     a58:	60 0f       	add	r22, r16
     a5a:	71 1f       	adc	r23, r17
     a5c:	82 1f       	adc	r24, r18
     a5e:	93 1f       	adc	r25, r19
     a60:	a7 01       	movw	r20, r14
     a62:	96 01       	movw	r18, r12
     a64:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>

	if (divisor > 128) {
     a68:	21 38       	cpi	r18, 0x81	; 129
     a6a:	31 05       	cpc	r19, r1
     a6c:	41 05       	cpc	r20, r1
     a6e:	51 05       	cpc	r21, r1
     a70:	f8 f4       	brcc	.+62     	; 0xab0 <spi_xmega_set_baud_div+0x7c>

	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
     a72:	21 34       	cpi	r18, 0x41	; 65
     a74:	60 f4       	brcc	.+24     	; 0xa8e <spi_xmega_set_baud_div+0x5a>
		ctrl = SPI_PRESCALER_DIV128_gc;
	}
	else if (divisor_8bit > 32) {
     a76:	21 32       	cpi	r18, 0x21	; 33
     a78:	60 f4       	brcc	.+24     	; 0xa92 <spi_xmega_set_baud_div+0x5e>
		ctrl = SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 16) {
     a7a:	21 31       	cpi	r18, 0x11	; 17
     a7c:	60 f4       	brcc	.+24     	; 0xa96 <spi_xmega_set_baud_div+0x62>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
	}
	else if (divisor_8bit > 8) {
     a7e:	29 30       	cpi	r18, 0x09	; 9
     a80:	60 f4       	brcc	.+24     	; 0xa9a <spi_xmega_set_baud_div+0x66>
		ctrl = SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 4) {
     a82:	25 30       	cpi	r18, 0x05	; 5
     a84:	60 f4       	brcc	.+24     	; 0xa9e <spi_xmega_set_baud_div+0x6a>
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
	}
	else if (divisor_8bit > 2) {
     a86:	23 30       	cpi	r18, 0x03	; 3
     a88:	60 f0       	brcs	.+24     	; 0xaa2 <spi_xmega_set_baud_div+0x6e>
		ctrl = SPI_PRESCALER_DIV4_gc;
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	0b c0       	rjmp	.+22     	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	/*
	 * For divisor values between the possible ones round up to the closest
	 * higher one to avoid higher baudrate than requested.
	 */
	if (divisor_8bit > 64) {
		ctrl = SPI_PRESCALER_DIV128_gc;
     a8e:	93 e0       	ldi	r25, 0x03	; 3
     a90:	09 c0       	rjmp	.+18     	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 32) {
		ctrl = SPI_PRESCALER_DIV64_gc;
     a92:	92 e0       	ldi	r25, 0x02	; 2
     a94:	07 c0       	rjmp	.+14     	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 16) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV64_gc;
     a96:	92 e8       	ldi	r25, 0x82	; 130
     a98:	05 c0       	rjmp	.+10     	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 8) {
		ctrl = SPI_PRESCALER_DIV16_gc;
     a9a:	91 e0       	ldi	r25, 0x01	; 1
     a9c:	03 c0       	rjmp	.+6      	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 4) {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV16_gc;
     a9e:	91 e8       	ldi	r25, 0x81	; 129
     aa0:	01 c0       	rjmp	.+2      	; 0xaa4 <spi_xmega_set_baud_div+0x70>
	}
	else if (divisor_8bit > 2) {
		ctrl = SPI_PRESCALER_DIV4_gc;
	}
	else {
		ctrl = SPI_CLK2X_bm | SPI_PRESCALER_DIV4_gc;
     aa2:	90 e8       	ldi	r25, 0x80	; 128
	}

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;
     aa4:	88 81       	ld	r24, Y
     aa6:	8c 77       	andi	r24, 0x7C	; 124
     aa8:	89 2b       	or	r24, r25
     aaa:	88 83       	st	Y, r24

	return 1;
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	01 c0       	rjmp	.+2      	; 0xab2 <spi_xmega_set_baud_div+0x7e>
	if (divisor > 128) {
		/*
		 * Highest possible divisor is 128 so fail since we can't get
		 * low enough baudrate.
		 */
		return -1;
     ab0:	8f ef       	ldi	r24, 0xFF	; 255

	// Update register and make sure to clear out any leftover bits
	spi->CTRL = (spi->CTRL & ~(SPI_CLK2X_bm | SPI_PRESCALER_gm)) | ctrl;

	return 1;
}
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	ff 90       	pop	r15
     abc:	ef 90       	pop	r14
     abe:	df 90       	pop	r13
     ac0:	cf 90       	pop	r12
     ac2:	08 95       	ret

00000ac4 <__vector_14>:
 *
 * This function will handle interrupt on Timer Counter CO overflow and
 * call the callback function.
 */
ISR(TCC0_OVF_vect)
{
     ac4:	1f 92       	push	r1
     ac6:	0f 92       	push	r0
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	0f 92       	push	r0
     acc:	11 24       	eor	r1, r1
     ace:	08 b6       	in	r0, 0x38	; 56
     ad0:	0f 92       	push	r0
     ad2:	18 be       	out	0x38, r1	; 56
     ad4:	09 b6       	in	r0, 0x39	; 57
     ad6:	0f 92       	push	r0
     ad8:	19 be       	out	0x39, r1	; 57
     ada:	0b b6       	in	r0, 0x3b	; 59
     adc:	0f 92       	push	r0
     ade:	1b be       	out	0x3b, r1	; 59
     ae0:	2f 93       	push	r18
     ae2:	3f 93       	push	r19
     ae4:	4f 93       	push	r20
     ae6:	5f 93       	push	r21
     ae8:	6f 93       	push	r22
     aea:	7f 93       	push	r23
     aec:	8f 93       	push	r24
     aee:	9f 93       	push	r25
     af0:	af 93       	push	r26
     af2:	bf 93       	push	r27
     af4:	ef 93       	push	r30
     af6:	ff 93       	push	r31
	if (tc_tcc0_ovf_callback) {
     af8:	e0 91 9a 20 	lds	r30, 0x209A
     afc:	f0 91 9b 20 	lds	r31, 0x209B
     b00:	30 97       	sbiw	r30, 0x00	; 0
     b02:	09 f0       	breq	.+2      	; 0xb06 <__vector_14+0x42>
		tc_tcc0_ovf_callback();
     b04:	19 95       	eicall
	}
}
     b06:	ff 91       	pop	r31
     b08:	ef 91       	pop	r30
     b0a:	bf 91       	pop	r27
     b0c:	af 91       	pop	r26
     b0e:	9f 91       	pop	r25
     b10:	8f 91       	pop	r24
     b12:	7f 91       	pop	r23
     b14:	6f 91       	pop	r22
     b16:	5f 91       	pop	r21
     b18:	4f 91       	pop	r20
     b1a:	3f 91       	pop	r19
     b1c:	2f 91       	pop	r18
     b1e:	0f 90       	pop	r0
     b20:	0b be       	out	0x3b, r0	; 59
     b22:	0f 90       	pop	r0
     b24:	09 be       	out	0x39, r0	; 57
     b26:	0f 90       	pop	r0
     b28:	08 be       	out	0x38, r0	; 56
     b2a:	0f 90       	pop	r0
     b2c:	0f be       	out	0x3f, r0	; 63
     b2e:	0f 90       	pop	r0
     b30:	1f 90       	pop	r1
     b32:	18 95       	reti

00000b34 <__vector_15>:
 *
 * This function will handle interrupt on Timer Counter CO error and
 * call the callback function.
 */
ISR(TCC0_ERR_vect)
{
     b34:	1f 92       	push	r1
     b36:	0f 92       	push	r0
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	0f 92       	push	r0
     b3c:	11 24       	eor	r1, r1
     b3e:	08 b6       	in	r0, 0x38	; 56
     b40:	0f 92       	push	r0
     b42:	18 be       	out	0x38, r1	; 56
     b44:	09 b6       	in	r0, 0x39	; 57
     b46:	0f 92       	push	r0
     b48:	19 be       	out	0x39, r1	; 57
     b4a:	0b b6       	in	r0, 0x3b	; 59
     b4c:	0f 92       	push	r0
     b4e:	1b be       	out	0x3b, r1	; 59
     b50:	2f 93       	push	r18
     b52:	3f 93       	push	r19
     b54:	4f 93       	push	r20
     b56:	5f 93       	push	r21
     b58:	6f 93       	push	r22
     b5a:	7f 93       	push	r23
     b5c:	8f 93       	push	r24
     b5e:	9f 93       	push	r25
     b60:	af 93       	push	r26
     b62:	bf 93       	push	r27
     b64:	ef 93       	push	r30
     b66:	ff 93       	push	r31
	if (tc_tcc0_err_callback) {
     b68:	e0 91 98 20 	lds	r30, 0x2098
     b6c:	f0 91 99 20 	lds	r31, 0x2099
     b70:	30 97       	sbiw	r30, 0x00	; 0
     b72:	09 f0       	breq	.+2      	; 0xb76 <__vector_15+0x42>
		tc_tcc0_err_callback();
     b74:	19 95       	eicall
	}
}
     b76:	ff 91       	pop	r31
     b78:	ef 91       	pop	r30
     b7a:	bf 91       	pop	r27
     b7c:	af 91       	pop	r26
     b7e:	9f 91       	pop	r25
     b80:	8f 91       	pop	r24
     b82:	7f 91       	pop	r23
     b84:	6f 91       	pop	r22
     b86:	5f 91       	pop	r21
     b88:	4f 91       	pop	r20
     b8a:	3f 91       	pop	r19
     b8c:	2f 91       	pop	r18
     b8e:	0f 90       	pop	r0
     b90:	0b be       	out	0x3b, r0	; 59
     b92:	0f 90       	pop	r0
     b94:	09 be       	out	0x39, r0	; 57
     b96:	0f 90       	pop	r0
     b98:	08 be       	out	0x38, r0	; 56
     b9a:	0f 90       	pop	r0
     b9c:	0f be       	out	0x3f, r0	; 63
     b9e:	0f 90       	pop	r0
     ba0:	1f 90       	pop	r1
     ba2:	18 95       	reti

00000ba4 <__vector_16>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC0_CCA_vect)
{
     ba4:	1f 92       	push	r1
     ba6:	0f 92       	push	r0
     ba8:	0f b6       	in	r0, 0x3f	; 63
     baa:	0f 92       	push	r0
     bac:	11 24       	eor	r1, r1
     bae:	08 b6       	in	r0, 0x38	; 56
     bb0:	0f 92       	push	r0
     bb2:	18 be       	out	0x38, r1	; 56
     bb4:	09 b6       	in	r0, 0x39	; 57
     bb6:	0f 92       	push	r0
     bb8:	19 be       	out	0x39, r1	; 57
     bba:	0b b6       	in	r0, 0x3b	; 59
     bbc:	0f 92       	push	r0
     bbe:	1b be       	out	0x3b, r1	; 59
     bc0:	2f 93       	push	r18
     bc2:	3f 93       	push	r19
     bc4:	4f 93       	push	r20
     bc6:	5f 93       	push	r21
     bc8:	6f 93       	push	r22
     bca:	7f 93       	push	r23
     bcc:	8f 93       	push	r24
     bce:	9f 93       	push	r25
     bd0:	af 93       	push	r26
     bd2:	bf 93       	push	r27
     bd4:	ef 93       	push	r30
     bd6:	ff 93       	push	r31
	if (tc_tcc0_cca_callback) {
     bd8:	e0 91 96 20 	lds	r30, 0x2096
     bdc:	f0 91 97 20 	lds	r31, 0x2097
     be0:	30 97       	sbiw	r30, 0x00	; 0
     be2:	09 f0       	breq	.+2      	; 0xbe6 <__vector_16+0x42>
		tc_tcc0_cca_callback();
     be4:	19 95       	eicall
	}
}
     be6:	ff 91       	pop	r31
     be8:	ef 91       	pop	r30
     bea:	bf 91       	pop	r27
     bec:	af 91       	pop	r26
     bee:	9f 91       	pop	r25
     bf0:	8f 91       	pop	r24
     bf2:	7f 91       	pop	r23
     bf4:	6f 91       	pop	r22
     bf6:	5f 91       	pop	r21
     bf8:	4f 91       	pop	r20
     bfa:	3f 91       	pop	r19
     bfc:	2f 91       	pop	r18
     bfe:	0f 90       	pop	r0
     c00:	0b be       	out	0x3b, r0	; 59
     c02:	0f 90       	pop	r0
     c04:	09 be       	out	0x39, r0	; 57
     c06:	0f 90       	pop	r0
     c08:	08 be       	out	0x38, r0	; 56
     c0a:	0f 90       	pop	r0
     c0c:	0f be       	out	0x3f, r0	; 63
     c0e:	0f 90       	pop	r0
     c10:	1f 90       	pop	r1
     c12:	18 95       	reti

00000c14 <__vector_17>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC0_CCB_vect)
{
     c14:	1f 92       	push	r1
     c16:	0f 92       	push	r0
     c18:	0f b6       	in	r0, 0x3f	; 63
     c1a:	0f 92       	push	r0
     c1c:	11 24       	eor	r1, r1
     c1e:	08 b6       	in	r0, 0x38	; 56
     c20:	0f 92       	push	r0
     c22:	18 be       	out	0x38, r1	; 56
     c24:	09 b6       	in	r0, 0x39	; 57
     c26:	0f 92       	push	r0
     c28:	19 be       	out	0x39, r1	; 57
     c2a:	0b b6       	in	r0, 0x3b	; 59
     c2c:	0f 92       	push	r0
     c2e:	1b be       	out	0x3b, r1	; 59
     c30:	2f 93       	push	r18
     c32:	3f 93       	push	r19
     c34:	4f 93       	push	r20
     c36:	5f 93       	push	r21
     c38:	6f 93       	push	r22
     c3a:	7f 93       	push	r23
     c3c:	8f 93       	push	r24
     c3e:	9f 93       	push	r25
     c40:	af 93       	push	r26
     c42:	bf 93       	push	r27
     c44:	ef 93       	push	r30
     c46:	ff 93       	push	r31
	if (tc_tcc0_ccb_callback) {
     c48:	e0 91 94 20 	lds	r30, 0x2094
     c4c:	f0 91 95 20 	lds	r31, 0x2095
     c50:	30 97       	sbiw	r30, 0x00	; 0
     c52:	09 f0       	breq	.+2      	; 0xc56 <__vector_17+0x42>
		tc_tcc0_ccb_callback();
     c54:	19 95       	eicall
	}
}
     c56:	ff 91       	pop	r31
     c58:	ef 91       	pop	r30
     c5a:	bf 91       	pop	r27
     c5c:	af 91       	pop	r26
     c5e:	9f 91       	pop	r25
     c60:	8f 91       	pop	r24
     c62:	7f 91       	pop	r23
     c64:	6f 91       	pop	r22
     c66:	5f 91       	pop	r21
     c68:	4f 91       	pop	r20
     c6a:	3f 91       	pop	r19
     c6c:	2f 91       	pop	r18
     c6e:	0f 90       	pop	r0
     c70:	0b be       	out	0x3b, r0	; 59
     c72:	0f 90       	pop	r0
     c74:	09 be       	out	0x39, r0	; 57
     c76:	0f 90       	pop	r0
     c78:	08 be       	out	0x38, r0	; 56
     c7a:	0f 90       	pop	r0
     c7c:	0f be       	out	0x3f, r0	; 63
     c7e:	0f 90       	pop	r0
     c80:	1f 90       	pop	r1
     c82:	18 95       	reti

00000c84 <__vector_18>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureC and
 * call the callback function.
 */
ISR(TCC0_CCC_vect)
{
     c84:	1f 92       	push	r1
     c86:	0f 92       	push	r0
     c88:	0f b6       	in	r0, 0x3f	; 63
     c8a:	0f 92       	push	r0
     c8c:	11 24       	eor	r1, r1
     c8e:	08 b6       	in	r0, 0x38	; 56
     c90:	0f 92       	push	r0
     c92:	18 be       	out	0x38, r1	; 56
     c94:	09 b6       	in	r0, 0x39	; 57
     c96:	0f 92       	push	r0
     c98:	19 be       	out	0x39, r1	; 57
     c9a:	0b b6       	in	r0, 0x3b	; 59
     c9c:	0f 92       	push	r0
     c9e:	1b be       	out	0x3b, r1	; 59
     ca0:	2f 93       	push	r18
     ca2:	3f 93       	push	r19
     ca4:	4f 93       	push	r20
     ca6:	5f 93       	push	r21
     ca8:	6f 93       	push	r22
     caa:	7f 93       	push	r23
     cac:	8f 93       	push	r24
     cae:	9f 93       	push	r25
     cb0:	af 93       	push	r26
     cb2:	bf 93       	push	r27
     cb4:	ef 93       	push	r30
     cb6:	ff 93       	push	r31
	if (tc_tcc0_ccc_callback) {
     cb8:	e0 91 92 20 	lds	r30, 0x2092
     cbc:	f0 91 93 20 	lds	r31, 0x2093
     cc0:	30 97       	sbiw	r30, 0x00	; 0
     cc2:	09 f0       	breq	.+2      	; 0xcc6 <__vector_18+0x42>
		tc_tcc0_ccc_callback();
     cc4:	19 95       	eicall
	}
}
     cc6:	ff 91       	pop	r31
     cc8:	ef 91       	pop	r30
     cca:	bf 91       	pop	r27
     ccc:	af 91       	pop	r26
     cce:	9f 91       	pop	r25
     cd0:	8f 91       	pop	r24
     cd2:	7f 91       	pop	r23
     cd4:	6f 91       	pop	r22
     cd6:	5f 91       	pop	r21
     cd8:	4f 91       	pop	r20
     cda:	3f 91       	pop	r19
     cdc:	2f 91       	pop	r18
     cde:	0f 90       	pop	r0
     ce0:	0b be       	out	0x3b, r0	; 59
     ce2:	0f 90       	pop	r0
     ce4:	09 be       	out	0x39, r0	; 57
     ce6:	0f 90       	pop	r0
     ce8:	08 be       	out	0x38, r0	; 56
     cea:	0f 90       	pop	r0
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	0f 90       	pop	r0
     cf0:	1f 90       	pop	r1
     cf2:	18 95       	reti

00000cf4 <__vector_19>:
 *
 * This function will handle interrupt on Timer Counter CO Compare/CaptureD and
 * call the callback function.
 */
ISR(TCC0_CCD_vect)
{
     cf4:	1f 92       	push	r1
     cf6:	0f 92       	push	r0
     cf8:	0f b6       	in	r0, 0x3f	; 63
     cfa:	0f 92       	push	r0
     cfc:	11 24       	eor	r1, r1
     cfe:	08 b6       	in	r0, 0x38	; 56
     d00:	0f 92       	push	r0
     d02:	18 be       	out	0x38, r1	; 56
     d04:	09 b6       	in	r0, 0x39	; 57
     d06:	0f 92       	push	r0
     d08:	19 be       	out	0x39, r1	; 57
     d0a:	0b b6       	in	r0, 0x3b	; 59
     d0c:	0f 92       	push	r0
     d0e:	1b be       	out	0x3b, r1	; 59
     d10:	2f 93       	push	r18
     d12:	3f 93       	push	r19
     d14:	4f 93       	push	r20
     d16:	5f 93       	push	r21
     d18:	6f 93       	push	r22
     d1a:	7f 93       	push	r23
     d1c:	8f 93       	push	r24
     d1e:	9f 93       	push	r25
     d20:	af 93       	push	r26
     d22:	bf 93       	push	r27
     d24:	ef 93       	push	r30
     d26:	ff 93       	push	r31
	if (tc_tcc0_ccd_callback) {
     d28:	e0 91 90 20 	lds	r30, 0x2090
     d2c:	f0 91 91 20 	lds	r31, 0x2091
     d30:	30 97       	sbiw	r30, 0x00	; 0
     d32:	09 f0       	breq	.+2      	; 0xd36 <__vector_19+0x42>
		tc_tcc0_ccd_callback();
     d34:	19 95       	eicall
	}
}
     d36:	ff 91       	pop	r31
     d38:	ef 91       	pop	r30
     d3a:	bf 91       	pop	r27
     d3c:	af 91       	pop	r26
     d3e:	9f 91       	pop	r25
     d40:	8f 91       	pop	r24
     d42:	7f 91       	pop	r23
     d44:	6f 91       	pop	r22
     d46:	5f 91       	pop	r21
     d48:	4f 91       	pop	r20
     d4a:	3f 91       	pop	r19
     d4c:	2f 91       	pop	r18
     d4e:	0f 90       	pop	r0
     d50:	0b be       	out	0x3b, r0	; 59
     d52:	0f 90       	pop	r0
     d54:	09 be       	out	0x39, r0	; 57
     d56:	0f 90       	pop	r0
     d58:	08 be       	out	0x38, r0	; 56
     d5a:	0f 90       	pop	r0
     d5c:	0f be       	out	0x3f, r0	; 63
     d5e:	0f 90       	pop	r0
     d60:	1f 90       	pop	r1
     d62:	18 95       	reti

00000d64 <__vector_20>:
 *
 * This function will handle interrupt on Timer Counter C1 overflow and
 * call the callback function.
 */
ISR(TCC1_OVF_vect)
{
     d64:	1f 92       	push	r1
     d66:	0f 92       	push	r0
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	0f 92       	push	r0
     d6c:	11 24       	eor	r1, r1
     d6e:	08 b6       	in	r0, 0x38	; 56
     d70:	0f 92       	push	r0
     d72:	18 be       	out	0x38, r1	; 56
     d74:	09 b6       	in	r0, 0x39	; 57
     d76:	0f 92       	push	r0
     d78:	19 be       	out	0x39, r1	; 57
     d7a:	0b b6       	in	r0, 0x3b	; 59
     d7c:	0f 92       	push	r0
     d7e:	1b be       	out	0x3b, r1	; 59
     d80:	2f 93       	push	r18
     d82:	3f 93       	push	r19
     d84:	4f 93       	push	r20
     d86:	5f 93       	push	r21
     d88:	6f 93       	push	r22
     d8a:	7f 93       	push	r23
     d8c:	8f 93       	push	r24
     d8e:	9f 93       	push	r25
     d90:	af 93       	push	r26
     d92:	bf 93       	push	r27
     d94:	ef 93       	push	r30
     d96:	ff 93       	push	r31
	if (tc_tcc1_ovf_callback) {
     d98:	e0 91 8e 20 	lds	r30, 0x208E
     d9c:	f0 91 8f 20 	lds	r31, 0x208F
     da0:	30 97       	sbiw	r30, 0x00	; 0
     da2:	09 f0       	breq	.+2      	; 0xda6 <__vector_20+0x42>
		tc_tcc1_ovf_callback();
     da4:	19 95       	eicall
	}
}
     da6:	ff 91       	pop	r31
     da8:	ef 91       	pop	r30
     daa:	bf 91       	pop	r27
     dac:	af 91       	pop	r26
     dae:	9f 91       	pop	r25
     db0:	8f 91       	pop	r24
     db2:	7f 91       	pop	r23
     db4:	6f 91       	pop	r22
     db6:	5f 91       	pop	r21
     db8:	4f 91       	pop	r20
     dba:	3f 91       	pop	r19
     dbc:	2f 91       	pop	r18
     dbe:	0f 90       	pop	r0
     dc0:	0b be       	out	0x3b, r0	; 59
     dc2:	0f 90       	pop	r0
     dc4:	09 be       	out	0x39, r0	; 57
     dc6:	0f 90       	pop	r0
     dc8:	08 be       	out	0x38, r0	; 56
     dca:	0f 90       	pop	r0
     dcc:	0f be       	out	0x3f, r0	; 63
     dce:	0f 90       	pop	r0
     dd0:	1f 90       	pop	r1
     dd2:	18 95       	reti

00000dd4 <__vector_21>:
 *
 * This function will handle interrupt on Timer Counter C1 error and
 * call the callback function.
 */
ISR(TCC1_ERR_vect)
{
     dd4:	1f 92       	push	r1
     dd6:	0f 92       	push	r0
     dd8:	0f b6       	in	r0, 0x3f	; 63
     dda:	0f 92       	push	r0
     ddc:	11 24       	eor	r1, r1
     dde:	08 b6       	in	r0, 0x38	; 56
     de0:	0f 92       	push	r0
     de2:	18 be       	out	0x38, r1	; 56
     de4:	09 b6       	in	r0, 0x39	; 57
     de6:	0f 92       	push	r0
     de8:	19 be       	out	0x39, r1	; 57
     dea:	0b b6       	in	r0, 0x3b	; 59
     dec:	0f 92       	push	r0
     dee:	1b be       	out	0x3b, r1	; 59
     df0:	2f 93       	push	r18
     df2:	3f 93       	push	r19
     df4:	4f 93       	push	r20
     df6:	5f 93       	push	r21
     df8:	6f 93       	push	r22
     dfa:	7f 93       	push	r23
     dfc:	8f 93       	push	r24
     dfe:	9f 93       	push	r25
     e00:	af 93       	push	r26
     e02:	bf 93       	push	r27
     e04:	ef 93       	push	r30
     e06:	ff 93       	push	r31
	if (tc_tcc1_err_callback) {
     e08:	e0 91 8c 20 	lds	r30, 0x208C
     e0c:	f0 91 8d 20 	lds	r31, 0x208D
     e10:	30 97       	sbiw	r30, 0x00	; 0
     e12:	09 f0       	breq	.+2      	; 0xe16 <__vector_21+0x42>
		tc_tcc1_err_callback();
     e14:	19 95       	eicall
	}
}
     e16:	ff 91       	pop	r31
     e18:	ef 91       	pop	r30
     e1a:	bf 91       	pop	r27
     e1c:	af 91       	pop	r26
     e1e:	9f 91       	pop	r25
     e20:	8f 91       	pop	r24
     e22:	7f 91       	pop	r23
     e24:	6f 91       	pop	r22
     e26:	5f 91       	pop	r21
     e28:	4f 91       	pop	r20
     e2a:	3f 91       	pop	r19
     e2c:	2f 91       	pop	r18
     e2e:	0f 90       	pop	r0
     e30:	0b be       	out	0x3b, r0	; 59
     e32:	0f 90       	pop	r0
     e34:	09 be       	out	0x39, r0	; 57
     e36:	0f 90       	pop	r0
     e38:	08 be       	out	0x38, r0	; 56
     e3a:	0f 90       	pop	r0
     e3c:	0f be       	out	0x3f, r0	; 63
     e3e:	0f 90       	pop	r0
     e40:	1f 90       	pop	r1
     e42:	18 95       	reti

00000e44 <__vector_22>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCC1_CCA_vect)
{
     e44:	1f 92       	push	r1
     e46:	0f 92       	push	r0
     e48:	0f b6       	in	r0, 0x3f	; 63
     e4a:	0f 92       	push	r0
     e4c:	11 24       	eor	r1, r1
     e4e:	08 b6       	in	r0, 0x38	; 56
     e50:	0f 92       	push	r0
     e52:	18 be       	out	0x38, r1	; 56
     e54:	09 b6       	in	r0, 0x39	; 57
     e56:	0f 92       	push	r0
     e58:	19 be       	out	0x39, r1	; 57
     e5a:	0b b6       	in	r0, 0x3b	; 59
     e5c:	0f 92       	push	r0
     e5e:	1b be       	out	0x3b, r1	; 59
     e60:	2f 93       	push	r18
     e62:	3f 93       	push	r19
     e64:	4f 93       	push	r20
     e66:	5f 93       	push	r21
     e68:	6f 93       	push	r22
     e6a:	7f 93       	push	r23
     e6c:	8f 93       	push	r24
     e6e:	9f 93       	push	r25
     e70:	af 93       	push	r26
     e72:	bf 93       	push	r27
     e74:	ef 93       	push	r30
     e76:	ff 93       	push	r31
	if (tc_tcc1_cca_callback) {
     e78:	e0 91 8a 20 	lds	r30, 0x208A
     e7c:	f0 91 8b 20 	lds	r31, 0x208B
     e80:	30 97       	sbiw	r30, 0x00	; 0
     e82:	09 f0       	breq	.+2      	; 0xe86 <__vector_22+0x42>
		tc_tcc1_cca_callback();
     e84:	19 95       	eicall
	}
}
     e86:	ff 91       	pop	r31
     e88:	ef 91       	pop	r30
     e8a:	bf 91       	pop	r27
     e8c:	af 91       	pop	r26
     e8e:	9f 91       	pop	r25
     e90:	8f 91       	pop	r24
     e92:	7f 91       	pop	r23
     e94:	6f 91       	pop	r22
     e96:	5f 91       	pop	r21
     e98:	4f 91       	pop	r20
     e9a:	3f 91       	pop	r19
     e9c:	2f 91       	pop	r18
     e9e:	0f 90       	pop	r0
     ea0:	0b be       	out	0x3b, r0	; 59
     ea2:	0f 90       	pop	r0
     ea4:	09 be       	out	0x39, r0	; 57
     ea6:	0f 90       	pop	r0
     ea8:	08 be       	out	0x38, r0	; 56
     eaa:	0f 90       	pop	r0
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	0f 90       	pop	r0
     eb0:	1f 90       	pop	r1
     eb2:	18 95       	reti

00000eb4 <__vector_23>:
 *
 * This function will handle interrupt on Timer Counter C1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCC1_CCB_vect)
{
     eb4:	1f 92       	push	r1
     eb6:	0f 92       	push	r0
     eb8:	0f b6       	in	r0, 0x3f	; 63
     eba:	0f 92       	push	r0
     ebc:	11 24       	eor	r1, r1
     ebe:	08 b6       	in	r0, 0x38	; 56
     ec0:	0f 92       	push	r0
     ec2:	18 be       	out	0x38, r1	; 56
     ec4:	09 b6       	in	r0, 0x39	; 57
     ec6:	0f 92       	push	r0
     ec8:	19 be       	out	0x39, r1	; 57
     eca:	0b b6       	in	r0, 0x3b	; 59
     ecc:	0f 92       	push	r0
     ece:	1b be       	out	0x3b, r1	; 59
     ed0:	2f 93       	push	r18
     ed2:	3f 93       	push	r19
     ed4:	4f 93       	push	r20
     ed6:	5f 93       	push	r21
     ed8:	6f 93       	push	r22
     eda:	7f 93       	push	r23
     edc:	8f 93       	push	r24
     ede:	9f 93       	push	r25
     ee0:	af 93       	push	r26
     ee2:	bf 93       	push	r27
     ee4:	ef 93       	push	r30
     ee6:	ff 93       	push	r31
	if (tc_tcc1_ccb_callback) {
     ee8:	e0 91 88 20 	lds	r30, 0x2088
     eec:	f0 91 89 20 	lds	r31, 0x2089
     ef0:	30 97       	sbiw	r30, 0x00	; 0
     ef2:	09 f0       	breq	.+2      	; 0xef6 <__vector_23+0x42>
		tc_tcc1_ccb_callback();
     ef4:	19 95       	eicall
	}
}
     ef6:	ff 91       	pop	r31
     ef8:	ef 91       	pop	r30
     efa:	bf 91       	pop	r27
     efc:	af 91       	pop	r26
     efe:	9f 91       	pop	r25
     f00:	8f 91       	pop	r24
     f02:	7f 91       	pop	r23
     f04:	6f 91       	pop	r22
     f06:	5f 91       	pop	r21
     f08:	4f 91       	pop	r20
     f0a:	3f 91       	pop	r19
     f0c:	2f 91       	pop	r18
     f0e:	0f 90       	pop	r0
     f10:	0b be       	out	0x3b, r0	; 59
     f12:	0f 90       	pop	r0
     f14:	09 be       	out	0x39, r0	; 57
     f16:	0f 90       	pop	r0
     f18:	08 be       	out	0x38, r0	; 56
     f1a:	0f 90       	pop	r0
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	0f 90       	pop	r0
     f20:	1f 90       	pop	r1
     f22:	18 95       	reti

00000f24 <__vector_78>:
 *
 * This function will handle interrupt on Timer Counter D0 error and
 * call the callback function.
 */
ISR(TCD0_ERR_vect)
{
     f24:	1f 92       	push	r1
     f26:	0f 92       	push	r0
     f28:	0f b6       	in	r0, 0x3f	; 63
     f2a:	0f 92       	push	r0
     f2c:	11 24       	eor	r1, r1
     f2e:	08 b6       	in	r0, 0x38	; 56
     f30:	0f 92       	push	r0
     f32:	18 be       	out	0x38, r1	; 56
     f34:	09 b6       	in	r0, 0x39	; 57
     f36:	0f 92       	push	r0
     f38:	19 be       	out	0x39, r1	; 57
     f3a:	0b b6       	in	r0, 0x3b	; 59
     f3c:	0f 92       	push	r0
     f3e:	1b be       	out	0x3b, r1	; 59
     f40:	2f 93       	push	r18
     f42:	3f 93       	push	r19
     f44:	4f 93       	push	r20
     f46:	5f 93       	push	r21
     f48:	6f 93       	push	r22
     f4a:	7f 93       	push	r23
     f4c:	8f 93       	push	r24
     f4e:	9f 93       	push	r25
     f50:	af 93       	push	r26
     f52:	bf 93       	push	r27
     f54:	ef 93       	push	r30
     f56:	ff 93       	push	r31
	if (tc_tcd0_err_callback) {
     f58:	e0 91 86 20 	lds	r30, 0x2086
     f5c:	f0 91 87 20 	lds	r31, 0x2087
     f60:	30 97       	sbiw	r30, 0x00	; 0
     f62:	09 f0       	breq	.+2      	; 0xf66 <__vector_78+0x42>
		tc_tcd0_err_callback();
     f64:	19 95       	eicall
	}
}
     f66:	ff 91       	pop	r31
     f68:	ef 91       	pop	r30
     f6a:	bf 91       	pop	r27
     f6c:	af 91       	pop	r26
     f6e:	9f 91       	pop	r25
     f70:	8f 91       	pop	r24
     f72:	7f 91       	pop	r23
     f74:	6f 91       	pop	r22
     f76:	5f 91       	pop	r21
     f78:	4f 91       	pop	r20
     f7a:	3f 91       	pop	r19
     f7c:	2f 91       	pop	r18
     f7e:	0f 90       	pop	r0
     f80:	0b be       	out	0x3b, r0	; 59
     f82:	0f 90       	pop	r0
     f84:	09 be       	out	0x39, r0	; 57
     f86:	0f 90       	pop	r0
     f88:	08 be       	out	0x38, r0	; 56
     f8a:	0f 90       	pop	r0
     f8c:	0f be       	out	0x3f, r0	; 63
     f8e:	0f 90       	pop	r0
     f90:	1f 90       	pop	r1
     f92:	18 95       	reti

00000f94 <__vector_79>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD0_CCA_vect)
{
     f94:	1f 92       	push	r1
     f96:	0f 92       	push	r0
     f98:	0f b6       	in	r0, 0x3f	; 63
     f9a:	0f 92       	push	r0
     f9c:	11 24       	eor	r1, r1
     f9e:	08 b6       	in	r0, 0x38	; 56
     fa0:	0f 92       	push	r0
     fa2:	18 be       	out	0x38, r1	; 56
     fa4:	09 b6       	in	r0, 0x39	; 57
     fa6:	0f 92       	push	r0
     fa8:	19 be       	out	0x39, r1	; 57
     faa:	0b b6       	in	r0, 0x3b	; 59
     fac:	0f 92       	push	r0
     fae:	1b be       	out	0x3b, r1	; 59
     fb0:	2f 93       	push	r18
     fb2:	3f 93       	push	r19
     fb4:	4f 93       	push	r20
     fb6:	5f 93       	push	r21
     fb8:	6f 93       	push	r22
     fba:	7f 93       	push	r23
     fbc:	8f 93       	push	r24
     fbe:	9f 93       	push	r25
     fc0:	af 93       	push	r26
     fc2:	bf 93       	push	r27
     fc4:	ef 93       	push	r30
     fc6:	ff 93       	push	r31
	if (tc_tcd0_cca_callback) {
     fc8:	e0 91 84 20 	lds	r30, 0x2084
     fcc:	f0 91 85 20 	lds	r31, 0x2085
     fd0:	30 97       	sbiw	r30, 0x00	; 0
     fd2:	09 f0       	breq	.+2      	; 0xfd6 <__vector_79+0x42>
		tc_tcd0_cca_callback();
     fd4:	19 95       	eicall
	}
}
     fd6:	ff 91       	pop	r31
     fd8:	ef 91       	pop	r30
     fda:	bf 91       	pop	r27
     fdc:	af 91       	pop	r26
     fde:	9f 91       	pop	r25
     fe0:	8f 91       	pop	r24
     fe2:	7f 91       	pop	r23
     fe4:	6f 91       	pop	r22
     fe6:	5f 91       	pop	r21
     fe8:	4f 91       	pop	r20
     fea:	3f 91       	pop	r19
     fec:	2f 91       	pop	r18
     fee:	0f 90       	pop	r0
     ff0:	0b be       	out	0x3b, r0	; 59
     ff2:	0f 90       	pop	r0
     ff4:	09 be       	out	0x39, r0	; 57
     ff6:	0f 90       	pop	r0
     ff8:	08 be       	out	0x38, r0	; 56
     ffa:	0f 90       	pop	r0
     ffc:	0f be       	out	0x3f, r0	; 63
     ffe:	0f 90       	pop	r0
    1000:	1f 90       	pop	r1
    1002:	18 95       	reti

00001004 <__vector_80>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD0_CCB_vect)
{
    1004:	1f 92       	push	r1
    1006:	0f 92       	push	r0
    1008:	0f b6       	in	r0, 0x3f	; 63
    100a:	0f 92       	push	r0
    100c:	11 24       	eor	r1, r1
    100e:	08 b6       	in	r0, 0x38	; 56
    1010:	0f 92       	push	r0
    1012:	18 be       	out	0x38, r1	; 56
    1014:	09 b6       	in	r0, 0x39	; 57
    1016:	0f 92       	push	r0
    1018:	19 be       	out	0x39, r1	; 57
    101a:	0b b6       	in	r0, 0x3b	; 59
    101c:	0f 92       	push	r0
    101e:	1b be       	out	0x3b, r1	; 59
    1020:	2f 93       	push	r18
    1022:	3f 93       	push	r19
    1024:	4f 93       	push	r20
    1026:	5f 93       	push	r21
    1028:	6f 93       	push	r22
    102a:	7f 93       	push	r23
    102c:	8f 93       	push	r24
    102e:	9f 93       	push	r25
    1030:	af 93       	push	r26
    1032:	bf 93       	push	r27
    1034:	ef 93       	push	r30
    1036:	ff 93       	push	r31
	if (tc_tcd0_ccb_callback) {
    1038:	e0 91 82 20 	lds	r30, 0x2082
    103c:	f0 91 83 20 	lds	r31, 0x2083
    1040:	30 97       	sbiw	r30, 0x00	; 0
    1042:	09 f0       	breq	.+2      	; 0x1046 <__vector_80+0x42>
		tc_tcd0_ccb_callback();
    1044:	19 95       	eicall
	}
}
    1046:	ff 91       	pop	r31
    1048:	ef 91       	pop	r30
    104a:	bf 91       	pop	r27
    104c:	af 91       	pop	r26
    104e:	9f 91       	pop	r25
    1050:	8f 91       	pop	r24
    1052:	7f 91       	pop	r23
    1054:	6f 91       	pop	r22
    1056:	5f 91       	pop	r21
    1058:	4f 91       	pop	r20
    105a:	3f 91       	pop	r19
    105c:	2f 91       	pop	r18
    105e:	0f 90       	pop	r0
    1060:	0b be       	out	0x3b, r0	; 59
    1062:	0f 90       	pop	r0
    1064:	09 be       	out	0x39, r0	; 57
    1066:	0f 90       	pop	r0
    1068:	08 be       	out	0x38, r0	; 56
    106a:	0f 90       	pop	r0
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	0f 90       	pop	r0
    1070:	1f 90       	pop	r1
    1072:	18 95       	reti

00001074 <__vector_81>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCD0_CCC_vect)
{
    1074:	1f 92       	push	r1
    1076:	0f 92       	push	r0
    1078:	0f b6       	in	r0, 0x3f	; 63
    107a:	0f 92       	push	r0
    107c:	11 24       	eor	r1, r1
    107e:	08 b6       	in	r0, 0x38	; 56
    1080:	0f 92       	push	r0
    1082:	18 be       	out	0x38, r1	; 56
    1084:	09 b6       	in	r0, 0x39	; 57
    1086:	0f 92       	push	r0
    1088:	19 be       	out	0x39, r1	; 57
    108a:	0b b6       	in	r0, 0x3b	; 59
    108c:	0f 92       	push	r0
    108e:	1b be       	out	0x3b, r1	; 59
    1090:	2f 93       	push	r18
    1092:	3f 93       	push	r19
    1094:	4f 93       	push	r20
    1096:	5f 93       	push	r21
    1098:	6f 93       	push	r22
    109a:	7f 93       	push	r23
    109c:	8f 93       	push	r24
    109e:	9f 93       	push	r25
    10a0:	af 93       	push	r26
    10a2:	bf 93       	push	r27
    10a4:	ef 93       	push	r30
    10a6:	ff 93       	push	r31
	if (tc_tcd0_ccc_callback) {
    10a8:	e0 91 80 20 	lds	r30, 0x2080
    10ac:	f0 91 81 20 	lds	r31, 0x2081
    10b0:	30 97       	sbiw	r30, 0x00	; 0
    10b2:	09 f0       	breq	.+2      	; 0x10b6 <__vector_81+0x42>
		tc_tcd0_ccc_callback();
    10b4:	19 95       	eicall
	}
}
    10b6:	ff 91       	pop	r31
    10b8:	ef 91       	pop	r30
    10ba:	bf 91       	pop	r27
    10bc:	af 91       	pop	r26
    10be:	9f 91       	pop	r25
    10c0:	8f 91       	pop	r24
    10c2:	7f 91       	pop	r23
    10c4:	6f 91       	pop	r22
    10c6:	5f 91       	pop	r21
    10c8:	4f 91       	pop	r20
    10ca:	3f 91       	pop	r19
    10cc:	2f 91       	pop	r18
    10ce:	0f 90       	pop	r0
    10d0:	0b be       	out	0x3b, r0	; 59
    10d2:	0f 90       	pop	r0
    10d4:	09 be       	out	0x39, r0	; 57
    10d6:	0f 90       	pop	r0
    10d8:	08 be       	out	0x38, r0	; 56
    10da:	0f 90       	pop	r0
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	0f 90       	pop	r0
    10e0:	1f 90       	pop	r1
    10e2:	18 95       	reti

000010e4 <__vector_82>:
 *
 * This function will handle interrupt on Timer Counter D0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCD0_CCD_vect)
{
    10e4:	1f 92       	push	r1
    10e6:	0f 92       	push	r0
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	0f 92       	push	r0
    10ec:	11 24       	eor	r1, r1
    10ee:	08 b6       	in	r0, 0x38	; 56
    10f0:	0f 92       	push	r0
    10f2:	18 be       	out	0x38, r1	; 56
    10f4:	09 b6       	in	r0, 0x39	; 57
    10f6:	0f 92       	push	r0
    10f8:	19 be       	out	0x39, r1	; 57
    10fa:	0b b6       	in	r0, 0x3b	; 59
    10fc:	0f 92       	push	r0
    10fe:	1b be       	out	0x3b, r1	; 59
    1100:	2f 93       	push	r18
    1102:	3f 93       	push	r19
    1104:	4f 93       	push	r20
    1106:	5f 93       	push	r21
    1108:	6f 93       	push	r22
    110a:	7f 93       	push	r23
    110c:	8f 93       	push	r24
    110e:	9f 93       	push	r25
    1110:	af 93       	push	r26
    1112:	bf 93       	push	r27
    1114:	ef 93       	push	r30
    1116:	ff 93       	push	r31
	if (tc_tcd0_ccd_callback) {
    1118:	e0 91 7e 20 	lds	r30, 0x207E
    111c:	f0 91 7f 20 	lds	r31, 0x207F
    1120:	30 97       	sbiw	r30, 0x00	; 0
    1122:	09 f0       	breq	.+2      	; 0x1126 <__vector_82+0x42>
		tc_tcd0_ccd_callback();
    1124:	19 95       	eicall
	}
}
    1126:	ff 91       	pop	r31
    1128:	ef 91       	pop	r30
    112a:	bf 91       	pop	r27
    112c:	af 91       	pop	r26
    112e:	9f 91       	pop	r25
    1130:	8f 91       	pop	r24
    1132:	7f 91       	pop	r23
    1134:	6f 91       	pop	r22
    1136:	5f 91       	pop	r21
    1138:	4f 91       	pop	r20
    113a:	3f 91       	pop	r19
    113c:	2f 91       	pop	r18
    113e:	0f 90       	pop	r0
    1140:	0b be       	out	0x3b, r0	; 59
    1142:	0f 90       	pop	r0
    1144:	09 be       	out	0x39, r0	; 57
    1146:	0f 90       	pop	r0
    1148:	08 be       	out	0x38, r0	; 56
    114a:	0f 90       	pop	r0
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	0f 90       	pop	r0
    1150:	1f 90       	pop	r1
    1152:	18 95       	reti

00001154 <__vector_83>:
 *
 * This function will handle interrupt on Timer Counter D1 overflow and
 * call the callback function.
 */
ISR(TCD1_OVF_vect)
{
    1154:	1f 92       	push	r1
    1156:	0f 92       	push	r0
    1158:	0f b6       	in	r0, 0x3f	; 63
    115a:	0f 92       	push	r0
    115c:	11 24       	eor	r1, r1
    115e:	08 b6       	in	r0, 0x38	; 56
    1160:	0f 92       	push	r0
    1162:	18 be       	out	0x38, r1	; 56
    1164:	09 b6       	in	r0, 0x39	; 57
    1166:	0f 92       	push	r0
    1168:	19 be       	out	0x39, r1	; 57
    116a:	0b b6       	in	r0, 0x3b	; 59
    116c:	0f 92       	push	r0
    116e:	1b be       	out	0x3b, r1	; 59
    1170:	2f 93       	push	r18
    1172:	3f 93       	push	r19
    1174:	4f 93       	push	r20
    1176:	5f 93       	push	r21
    1178:	6f 93       	push	r22
    117a:	7f 93       	push	r23
    117c:	8f 93       	push	r24
    117e:	9f 93       	push	r25
    1180:	af 93       	push	r26
    1182:	bf 93       	push	r27
    1184:	ef 93       	push	r30
    1186:	ff 93       	push	r31
	if (tc_tcd1_ovf_callback) {
    1188:	e0 91 7c 20 	lds	r30, 0x207C
    118c:	f0 91 7d 20 	lds	r31, 0x207D
    1190:	30 97       	sbiw	r30, 0x00	; 0
    1192:	09 f0       	breq	.+2      	; 0x1196 <__vector_83+0x42>
		tc_tcd1_ovf_callback();
    1194:	19 95       	eicall
	}
}
    1196:	ff 91       	pop	r31
    1198:	ef 91       	pop	r30
    119a:	bf 91       	pop	r27
    119c:	af 91       	pop	r26
    119e:	9f 91       	pop	r25
    11a0:	8f 91       	pop	r24
    11a2:	7f 91       	pop	r23
    11a4:	6f 91       	pop	r22
    11a6:	5f 91       	pop	r21
    11a8:	4f 91       	pop	r20
    11aa:	3f 91       	pop	r19
    11ac:	2f 91       	pop	r18
    11ae:	0f 90       	pop	r0
    11b0:	0b be       	out	0x3b, r0	; 59
    11b2:	0f 90       	pop	r0
    11b4:	09 be       	out	0x39, r0	; 57
    11b6:	0f 90       	pop	r0
    11b8:	08 be       	out	0x38, r0	; 56
    11ba:	0f 90       	pop	r0
    11bc:	0f be       	out	0x3f, r0	; 63
    11be:	0f 90       	pop	r0
    11c0:	1f 90       	pop	r1
    11c2:	18 95       	reti

000011c4 <__vector_84>:
 *
 * This function will handle interrupt on Timer Counter D1 error and
 * call the callback function.
 */
ISR(TCD1_ERR_vect)
{
    11c4:	1f 92       	push	r1
    11c6:	0f 92       	push	r0
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	0f 92       	push	r0
    11cc:	11 24       	eor	r1, r1
    11ce:	08 b6       	in	r0, 0x38	; 56
    11d0:	0f 92       	push	r0
    11d2:	18 be       	out	0x38, r1	; 56
    11d4:	09 b6       	in	r0, 0x39	; 57
    11d6:	0f 92       	push	r0
    11d8:	19 be       	out	0x39, r1	; 57
    11da:	0b b6       	in	r0, 0x3b	; 59
    11dc:	0f 92       	push	r0
    11de:	1b be       	out	0x3b, r1	; 59
    11e0:	2f 93       	push	r18
    11e2:	3f 93       	push	r19
    11e4:	4f 93       	push	r20
    11e6:	5f 93       	push	r21
    11e8:	6f 93       	push	r22
    11ea:	7f 93       	push	r23
    11ec:	8f 93       	push	r24
    11ee:	9f 93       	push	r25
    11f0:	af 93       	push	r26
    11f2:	bf 93       	push	r27
    11f4:	ef 93       	push	r30
    11f6:	ff 93       	push	r31
	if (tc_tcd1_err_callback) {
    11f8:	e0 91 7a 20 	lds	r30, 0x207A
    11fc:	f0 91 7b 20 	lds	r31, 0x207B
    1200:	30 97       	sbiw	r30, 0x00	; 0
    1202:	09 f0       	breq	.+2      	; 0x1206 <__vector_84+0x42>
		tc_tcd1_err_callback();
    1204:	19 95       	eicall
	}
}
    1206:	ff 91       	pop	r31
    1208:	ef 91       	pop	r30
    120a:	bf 91       	pop	r27
    120c:	af 91       	pop	r26
    120e:	9f 91       	pop	r25
    1210:	8f 91       	pop	r24
    1212:	7f 91       	pop	r23
    1214:	6f 91       	pop	r22
    1216:	5f 91       	pop	r21
    1218:	4f 91       	pop	r20
    121a:	3f 91       	pop	r19
    121c:	2f 91       	pop	r18
    121e:	0f 90       	pop	r0
    1220:	0b be       	out	0x3b, r0	; 59
    1222:	0f 90       	pop	r0
    1224:	09 be       	out	0x39, r0	; 57
    1226:	0f 90       	pop	r0
    1228:	08 be       	out	0x38, r0	; 56
    122a:	0f 90       	pop	r0
    122c:	0f be       	out	0x3f, r0	; 63
    122e:	0f 90       	pop	r0
    1230:	1f 90       	pop	r1
    1232:	18 95       	reti

00001234 <__vector_85>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCD1_CCA_vect)
{
    1234:	1f 92       	push	r1
    1236:	0f 92       	push	r0
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	0f 92       	push	r0
    123c:	11 24       	eor	r1, r1
    123e:	08 b6       	in	r0, 0x38	; 56
    1240:	0f 92       	push	r0
    1242:	18 be       	out	0x38, r1	; 56
    1244:	09 b6       	in	r0, 0x39	; 57
    1246:	0f 92       	push	r0
    1248:	19 be       	out	0x39, r1	; 57
    124a:	0b b6       	in	r0, 0x3b	; 59
    124c:	0f 92       	push	r0
    124e:	1b be       	out	0x3b, r1	; 59
    1250:	2f 93       	push	r18
    1252:	3f 93       	push	r19
    1254:	4f 93       	push	r20
    1256:	5f 93       	push	r21
    1258:	6f 93       	push	r22
    125a:	7f 93       	push	r23
    125c:	8f 93       	push	r24
    125e:	9f 93       	push	r25
    1260:	af 93       	push	r26
    1262:	bf 93       	push	r27
    1264:	ef 93       	push	r30
    1266:	ff 93       	push	r31
	if (tc_tcd1_cca_callback) {
    1268:	e0 91 78 20 	lds	r30, 0x2078
    126c:	f0 91 79 20 	lds	r31, 0x2079
    1270:	30 97       	sbiw	r30, 0x00	; 0
    1272:	09 f0       	breq	.+2      	; 0x1276 <__vector_85+0x42>
		tc_tcd1_cca_callback();
    1274:	19 95       	eicall
	}
}
    1276:	ff 91       	pop	r31
    1278:	ef 91       	pop	r30
    127a:	bf 91       	pop	r27
    127c:	af 91       	pop	r26
    127e:	9f 91       	pop	r25
    1280:	8f 91       	pop	r24
    1282:	7f 91       	pop	r23
    1284:	6f 91       	pop	r22
    1286:	5f 91       	pop	r21
    1288:	4f 91       	pop	r20
    128a:	3f 91       	pop	r19
    128c:	2f 91       	pop	r18
    128e:	0f 90       	pop	r0
    1290:	0b be       	out	0x3b, r0	; 59
    1292:	0f 90       	pop	r0
    1294:	09 be       	out	0x39, r0	; 57
    1296:	0f 90       	pop	r0
    1298:	08 be       	out	0x38, r0	; 56
    129a:	0f 90       	pop	r0
    129c:	0f be       	out	0x3f, r0	; 63
    129e:	0f 90       	pop	r0
    12a0:	1f 90       	pop	r1
    12a2:	18 95       	reti

000012a4 <__vector_86>:
 *
 * This function will handle interrupt on Timer Counter D1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCD1_CCB_vect)
{
    12a4:	1f 92       	push	r1
    12a6:	0f 92       	push	r0
    12a8:	0f b6       	in	r0, 0x3f	; 63
    12aa:	0f 92       	push	r0
    12ac:	11 24       	eor	r1, r1
    12ae:	08 b6       	in	r0, 0x38	; 56
    12b0:	0f 92       	push	r0
    12b2:	18 be       	out	0x38, r1	; 56
    12b4:	09 b6       	in	r0, 0x39	; 57
    12b6:	0f 92       	push	r0
    12b8:	19 be       	out	0x39, r1	; 57
    12ba:	0b b6       	in	r0, 0x3b	; 59
    12bc:	0f 92       	push	r0
    12be:	1b be       	out	0x3b, r1	; 59
    12c0:	2f 93       	push	r18
    12c2:	3f 93       	push	r19
    12c4:	4f 93       	push	r20
    12c6:	5f 93       	push	r21
    12c8:	6f 93       	push	r22
    12ca:	7f 93       	push	r23
    12cc:	8f 93       	push	r24
    12ce:	9f 93       	push	r25
    12d0:	af 93       	push	r26
    12d2:	bf 93       	push	r27
    12d4:	ef 93       	push	r30
    12d6:	ff 93       	push	r31
	if (tc_tcd1_ccb_callback) {
    12d8:	e0 91 76 20 	lds	r30, 0x2076
    12dc:	f0 91 77 20 	lds	r31, 0x2077
    12e0:	30 97       	sbiw	r30, 0x00	; 0
    12e2:	09 f0       	breq	.+2      	; 0x12e6 <__vector_86+0x42>
		tc_tcd1_ccb_callback();
    12e4:	19 95       	eicall
	}
}
    12e6:	ff 91       	pop	r31
    12e8:	ef 91       	pop	r30
    12ea:	bf 91       	pop	r27
    12ec:	af 91       	pop	r26
    12ee:	9f 91       	pop	r25
    12f0:	8f 91       	pop	r24
    12f2:	7f 91       	pop	r23
    12f4:	6f 91       	pop	r22
    12f6:	5f 91       	pop	r21
    12f8:	4f 91       	pop	r20
    12fa:	3f 91       	pop	r19
    12fc:	2f 91       	pop	r18
    12fe:	0f 90       	pop	r0
    1300:	0b be       	out	0x3b, r0	; 59
    1302:	0f 90       	pop	r0
    1304:	09 be       	out	0x39, r0	; 57
    1306:	0f 90       	pop	r0
    1308:	08 be       	out	0x38, r0	; 56
    130a:	0f 90       	pop	r0
    130c:	0f be       	out	0x3f, r0	; 63
    130e:	0f 90       	pop	r0
    1310:	1f 90       	pop	r1
    1312:	18 95       	reti

00001314 <__vector_47>:
 *
 * This function will handle interrupt on Timer Counter E0 overflow and
 * call the callback function.
 */
ISR(TCE0_OVF_vect)
{
    1314:	1f 92       	push	r1
    1316:	0f 92       	push	r0
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	0f 92       	push	r0
    131c:	11 24       	eor	r1, r1
    131e:	08 b6       	in	r0, 0x38	; 56
    1320:	0f 92       	push	r0
    1322:	18 be       	out	0x38, r1	; 56
    1324:	09 b6       	in	r0, 0x39	; 57
    1326:	0f 92       	push	r0
    1328:	19 be       	out	0x39, r1	; 57
    132a:	0b b6       	in	r0, 0x3b	; 59
    132c:	0f 92       	push	r0
    132e:	1b be       	out	0x3b, r1	; 59
    1330:	2f 93       	push	r18
    1332:	3f 93       	push	r19
    1334:	4f 93       	push	r20
    1336:	5f 93       	push	r21
    1338:	6f 93       	push	r22
    133a:	7f 93       	push	r23
    133c:	8f 93       	push	r24
    133e:	9f 93       	push	r25
    1340:	af 93       	push	r26
    1342:	bf 93       	push	r27
    1344:	ef 93       	push	r30
    1346:	ff 93       	push	r31
	if (tc_tce0_ovf_callback) {
    1348:	e0 91 74 20 	lds	r30, 0x2074
    134c:	f0 91 75 20 	lds	r31, 0x2075
    1350:	30 97       	sbiw	r30, 0x00	; 0
    1352:	09 f0       	breq	.+2      	; 0x1356 <__vector_47+0x42>
		tc_tce0_ovf_callback();
    1354:	19 95       	eicall
	}
}
    1356:	ff 91       	pop	r31
    1358:	ef 91       	pop	r30
    135a:	bf 91       	pop	r27
    135c:	af 91       	pop	r26
    135e:	9f 91       	pop	r25
    1360:	8f 91       	pop	r24
    1362:	7f 91       	pop	r23
    1364:	6f 91       	pop	r22
    1366:	5f 91       	pop	r21
    1368:	4f 91       	pop	r20
    136a:	3f 91       	pop	r19
    136c:	2f 91       	pop	r18
    136e:	0f 90       	pop	r0
    1370:	0b be       	out	0x3b, r0	; 59
    1372:	0f 90       	pop	r0
    1374:	09 be       	out	0x39, r0	; 57
    1376:	0f 90       	pop	r0
    1378:	08 be       	out	0x38, r0	; 56
    137a:	0f 90       	pop	r0
    137c:	0f be       	out	0x3f, r0	; 63
    137e:	0f 90       	pop	r0
    1380:	1f 90       	pop	r1
    1382:	18 95       	reti

00001384 <__vector_48>:
 *
 * This function will handle interrupt on Timer Counter E0 error and
 * call the callback function.
 */
ISR(TCE0_ERR_vect)
{
    1384:	1f 92       	push	r1
    1386:	0f 92       	push	r0
    1388:	0f b6       	in	r0, 0x3f	; 63
    138a:	0f 92       	push	r0
    138c:	11 24       	eor	r1, r1
    138e:	08 b6       	in	r0, 0x38	; 56
    1390:	0f 92       	push	r0
    1392:	18 be       	out	0x38, r1	; 56
    1394:	09 b6       	in	r0, 0x39	; 57
    1396:	0f 92       	push	r0
    1398:	19 be       	out	0x39, r1	; 57
    139a:	0b b6       	in	r0, 0x3b	; 59
    139c:	0f 92       	push	r0
    139e:	1b be       	out	0x3b, r1	; 59
    13a0:	2f 93       	push	r18
    13a2:	3f 93       	push	r19
    13a4:	4f 93       	push	r20
    13a6:	5f 93       	push	r21
    13a8:	6f 93       	push	r22
    13aa:	7f 93       	push	r23
    13ac:	8f 93       	push	r24
    13ae:	9f 93       	push	r25
    13b0:	af 93       	push	r26
    13b2:	bf 93       	push	r27
    13b4:	ef 93       	push	r30
    13b6:	ff 93       	push	r31
	if (tc_tce0_err_callback) {
    13b8:	e0 91 72 20 	lds	r30, 0x2072
    13bc:	f0 91 73 20 	lds	r31, 0x2073
    13c0:	30 97       	sbiw	r30, 0x00	; 0
    13c2:	09 f0       	breq	.+2      	; 0x13c6 <__vector_48+0x42>
		tc_tce0_err_callback();
    13c4:	19 95       	eicall
	}
}
    13c6:	ff 91       	pop	r31
    13c8:	ef 91       	pop	r30
    13ca:	bf 91       	pop	r27
    13cc:	af 91       	pop	r26
    13ce:	9f 91       	pop	r25
    13d0:	8f 91       	pop	r24
    13d2:	7f 91       	pop	r23
    13d4:	6f 91       	pop	r22
    13d6:	5f 91       	pop	r21
    13d8:	4f 91       	pop	r20
    13da:	3f 91       	pop	r19
    13dc:	2f 91       	pop	r18
    13de:	0f 90       	pop	r0
    13e0:	0b be       	out	0x3b, r0	; 59
    13e2:	0f 90       	pop	r0
    13e4:	09 be       	out	0x39, r0	; 57
    13e6:	0f 90       	pop	r0
    13e8:	08 be       	out	0x38, r0	; 56
    13ea:	0f 90       	pop	r0
    13ec:	0f be       	out	0x3f, r0	; 63
    13ee:	0f 90       	pop	r0
    13f0:	1f 90       	pop	r1
    13f2:	18 95       	reti

000013f4 <__vector_49>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE0_CCA_vect)
{
    13f4:	1f 92       	push	r1
    13f6:	0f 92       	push	r0
    13f8:	0f b6       	in	r0, 0x3f	; 63
    13fa:	0f 92       	push	r0
    13fc:	11 24       	eor	r1, r1
    13fe:	08 b6       	in	r0, 0x38	; 56
    1400:	0f 92       	push	r0
    1402:	18 be       	out	0x38, r1	; 56
    1404:	09 b6       	in	r0, 0x39	; 57
    1406:	0f 92       	push	r0
    1408:	19 be       	out	0x39, r1	; 57
    140a:	0b b6       	in	r0, 0x3b	; 59
    140c:	0f 92       	push	r0
    140e:	1b be       	out	0x3b, r1	; 59
    1410:	2f 93       	push	r18
    1412:	3f 93       	push	r19
    1414:	4f 93       	push	r20
    1416:	5f 93       	push	r21
    1418:	6f 93       	push	r22
    141a:	7f 93       	push	r23
    141c:	8f 93       	push	r24
    141e:	9f 93       	push	r25
    1420:	af 93       	push	r26
    1422:	bf 93       	push	r27
    1424:	ef 93       	push	r30
    1426:	ff 93       	push	r31
	if (tc_tce0_cca_callback) {
    1428:	e0 91 70 20 	lds	r30, 0x2070
    142c:	f0 91 71 20 	lds	r31, 0x2071
    1430:	30 97       	sbiw	r30, 0x00	; 0
    1432:	09 f0       	breq	.+2      	; 0x1436 <__vector_49+0x42>
		tc_tce0_cca_callback();
    1434:	19 95       	eicall
	}
}
    1436:	ff 91       	pop	r31
    1438:	ef 91       	pop	r30
    143a:	bf 91       	pop	r27
    143c:	af 91       	pop	r26
    143e:	9f 91       	pop	r25
    1440:	8f 91       	pop	r24
    1442:	7f 91       	pop	r23
    1444:	6f 91       	pop	r22
    1446:	5f 91       	pop	r21
    1448:	4f 91       	pop	r20
    144a:	3f 91       	pop	r19
    144c:	2f 91       	pop	r18
    144e:	0f 90       	pop	r0
    1450:	0b be       	out	0x3b, r0	; 59
    1452:	0f 90       	pop	r0
    1454:	09 be       	out	0x39, r0	; 57
    1456:	0f 90       	pop	r0
    1458:	08 be       	out	0x38, r0	; 56
    145a:	0f 90       	pop	r0
    145c:	0f be       	out	0x3f, r0	; 63
    145e:	0f 90       	pop	r0
    1460:	1f 90       	pop	r1
    1462:	18 95       	reti

00001464 <__vector_50>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE0_CCB_vect)
{
    1464:	1f 92       	push	r1
    1466:	0f 92       	push	r0
    1468:	0f b6       	in	r0, 0x3f	; 63
    146a:	0f 92       	push	r0
    146c:	11 24       	eor	r1, r1
    146e:	08 b6       	in	r0, 0x38	; 56
    1470:	0f 92       	push	r0
    1472:	18 be       	out	0x38, r1	; 56
    1474:	09 b6       	in	r0, 0x39	; 57
    1476:	0f 92       	push	r0
    1478:	19 be       	out	0x39, r1	; 57
    147a:	0b b6       	in	r0, 0x3b	; 59
    147c:	0f 92       	push	r0
    147e:	1b be       	out	0x3b, r1	; 59
    1480:	2f 93       	push	r18
    1482:	3f 93       	push	r19
    1484:	4f 93       	push	r20
    1486:	5f 93       	push	r21
    1488:	6f 93       	push	r22
    148a:	7f 93       	push	r23
    148c:	8f 93       	push	r24
    148e:	9f 93       	push	r25
    1490:	af 93       	push	r26
    1492:	bf 93       	push	r27
    1494:	ef 93       	push	r30
    1496:	ff 93       	push	r31
	if (tc_tce0_ccb_callback) {
    1498:	e0 91 6e 20 	lds	r30, 0x206E
    149c:	f0 91 6f 20 	lds	r31, 0x206F
    14a0:	30 97       	sbiw	r30, 0x00	; 0
    14a2:	09 f0       	breq	.+2      	; 0x14a6 <__vector_50+0x42>
		tc_tce0_ccb_callback();
    14a4:	19 95       	eicall
	}
}
    14a6:	ff 91       	pop	r31
    14a8:	ef 91       	pop	r30
    14aa:	bf 91       	pop	r27
    14ac:	af 91       	pop	r26
    14ae:	9f 91       	pop	r25
    14b0:	8f 91       	pop	r24
    14b2:	7f 91       	pop	r23
    14b4:	6f 91       	pop	r22
    14b6:	5f 91       	pop	r21
    14b8:	4f 91       	pop	r20
    14ba:	3f 91       	pop	r19
    14bc:	2f 91       	pop	r18
    14be:	0f 90       	pop	r0
    14c0:	0b be       	out	0x3b, r0	; 59
    14c2:	0f 90       	pop	r0
    14c4:	09 be       	out	0x39, r0	; 57
    14c6:	0f 90       	pop	r0
    14c8:	08 be       	out	0x38, r0	; 56
    14ca:	0f 90       	pop	r0
    14cc:	0f be       	out	0x3f, r0	; 63
    14ce:	0f 90       	pop	r0
    14d0:	1f 90       	pop	r1
    14d2:	18 95       	reti

000014d4 <__vector_51>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCE0_CCC_vect)
{
    14d4:	1f 92       	push	r1
    14d6:	0f 92       	push	r0
    14d8:	0f b6       	in	r0, 0x3f	; 63
    14da:	0f 92       	push	r0
    14dc:	11 24       	eor	r1, r1
    14de:	08 b6       	in	r0, 0x38	; 56
    14e0:	0f 92       	push	r0
    14e2:	18 be       	out	0x38, r1	; 56
    14e4:	09 b6       	in	r0, 0x39	; 57
    14e6:	0f 92       	push	r0
    14e8:	19 be       	out	0x39, r1	; 57
    14ea:	0b b6       	in	r0, 0x3b	; 59
    14ec:	0f 92       	push	r0
    14ee:	1b be       	out	0x3b, r1	; 59
    14f0:	2f 93       	push	r18
    14f2:	3f 93       	push	r19
    14f4:	4f 93       	push	r20
    14f6:	5f 93       	push	r21
    14f8:	6f 93       	push	r22
    14fa:	7f 93       	push	r23
    14fc:	8f 93       	push	r24
    14fe:	9f 93       	push	r25
    1500:	af 93       	push	r26
    1502:	bf 93       	push	r27
    1504:	ef 93       	push	r30
    1506:	ff 93       	push	r31
	if (tc_tce0_ccc_callback) {
    1508:	e0 91 6c 20 	lds	r30, 0x206C
    150c:	f0 91 6d 20 	lds	r31, 0x206D
    1510:	30 97       	sbiw	r30, 0x00	; 0
    1512:	09 f0       	breq	.+2      	; 0x1516 <__vector_51+0x42>
		tc_tce0_ccc_callback();
    1514:	19 95       	eicall
	}
}
    1516:	ff 91       	pop	r31
    1518:	ef 91       	pop	r30
    151a:	bf 91       	pop	r27
    151c:	af 91       	pop	r26
    151e:	9f 91       	pop	r25
    1520:	8f 91       	pop	r24
    1522:	7f 91       	pop	r23
    1524:	6f 91       	pop	r22
    1526:	5f 91       	pop	r21
    1528:	4f 91       	pop	r20
    152a:	3f 91       	pop	r19
    152c:	2f 91       	pop	r18
    152e:	0f 90       	pop	r0
    1530:	0b be       	out	0x3b, r0	; 59
    1532:	0f 90       	pop	r0
    1534:	09 be       	out	0x39, r0	; 57
    1536:	0f 90       	pop	r0
    1538:	08 be       	out	0x38, r0	; 56
    153a:	0f 90       	pop	r0
    153c:	0f be       	out	0x3f, r0	; 63
    153e:	0f 90       	pop	r0
    1540:	1f 90       	pop	r1
    1542:	18 95       	reti

00001544 <__vector_52>:
 *
 * This function will handle interrupt on Timer Counter E0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCE0_CCD_vect)
{
    1544:	1f 92       	push	r1
    1546:	0f 92       	push	r0
    1548:	0f b6       	in	r0, 0x3f	; 63
    154a:	0f 92       	push	r0
    154c:	11 24       	eor	r1, r1
    154e:	08 b6       	in	r0, 0x38	; 56
    1550:	0f 92       	push	r0
    1552:	18 be       	out	0x38, r1	; 56
    1554:	09 b6       	in	r0, 0x39	; 57
    1556:	0f 92       	push	r0
    1558:	19 be       	out	0x39, r1	; 57
    155a:	0b b6       	in	r0, 0x3b	; 59
    155c:	0f 92       	push	r0
    155e:	1b be       	out	0x3b, r1	; 59
    1560:	2f 93       	push	r18
    1562:	3f 93       	push	r19
    1564:	4f 93       	push	r20
    1566:	5f 93       	push	r21
    1568:	6f 93       	push	r22
    156a:	7f 93       	push	r23
    156c:	8f 93       	push	r24
    156e:	9f 93       	push	r25
    1570:	af 93       	push	r26
    1572:	bf 93       	push	r27
    1574:	ef 93       	push	r30
    1576:	ff 93       	push	r31
	if (tc_tce0_ccd_callback) {
    1578:	e0 91 6a 20 	lds	r30, 0x206A
    157c:	f0 91 6b 20 	lds	r31, 0x206B
    1580:	30 97       	sbiw	r30, 0x00	; 0
    1582:	09 f0       	breq	.+2      	; 0x1586 <__vector_52+0x42>
		tc_tce0_ccd_callback();
    1584:	19 95       	eicall
	}
}
    1586:	ff 91       	pop	r31
    1588:	ef 91       	pop	r30
    158a:	bf 91       	pop	r27
    158c:	af 91       	pop	r26
    158e:	9f 91       	pop	r25
    1590:	8f 91       	pop	r24
    1592:	7f 91       	pop	r23
    1594:	6f 91       	pop	r22
    1596:	5f 91       	pop	r21
    1598:	4f 91       	pop	r20
    159a:	3f 91       	pop	r19
    159c:	2f 91       	pop	r18
    159e:	0f 90       	pop	r0
    15a0:	0b be       	out	0x3b, r0	; 59
    15a2:	0f 90       	pop	r0
    15a4:	09 be       	out	0x39, r0	; 57
    15a6:	0f 90       	pop	r0
    15a8:	08 be       	out	0x38, r0	; 56
    15aa:	0f 90       	pop	r0
    15ac:	0f be       	out	0x3f, r0	; 63
    15ae:	0f 90       	pop	r0
    15b0:	1f 90       	pop	r1
    15b2:	18 95       	reti

000015b4 <__vector_53>:
 *
 * This function will handle interrupt on Timer Counter E1 overflow and
 * call the callback function.
 */
ISR(TCE1_OVF_vect)
{
    15b4:	1f 92       	push	r1
    15b6:	0f 92       	push	r0
    15b8:	0f b6       	in	r0, 0x3f	; 63
    15ba:	0f 92       	push	r0
    15bc:	11 24       	eor	r1, r1
    15be:	08 b6       	in	r0, 0x38	; 56
    15c0:	0f 92       	push	r0
    15c2:	18 be       	out	0x38, r1	; 56
    15c4:	09 b6       	in	r0, 0x39	; 57
    15c6:	0f 92       	push	r0
    15c8:	19 be       	out	0x39, r1	; 57
    15ca:	0b b6       	in	r0, 0x3b	; 59
    15cc:	0f 92       	push	r0
    15ce:	1b be       	out	0x3b, r1	; 59
    15d0:	2f 93       	push	r18
    15d2:	3f 93       	push	r19
    15d4:	4f 93       	push	r20
    15d6:	5f 93       	push	r21
    15d8:	6f 93       	push	r22
    15da:	7f 93       	push	r23
    15dc:	8f 93       	push	r24
    15de:	9f 93       	push	r25
    15e0:	af 93       	push	r26
    15e2:	bf 93       	push	r27
    15e4:	ef 93       	push	r30
    15e6:	ff 93       	push	r31
	if (tc_tce1_ovf_callback) {
    15e8:	e0 91 68 20 	lds	r30, 0x2068
    15ec:	f0 91 69 20 	lds	r31, 0x2069
    15f0:	30 97       	sbiw	r30, 0x00	; 0
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <__vector_53+0x42>
		tc_tce1_ovf_callback();
    15f4:	19 95       	eicall
	}
}
    15f6:	ff 91       	pop	r31
    15f8:	ef 91       	pop	r30
    15fa:	bf 91       	pop	r27
    15fc:	af 91       	pop	r26
    15fe:	9f 91       	pop	r25
    1600:	8f 91       	pop	r24
    1602:	7f 91       	pop	r23
    1604:	6f 91       	pop	r22
    1606:	5f 91       	pop	r21
    1608:	4f 91       	pop	r20
    160a:	3f 91       	pop	r19
    160c:	2f 91       	pop	r18
    160e:	0f 90       	pop	r0
    1610:	0b be       	out	0x3b, r0	; 59
    1612:	0f 90       	pop	r0
    1614:	09 be       	out	0x39, r0	; 57
    1616:	0f 90       	pop	r0
    1618:	08 be       	out	0x38, r0	; 56
    161a:	0f 90       	pop	r0
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	0f 90       	pop	r0
    1620:	1f 90       	pop	r1
    1622:	18 95       	reti

00001624 <__vector_54>:
 *
 * This function will handle interrupt on Timer Counter E1 error and
 * call the callback function.
 */
ISR(TCE1_ERR_vect)
{
    1624:	1f 92       	push	r1
    1626:	0f 92       	push	r0
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	0f 92       	push	r0
    162c:	11 24       	eor	r1, r1
    162e:	08 b6       	in	r0, 0x38	; 56
    1630:	0f 92       	push	r0
    1632:	18 be       	out	0x38, r1	; 56
    1634:	09 b6       	in	r0, 0x39	; 57
    1636:	0f 92       	push	r0
    1638:	19 be       	out	0x39, r1	; 57
    163a:	0b b6       	in	r0, 0x3b	; 59
    163c:	0f 92       	push	r0
    163e:	1b be       	out	0x3b, r1	; 59
    1640:	2f 93       	push	r18
    1642:	3f 93       	push	r19
    1644:	4f 93       	push	r20
    1646:	5f 93       	push	r21
    1648:	6f 93       	push	r22
    164a:	7f 93       	push	r23
    164c:	8f 93       	push	r24
    164e:	9f 93       	push	r25
    1650:	af 93       	push	r26
    1652:	bf 93       	push	r27
    1654:	ef 93       	push	r30
    1656:	ff 93       	push	r31
	if (tc_tce1_err_callback) {
    1658:	e0 91 66 20 	lds	r30, 0x2066
    165c:	f0 91 67 20 	lds	r31, 0x2067
    1660:	30 97       	sbiw	r30, 0x00	; 0
    1662:	09 f0       	breq	.+2      	; 0x1666 <__vector_54+0x42>
		tc_tce1_err_callback();
    1664:	19 95       	eicall
	}
}
    1666:	ff 91       	pop	r31
    1668:	ef 91       	pop	r30
    166a:	bf 91       	pop	r27
    166c:	af 91       	pop	r26
    166e:	9f 91       	pop	r25
    1670:	8f 91       	pop	r24
    1672:	7f 91       	pop	r23
    1674:	6f 91       	pop	r22
    1676:	5f 91       	pop	r21
    1678:	4f 91       	pop	r20
    167a:	3f 91       	pop	r19
    167c:	2f 91       	pop	r18
    167e:	0f 90       	pop	r0
    1680:	0b be       	out	0x3b, r0	; 59
    1682:	0f 90       	pop	r0
    1684:	09 be       	out	0x39, r0	; 57
    1686:	0f 90       	pop	r0
    1688:	08 be       	out	0x38, r0	; 56
    168a:	0f 90       	pop	r0
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	0f 90       	pop	r0
    1690:	1f 90       	pop	r1
    1692:	18 95       	reti

00001694 <__vector_55>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCE1_CCA_vect)
{
    1694:	1f 92       	push	r1
    1696:	0f 92       	push	r0
    1698:	0f b6       	in	r0, 0x3f	; 63
    169a:	0f 92       	push	r0
    169c:	11 24       	eor	r1, r1
    169e:	08 b6       	in	r0, 0x38	; 56
    16a0:	0f 92       	push	r0
    16a2:	18 be       	out	0x38, r1	; 56
    16a4:	09 b6       	in	r0, 0x39	; 57
    16a6:	0f 92       	push	r0
    16a8:	19 be       	out	0x39, r1	; 57
    16aa:	0b b6       	in	r0, 0x3b	; 59
    16ac:	0f 92       	push	r0
    16ae:	1b be       	out	0x3b, r1	; 59
    16b0:	2f 93       	push	r18
    16b2:	3f 93       	push	r19
    16b4:	4f 93       	push	r20
    16b6:	5f 93       	push	r21
    16b8:	6f 93       	push	r22
    16ba:	7f 93       	push	r23
    16bc:	8f 93       	push	r24
    16be:	9f 93       	push	r25
    16c0:	af 93       	push	r26
    16c2:	bf 93       	push	r27
    16c4:	ef 93       	push	r30
    16c6:	ff 93       	push	r31
	if (tc_tce1_cca_callback) {
    16c8:	e0 91 64 20 	lds	r30, 0x2064
    16cc:	f0 91 65 20 	lds	r31, 0x2065
    16d0:	30 97       	sbiw	r30, 0x00	; 0
    16d2:	09 f0       	breq	.+2      	; 0x16d6 <__vector_55+0x42>
		tc_tce1_cca_callback();
    16d4:	19 95       	eicall
	}
}
    16d6:	ff 91       	pop	r31
    16d8:	ef 91       	pop	r30
    16da:	bf 91       	pop	r27
    16dc:	af 91       	pop	r26
    16de:	9f 91       	pop	r25
    16e0:	8f 91       	pop	r24
    16e2:	7f 91       	pop	r23
    16e4:	6f 91       	pop	r22
    16e6:	5f 91       	pop	r21
    16e8:	4f 91       	pop	r20
    16ea:	3f 91       	pop	r19
    16ec:	2f 91       	pop	r18
    16ee:	0f 90       	pop	r0
    16f0:	0b be       	out	0x3b, r0	; 59
    16f2:	0f 90       	pop	r0
    16f4:	09 be       	out	0x39, r0	; 57
    16f6:	0f 90       	pop	r0
    16f8:	08 be       	out	0x38, r0	; 56
    16fa:	0f 90       	pop	r0
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	0f 90       	pop	r0
    1700:	1f 90       	pop	r1
    1702:	18 95       	reti

00001704 <__vector_56>:
 *
 * This function will handle interrupt on Timer Counter E1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCE1_CCB_vect)
{
    1704:	1f 92       	push	r1
    1706:	0f 92       	push	r0
    1708:	0f b6       	in	r0, 0x3f	; 63
    170a:	0f 92       	push	r0
    170c:	11 24       	eor	r1, r1
    170e:	08 b6       	in	r0, 0x38	; 56
    1710:	0f 92       	push	r0
    1712:	18 be       	out	0x38, r1	; 56
    1714:	09 b6       	in	r0, 0x39	; 57
    1716:	0f 92       	push	r0
    1718:	19 be       	out	0x39, r1	; 57
    171a:	0b b6       	in	r0, 0x3b	; 59
    171c:	0f 92       	push	r0
    171e:	1b be       	out	0x3b, r1	; 59
    1720:	2f 93       	push	r18
    1722:	3f 93       	push	r19
    1724:	4f 93       	push	r20
    1726:	5f 93       	push	r21
    1728:	6f 93       	push	r22
    172a:	7f 93       	push	r23
    172c:	8f 93       	push	r24
    172e:	9f 93       	push	r25
    1730:	af 93       	push	r26
    1732:	bf 93       	push	r27
    1734:	ef 93       	push	r30
    1736:	ff 93       	push	r31
	if (tc_tce1_ccb_callback) {
    1738:	e0 91 62 20 	lds	r30, 0x2062
    173c:	f0 91 63 20 	lds	r31, 0x2063
    1740:	30 97       	sbiw	r30, 0x00	; 0
    1742:	09 f0       	breq	.+2      	; 0x1746 <__vector_56+0x42>
		tc_tce1_ccb_callback();
    1744:	19 95       	eicall
	}
}
    1746:	ff 91       	pop	r31
    1748:	ef 91       	pop	r30
    174a:	bf 91       	pop	r27
    174c:	af 91       	pop	r26
    174e:	9f 91       	pop	r25
    1750:	8f 91       	pop	r24
    1752:	7f 91       	pop	r23
    1754:	6f 91       	pop	r22
    1756:	5f 91       	pop	r21
    1758:	4f 91       	pop	r20
    175a:	3f 91       	pop	r19
    175c:	2f 91       	pop	r18
    175e:	0f 90       	pop	r0
    1760:	0b be       	out	0x3b, r0	; 59
    1762:	0f 90       	pop	r0
    1764:	09 be       	out	0x39, r0	; 57
    1766:	0f 90       	pop	r0
    1768:	08 be       	out	0x38, r0	; 56
    176a:	0f 90       	pop	r0
    176c:	0f be       	out	0x3f, r0	; 63
    176e:	0f 90       	pop	r0
    1770:	1f 90       	pop	r1
    1772:	18 95       	reti

00001774 <__vector_108>:
 *
 * This function will handle interrupt on Timer Counter F0 overflow and
 * call the callback function.
 */
ISR(TCF0_OVF_vect)
{
    1774:	1f 92       	push	r1
    1776:	0f 92       	push	r0
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	0f 92       	push	r0
    177c:	11 24       	eor	r1, r1
    177e:	08 b6       	in	r0, 0x38	; 56
    1780:	0f 92       	push	r0
    1782:	18 be       	out	0x38, r1	; 56
    1784:	09 b6       	in	r0, 0x39	; 57
    1786:	0f 92       	push	r0
    1788:	19 be       	out	0x39, r1	; 57
    178a:	0b b6       	in	r0, 0x3b	; 59
    178c:	0f 92       	push	r0
    178e:	1b be       	out	0x3b, r1	; 59
    1790:	2f 93       	push	r18
    1792:	3f 93       	push	r19
    1794:	4f 93       	push	r20
    1796:	5f 93       	push	r21
    1798:	6f 93       	push	r22
    179a:	7f 93       	push	r23
    179c:	8f 93       	push	r24
    179e:	9f 93       	push	r25
    17a0:	af 93       	push	r26
    17a2:	bf 93       	push	r27
    17a4:	ef 93       	push	r30
    17a6:	ff 93       	push	r31
	if (tc_tcf0_ovf_callback) {
    17a8:	e0 91 60 20 	lds	r30, 0x2060
    17ac:	f0 91 61 20 	lds	r31, 0x2061
    17b0:	30 97       	sbiw	r30, 0x00	; 0
    17b2:	09 f0       	breq	.+2      	; 0x17b6 <__vector_108+0x42>
		tc_tcf0_ovf_callback();
    17b4:	19 95       	eicall
	}
}
    17b6:	ff 91       	pop	r31
    17b8:	ef 91       	pop	r30
    17ba:	bf 91       	pop	r27
    17bc:	af 91       	pop	r26
    17be:	9f 91       	pop	r25
    17c0:	8f 91       	pop	r24
    17c2:	7f 91       	pop	r23
    17c4:	6f 91       	pop	r22
    17c6:	5f 91       	pop	r21
    17c8:	4f 91       	pop	r20
    17ca:	3f 91       	pop	r19
    17cc:	2f 91       	pop	r18
    17ce:	0f 90       	pop	r0
    17d0:	0b be       	out	0x3b, r0	; 59
    17d2:	0f 90       	pop	r0
    17d4:	09 be       	out	0x39, r0	; 57
    17d6:	0f 90       	pop	r0
    17d8:	08 be       	out	0x38, r0	; 56
    17da:	0f 90       	pop	r0
    17dc:	0f be       	out	0x3f, r0	; 63
    17de:	0f 90       	pop	r0
    17e0:	1f 90       	pop	r1
    17e2:	18 95       	reti

000017e4 <__vector_109>:
 *
 * This function will handle interrupt on Timer Counter F0 error and
 * call the callback function.
 */
ISR(TCF0_ERR_vect)
{
    17e4:	1f 92       	push	r1
    17e6:	0f 92       	push	r0
    17e8:	0f b6       	in	r0, 0x3f	; 63
    17ea:	0f 92       	push	r0
    17ec:	11 24       	eor	r1, r1
    17ee:	08 b6       	in	r0, 0x38	; 56
    17f0:	0f 92       	push	r0
    17f2:	18 be       	out	0x38, r1	; 56
    17f4:	09 b6       	in	r0, 0x39	; 57
    17f6:	0f 92       	push	r0
    17f8:	19 be       	out	0x39, r1	; 57
    17fa:	0b b6       	in	r0, 0x3b	; 59
    17fc:	0f 92       	push	r0
    17fe:	1b be       	out	0x3b, r1	; 59
    1800:	2f 93       	push	r18
    1802:	3f 93       	push	r19
    1804:	4f 93       	push	r20
    1806:	5f 93       	push	r21
    1808:	6f 93       	push	r22
    180a:	7f 93       	push	r23
    180c:	8f 93       	push	r24
    180e:	9f 93       	push	r25
    1810:	af 93       	push	r26
    1812:	bf 93       	push	r27
    1814:	ef 93       	push	r30
    1816:	ff 93       	push	r31
	if (tc_tcf0_err_callback) {
    1818:	e0 91 5e 20 	lds	r30, 0x205E
    181c:	f0 91 5f 20 	lds	r31, 0x205F
    1820:	30 97       	sbiw	r30, 0x00	; 0
    1822:	09 f0       	breq	.+2      	; 0x1826 <__vector_109+0x42>
		tc_tcf0_err_callback();
    1824:	19 95       	eicall
	}
}
    1826:	ff 91       	pop	r31
    1828:	ef 91       	pop	r30
    182a:	bf 91       	pop	r27
    182c:	af 91       	pop	r26
    182e:	9f 91       	pop	r25
    1830:	8f 91       	pop	r24
    1832:	7f 91       	pop	r23
    1834:	6f 91       	pop	r22
    1836:	5f 91       	pop	r21
    1838:	4f 91       	pop	r20
    183a:	3f 91       	pop	r19
    183c:	2f 91       	pop	r18
    183e:	0f 90       	pop	r0
    1840:	0b be       	out	0x3b, r0	; 59
    1842:	0f 90       	pop	r0
    1844:	09 be       	out	0x39, r0	; 57
    1846:	0f 90       	pop	r0
    1848:	08 be       	out	0x38, r0	; 56
    184a:	0f 90       	pop	r0
    184c:	0f be       	out	0x3f, r0	; 63
    184e:	0f 90       	pop	r0
    1850:	1f 90       	pop	r1
    1852:	18 95       	reti

00001854 <__vector_110>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF0_CCA_vect)
{
    1854:	1f 92       	push	r1
    1856:	0f 92       	push	r0
    1858:	0f b6       	in	r0, 0x3f	; 63
    185a:	0f 92       	push	r0
    185c:	11 24       	eor	r1, r1
    185e:	08 b6       	in	r0, 0x38	; 56
    1860:	0f 92       	push	r0
    1862:	18 be       	out	0x38, r1	; 56
    1864:	09 b6       	in	r0, 0x39	; 57
    1866:	0f 92       	push	r0
    1868:	19 be       	out	0x39, r1	; 57
    186a:	0b b6       	in	r0, 0x3b	; 59
    186c:	0f 92       	push	r0
    186e:	1b be       	out	0x3b, r1	; 59
    1870:	2f 93       	push	r18
    1872:	3f 93       	push	r19
    1874:	4f 93       	push	r20
    1876:	5f 93       	push	r21
    1878:	6f 93       	push	r22
    187a:	7f 93       	push	r23
    187c:	8f 93       	push	r24
    187e:	9f 93       	push	r25
    1880:	af 93       	push	r26
    1882:	bf 93       	push	r27
    1884:	ef 93       	push	r30
    1886:	ff 93       	push	r31
	if (tc_tcf0_cca_callback) {
    1888:	e0 91 5c 20 	lds	r30, 0x205C
    188c:	f0 91 5d 20 	lds	r31, 0x205D
    1890:	30 97       	sbiw	r30, 0x00	; 0
    1892:	09 f0       	breq	.+2      	; 0x1896 <__vector_110+0x42>
		tc_tcf0_cca_callback();
    1894:	19 95       	eicall
	}
}
    1896:	ff 91       	pop	r31
    1898:	ef 91       	pop	r30
    189a:	bf 91       	pop	r27
    189c:	af 91       	pop	r26
    189e:	9f 91       	pop	r25
    18a0:	8f 91       	pop	r24
    18a2:	7f 91       	pop	r23
    18a4:	6f 91       	pop	r22
    18a6:	5f 91       	pop	r21
    18a8:	4f 91       	pop	r20
    18aa:	3f 91       	pop	r19
    18ac:	2f 91       	pop	r18
    18ae:	0f 90       	pop	r0
    18b0:	0b be       	out	0x3b, r0	; 59
    18b2:	0f 90       	pop	r0
    18b4:	09 be       	out	0x39, r0	; 57
    18b6:	0f 90       	pop	r0
    18b8:	08 be       	out	0x38, r0	; 56
    18ba:	0f 90       	pop	r0
    18bc:	0f be       	out	0x3f, r0	; 63
    18be:	0f 90       	pop	r0
    18c0:	1f 90       	pop	r1
    18c2:	18 95       	reti

000018c4 <__vector_111>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF0_CCB_vect)
{
    18c4:	1f 92       	push	r1
    18c6:	0f 92       	push	r0
    18c8:	0f b6       	in	r0, 0x3f	; 63
    18ca:	0f 92       	push	r0
    18cc:	11 24       	eor	r1, r1
    18ce:	08 b6       	in	r0, 0x38	; 56
    18d0:	0f 92       	push	r0
    18d2:	18 be       	out	0x38, r1	; 56
    18d4:	09 b6       	in	r0, 0x39	; 57
    18d6:	0f 92       	push	r0
    18d8:	19 be       	out	0x39, r1	; 57
    18da:	0b b6       	in	r0, 0x3b	; 59
    18dc:	0f 92       	push	r0
    18de:	1b be       	out	0x3b, r1	; 59
    18e0:	2f 93       	push	r18
    18e2:	3f 93       	push	r19
    18e4:	4f 93       	push	r20
    18e6:	5f 93       	push	r21
    18e8:	6f 93       	push	r22
    18ea:	7f 93       	push	r23
    18ec:	8f 93       	push	r24
    18ee:	9f 93       	push	r25
    18f0:	af 93       	push	r26
    18f2:	bf 93       	push	r27
    18f4:	ef 93       	push	r30
    18f6:	ff 93       	push	r31
	if (tc_tcf0_ccb_callback) {
    18f8:	e0 91 5a 20 	lds	r30, 0x205A
    18fc:	f0 91 5b 20 	lds	r31, 0x205B
    1900:	30 97       	sbiw	r30, 0x00	; 0
    1902:	09 f0       	breq	.+2      	; 0x1906 <__vector_111+0x42>
		tc_tcf0_ccb_callback();
    1904:	19 95       	eicall
	}
}
    1906:	ff 91       	pop	r31
    1908:	ef 91       	pop	r30
    190a:	bf 91       	pop	r27
    190c:	af 91       	pop	r26
    190e:	9f 91       	pop	r25
    1910:	8f 91       	pop	r24
    1912:	7f 91       	pop	r23
    1914:	6f 91       	pop	r22
    1916:	5f 91       	pop	r21
    1918:	4f 91       	pop	r20
    191a:	3f 91       	pop	r19
    191c:	2f 91       	pop	r18
    191e:	0f 90       	pop	r0
    1920:	0b be       	out	0x3b, r0	; 59
    1922:	0f 90       	pop	r0
    1924:	09 be       	out	0x39, r0	; 57
    1926:	0f 90       	pop	r0
    1928:	08 be       	out	0x38, r0	; 56
    192a:	0f 90       	pop	r0
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	0f 90       	pop	r0
    1930:	1f 90       	pop	r1
    1932:	18 95       	reti

00001934 <__vector_112>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureC and
 * call the callback function.
 */
ISR(TCF0_CCC_vect)
{
    1934:	1f 92       	push	r1
    1936:	0f 92       	push	r0
    1938:	0f b6       	in	r0, 0x3f	; 63
    193a:	0f 92       	push	r0
    193c:	11 24       	eor	r1, r1
    193e:	08 b6       	in	r0, 0x38	; 56
    1940:	0f 92       	push	r0
    1942:	18 be       	out	0x38, r1	; 56
    1944:	09 b6       	in	r0, 0x39	; 57
    1946:	0f 92       	push	r0
    1948:	19 be       	out	0x39, r1	; 57
    194a:	0b b6       	in	r0, 0x3b	; 59
    194c:	0f 92       	push	r0
    194e:	1b be       	out	0x3b, r1	; 59
    1950:	2f 93       	push	r18
    1952:	3f 93       	push	r19
    1954:	4f 93       	push	r20
    1956:	5f 93       	push	r21
    1958:	6f 93       	push	r22
    195a:	7f 93       	push	r23
    195c:	8f 93       	push	r24
    195e:	9f 93       	push	r25
    1960:	af 93       	push	r26
    1962:	bf 93       	push	r27
    1964:	ef 93       	push	r30
    1966:	ff 93       	push	r31
	if (tc_tcf0_ccc_callback) {
    1968:	e0 91 58 20 	lds	r30, 0x2058
    196c:	f0 91 59 20 	lds	r31, 0x2059
    1970:	30 97       	sbiw	r30, 0x00	; 0
    1972:	09 f0       	breq	.+2      	; 0x1976 <__vector_112+0x42>
		tc_tcf0_ccc_callback();
    1974:	19 95       	eicall
	}
}
    1976:	ff 91       	pop	r31
    1978:	ef 91       	pop	r30
    197a:	bf 91       	pop	r27
    197c:	af 91       	pop	r26
    197e:	9f 91       	pop	r25
    1980:	8f 91       	pop	r24
    1982:	7f 91       	pop	r23
    1984:	6f 91       	pop	r22
    1986:	5f 91       	pop	r21
    1988:	4f 91       	pop	r20
    198a:	3f 91       	pop	r19
    198c:	2f 91       	pop	r18
    198e:	0f 90       	pop	r0
    1990:	0b be       	out	0x3b, r0	; 59
    1992:	0f 90       	pop	r0
    1994:	09 be       	out	0x39, r0	; 57
    1996:	0f 90       	pop	r0
    1998:	08 be       	out	0x38, r0	; 56
    199a:	0f 90       	pop	r0
    199c:	0f be       	out	0x3f, r0	; 63
    199e:	0f 90       	pop	r0
    19a0:	1f 90       	pop	r1
    19a2:	18 95       	reti

000019a4 <__vector_113>:
 *
 * This function will handle interrupt on Timer Counter F0 Compare/CaptureD and
 * call the callback function.
 */
ISR(TCF0_CCD_vect)
{
    19a4:	1f 92       	push	r1
    19a6:	0f 92       	push	r0
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	0f 92       	push	r0
    19ac:	11 24       	eor	r1, r1
    19ae:	08 b6       	in	r0, 0x38	; 56
    19b0:	0f 92       	push	r0
    19b2:	18 be       	out	0x38, r1	; 56
    19b4:	09 b6       	in	r0, 0x39	; 57
    19b6:	0f 92       	push	r0
    19b8:	19 be       	out	0x39, r1	; 57
    19ba:	0b b6       	in	r0, 0x3b	; 59
    19bc:	0f 92       	push	r0
    19be:	1b be       	out	0x3b, r1	; 59
    19c0:	2f 93       	push	r18
    19c2:	3f 93       	push	r19
    19c4:	4f 93       	push	r20
    19c6:	5f 93       	push	r21
    19c8:	6f 93       	push	r22
    19ca:	7f 93       	push	r23
    19cc:	8f 93       	push	r24
    19ce:	9f 93       	push	r25
    19d0:	af 93       	push	r26
    19d2:	bf 93       	push	r27
    19d4:	ef 93       	push	r30
    19d6:	ff 93       	push	r31
	if (tc_tcf0_ccd_callback) {
    19d8:	e0 91 56 20 	lds	r30, 0x2056
    19dc:	f0 91 57 20 	lds	r31, 0x2057
    19e0:	30 97       	sbiw	r30, 0x00	; 0
    19e2:	09 f0       	breq	.+2      	; 0x19e6 <__vector_113+0x42>
		tc_tcf0_ccd_callback();
    19e4:	19 95       	eicall
	}
}
    19e6:	ff 91       	pop	r31
    19e8:	ef 91       	pop	r30
    19ea:	bf 91       	pop	r27
    19ec:	af 91       	pop	r26
    19ee:	9f 91       	pop	r25
    19f0:	8f 91       	pop	r24
    19f2:	7f 91       	pop	r23
    19f4:	6f 91       	pop	r22
    19f6:	5f 91       	pop	r21
    19f8:	4f 91       	pop	r20
    19fa:	3f 91       	pop	r19
    19fc:	2f 91       	pop	r18
    19fe:	0f 90       	pop	r0
    1a00:	0b be       	out	0x3b, r0	; 59
    1a02:	0f 90       	pop	r0
    1a04:	09 be       	out	0x39, r0	; 57
    1a06:	0f 90       	pop	r0
    1a08:	08 be       	out	0x38, r0	; 56
    1a0a:	0f 90       	pop	r0
    1a0c:	0f be       	out	0x3f, r0	; 63
    1a0e:	0f 90       	pop	r0
    1a10:	1f 90       	pop	r1
    1a12:	18 95       	reti

00001a14 <__vector_114>:
 *
 * This function will handle interrupt on Timer Counter F1 overflow and
 * call the callback function.
 */
ISR(TCF1_OVF_vect)
{
    1a14:	1f 92       	push	r1
    1a16:	0f 92       	push	r0
    1a18:	0f b6       	in	r0, 0x3f	; 63
    1a1a:	0f 92       	push	r0
    1a1c:	11 24       	eor	r1, r1
    1a1e:	08 b6       	in	r0, 0x38	; 56
    1a20:	0f 92       	push	r0
    1a22:	18 be       	out	0x38, r1	; 56
    1a24:	09 b6       	in	r0, 0x39	; 57
    1a26:	0f 92       	push	r0
    1a28:	19 be       	out	0x39, r1	; 57
    1a2a:	0b b6       	in	r0, 0x3b	; 59
    1a2c:	0f 92       	push	r0
    1a2e:	1b be       	out	0x3b, r1	; 59
    1a30:	2f 93       	push	r18
    1a32:	3f 93       	push	r19
    1a34:	4f 93       	push	r20
    1a36:	5f 93       	push	r21
    1a38:	6f 93       	push	r22
    1a3a:	7f 93       	push	r23
    1a3c:	8f 93       	push	r24
    1a3e:	9f 93       	push	r25
    1a40:	af 93       	push	r26
    1a42:	bf 93       	push	r27
    1a44:	ef 93       	push	r30
    1a46:	ff 93       	push	r31
	if (tc_tcf1_ovf_callback) {
    1a48:	e0 91 54 20 	lds	r30, 0x2054
    1a4c:	f0 91 55 20 	lds	r31, 0x2055
    1a50:	30 97       	sbiw	r30, 0x00	; 0
    1a52:	09 f0       	breq	.+2      	; 0x1a56 <__vector_114+0x42>
		tc_tcf1_ovf_callback();
    1a54:	19 95       	eicall
	}
}
    1a56:	ff 91       	pop	r31
    1a58:	ef 91       	pop	r30
    1a5a:	bf 91       	pop	r27
    1a5c:	af 91       	pop	r26
    1a5e:	9f 91       	pop	r25
    1a60:	8f 91       	pop	r24
    1a62:	7f 91       	pop	r23
    1a64:	6f 91       	pop	r22
    1a66:	5f 91       	pop	r21
    1a68:	4f 91       	pop	r20
    1a6a:	3f 91       	pop	r19
    1a6c:	2f 91       	pop	r18
    1a6e:	0f 90       	pop	r0
    1a70:	0b be       	out	0x3b, r0	; 59
    1a72:	0f 90       	pop	r0
    1a74:	09 be       	out	0x39, r0	; 57
    1a76:	0f 90       	pop	r0
    1a78:	08 be       	out	0x38, r0	; 56
    1a7a:	0f 90       	pop	r0
    1a7c:	0f be       	out	0x3f, r0	; 63
    1a7e:	0f 90       	pop	r0
    1a80:	1f 90       	pop	r1
    1a82:	18 95       	reti

00001a84 <__vector_115>:
 *
 * This function will handle interrupt on Timer Counter F1 error and
 * call the callback function.
 */
ISR(TCF1_ERR_vect)
{
    1a84:	1f 92       	push	r1
    1a86:	0f 92       	push	r0
    1a88:	0f b6       	in	r0, 0x3f	; 63
    1a8a:	0f 92       	push	r0
    1a8c:	11 24       	eor	r1, r1
    1a8e:	08 b6       	in	r0, 0x38	; 56
    1a90:	0f 92       	push	r0
    1a92:	18 be       	out	0x38, r1	; 56
    1a94:	09 b6       	in	r0, 0x39	; 57
    1a96:	0f 92       	push	r0
    1a98:	19 be       	out	0x39, r1	; 57
    1a9a:	0b b6       	in	r0, 0x3b	; 59
    1a9c:	0f 92       	push	r0
    1a9e:	1b be       	out	0x3b, r1	; 59
    1aa0:	2f 93       	push	r18
    1aa2:	3f 93       	push	r19
    1aa4:	4f 93       	push	r20
    1aa6:	5f 93       	push	r21
    1aa8:	6f 93       	push	r22
    1aaa:	7f 93       	push	r23
    1aac:	8f 93       	push	r24
    1aae:	9f 93       	push	r25
    1ab0:	af 93       	push	r26
    1ab2:	bf 93       	push	r27
    1ab4:	ef 93       	push	r30
    1ab6:	ff 93       	push	r31
	if (tc_tcf1_err_callback) {
    1ab8:	e0 91 52 20 	lds	r30, 0x2052
    1abc:	f0 91 53 20 	lds	r31, 0x2053
    1ac0:	30 97       	sbiw	r30, 0x00	; 0
    1ac2:	09 f0       	breq	.+2      	; 0x1ac6 <__vector_115+0x42>
		tc_tcf1_err_callback();
    1ac4:	19 95       	eicall
	}
}
    1ac6:	ff 91       	pop	r31
    1ac8:	ef 91       	pop	r30
    1aca:	bf 91       	pop	r27
    1acc:	af 91       	pop	r26
    1ace:	9f 91       	pop	r25
    1ad0:	8f 91       	pop	r24
    1ad2:	7f 91       	pop	r23
    1ad4:	6f 91       	pop	r22
    1ad6:	5f 91       	pop	r21
    1ad8:	4f 91       	pop	r20
    1ada:	3f 91       	pop	r19
    1adc:	2f 91       	pop	r18
    1ade:	0f 90       	pop	r0
    1ae0:	0b be       	out	0x3b, r0	; 59
    1ae2:	0f 90       	pop	r0
    1ae4:	09 be       	out	0x39, r0	; 57
    1ae6:	0f 90       	pop	r0
    1ae8:	08 be       	out	0x38, r0	; 56
    1aea:	0f 90       	pop	r0
    1aec:	0f be       	out	0x3f, r0	; 63
    1aee:	0f 90       	pop	r0
    1af0:	1f 90       	pop	r1
    1af2:	18 95       	reti

00001af4 <__vector_116>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureA and
 * call the callback function.
 */
ISR(TCF1_CCA_vect)
{
    1af4:	1f 92       	push	r1
    1af6:	0f 92       	push	r0
    1af8:	0f b6       	in	r0, 0x3f	; 63
    1afa:	0f 92       	push	r0
    1afc:	11 24       	eor	r1, r1
    1afe:	08 b6       	in	r0, 0x38	; 56
    1b00:	0f 92       	push	r0
    1b02:	18 be       	out	0x38, r1	; 56
    1b04:	09 b6       	in	r0, 0x39	; 57
    1b06:	0f 92       	push	r0
    1b08:	19 be       	out	0x39, r1	; 57
    1b0a:	0b b6       	in	r0, 0x3b	; 59
    1b0c:	0f 92       	push	r0
    1b0e:	1b be       	out	0x3b, r1	; 59
    1b10:	2f 93       	push	r18
    1b12:	3f 93       	push	r19
    1b14:	4f 93       	push	r20
    1b16:	5f 93       	push	r21
    1b18:	6f 93       	push	r22
    1b1a:	7f 93       	push	r23
    1b1c:	8f 93       	push	r24
    1b1e:	9f 93       	push	r25
    1b20:	af 93       	push	r26
    1b22:	bf 93       	push	r27
    1b24:	ef 93       	push	r30
    1b26:	ff 93       	push	r31
	if (tc_tcf1_cca_callback) {
    1b28:	e0 91 50 20 	lds	r30, 0x2050
    1b2c:	f0 91 51 20 	lds	r31, 0x2051
    1b30:	30 97       	sbiw	r30, 0x00	; 0
    1b32:	09 f0       	breq	.+2      	; 0x1b36 <__vector_116+0x42>
		tc_tcf1_cca_callback();
    1b34:	19 95       	eicall
	}
}
    1b36:	ff 91       	pop	r31
    1b38:	ef 91       	pop	r30
    1b3a:	bf 91       	pop	r27
    1b3c:	af 91       	pop	r26
    1b3e:	9f 91       	pop	r25
    1b40:	8f 91       	pop	r24
    1b42:	7f 91       	pop	r23
    1b44:	6f 91       	pop	r22
    1b46:	5f 91       	pop	r21
    1b48:	4f 91       	pop	r20
    1b4a:	3f 91       	pop	r19
    1b4c:	2f 91       	pop	r18
    1b4e:	0f 90       	pop	r0
    1b50:	0b be       	out	0x3b, r0	; 59
    1b52:	0f 90       	pop	r0
    1b54:	09 be       	out	0x39, r0	; 57
    1b56:	0f 90       	pop	r0
    1b58:	08 be       	out	0x38, r0	; 56
    1b5a:	0f 90       	pop	r0
    1b5c:	0f be       	out	0x3f, r0	; 63
    1b5e:	0f 90       	pop	r0
    1b60:	1f 90       	pop	r1
    1b62:	18 95       	reti

00001b64 <__vector_117>:
 *
 * This function will handle interrupt on Timer Counter F1 Compare/CaptureB and
 * call the callback function.
 */
ISR(TCF1_CCB_vect)
{
    1b64:	1f 92       	push	r1
    1b66:	0f 92       	push	r0
    1b68:	0f b6       	in	r0, 0x3f	; 63
    1b6a:	0f 92       	push	r0
    1b6c:	11 24       	eor	r1, r1
    1b6e:	08 b6       	in	r0, 0x38	; 56
    1b70:	0f 92       	push	r0
    1b72:	18 be       	out	0x38, r1	; 56
    1b74:	09 b6       	in	r0, 0x39	; 57
    1b76:	0f 92       	push	r0
    1b78:	19 be       	out	0x39, r1	; 57
    1b7a:	0b b6       	in	r0, 0x3b	; 59
    1b7c:	0f 92       	push	r0
    1b7e:	1b be       	out	0x3b, r1	; 59
    1b80:	2f 93       	push	r18
    1b82:	3f 93       	push	r19
    1b84:	4f 93       	push	r20
    1b86:	5f 93       	push	r21
    1b88:	6f 93       	push	r22
    1b8a:	7f 93       	push	r23
    1b8c:	8f 93       	push	r24
    1b8e:	9f 93       	push	r25
    1b90:	af 93       	push	r26
    1b92:	bf 93       	push	r27
    1b94:	ef 93       	push	r30
    1b96:	ff 93       	push	r31
	if (tc_tcf1_ccb_callback) {
    1b98:	e0 91 4e 20 	lds	r30, 0x204E
    1b9c:	f0 91 4f 20 	lds	r31, 0x204F
    1ba0:	30 97       	sbiw	r30, 0x00	; 0
    1ba2:	09 f0       	breq	.+2      	; 0x1ba6 <__vector_117+0x42>
		tc_tcf1_ccb_callback();
    1ba4:	19 95       	eicall
	}
}
    1ba6:	ff 91       	pop	r31
    1ba8:	ef 91       	pop	r30
    1baa:	bf 91       	pop	r27
    1bac:	af 91       	pop	r26
    1bae:	9f 91       	pop	r25
    1bb0:	8f 91       	pop	r24
    1bb2:	7f 91       	pop	r23
    1bb4:	6f 91       	pop	r22
    1bb6:	5f 91       	pop	r21
    1bb8:	4f 91       	pop	r20
    1bba:	3f 91       	pop	r19
    1bbc:	2f 91       	pop	r18
    1bbe:	0f 90       	pop	r0
    1bc0:	0b be       	out	0x3b, r0	; 59
    1bc2:	0f 90       	pop	r0
    1bc4:	09 be       	out	0x39, r0	; 57
    1bc6:	0f 90       	pop	r0
    1bc8:	08 be       	out	0x38, r0	; 56
    1bca:	0f 90       	pop	r0
    1bcc:	0f be       	out	0x3f, r0	; 63
    1bce:	0f 90       	pop	r0
    1bd0:	1f 90       	pop	r1
    1bd2:	18 95       	reti

00001bd4 <tc_enable>:
 *
 * \note
 * unmask TC clock (sysclk), but does not configure the TC clock source.
 */
void tc_enable(volatile void *tc)
{
    1bd4:	cf 93       	push	r28

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1bd6:	cf b7       	in	r28, 0x3f	; 63
	cpu_irq_disable();
    1bd8:	f8 94       	cli
	irqflags_t iflags = cpu_irq_save();

#ifdef TCC0
	if ((uintptr_t) tc == (uintptr_t) & TCC0) {
    1bda:	28 2f       	mov	r18, r24
    1bdc:	39 2f       	mov	r19, r25
    1bde:	21 15       	cp	r18, r1
    1be0:	88 e0       	ldi	r24, 0x08	; 8
    1be2:	38 07       	cpc	r19, r24
    1be4:	59 f4       	brne	.+22     	; 0x1bfc <tc_enable+0x28>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    1be6:	61 e0       	ldi	r22, 0x01	; 1
    1be8:	83 e0       	ldi	r24, 0x03	; 3
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1bf0:	64 e0       	ldi	r22, 0x04	; 4
    1bf2:	83 e0       	ldi	r24, 0x03	; 3
    1bf4:	90 e0       	ldi	r25, 0x00	; 0
    1bf6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1bfa:	6a c0       	rjmp	.+212    	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCC1
	if ((uintptr_t) tc == (uintptr_t) & TCC1) {
    1bfc:	20 34       	cpi	r18, 0x40	; 64
    1bfe:	88 e0       	ldi	r24, 0x08	; 8
    1c00:	38 07       	cpc	r19, r24
    1c02:	59 f4       	brne	.+22     	; 0x1c1a <tc_enable+0x46>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    1c04:	62 e0       	ldi	r22, 0x02	; 2
    1c06:	83 e0       	ldi	r24, 0x03	; 3
    1c08:	90 e0       	ldi	r25, 0x00	; 0
    1c0a:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1c0e:	64 e0       	ldi	r22, 0x04	; 4
    1c10:	83 e0       	ldi	r24, 0x03	; 3
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1c18:	5b c0       	rjmp	.+182    	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCD0
	if ((uintptr_t) tc == (uintptr_t) & TCD0) {
    1c1a:	21 15       	cp	r18, r1
    1c1c:	89 e0       	ldi	r24, 0x09	; 9
    1c1e:	38 07       	cpc	r19, r24
    1c20:	59 f4       	brne	.+22     	; 0x1c38 <tc_enable+0x64>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    1c22:	61 e0       	ldi	r22, 0x01	; 1
    1c24:	84 e0       	ldi	r24, 0x04	; 4
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c2c:	64 e0       	ldi	r22, 0x04	; 4
    1c2e:	84 e0       	ldi	r24, 0x04	; 4
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1c36:	4c c0       	rjmp	.+152    	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCD1
	if ((uintptr_t) tc == (uintptr_t) & TCD1) {
    1c38:	20 34       	cpi	r18, 0x40	; 64
    1c3a:	89 e0       	ldi	r24, 0x09	; 9
    1c3c:	38 07       	cpc	r19, r24
    1c3e:	59 f4       	brne	.+22     	; 0x1c56 <tc_enable+0x82>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    1c40:	62 e0       	ldi	r22, 0x02	; 2
    1c42:	84 e0       	ldi	r24, 0x04	; 4
    1c44:	90 e0       	ldi	r25, 0x00	; 0
    1c46:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1c4a:	64 e0       	ldi	r22, 0x04	; 4
    1c4c:	84 e0       	ldi	r24, 0x04	; 4
    1c4e:	90 e0       	ldi	r25, 0x00	; 0
    1c50:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1c54:	3d c0       	rjmp	.+122    	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCE0
	if ((uintptr_t) tc == (uintptr_t) & TCE0) {
    1c56:	21 15       	cp	r18, r1
    1c58:	8a e0       	ldi	r24, 0x0A	; 10
    1c5a:	38 07       	cpc	r19, r24
    1c5c:	59 f4       	brne	.+22     	; 0x1c74 <tc_enable+0xa0>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    1c5e:	61 e0       	ldi	r22, 0x01	; 1
    1c60:	85 e0       	ldi	r24, 0x05	; 5
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c68:	64 e0       	ldi	r22, 0x04	; 4
    1c6a:	85 e0       	ldi	r24, 0x05	; 5
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1c72:	2e c0       	rjmp	.+92     	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCE1
	if ((uintptr_t) tc == (uintptr_t) & TCE1) {
    1c74:	20 34       	cpi	r18, 0x40	; 64
    1c76:	8a e0       	ldi	r24, 0x0A	; 10
    1c78:	38 07       	cpc	r19, r24
    1c7a:	59 f4       	brne	.+22     	; 0x1c92 <tc_enable+0xbe>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    1c7c:	62 e0       	ldi	r22, 0x02	; 2
    1c7e:	85 e0       	ldi	r24, 0x05	; 5
    1c80:	90 e0       	ldi	r25, 0x00	; 0
    1c82:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1c86:	64 e0       	ldi	r22, 0x04	; 4
    1c88:	85 e0       	ldi	r24, 0x05	; 5
    1c8a:	90 e0       	ldi	r25, 0x00	; 0
    1c8c:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1c90:	1f c0       	rjmp	.+62     	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCF0
	if ((uintptr_t) tc == (uintptr_t) & TCF0) {
    1c92:	21 15       	cp	r18, r1
    1c94:	8b e0       	ldi	r24, 0x0B	; 11
    1c96:	38 07       	cpc	r19, r24
    1c98:	59 f4       	brne	.+22     	; 0x1cb0 <tc_enable+0xdc>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    1c9a:	61 e0       	ldi	r22, 0x01	; 1
    1c9c:	86 e0       	ldi	r24, 0x06	; 6
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1ca4:	64 e0       	ldi	r22, 0x04	; 4
    1ca6:	86 e0       	ldi	r24, 0x06	; 6
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1cae:	10 c0       	rjmp	.+32     	; 0x1cd0 <tc_enable+0xfc>
	} else
#endif
#ifdef TCF1
	if ((uintptr_t) tc == (uintptr_t) & TCF1) {
    1cb0:	20 34       	cpi	r18, 0x40	; 64
    1cb2:	3b 40       	sbci	r19, 0x0B	; 11
    1cb4:	59 f4       	brne	.+22     	; 0x1ccc <tc_enable+0xf8>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    1cb6:	62 e0       	ldi	r22, 0x02	; 2
    1cb8:	86 e0       	ldi	r24, 0x06	; 6
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1cc0:	64 e0       	ldi	r22, 0x04	; 4
    1cc2:	86 e0       	ldi	r24, 0x06	; 6
    1cc4:	90 e0       	ldi	r25, 0x00	; 0
    1cc6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <sysclk_enable_module>
    1cca:	02 c0       	rjmp	.+4      	; 0x1cd0 <tc_enable+0xfc>
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1ccc:	cf bf       	out	0x3f, r28	; 63
    1cce:	09 c0       	rjmp	.+18     	; 0x1ce2 <tc_enable+0x10e>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    1cd0:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    1cd2:	f8 94       	cli
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
    1cd4:	ef ea       	ldi	r30, 0xAF	; 175
    1cd6:	f0 e2       	ldi	r31, 0x20	; 32
    1cd8:	90 81       	ld	r25, Z
    1cda:	9f 5f       	subi	r25, 0xFF	; 255
    1cdc:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    1cde:	8f bf       	out	0x3f, r24	; 63
    1ce0:	cf bf       	out	0x3f, r28	; 63
		cpu_irq_restore(iflags);
		return;
	}
	sleepmgr_lock_mode(SLEEPMGR_IDLE);
	cpu_irq_restore(iflags);
}
    1ce2:	cf 91       	pop	r28
    1ce4:	08 95       	ret

00001ce6 <usart_putchar>:
	}
	if (baud_offset != USART_BAUD_UNDEFINED) {
		(usart)->BAUDCTRLB = (uint8_t)((uint16_t)baudctrl);
		(usart)->BAUDCTRLA = (uint8_t)((uint16_t)baudctrl >> 8);
	}
}
    1ce6:	fc 01       	movw	r30, r24
    1ce8:	81 81       	ldd	r24, Z+1	; 0x01
    1cea:	85 ff       	sbrs	r24, 5
    1cec:	fd cf       	rjmp	.-6      	; 0x1ce8 <usart_putchar+0x2>
    1cee:	60 83       	st	Z, r22
    1cf0:	80 e0       	ldi	r24, 0x00	; 0
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	08 95       	ret

00001cf6 <usart_set_baudrate>:
 * \retval true if the hardware supports the baud rate
 * \retval false if the hardware does not support the baud rate (i.e. it's
 *               either too high or too low.)
 */
bool usart_set_baudrate(USART_t *usart, uint32_t baud, uint32_t cpu_hz)
{
    1cf6:	4f 92       	push	r4
    1cf8:	5f 92       	push	r5
    1cfa:	6f 92       	push	r6
    1cfc:	7f 92       	push	r7
    1cfe:	8f 92       	push	r8
    1d00:	9f 92       	push	r9
    1d02:	af 92       	push	r10
    1d04:	bf 92       	push	r11
    1d06:	cf 92       	push	r12
    1d08:	df 92       	push	r13
    1d0a:	ef 92       	push	r14
    1d0c:	ff 92       	push	r15
    1d0e:	0f 93       	push	r16
    1d10:	1f 93       	push	r17
    1d12:	cf 93       	push	r28
    1d14:	df 93       	push	r29
    1d16:	ec 01       	movw	r28, r24
    1d18:	4a 01       	movw	r8, r20
    1d1a:	5b 01       	movw	r10, r22
    1d1c:	28 01       	movw	r4, r16
    1d1e:	39 01       	movw	r6, r18

	/*
	 * Check if the hardware supports the given baud rate
	 */
	// 8 = (2^0) * 8 * (2^0) = (2^BSCALE_MIN) * 8 * (BSEL_MIN)
	max_rate = cpu_hz / 8;
    1d20:	d9 01       	movw	r26, r18
    1d22:	c8 01       	movw	r24, r16
    1d24:	68 94       	set
    1d26:	12 f8       	bld	r1, 2
    1d28:	b6 95       	lsr	r27
    1d2a:	a7 95       	ror	r26
    1d2c:	97 95       	ror	r25
    1d2e:	87 95       	ror	r24
    1d30:	16 94       	lsr	r1
    1d32:	d1 f7       	brne	.-12     	; 0x1d28 <usart_set_baudrate+0x32>
	// 4194304 = (2^7) * 8 * (2^12) = (2^BSCALE_MAX) * 8 * (BSEL_MAX+1)
	min_rate = cpu_hz / 4194304;
    1d34:	b9 01       	movw	r22, r18
    1d36:	a8 01       	movw	r20, r16
    1d38:	03 2e       	mov	r0, r19
    1d3a:	36 e1       	ldi	r19, 0x16	; 22
    1d3c:	76 95       	lsr	r23
    1d3e:	67 95       	ror	r22
    1d40:	57 95       	ror	r21
    1d42:	47 95       	ror	r20
    1d44:	3a 95       	dec	r19
    1d46:	d1 f7       	brne	.-12     	; 0x1d3c <usart_set_baudrate+0x46>
    1d48:	30 2d       	mov	r19, r0

	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d4a:	2c 81       	ldd	r18, Y+4	; 0x04
    1d4c:	22 fd       	sbrc	r18, 2
    1d4e:	08 c0       	rjmp	.+16     	; 0x1d60 <usart_set_baudrate+0x6a>
		max_rate /= 2;
    1d50:	b6 95       	lsr	r27
    1d52:	a7 95       	ror	r26
    1d54:	97 95       	ror	r25
    1d56:	87 95       	ror	r24
		min_rate /= 2;
    1d58:	76 95       	lsr	r23
    1d5a:	67 95       	ror	r22
    1d5c:	57 95       	ror	r21
    1d5e:	47 95       	ror	r20
	}

	if ((baud > max_rate) || (baud < min_rate)) {
    1d60:	88 15       	cp	r24, r8
    1d62:	99 05       	cpc	r25, r9
    1d64:	aa 05       	cpc	r26, r10
    1d66:	bb 05       	cpc	r27, r11
    1d68:	08 f4       	brcc	.+2      	; 0x1d6c <usart_set_baudrate+0x76>
    1d6a:	a6 c0       	rjmp	.+332    	; 0x1eb8 <usart_set_baudrate+0x1c2>
    1d6c:	84 16       	cp	r8, r20
    1d6e:	95 06       	cpc	r9, r21
    1d70:	a6 06       	cpc	r10, r22
    1d72:	b7 06       	cpc	r11, r23
    1d74:	08 f4       	brcc	.+2      	; 0x1d78 <usart_set_baudrate+0x82>
    1d76:	a2 c0       	rjmp	.+324    	; 0x1ebc <usart_set_baudrate+0x1c6>
	}

	/*
	 * Check if double speed is enabled.
	 */
	if (!((usart)->CTRLB & USART_CLK2X_bm)) {
    1d78:	8c 81       	ldd	r24, Y+4	; 0x04
    1d7a:	82 fd       	sbrc	r24, 2
    1d7c:	04 c0       	rjmp	.+8      	; 0x1d86 <usart_set_baudrate+0x90>
		baud *= 2;
    1d7e:	88 0c       	add	r8, r8
    1d80:	99 1c       	adc	r9, r9
    1d82:	aa 1c       	adc	r10, r10
    1d84:	bb 1c       	adc	r11, r11

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;
    1d86:	c3 01       	movw	r24, r6
    1d88:	b2 01       	movw	r22, r4
    1d8a:	a5 01       	movw	r20, r10
    1d8c:	94 01       	movw	r18, r8
    1d8e:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>

	for (exp = -7; exp < 7; exp++) {
		if (ratio < limit) {
    1d92:	2f 3f       	cpi	r18, 0xFF	; 255
    1d94:	31 05       	cpc	r19, r1
    1d96:	41 05       	cpc	r20, r1
    1d98:	51 05       	cpc	r21, r1
    1d9a:	08 f4       	brcc	.+2      	; 0x1d9e <usart_set_baudrate+0xa8>
    1d9c:	91 c0       	rjmp	.+290    	; 0x1ec0 <usart_set_baudrate+0x1ca>
	}

	/*
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
    1d9e:	c1 2c       	mov	r12, r1
    1da0:	d1 2c       	mov	r13, r1
    1da2:	76 01       	movw	r14, r12
    1da4:	ca 94       	dec	r12
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1da6:	19 ef       	ldi	r17, 0xF9	; 249
    1da8:	05 c0       	rjmp	.+10     	; 0x1db4 <usart_set_baudrate+0xbe>
		if (ratio < limit) {
    1daa:	2c 15       	cp	r18, r12
    1dac:	3d 05       	cpc	r19, r13
    1dae:	4e 05       	cpc	r20, r14
    1db0:	5f 05       	cpc	r21, r15
    1db2:	68 f0       	brcs	.+26     	; 0x1dce <usart_set_baudrate+0xd8>
			break;
		}

		limit <<= 1;
    1db4:	cc 0c       	add	r12, r12
    1db6:	dd 1c       	adc	r13, r13
    1db8:	ee 1c       	adc	r14, r14
    1dba:	ff 1c       	adc	r15, r15

		if (exp < -3) {
    1dbc:	1d 3f       	cpi	r17, 0xFD	; 253
    1dbe:	14 f4       	brge	.+4      	; 0x1dc4 <usart_set_baudrate+0xce>
			limit |= 1;
    1dc0:	68 94       	set
    1dc2:	c0 f8       	bld	r12, 0
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1dc4:	1f 5f       	subi	r17, 0xFF	; 255
    1dc6:	17 30       	cpi	r17, 0x07	; 7
    1dc8:	81 f7       	brne	.-32     	; 0x1daa <usart_set_baudrate+0xb4>
    1dca:	21 2f       	mov	r18, r17
    1dcc:	50 c0       	rjmp	.+160    	; 0x1e6e <usart_set_baudrate+0x178>
    1dce:	21 2f       	mov	r18, r17
	 * operation as it ensures that we never exceeed 2**32 at any point.
	 *
	 * The formula for calculating BSEL is slightly different when exp is
	 * negative than it is when exp is positive.
	 */
	if (exp < 0) {
    1dd0:	11 23       	and	r17, r17
    1dd2:	0c f0       	brlt	.+2      	; 0x1dd6 <usart_set_baudrate+0xe0>
    1dd4:	4c c0       	rjmp	.+152    	; 0x1e6e <usart_set_baudrate+0x178>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1dd6:	d5 01       	movw	r26, r10
    1dd8:	c4 01       	movw	r24, r8
    1dda:	88 0f       	add	r24, r24
    1ddc:	99 1f       	adc	r25, r25
    1dde:	aa 1f       	adc	r26, r26
    1de0:	bb 1f       	adc	r27, r27
    1de2:	88 0f       	add	r24, r24
    1de4:	99 1f       	adc	r25, r25
    1de6:	aa 1f       	adc	r26, r26
    1de8:	bb 1f       	adc	r27, r27
    1dea:	88 0f       	add	r24, r24
    1dec:	99 1f       	adc	r25, r25
    1dee:	aa 1f       	adc	r26, r26
    1df0:	bb 1f       	adc	r27, r27
    1df2:	48 1a       	sub	r4, r24
    1df4:	59 0a       	sbc	r5, r25
    1df6:	6a 0a       	sbc	r6, r26
    1df8:	7b 0a       	sbc	r7, r27
		 * If we end up with a left-shift after taking the final divide-by-8
		 * into account, do the shift before the divide. Otherwise, left-shift
		 * the denominator instead (effectively resulting in an overall right
		 * shift.)
		 */
		if (exp <= -3) {
    1dfa:	1e 3f       	cpi	r17, 0xFE	; 254
    1dfc:	f4 f4       	brge	.+60     	; 0x1e3a <usart_set_baudrate+0x144>
			div = ((cpu_hz << (-exp - 3)) + baud / 2) / baud;
    1dfe:	6d ef       	ldi	r22, 0xFD	; 253
    1e00:	7f ef       	ldi	r23, 0xFF	; 255
    1e02:	61 1b       	sub	r22, r17
    1e04:	71 09       	sbc	r23, r1
    1e06:	17 fd       	sbrc	r17, 7
    1e08:	73 95       	inc	r23
    1e0a:	04 c0       	rjmp	.+8      	; 0x1e14 <usart_set_baudrate+0x11e>
    1e0c:	44 0c       	add	r4, r4
    1e0e:	55 1c       	adc	r5, r5
    1e10:	66 1c       	adc	r6, r6
    1e12:	77 1c       	adc	r7, r7
    1e14:	6a 95       	dec	r22
    1e16:	d2 f7       	brpl	.-12     	; 0x1e0c <usart_set_baudrate+0x116>
    1e18:	d5 01       	movw	r26, r10
    1e1a:	c4 01       	movw	r24, r8
    1e1c:	b6 95       	lsr	r27
    1e1e:	a7 95       	ror	r26
    1e20:	97 95       	ror	r25
    1e22:	87 95       	ror	r24
    1e24:	bc 01       	movw	r22, r24
    1e26:	cd 01       	movw	r24, r26
    1e28:	64 0d       	add	r22, r4
    1e2a:	75 1d       	adc	r23, r5
    1e2c:	86 1d       	adc	r24, r6
    1e2e:	97 1d       	adc	r25, r7
    1e30:	a5 01       	movw	r20, r10
    1e32:	94 01       	movw	r18, r8
    1e34:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>
    1e38:	36 c0       	rjmp	.+108    	; 0x1ea6 <usart_set_baudrate+0x1b0>
		} else {
			baud <<= exp + 3;
    1e3a:	23 e0       	ldi	r18, 0x03	; 3
    1e3c:	21 0f       	add	r18, r17
    1e3e:	d5 01       	movw	r26, r10
    1e40:	c4 01       	movw	r24, r8
    1e42:	04 c0       	rjmp	.+8      	; 0x1e4c <usart_set_baudrate+0x156>
    1e44:	88 0f       	add	r24, r24
    1e46:	99 1f       	adc	r25, r25
    1e48:	aa 1f       	adc	r26, r26
    1e4a:	bb 1f       	adc	r27, r27
    1e4c:	2a 95       	dec	r18
    1e4e:	d2 f7       	brpl	.-12     	; 0x1e44 <usart_set_baudrate+0x14e>
    1e50:	9c 01       	movw	r18, r24
    1e52:	ad 01       	movw	r20, r26
			div = (cpu_hz + baud / 2) / baud;
    1e54:	b6 95       	lsr	r27
    1e56:	a7 95       	ror	r26
    1e58:	97 95       	ror	r25
    1e5a:	87 95       	ror	r24
    1e5c:	bc 01       	movw	r22, r24
    1e5e:	cd 01       	movw	r24, r26
    1e60:	64 0d       	add	r22, r4
    1e62:	75 1d       	adc	r23, r5
    1e64:	86 1d       	adc	r24, r6
    1e66:	97 1d       	adc	r25, r7
    1e68:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>
    1e6c:	1c c0       	rjmp	.+56     	; 0x1ea6 <usart_set_baudrate+0x1b0>
	} else {
		/*
		 * We will always do a right shift in this case, but we need to shift
		 * three extra positions because of the divide-by-8.
		 */
		baud <<= exp + 3;
    1e6e:	2d 5f       	subi	r18, 0xFD	; 253
    1e70:	d5 01       	movw	r26, r10
    1e72:	c4 01       	movw	r24, r8
    1e74:	04 c0       	rjmp	.+8      	; 0x1e7e <usart_set_baudrate+0x188>
    1e76:	88 0f       	add	r24, r24
    1e78:	99 1f       	adc	r25, r25
    1e7a:	aa 1f       	adc	r26, r26
    1e7c:	bb 1f       	adc	r27, r27
    1e7e:	2a 95       	dec	r18
    1e80:	d2 f7       	brpl	.-12     	; 0x1e76 <usart_set_baudrate+0x180>
    1e82:	9c 01       	movw	r18, r24
    1e84:	ad 01       	movw	r20, r26
		div = (cpu_hz + baud / 2) / baud - 1;
    1e86:	b6 95       	lsr	r27
    1e88:	a7 95       	ror	r26
    1e8a:	97 95       	ror	r25
    1e8c:	87 95       	ror	r24
    1e8e:	bc 01       	movw	r22, r24
    1e90:	cd 01       	movw	r24, r26
    1e92:	64 0d       	add	r22, r4
    1e94:	75 1d       	adc	r23, r5
    1e96:	86 1d       	adc	r24, r6
    1e98:	97 1d       	adc	r25, r7
    1e9a:	0e 94 73 2a 	call	0x54e6	; 0x54e6 <__udivmodsi4>
    1e9e:	21 50       	subi	r18, 0x01	; 1
    1ea0:	31 09       	sbc	r19, r1
    1ea2:	41 09       	sbc	r20, r1
    1ea4:	51 09       	sbc	r21, r1
	}

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
    1ea6:	83 2f       	mov	r24, r19
    1ea8:	8f 70       	andi	r24, 0x0F	; 15
    1eaa:	12 95       	swap	r17
    1eac:	10 7f       	andi	r17, 0xF0	; 240
    1eae:	18 2b       	or	r17, r24
    1eb0:	1f 83       	std	Y+7, r17	; 0x07
	(usart)->BAUDCTRLA = (uint8_t)div;
    1eb2:	2e 83       	std	Y+6, r18	; 0x06

	return true;
    1eb4:	81 e0       	ldi	r24, 0x01	; 1
    1eb6:	18 c0       	rjmp	.+48     	; 0x1ee8 <usart_set_baudrate+0x1f2>
		max_rate /= 2;
		min_rate /= 2;
	}

	if ((baud > max_rate) || (baud < min_rate)) {
		return false;
    1eb8:	80 e0       	ldi	r24, 0x00	; 0
    1eba:	16 c0       	rjmp	.+44     	; 0x1ee8 <usart_set_baudrate+0x1f2>
    1ebc:	80 e0       	ldi	r24, 0x00	; 0
    1ebe:	14 c0       	rjmp	.+40     	; 0x1ee8 <usart_set_baudrate+0x1f2>
		/*
		 * We are supposed to subtract 1, then apply BSCALE. We want to apply
		 * BSCALE first, so we need to turn everything inside the parenthesis
		 * into a single fractional expression.
		 */
		cpu_hz -= 8 * baud;
    1ec0:	d5 01       	movw	r26, r10
    1ec2:	c4 01       	movw	r24, r8
    1ec4:	88 0f       	add	r24, r24
    1ec6:	99 1f       	adc	r25, r25
    1ec8:	aa 1f       	adc	r26, r26
    1eca:	bb 1f       	adc	r27, r27
    1ecc:	88 0f       	add	r24, r24
    1ece:	99 1f       	adc	r25, r25
    1ed0:	aa 1f       	adc	r26, r26
    1ed2:	bb 1f       	adc	r27, r27
    1ed4:	88 0f       	add	r24, r24
    1ed6:	99 1f       	adc	r25, r25
    1ed8:	aa 1f       	adc	r26, r26
    1eda:	bb 1f       	adc	r27, r27
    1edc:	48 1a       	sub	r4, r24
    1ede:	59 0a       	sbc	r5, r25
    1ee0:	6a 0a       	sbc	r6, r26
    1ee2:	7b 0a       	sbc	r7, r27
	 * Find the lowest possible exponent.
	 */
	limit = 0xfffU >> 4;
	ratio = cpu_hz / baud;

	for (exp = -7; exp < 7; exp++) {
    1ee4:	19 ef       	ldi	r17, 0xF9	; 249
    1ee6:	8b cf       	rjmp	.-234    	; 0x1dfe <usart_set_baudrate+0x108>

	(usart)->BAUDCTRLB = (uint8_t)(((div >> 8) & 0X0F) | (exp << 4));
	(usart)->BAUDCTRLA = (uint8_t)div;

	return true;
}
    1ee8:	df 91       	pop	r29
    1eea:	cf 91       	pop	r28
    1eec:	1f 91       	pop	r17
    1eee:	0f 91       	pop	r16
    1ef0:	ff 90       	pop	r15
    1ef2:	ef 90       	pop	r14
    1ef4:	df 90       	pop	r13
    1ef6:	cf 90       	pop	r12
    1ef8:	bf 90       	pop	r11
    1efa:	af 90       	pop	r10
    1efc:	9f 90       	pop	r9
    1efe:	8f 90       	pop	r8
    1f00:	7f 90       	pop	r7
    1f02:	6f 90       	pop	r6
    1f04:	5f 90       	pop	r5
    1f06:	4f 90       	pop	r4
    1f08:	08 95       	ret

00001f0a <wdt_reset_mcu>:
uint8_t temp;
	/*
	 * WDT enabled (minimum timeout period for max. security)
	 */
	temp = WDT_PER_8CLK_gc | (1 << WDT_ENABLE_bp) | (1 << WDT_CEN_bp);
	ccp_write_io((void *)&WDT.CTRL, temp);
    1f0a:	63 e0       	ldi	r22, 0x03	; 3
    1f0c:	80 e8       	ldi	r24, 0x80	; 128
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	0e 94 0a 05 	call	0xa14	; 0xa14 <ccp_write_io>
/*! \brief Wait until WD settings are synchronized to the WD clock domain.
 *
 */
static inline void wdt_wait_while_busy(void)
{
	while ((WDT.STATUS & WDT_SYNCBUSY_bm) == WDT_SYNCBUSY_bm) {
    1f14:	e0 e8       	ldi	r30, 0x80	; 128
    1f16:	f0 e0       	ldi	r31, 0x00	; 0
    1f18:	82 81       	ldd	r24, Z+2	; 0x02
    1f1a:	80 fd       	sbrc	r24, 0
    1f1c:	fd cf       	rjmp	.-6      	; 0x1f18 <wdt_reset_mcu+0xe>
	wdt_wait_while_busy();
	/*
	 * WDT enabled (maximum window period for max. security)
	 */
	temp = WDT_WPER_8KCLK_gc | (1 << WDT_WEN_bp) | (1 << WDT_WCEN_bp);
	ccp_write_io((void *)&WDT.WINCTRL, temp);
    1f1e:	6b e2       	ldi	r22, 0x2B	; 43
    1f20:	81 e8       	ldi	r24, 0x81	; 129
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	0e 94 0a 05 	call	0xa14	; 0xa14 <ccp_write_io>
    1f28:	e0 e8       	ldi	r30, 0x80	; 128
    1f2a:	f0 e0       	ldi	r31, 0x00	; 0
    1f2c:	82 81       	ldd	r24, Z+2	; 0x02
    1f2e:	80 fd       	sbrc	r24, 0
    1f30:	fd cf       	rjmp	.-6      	; 0x1f2c <wdt_reset_mcu+0x22>
	wdt_wait_while_busy();
	/*
	 * WDT Reset during window => WDT generates an Hard Reset.
	 */
	wdt_reset();
    1f32:	a8 95       	wdr
    1f34:	ff cf       	rjmp	.-2      	; 0x1f34 <wdt_reset_mcu+0x2a>

00001f36 <En_RC32M>:
//Motor_Param M0,M1,M2,M3;

void En_RC32M(void)
{
    // Start RC32M OSC
    OSC_CTRL |= OSC_RC32MEN_bm;
    1f36:	e0 e5       	ldi	r30, 0x50	; 80
    1f38:	f0 e0       	ldi	r31, 0x00	; 0
    1f3a:	80 81       	ld	r24, Z
    1f3c:	82 60       	ori	r24, 0x02	; 2
    1f3e:	80 83       	st	Z, r24
    while(!(OSC_STATUS & OSC_RC32MRDY_bm));
    1f40:	e1 e5       	ldi	r30, 0x51	; 81
    1f42:	f0 e0       	ldi	r31, 0x00	; 0
    1f44:	80 81       	ld	r24, Z
    1f46:	81 ff       	sbrs	r24, 1
    1f48:	fd cf       	rjmp	.-6      	; 0x1f44 <En_RC32M+0xe>

    // Select the system clock source: 32 MHz Internal RC Osc.
    CCP = CCP_IOREG_gc;
    1f4a:	88 ed       	ldi	r24, 0xD8	; 216
    1f4c:	84 bf       	out	0x34, r24	; 52
    CLK_CTRL = CLK_SCLKSEL_RC32M_gc;
    1f4e:	81 e0       	ldi	r24, 0x01	; 1
    1f50:	80 93 40 00 	sts	0x0040, r24

    // Disable the unused oscillators: 2 MHz, internal 32 kHz, external clock/crystal oscillator, PLL
    OSC_CTRL &= ~(OSC_RC2MEN_bm | OSC_RC32KEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
    1f54:	e0 e5       	ldi	r30, 0x50	; 80
    1f56:	f0 e0       	ldi	r31, 0x00	; 0
    1f58:	80 81       	ld	r24, Z
    1f5a:	82 7e       	andi	r24, 0xE2	; 226
    1f5c:	80 83       	st	Z, r24
    1f5e:	08 95       	ret

00001f60 <PORT_init>:
};

void PORT_init(void)
{
	
	PORTB_DIRSET = KCK_Charge_PIN_bm;
    1f60:	80 e4       	ldi	r24, 0x40	; 64
    1f62:	80 93 21 06 	sts	0x0621, r24
	PORTC_DIRSET = KCK_Chip_PIN_bm | KCK_DIR_PIN_bm | Buzzer_PIN_bm;
    1f66:	83 e4       	ldi	r24, 0x43	; 67
    1f68:	80 93 41 06 	sts	0x0641, r24
	PORTC_PIN3CTRL=PORT_ISC_RISING_gc;
    1f6c:	81 e0       	ldi	r24, 0x01	; 1
    1f6e:	80 93 53 06 	sts	0x0653, r24
	PORTC_INTCTRL = PORT_INT0LVL_LO_gc;
    1f72:	80 93 49 06 	sts	0x0649, r24
	PORTC_INT0MASK = PIN3_bm;
    1f76:	98 e0       	ldi	r25, 0x08	; 8
    1f78:	90 93 4a 06 	sts	0x064A, r25
	
	PORTD_DIRSET = Gyro_SCL_PIN_bm | LED_White_PIN_bm | LED_Red_PIN_bm | LED_Green_PIN_bm;  //SDA TWI tuye pin ctrl tanzimat mikhad?!
    1f7c:	2e e2       	ldi	r18, 0x2E	; 46
    1f7e:	20 93 61 06 	sts	0x0661, r18
	//PORTD_PIN2CTRL = PORT_ISC_RISING_gc;  PORTD_PIN3CTRL= PORT_ISC_RISING_gc;  //KCK Sens1 , 2
	//PORTD_INTCTRL = PORT_INT0LVL_LO_gc;
	//PORTD_INT0MASK = KCK_Sens1_PIN_bm | KCK_Sens2_PIN_bm;
		
	
	PORTE_DIRSET = NRF24L01_L_CE_LINE | NRF24L01_L_CS_LINE | NRF24L01_L_MOSI_LINE | NRF24L01_L_SCK_LINE | PIN3_bm; // wireless module & programmer data & usart test
    1f82:	2a eb       	ldi	r18, 0xBA	; 186
    1f84:	20 93 81 06 	sts	0x0681, r18
	PORTE_PIN0CTRL |= PORT_ISC_FALLING_gc;
    1f88:	e0 e9       	ldi	r30, 0x90	; 144
    1f8a:	f6 e0       	ldi	r31, 0x06	; 6
    1f8c:	20 81       	ld	r18, Z
    1f8e:	22 60       	ori	r18, 0x02	; 2
    1f90:	20 83       	st	Z, r18
	PORTE_INTCTRL |= PORT_INT0LVL_LO_gc;
    1f92:	e9 e8       	ldi	r30, 0x89	; 137
    1f94:	f6 e0       	ldi	r31, 0x06	; 6
    1f96:	20 81       	ld	r18, Z
    1f98:	21 60       	ori	r18, 0x01	; 1
    1f9a:	20 83       	st	Z, r18
	PORTE_INT0MASK |= PIN0_bm;
    1f9c:	ea e8       	ldi	r30, 0x8A	; 138
    1f9e:	f6 e0       	ldi	r31, 0x06	; 6
    1fa0:	20 81       	ld	r18, Z
    1fa2:	21 60       	ori	r18, 0x01	; 1
    1fa4:	20 83       	st	Z, r18
	//PORTF_PIN5CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_PIN6CTRL = PORT_ISC_BOTHEDGES_gc;
	//PORTF_INTCTRL |= PORT_INT0LVL_LO_gc;
	//PORTF_INT0MASK = Menu_Cancel_PIN_bm | Menu_PIN3_bm | Menu_PIN2_bm | Menu_PIN1_bm | Menu_PIN0_bm;
   
   PORTF_DIRSET = PIN3_bm;
    1fa6:	90 93 a1 06 	sts	0x06A1, r25
   PORTF_OUTSET = PIN3_bm;
    1faa:	90 93 a5 06 	sts	0x06A5, r25
   
   //PORTH_DIR = 0xFF;//SegL
   //PORTJ_DIR = 0xFF;//SegR
   
   PORTK_PIN0CTRL = PORT_ISC_RISING_gc;
    1fae:	80 93 30 07 	sts	0x0730, r24
   PORTK_INTCTRL = PORT_INT0LVL_LO_gc;
    1fb2:	80 93 29 07 	sts	0x0729, r24
   PORTK_INT0MASK = Menu_Set_PIN_bm;
    1fb6:	20 e8       	ldi	r18, 0x80	; 128
    1fb8:	20 93 2a 07 	sts	0x072A, r18
   
   PORTQ_PIN0CTRL = PORT_ISC_RISING_gc;
    1fbc:	80 93 d0 07 	sts	0x07D0, r24
   PORTQ_PIN3CTRL = PORT_ISC_RISING_gc;
    1fc0:	80 93 d3 07 	sts	0x07D3, r24
   PORTQ_INTCTRL  = PORT_INT0LVL_LO_gc|PORT_INT1LVL_LO_gc;
    1fc4:	25 e0       	ldi	r18, 0x05	; 5
    1fc6:	20 93 c9 07 	sts	0x07C9, r18
   PORTQ_INT0MASK = PIN0_bm;
    1fca:	80 93 ca 07 	sts	0x07CA, r24
   PORTQ_INT1MASK = PIN3_bm;
    1fce:	90 93 cb 07 	sts	0x07CB, r25
   
   PORTH_PIN5CTRL = PORT_ISC_RISING_gc;
    1fd2:	80 93 f5 06 	sts	0x06F5, r24
   PORTH_INTCTRL  = PORT_INT0LVL_LO_gc;
    1fd6:	80 93 e9 06 	sts	0x06E9, r24
   PORTH_INT0MASK = PIN5_bm;
    1fda:	80 e2       	ldi	r24, 0x20	; 32
    1fdc:	80 93 ea 06 	sts	0x06EA, r24
    1fe0:	08 95       	ret

00001fe2 <TimerC0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    1fe2:	e0 e0       	ldi	r30, 0x00	; 0
    1fe4:	f8 e0       	ldi	r31, 0x08	; 8
    1fe6:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    1fe8:	80 7f       	andi	r24, 0xF0	; 240
    1fea:	86 60       	ori	r24, 0x06	; 6
    1fec:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    1fee:	81 81       	ldd	r24, Z+1	; 0x01
    1ff0:	88 7f       	andi	r24, 0xF8	; 248
    1ff2:	83 60       	ori	r24, 0x03	; 3
    1ff4:	81 83       	std	Z+1, r24	; 0x01
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    1ff6:	8f ef       	ldi	r24, 0xFF	; 255
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	86 a3       	std	Z+38, r24	; 0x26
    1ffc:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    1ffe:	80 85       	ldd	r24, Z+8	; 0x08
    2000:	8e 6f       	ori	r24, 0xFE	; 254
    2002:	80 87       	std	Z+8, r24	; 0x08
 */
static inline void tc_enable_cc_channels(volatile void *tc,
		enum tc_cc_channel_mask_enable_t enablemask)
{
	if (tc_is_tc0(void *tc)) {
		((TC0_t *)tc)->CTRLB |= enablemask;
    2004:	81 81       	ldd	r24, Z+1	; 0x01
    2006:	80 61       	ori	r24, 0x10	; 16
    2008:	81 83       	std	Z+1, r24	; 0x01
    200a:	81 81       	ldd	r24, Z+1	; 0x01
    200c:	80 62       	ori	r24, 0x20	; 32
    200e:	81 83       	std	Z+1, r24	; 0x01
	tc_set_wgm(&TCC0,TC_WG_SS);
	tc_write_period(&TCC0,0x00FF);
	tc_set_direction(&TCC0,TC_UP);
	tc_enable_cc_channels(&TCC0,TC_CCAEN);
	tc_enable_cc_channels(&TCC0,TC_CCBEN);
	tc_enable(&TCC0);
    2010:	80 e0       	ldi	r24, 0x00	; 0
    2012:	98 e0       	ldi	r25, 0x08	; 8
    2014:	df cd       	rjmp	.-1090   	; 0x1bd4 <tc_enable>
    2016:	08 95       	ret

00002018 <TimerD0_init>:
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
			(((TC0_t *)tc)->CTRLA & ~TC0_CLKSEL_gm) |
    2018:	e0 e0       	ldi	r30, 0x00	; 0
    201a:	f9 e0       	ldi	r31, 0x09	; 9
    201c:	80 81       	ld	r24, Z
 * \note Configuring the clock starts alos the timer
 */
static inline void tc_write_clock_source(volatile void *tc,
		TC_CLKSEL_t TC_CLKSEL_enum)
{
	((TC0_t *)tc)->CTRLA =
    201e:	80 7f       	andi	r24, 0xF0	; 240
    2020:	86 60       	ori	r24, 0x06	; 6
    2022:	80 83       	st	Z, r24
 * \param tc Pointer to TC module.
 * \param wgm : waveform generator
 */
static inline void tc_set_wgm(volatile void *tc, enum tc_wg_mode_t wgm)
{
	((TC0_t *)tc)->CTRLB = (((TC0_t *)tc)->CTRLB & ~TC0_WGMODE_gm) | wgm;
    2024:	81 81       	ldd	r24, Z+1	; 0x01
    2026:	88 7f       	andi	r24, 0xF8	; 248
    2028:	81 83       	std	Z+1, r24	; 0x01
 * \note  Configures OVFINTLVL in INTCTRLA
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
    202a:	86 81       	ldd	r24, Z+6	; 0x06
    202c:	8c 7f       	andi	r24, 0xFC	; 252
    202e:	86 83       	std	Z+6, r24	; 0x06
	((TC0_t *)tc)->INTCTRLA =
			((TC0_t *)tc)->INTCTRLA | (level << TC0_OVFINTLVL_gp);
    2030:	86 81       	ldd	r24, Z+6	; 0x06
 */
static inline void tc_set_overflow_interrupt_level(volatile void *tc,
		enum TC_INT_LEVEL_t level)
{
	((TC0_t *)tc)->INTCTRLA = ((TC0_t *)tc)->INTCTRLA & ~TC0_OVFINTLVL_gm;
	((TC0_t *)tc)->INTCTRLA =
    2032:	82 60       	ori	r24, 0x02	; 2
    2034:	86 83       	std	Z+6, r24	; 0x06
 * \param tc Pointer to TC module.
 * \param per_value Period value : PER
 */
static inline void tc_write_period(volatile void *tc, uint16_t per_value)
{
	((TC0_t *)tc)->PER = per_value;
    2036:	8d e7       	ldi	r24, 0x7D	; 125
    2038:	90 e0       	ldi	r25, 0x00	; 0
    203a:	86 a3       	std	Z+38, r24	; 0x26
    203c:	97 a3       	std	Z+39, r25	; 0x27
 * \param dir Timer direction :
 */
static inline void tc_set_direction(volatile void *tc, enum tc_dir_t dir)
{
	if (dir == TC_UP) {
		((TC0_t *)tc)->CTRLFCLR |= ~TC0_DIR_bm;
    203e:	80 85       	ldd	r24, Z+8	; 0x08
    2040:	8e 6f       	ori	r24, 0xFE	; 254
    2042:	80 87       	std	Z+8, r24	; 0x08
	tc_write_clock_source(&TCD0,TC_CLKSEL_DIV256_gc);
	tc_set_wgm(&TCD0,TC_WG_NORMAL);
	tc_set_overflow_interrupt_level(&TCD0,TC_INT_LVL_MED);
	tc_write_period(&TCD0,TIMERD0_PER);
	tc_set_direction(&TCD0,TC_UP);
	tc_enable(&TCD0);
    2044:	80 e0       	ldi	r24, 0x00	; 0
    2046:	99 e0       	ldi	r25, 0x09	; 9
    2048:	c5 cd       	rjmp	.-1142   	; 0x1bd4 <tc_enable>
    204a:	08 95       	ret

0000204c <SPI_Init>:
};

void SPI_Init(void)
{
    204c:	0f 93       	push	r16
    204e:	1f 93       	push	r17
	 spi_xmega_set_baud_div(&NRF24L01_L_SPI,8000000UL,F_CPU);
    2050:	00 e0       	ldi	r16, 0x00	; 0
    2052:	18 e4       	ldi	r17, 0x48	; 72
    2054:	28 ee       	ldi	r18, 0xE8	; 232
    2056:	31 e0       	ldi	r19, 0x01	; 1
    2058:	40 e0       	ldi	r20, 0x00	; 0
    205a:	52 e1       	ldi	r21, 0x12	; 18
    205c:	6a e7       	ldi	r22, 0x7A	; 122
    205e:	70 e0       	ldi	r23, 0x00	; 0
    2060:	80 ec       	ldi	r24, 0xC0	; 192
    2062:	9a e0       	ldi	r25, 0x0A	; 10
    2064:	0e 94 1a 05 	call	0xa34	; 0xa34 <spi_xmega_set_baud_div>
 *
 * \warning This may cause data loss if used on a slave SPI.
 */
static inline void spi_enable_master_mode(SPI_t *spi)
{
	spi->CTRL |= SPI_MASTER_bm;
    2068:	e0 ec       	ldi	r30, 0xC0	; 192
    206a:	fa e0       	ldi	r31, 0x0A	; 10
    206c:	80 81       	ld	r24, Z
    206e:	80 61       	ori	r24, 0x10	; 16
    2070:	80 83       	st	Z, r24
 *
 * \param spi Base address of the SPI instance.
 */
static inline void spi_enable(SPI_t *spi)
{
	spi->CTRL |= SPI_ENABLE_bm;
    2072:	80 81       	ld	r24, Z
    2074:	80 64       	ori	r24, 0x40	; 64
    2076:	80 83       	st	Z, r24
	 spi_enable_master_mode(&NRF24L01_L_SPI);
	 spi_enable(&NRF24L01_L_SPI);
}
    2078:	1f 91       	pop	r17
    207a:	0f 91       	pop	r16
    207c:	08 95       	ret

0000207e <USARTE0_init>:

#define USARTE0_conf USARTE0
#define USARTE0_BUADRATE 19200
void USARTE0_init(void)
{
    207e:	0f 93       	push	r16
    2080:	1f 93       	push	r17
    2082:	cf 93       	push	r28
    2084:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2086:	c0 ea       	ldi	r28, 0xA0	; 160
    2088:	da e0       	ldi	r29, 0x0A	; 10
    208a:	8d 81       	ldd	r24, Y+5	; 0x05
    208c:	8f 73       	andi	r24, 0x3F	; 63
    208e:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    2090:	83 e0       	ldi	r24, 0x03	; 3
    2092:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    2094:	8b 81       	ldd	r24, Y+3	; 0x03
    2096:	8f 7c       	andi	r24, 0xCF	; 207
    2098:	80 62       	ori	r24, 0x20	; 32
    209a:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTE0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTE0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTE0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTE0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTE0_conf,USARTE0_BUADRATE,F_CPU);
    209c:	00 e0       	ldi	r16, 0x00	; 0
    209e:	18 e4       	ldi	r17, 0x48	; 72
    20a0:	28 ee       	ldi	r18, 0xE8	; 232
    20a2:	31 e0       	ldi	r19, 0x01	; 1
    20a4:	40 e0       	ldi	r20, 0x00	; 0
    20a6:	5b e4       	ldi	r21, 0x4B	; 75
    20a8:	60 e0       	ldi	r22, 0x00	; 0
    20aa:	70 e0       	ldi	r23, 0x00	; 0
    20ac:	80 ea       	ldi	r24, 0xA0	; 160
    20ae:	9a e0       	ldi	r25, 0x0A	; 10
    20b0:	22 de       	rcall	.-956    	; 0x1cf6 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    20b2:	8c 81       	ldd	r24, Y+4	; 0x04
    20b4:	88 60       	ori	r24, 0x08	; 8
    20b6:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTE0_conf);
	//usart_rx_enable(&USARTE0_conf);
}
    20b8:	df 91       	pop	r29
    20ba:	cf 91       	pop	r28
    20bc:	1f 91       	pop	r17
    20be:	0f 91       	pop	r16
    20c0:	08 95       	ret

000020c2 <USARTF0_init>:


#define USARTF0_conf USARTF0
#define USARTF0_BUADRATE 9600
void USARTF0_init(void)
{
    20c2:	0f 93       	push	r16
    20c4:	1f 93       	push	r17
    20c6:	cf 93       	push	r28
    20c8:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    20ca:	c0 ea       	ldi	r28, 0xA0	; 160
    20cc:	db e0       	ldi	r29, 0x0B	; 11
    20ce:	8d 81       	ldd	r24, Y+5	; 0x05
    20d0:	8f 73       	andi	r24, 0x3F	; 63
    20d2:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    20d4:	83 e0       	ldi	r24, 0x03	; 3
    20d6:	8d 83       	std	Y+5, r24	; 0x05
 * \param level Interrupt level of the RXD interrupt.
 */
static inline void usart_set_rx_interrupt_level(USART_t *usart,
		enum usart_int_level_t level)
{
	(usart)->CTRLA = ((usart)->CTRLA & ~USART_RXCINTLVL_gm) |
    20d8:	8b 81       	ldd	r24, Y+3	; 0x03
    20da:	8f 7c       	andi	r24, 0xCF	; 207
    20dc:	80 62       	ori	r24, 0x20	; 32
    20de:	8b 83       	std	Y+3, r24	; 0x03
	usart_set_mode(&USARTF0_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF0_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	usart_set_rx_interrupt_level(&USARTF0_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF0_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF0_conf,USARTF0_BUADRATE,F_CPU);
    20e0:	00 e0       	ldi	r16, 0x00	; 0
    20e2:	18 e4       	ldi	r17, 0x48	; 72
    20e4:	28 ee       	ldi	r18, 0xE8	; 232
    20e6:	31 e0       	ldi	r19, 0x01	; 1
    20e8:	40 e8       	ldi	r20, 0x80	; 128
    20ea:	55 e2       	ldi	r21, 0x25	; 37
    20ec:	60 e0       	ldi	r22, 0x00	; 0
    20ee:	70 e0       	ldi	r23, 0x00	; 0
    20f0:	80 ea       	ldi	r24, 0xA0	; 160
    20f2:	9b e0       	ldi	r25, 0x0B	; 11
    20f4:	00 de       	rcall	.-1024   	; 0x1cf6 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    20f6:	8c 81       	ldd	r24, Y+4	; 0x04
    20f8:	88 60       	ori	r24, 0x08	; 8
    20fa:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param usart Pointer to the USART module
 */
static inline void usart_rx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_RXEN_bm;
    20fc:	8c 81       	ldd	r24, Y+4	; 0x04
    20fe:	80 61       	ori	r24, 0x10	; 16
    2100:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF0_conf);
	usart_rx_enable(&USARTF0_conf);
}
    2102:	df 91       	pop	r29
    2104:	cf 91       	pop	r28
    2106:	1f 91       	pop	r17
    2108:	0f 91       	pop	r16
    210a:	08 95       	ret

0000210c <USARTF1_init>:

#define USARTF1_conf USARTF1
#define USARTF1_BUADRATE 9600
void USARTF1_init(void)
{
    210c:	0f 93       	push	r16
    210e:	1f 93       	push	r17
    2110:	cf 93       	push	r28
    2112:	df 93       	push	r29
 * - 0x2        : IrDA mode.
 * - 0x3        : Master SPI mode.
 */
static inline void usart_set_mode(USART_t *usart, USART_CMODE_t usartmode)
{
	(usart)->CTRLC = ((usart)->CTRLC & (~USART_CMODE_gm)) | usartmode;
    2114:	c0 eb       	ldi	r28, 0xB0	; 176
    2116:	db e0       	ldi	r29, 0x0B	; 11
    2118:	8d 81       	ldd	r24, Y+5	; 0x05
    211a:	8f 73       	andi	r24, 0x3F	; 63
    211c:	8d 83       	std	Y+5, r24	; 0x05
 *  \param twoStopBits Enable two stop bit mode. Use bool type.
 */
static inline void usart_format_set(USART_t *usart, USART_CHSIZE_t charSize,
		USART_PMODE_t parityMode, bool twoStopBits)
{
	(usart)->CTRLC = (uint8_t)charSize | parityMode
    211e:	83 e0       	ldi	r24, 0x03	; 3
    2120:	8d 83       	std	Y+5, r24	; 0x05
	usart_set_mode(&USARTF1_conf,USART_CMODE_ASYNCHRONOUS_gc);
	usart_format_set(&USARTF1_conf,USART_CHSIZE_8BIT_gc,USART_PMODE_DISABLED_gc,false);
	//usart_set_rx_interrupt_level(&USARTF1_conf,USART_INT_LVL_MED);
	//usart_set_dre_interrupt_level(&USARTF1_conf,USART_INT_LVL_LO);
	usart_set_baudrate(&USARTF1_conf,USARTF1_BUADRATE,F_CPU);
    2122:	00 e0       	ldi	r16, 0x00	; 0
    2124:	18 e4       	ldi	r17, 0x48	; 72
    2126:	28 ee       	ldi	r18, 0xE8	; 232
    2128:	31 e0       	ldi	r19, 0x01	; 1
    212a:	40 e8       	ldi	r20, 0x80	; 128
    212c:	55 e2       	ldi	r21, 0x25	; 37
    212e:	60 e0       	ldi	r22, 0x00	; 0
    2130:	70 e0       	ldi	r23, 0x00	; 0
    2132:	80 eb       	ldi	r24, 0xB0	; 176
    2134:	9b e0       	ldi	r25, 0x0B	; 11
    2136:	df dd       	rcall	.-1090   	; 0x1cf6 <usart_set_baudrate>
 *
 * \param usart Pointer to the USART module.
 */
static inline void usart_tx_enable(USART_t *usart)
{
	(usart)->CTRLB |= USART_TXEN_bm;
    2138:	8c 81       	ldd	r24, Y+4	; 0x04
    213a:	88 60       	ori	r24, 0x08	; 8
    213c:	8c 83       	std	Y+4, r24	; 0x04
	usart_tx_enable(&USARTF1_conf);
	//usart_rx_enable(&USARTF1_conf);
}
    213e:	df 91       	pop	r29
    2140:	cf 91       	pop	r28
    2142:	1f 91       	pop	r17
    2144:	0f 91       	pop	r16
    2146:	08 95       	ret

00002148 <ADCA_init>:

//KCK_CAP_VFB   -----> B7
#define CONFIG_ADC_INTLVL ADC_CH_INTLVL_LO_gc
void ADCA_init(void)
{
    2148:	cf 93       	push	r28
    214a:	df 93       	push	r29
    214c:	cd b7       	in	r28, 0x3d	; 61
    214e:	de b7       	in	r29, 0x3e	; 62
    2150:	2a 97       	sbiw	r28, 0x0a	; 10
    2152:	cd bf       	out	0x3d, r28	; 61
    2154:	de bf       	out	0x3e, r29	; 62
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
    2156:	61 e2       	ldi	r22, 0x21	; 33
    2158:	70 e0       	ldi	r23, 0x00	; 0
    215a:	82 e0       	ldi	r24, 0x02	; 2
    215c:	0e 94 10 05 	call	0xa20	; 0xa20 <nvm_read_byte>
    2160:	60 e2       	ldi	r22, 0x20	; 32
    2162:	70 e0       	ldi	r23, 0x00	; 0
    2164:	82 e0       	ldi	r24, 0x02	; 2
    2166:	0e 94 10 05 	call	0xa20	; 0xa20 <nvm_read_byte>
static inline void adc_set_conversion_parameters(struct adc_config *conf,
		enum adc_sign sign, enum adc_resolution res,
		enum adc_reference ref)
{
	// Preserve all but conversion and resolution config.
	conf->ctrlb &= ~(ADC_CONMODE_bm | ADC_RESOLUTION_gm);
    216a:	8a 81       	ldd	r24, Y+2	; 0x02
    216c:	89 7e       	andi	r24, 0xE9	; 233
	conf->ctrlb |= (uint8_t)res | (uint8_t)sign;

	conf->refctrl &= ~ADC_REFSEL_gm;
    216e:	9b 81       	ldd	r25, Y+3	; 0x03
    2170:	9f 7c       	andi	r25, 0xCF	; 207
	conf->refctrl |= ref;
    2172:	90 62       	ori	r25, 0x20	; 32
    2174:	9b 83       	std	Y+3, r25	; 0x03
		psc = ADC_PRESCALER_DIV256_gc;
	} else {
		psc = ADC_PRESCALER_DIV512_gc;
	}

	conf->prescaler = psc;
    2176:	92 e0       	ldi	r25, 0x02	; 2
    2178:	9d 83       	std	Y+5, r25	; 0x05
				(nr_of_ch << ADC_EVACT_gp);
		break;

#if XMEGA_A || XMEGA_AU
	case ADC_TRIG_FREERUN_SWEEP:
		conf->ctrlb |= ADC_FREERUN_bm;
    217a:	88 60       	ori	r24, 0x08	; 8
    217c:	8a 83       	std	Y+2, r24	; 0x02
		conf->evctrl = (nr_of_ch - 1) << ADC_SWEEP_gp;
    217e:	1c 82       	std	Y+4, r1	; 0x04
    adc_get_calibration_data(ADC_CAL_ADCA);
    adc_set_conversion_parameters(&adca_conf,ADC_SIGN_OFF,ADC_RES_12,ADC_REF_AREFA);
    adc_set_clock_rate(&adca_conf,125000UL);
    adc_set_conversion_trigger(&adca_conf,ADC_TRIG_FREERUN_SWEEP,1,0);
   // adc_set_config_compare_value(adcb_conf,KCK_MAX_CHARGE_AMP);
    adc_write_configuration(&ADCA,&adca_conf);
    2180:	be 01       	movw	r22, r28
    2182:	6f 5f       	subi	r22, 0xFF	; 255
    2184:	7f 4f       	sbci	r23, 0xFF	; 255
    2186:	80 e0       	ldi	r24, 0x00	; 0
    2188:	92 e0       	ldi	r25, 0x02	; 2
    218a:	0e 94 58 04 	call	0x8b0	; 0x8b0 <adc_write_configuration>
    //
    ///* Configure ADC channel 0:
    //* - Input: ADCB4
    //* - interrupts disable
    //*/
    adcch_read_configuration(&ADCA,1, &adca_ch_conf);
    218e:	ae 01       	movw	r20, r28
    2190:	48 5f       	subi	r20, 0xF8	; 248
    2192:	5f 4f       	sbci	r21, 0xFF	; 255
    2194:	61 e0       	ldi	r22, 0x01	; 1
    2196:	80 e0       	ldi	r24, 0x00	; 0
    2198:	92 e0       	ldi	r25, 0x02	; 2
    219a:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <adcch_read_configuration>

	// Configure for single-ended measurement.
	if (neg == ADCCH_NEG_NONE) {
		Assert(gain == 1);

		ch_conf->ctrl = ADC_CH_INPUTMODE_SINGLEENDED_gc;
    219e:	81 e0       	ldi	r24, 0x01	; 1
    21a0:	88 87       	std	Y+8, r24	; 0x08
		ch_conf->muxctrl = pos << ADC_CH_MUXPOS_gp;
    21a2:	88 e1       	ldi	r24, 0x18	; 24
    21a4:	89 87       	std	Y+9, r24	; 0x09
    adcch_set_input(&adca_ch_conf,ADCCH_POS_PIN3,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    adcch_write_configuration(&ADCA,1,&adca_ch_conf);
    21a6:	ae 01       	movw	r20, r28
    21a8:	48 5f       	subi	r20, 0xF8	; 248
    21aa:	5f 4f       	sbci	r21, 0xFF	; 255
    21ac:	61 e0       	ldi	r22, 0x01	; 1
    21ae:	80 e0       	ldi	r24, 0x00	; 0
    21b0:	92 e0       	ldi	r25, 0x02	; 2
    21b2:	0e 94 a9 04 	call	0x952	; 0x952 <adcch_write_configuration>
    //adcch_set_input(&adcb_ch_conf,ADCCH_POS_PIN7,ADCCH_NEG_NONE,ADC_CH_GAIN_1X_gc);
    //adcch_set_interrupt_mode(&adcb_ch_conf,ADCCH_MODE_ABOVE);
    //adcch_enable_interrupt(&adcb_ch_conf);
    //adcch_write_configuration(&ADCB,3,&adcb_ch_conf);
    //
    adc_enable(&ADCA);
    21b6:	80 e0       	ldi	r24, 0x00	; 0
    21b8:	92 e0       	ldi	r25, 0x02	; 2
    21ba:	0e 94 41 04 	call	0x882	; 0x882 <adc_enable>

typedef uint8_t irqflags_t;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = SREG;
    21be:	8f b7       	in	r24, 0x3f	; 63
	cpu_irq_disable();
    21c0:	f8 94       	cli
 * \note The ADC must be enabled for this function to have any effect.
 */
static inline void adc_start_conversion(ADC_t *adc, uint8_t ch_mask)
{
	irqflags_t flags = cpu_irq_save();
	adc->CTRLA |= ch_mask << ADC_CH0START_bp;
    21c2:	e0 e0       	ldi	r30, 0x00	; 0
    21c4:	f2 e0       	ldi	r31, 0x02	; 2
    21c6:	90 81       	ld	r25, Z
    21c8:	94 60       	ori	r25, 0x04	; 4
    21ca:	90 83       	st	Z, r25
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	barrier();
	SREG = flags;
    21cc:	8f bf       	out	0x3f, r24	; 63
    adc_start_conversion(&ADCA,ADC_CH0);
    //adc_start_conversion(&ADCB,ADC_CH1);
    //adc_start_conversion(&ADCB,ADC_CH2);
    ////adc_start_conversion(&ADCB,ADC_CH3);
}
    21ce:	2a 96       	adiw	r28, 0x0a	; 10
    21d0:	cd bf       	out	0x3d, r28	; 61
    21d2:	de bf       	out	0x3e, r29	; 62
    21d4:	df 91       	pop	r29
    21d6:	cf 91       	pop	r28
    21d8:	08 95       	ret

000021da <main>:
        break;
    };

}
void get_MS(char rx)
{
    21da:	cf 93       	push	r28
    21dc:	df 93       	push	r29
    21de:	cd b7       	in	r28, 0x3d	; 61
    21e0:	de b7       	in	r29, 0x3e	; 62
    21e2:	c4 5e       	subi	r28, 0xE4	; 228
    21e4:	d1 09       	sbc	r29, r1
    21e6:	cd bf       	out	0x3d, r28	; 61
    21e8:	de bf       	out	0x3e, r29	; 62
    21ea:	a5 de       	rcall	.-694    	; 0x1f36 <En_RC32M>
    21ec:	e2 ea       	ldi	r30, 0xA2	; 162
    21ee:	f0 e0       	ldi	r31, 0x00	; 0
    21f0:	80 81       	ld	r24, Z
    21f2:	87 60       	ori	r24, 0x07	; 7
    21f4:	80 83       	st	Z, r24
    21f6:	b4 de       	rcall	.-664    	; 0x1f60 <PORT_init>
    21f8:	0f df       	rcall	.-482    	; 0x2018 <TimerD0_init>
    21fa:	f3 de       	rcall	.-538    	; 0x1fe2 <TimerC0_init>
    21fc:	62 df       	rcall	.-316    	; 0x20c2 <USARTF0_init>
    21fe:	86 df       	rcall	.-244    	; 0x210c <USARTF1_init>
    2200:	3e df       	rcall	.-388    	; 0x207e <USARTE0_init>
    2202:	a2 df       	rcall	.-188    	; 0x2148 <ADCA_init>
    2204:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <LCDInit>
    2208:	78 94       	sei
    220a:	88 eb       	ldi	r24, 0xB8	; 184
    220c:	9b e0       	ldi	r25, 0x0B	; 11
    220e:	a0 e0       	ldi	r26, 0x00	; 0
    2210:	b0 e0       	ldi	r27, 0x00	; 0
    2212:	80 93 34 20 	sts	0x2034, r24
    2216:	90 93 35 20 	sts	0x2035, r25
    221a:	a0 93 36 20 	sts	0x2036, r26
    221e:	b0 93 37 20 	sts	0x2037, r27
    2222:	24 ef       	ldi	r18, 0xF4	; 244
    2224:	31 e0       	ldi	r19, 0x01	; 1
    2226:	20 93 cd 23 	sts	0x23CD, r18
    222a:	30 93 ce 23 	sts	0x23CE, r19
    222e:	80 93 38 20 	sts	0x2038, r24
    2232:	90 93 39 20 	sts	0x2039, r25
    2236:	a0 93 3a 20 	sts	0x203A, r26
    223a:	b0 93 3b 20 	sts	0x203B, r27
    223e:	84 e6       	ldi	r24, 0x64	; 100
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	80 93 e9 21 	sts	0x21E9, r24
    2246:	90 93 ea 21 	sts	0x21EA, r25
    224a:	88 ee       	ldi	r24, 0xE8	; 232
    224c:	93 e0       	ldi	r25, 0x03	; 3
    224e:	a0 e0       	ldi	r26, 0x00	; 0
    2250:	b0 e0       	ldi	r27, 0x00	; 0
    2252:	80 93 30 20 	sts	0x2030, r24
    2256:	90 93 31 20 	sts	0x2031, r25
    225a:	a0 93 32 20 	sts	0x2032, r26
    225e:	b0 93 33 20 	sts	0x2033, r27
    2262:	88 ec       	ldi	r24, 0xC8	; 200
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	80 93 fb 23 	sts	0x23FB, r24
    226a:	90 93 fc 23 	sts	0x23FC, r25
    226e:	80 ed       	ldi	r24, 0xD0	; 208
    2270:	97 e0       	ldi	r25, 0x07	; 7
    2272:	a0 e0       	ldi	r26, 0x00	; 0
    2274:	b0 e0       	ldi	r27, 0x00	; 0
    2276:	80 93 2c 20 	sts	0x202C, r24
    227a:	90 93 2d 20 	sts	0x202D, r25
    227e:	a0 93 2e 20 	sts	0x202E, r26
    2282:	b0 93 2f 20 	sts	0x202F, r27
    2286:	86 e9       	ldi	r24, 0x96	; 150
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	80 93 31 22 	sts	0x2231, r24
    228e:	90 93 32 22 	sts	0x2232, r25
    2292:	e8 e0       	ldi	r30, 0x08	; 8
    2294:	f6 e0       	ldi	r31, 0x06	; 6
    2296:	90 81       	ld	r25, Z
    2298:	30 81       	ld	r19, Z
    229a:	80 81       	ld	r24, Z
    229c:	40 81       	ld	r20, Z
    229e:	e3 e0       	ldi	r30, 0x03	; 3
    22a0:	f0 e2       	ldi	r31, 0x20	; 32
    22a2:	88 1f       	adc	r24, r24
    22a4:	88 27       	eor	r24, r24
    22a6:	88 1f       	adc	r24, r24
    22a8:	28 2f       	mov	r18, r24
    22aa:	22 0f       	add	r18, r18
    22ac:	22 0f       	add	r18, r18
    22ae:	96 fb       	bst	r25, 6
    22b0:	88 27       	eor	r24, r24
    22b2:	80 f9       	bld	r24, 0
    22b4:	28 2b       	or	r18, r24
    22b6:	34 fb       	bst	r19, 4
    22b8:	88 24       	eor	r8, r8
    22ba:	80 f8       	bld	r8, 0
    22bc:	91 2c       	mov	r9, r1
    22be:	c4 01       	movw	r24, r8
    22c0:	88 0f       	add	r24, r24
    22c2:	99 1f       	adc	r25, r25
    22c4:	28 2b       	or	r18, r24
    22c6:	45 fb       	bst	r20, 5
    22c8:	00 27       	eor	r16, r16
    22ca:	00 f9       	bld	r16, 0
    22cc:	10 e0       	ldi	r17, 0x00	; 0
    22ce:	c8 01       	movw	r24, r16
    22d0:	88 0f       	add	r24, r24
    22d2:	99 1f       	adc	r25, r25
    22d4:	88 0f       	add	r24, r24
    22d6:	99 1f       	adc	r25, r25
    22d8:	88 0f       	add	r24, r24
    22da:	99 1f       	adc	r25, r25
    22dc:	82 2b       	or	r24, r18
    22de:	90 81       	ld	r25, Z
    22e0:	89 0f       	add	r24, r25
    22e2:	80 83       	st	Z, r24
    22e4:	82 e0       	ldi	r24, 0x02	; 2
    22e6:	e0 e8       	ldi	r30, 0x80	; 128
    22e8:	f6 e0       	ldi	r31, 0x06	; 6
    22ea:	86 83       	std	Z+6, r24	; 0x06
    22ec:	af de       	rcall	.-674    	; 0x204c <SPI_Init>
    22ee:	2a e6       	ldi	r18, 0x6A	; 106
    22f0:	2a 95       	dec	r18
    22f2:	f1 f7       	brne	.-4      	; 0x22f0 <main+0x116>
    22f4:	00 c0       	rjmp	.+0      	; 0x22f6 <main+0x11c>
    22f6:	3f ef       	ldi	r19, 0xFF	; 255
    22f8:	43 ec       	ldi	r20, 0xC3	; 195
    22fa:	59 e0       	ldi	r21, 0x09	; 9
    22fc:	31 50       	subi	r19, 0x01	; 1
    22fe:	40 40       	sbci	r20, 0x00	; 0
    2300:	50 40       	sbci	r21, 0x00	; 0
    2302:	e1 f7       	brne	.-8      	; 0x22fc <main+0x122>
    2304:	00 c0       	rjmp	.+0      	; 0x2306 <main+0x12c>
    2306:	00 00       	nop
    2308:	0e 94 90 29 	call	0x5320	; 0x5320 <NRF24L01_L_Clear_Interrupts>
    230c:	0e 94 57 2a 	call	0x54ae	; 0x54ae <NRF24L01_L_Flush_TX>
    2310:	0e 94 65 2a 	call	0x54ca	; 0x54ca <NRF24L01_L_Flush_RX>
    2314:	82 e0       	ldi	r24, 0x02	; 2
    2316:	e0 e8       	ldi	r30, 0x80	; 128
    2318:	f6 e0       	ldi	r31, 0x06	; 6
    231a:	86 83       	std	Z+6, r24	; 0x06
    231c:	e8 e0       	ldi	r30, 0x08	; 8
    231e:	f6 e0       	ldi	r31, 0x06	; 6
    2320:	20 81       	ld	r18, Z
    2322:	30 81       	ld	r19, Z
    2324:	80 81       	ld	r24, Z
    2326:	40 81       	ld	r20, Z
    2328:	88 1f       	adc	r24, r24
    232a:	88 27       	eor	r24, r24
    232c:	88 1f       	adc	r24, r24
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	88 0f       	add	r24, r24
    2332:	99 1f       	adc	r25, r25
    2334:	88 0f       	add	r24, r24
    2336:	99 1f       	adc	r25, r25
    2338:	26 fb       	bst	r18, 6
    233a:	ee 24       	eor	r14, r14
    233c:	e0 f8       	bld	r14, 0
    233e:	f1 2c       	mov	r15, r1
    2340:	e8 2a       	or	r14, r24
    2342:	f9 2a       	or	r15, r25
    2344:	34 fb       	bst	r19, 4
    2346:	cc 24       	eor	r12, r12
    2348:	c0 f8       	bld	r12, 0
    234a:	d1 2c       	mov	r13, r1
    234c:	c6 01       	movw	r24, r12
    234e:	88 0f       	add	r24, r24
    2350:	99 1f       	adc	r25, r25
    2352:	e8 2a       	or	r14, r24
    2354:	f9 2a       	or	r15, r25
    2356:	45 fb       	bst	r20, 5
    2358:	aa 24       	eor	r10, r10
    235a:	a0 f8       	bld	r10, 0
    235c:	b1 2c       	mov	r11, r1
    235e:	c5 01       	movw	r24, r10
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	88 0f       	add	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	88 0f       	add	r24, r24
    236a:	99 1f       	adc	r25, r25
    236c:	8e 29       	or	r24, r14
    236e:	9f 29       	or	r25, r15
    2370:	03 97       	sbiw	r24, 0x03	; 3
    2372:	84 f4       	brge	.+32     	; 0x2394 <main+0x1ba>
    2374:	0f 2e       	mov	r0, r31
    2376:	f6 e0       	ldi	r31, 0x06	; 6
    2378:	cf 2e       	mov	r12, r31
    237a:	f0 2d       	mov	r31, r0
    237c:	68 94       	set
    237e:	ee 24       	eor	r14, r14
    2380:	e5 f8       	bld	r14, 5
    2382:	05 e0       	ldi	r16, 0x05	; 5
    2384:	23 e0       	ldi	r18, 0x03	; 3
    2386:	30 e2       	ldi	r19, 0x20	; 32
    2388:	48 e0       	ldi	r20, 0x08	; 8
    238a:	62 e3       	ldi	r22, 0x32	; 50
    238c:	80 e0       	ldi	r24, 0x00	; 0
    238e:	0e 94 17 2a 	call	0x542e	; 0x542e <NRF24L01_L_Init_milad>
    2392:	0f c0       	rjmp	.+30     	; 0x23b2 <main+0x1d8>
    2394:	0f 2e       	mov	r0, r31
    2396:	f6 e0       	ldi	r31, 0x06	; 6
    2398:	cf 2e       	mov	r12, r31
    239a:	f0 2d       	mov	r31, r0
    239c:	68 94       	set
    239e:	ee 24       	eor	r14, r14
    23a0:	e5 f8       	bld	r14, 5
    23a2:	05 e0       	ldi	r16, 0x05	; 5
    23a4:	23 e0       	ldi	r18, 0x03	; 3
    23a6:	30 e2       	ldi	r19, 0x20	; 32
    23a8:	48 e0       	ldi	r20, 0x08	; 8
    23aa:	61 e0       	ldi	r22, 0x01	; 1
    23ac:	80 e0       	ldi	r24, 0x00	; 0
    23ae:	0e 94 17 2a 	call	0x542e	; 0x542e <NRF24L01_L_Init_milad>
    23b2:	61 e0       	ldi	r22, 0x01	; 1
    23b4:	8c e3       	ldi	r24, 0x3C	; 60
    23b6:	0e 94 67 29 	call	0x52ce	; 0x52ce <NRF24L01_L_WriteReg>
    23ba:	66 e0       	ldi	r22, 0x06	; 6
    23bc:	8d e3       	ldi	r24, 0x3D	; 61
    23be:	0e 94 67 29 	call	0x52ce	; 0x52ce <NRF24L01_L_WriteReg>
    23c2:	82 e0       	ldi	r24, 0x02	; 2
    23c4:	e0 e8       	ldi	r30, 0x80	; 128
    23c6:	f6 e0       	ldi	r31, 0x06	; 6
    23c8:	85 83       	std	Z+5, r24	; 0x05
    23ca:	8f e0       	ldi	r24, 0x0F	; 15
    23cc:	94 e0       	ldi	r25, 0x04	; 4
    23ce:	01 97       	sbiw	r24, 0x01	; 1
    23d0:	f1 f7       	brne	.-4      	; 0x23ce <main+0x1f4>
    23d2:	00 c0       	rjmp	.+0      	; 0x23d4 <main+0x1fa>
    23d4:	00 00       	nop
    23d6:	0f 2e       	mov	r0, r31
    23d8:	fb ea       	ldi	r31, 0xAB	; 171
    23da:	2f 2e       	mov	r2, r31
    23dc:	f3 e2       	ldi	r31, 0x23	; 35
    23de:	3f 2e       	mov	r3, r31
    23e0:	f0 2d       	mov	r31, r0
    23e2:	a8 95       	wdr
    23e4:	80 91 9e 20 	lds	r24, 0x209E
    23e8:	88 23       	and	r24, r24
    23ea:	11 f4       	brne	.+4      	; 0x23f0 <main+0x216>
    23ec:	0c 94 b5 21 	jmp	0x436a	; 0x436a <__stack+0x36b>
    23f0:	ab e7       	ldi	r26, 0x7B	; 123
    23f2:	b3 e2       	ldi	r27, 0x23	; 35
    23f4:	ed 90       	ld	r14, X+
    23f6:	fc 90       	ld	r15, X
    23f8:	ed e7       	ldi	r30, 0x7D	; 125
    23fa:	f3 e2       	ldi	r31, 0x23	; 35
    23fc:	e0 82       	st	Z, r14
    23fe:	f1 82       	std	Z+1, r15	; 0x01
    2400:	a9 e7       	ldi	r26, 0x79	; 121
    2402:	b3 e2       	ldi	r27, 0x23	; 35
    2404:	8d 91       	ld	r24, X+
    2406:	9c 91       	ld	r25, X
    2408:	bf e0       	ldi	r27, 0x0F	; 15
    240a:	b8 9f       	mul	r27, r24
    240c:	80 01       	movw	r16, r0
    240e:	b9 9f       	mul	r27, r25
    2410:	10 0d       	add	r17, r0
    2412:	11 24       	eor	r1, r1
    2414:	e9 e7       	ldi	r30, 0x79	; 121
    2416:	f3 e2       	ldi	r31, 0x23	; 35
    2418:	10 82       	st	Z, r1
    241a:	11 82       	std	Z+1, r1	; 0x01
    241c:	b7 01       	movw	r22, r14
    241e:	88 27       	eor	r24, r24
    2420:	77 fd       	sbrc	r23, 7
    2422:	80 95       	com	r24
    2424:	98 2f       	mov	r25, r24
    2426:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    242a:	4b 01       	movw	r8, r22
    242c:	5c 01       	movw	r10, r24
    242e:	b8 01       	movw	r22, r16
    2430:	6e 19       	sub	r22, r14
    2432:	7f 09       	sbc	r23, r15
    2434:	88 27       	eor	r24, r24
    2436:	77 fd       	sbrc	r23, 7
    2438:	80 95       	com	r24
    243a:	98 2f       	mov	r25, r24
    243c:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2440:	2e ea       	ldi	r18, 0xAE	; 174
    2442:	37 e4       	ldi	r19, 0x47	; 71
    2444:	41 ee       	ldi	r20, 0xE1	; 225
    2446:	5d e3       	ldi	r21, 0x3D	; 61
    2448:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    244c:	9b 01       	movw	r18, r22
    244e:	ac 01       	movw	r20, r24
    2450:	c5 01       	movw	r24, r10
    2452:	b4 01       	movw	r22, r8
    2454:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2458:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    245c:	6b 01       	movw	r12, r22
    245e:	7c 01       	movw	r14, r24
    2460:	ab e7       	ldi	r26, 0x7B	; 123
    2462:	b3 e2       	ldi	r27, 0x23	; 35
    2464:	6d 93       	st	X+, r22
    2466:	7c 93       	st	X, r23
    2468:	e0 e0       	ldi	r30, 0x00	; 0
    246a:	f4 e2       	ldi	r31, 0x24	; 36
    246c:	00 81       	ld	r16, Z
    246e:	11 81       	ldd	r17, Z+1	; 0x01
    2470:	a2 e0       	ldi	r26, 0x02	; 2
    2472:	b4 e2       	ldi	r27, 0x24	; 36
    2474:	0d 93       	st	X+, r16
    2476:	1c 93       	st	X, r17
    2478:	ee ef       	ldi	r30, 0xFE	; 254
    247a:	f3 e2       	ldi	r31, 0x23	; 35
    247c:	80 81       	ld	r24, Z
    247e:	91 81       	ldd	r25, Z+1	; 0x01
    2480:	ff e0       	ldi	r31, 0x0F	; 15
    2482:	f8 9f       	mul	r31, r24
    2484:	50 01       	movw	r10, r0
    2486:	f9 9f       	mul	r31, r25
    2488:	b0 0c       	add	r11, r0
    248a:	11 24       	eor	r1, r1
    248c:	ae ef       	ldi	r26, 0xFE	; 254
    248e:	b3 e2       	ldi	r27, 0x23	; 35
    2490:	1d 92       	st	X+, r1
    2492:	1c 92       	st	X, r1
    2494:	b8 01       	movw	r22, r16
    2496:	88 27       	eor	r24, r24
    2498:	77 fd       	sbrc	r23, 7
    249a:	80 95       	com	r24
    249c:	98 2f       	mov	r25, r24
    249e:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    24a2:	2b 01       	movw	r4, r22
    24a4:	3c 01       	movw	r6, r24
    24a6:	b5 01       	movw	r22, r10
    24a8:	60 1b       	sub	r22, r16
    24aa:	71 0b       	sbc	r23, r17
    24ac:	88 27       	eor	r24, r24
    24ae:	77 fd       	sbrc	r23, 7
    24b0:	80 95       	com	r24
    24b2:	98 2f       	mov	r25, r24
    24b4:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    24b8:	2e ea       	ldi	r18, 0xAE	; 174
    24ba:	37 e4       	ldi	r19, 0x47	; 71
    24bc:	41 ee       	ldi	r20, 0xE1	; 225
    24be:	5d e3       	ldi	r21, 0x3D	; 61
    24c0:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    24c4:	9b 01       	movw	r18, r22
    24c6:	ac 01       	movw	r20, r24
    24c8:	c3 01       	movw	r24, r6
    24ca:	b2 01       	movw	r22, r4
    24cc:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    24d0:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    24d4:	6d 83       	std	Y+5, r22	; 0x05
    24d6:	7e 83       	std	Y+6, r23	; 0x06
    24d8:	8f 83       	std	Y+7, r24	; 0x07
    24da:	98 87       	std	Y+8, r25	; 0x08
    24dc:	e0 e0       	ldi	r30, 0x00	; 0
    24de:	f4 e2       	ldi	r31, 0x24	; 36
    24e0:	60 83       	st	Z, r22
    24e2:	71 83       	std	Z+1, r23	; 0x01
    24e4:	a4 e1       	ldi	r26, 0x14	; 20
    24e6:	b4 e2       	ldi	r27, 0x24	; 36
    24e8:	0d 91       	ld	r16, X+
    24ea:	1c 91       	ld	r17, X
    24ec:	e6 e1       	ldi	r30, 0x16	; 22
    24ee:	f4 e2       	ldi	r31, 0x24	; 36
    24f0:	00 83       	st	Z, r16
    24f2:	11 83       	std	Z+1, r17	; 0x01
    24f4:	a2 e1       	ldi	r26, 0x12	; 18
    24f6:	b4 e2       	ldi	r27, 0x24	; 36
    24f8:	8d 91       	ld	r24, X+
    24fa:	9c 91       	ld	r25, X
    24fc:	bf e0       	ldi	r27, 0x0F	; 15
    24fe:	b8 9f       	mul	r27, r24
    2500:	30 01       	movw	r6, r0
    2502:	b9 9f       	mul	r27, r25
    2504:	70 0c       	add	r7, r0
    2506:	11 24       	eor	r1, r1
    2508:	e2 e1       	ldi	r30, 0x12	; 18
    250a:	f4 e2       	ldi	r31, 0x24	; 36
    250c:	10 82       	st	Z, r1
    250e:	11 82       	std	Z+1, r1	; 0x01
    2510:	b8 01       	movw	r22, r16
    2512:	88 27       	eor	r24, r24
    2514:	77 fd       	sbrc	r23, 7
    2516:	80 95       	com	r24
    2518:	98 2f       	mov	r25, r24
    251a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    251e:	4b 01       	movw	r8, r22
    2520:	5c 01       	movw	r10, r24
    2522:	b3 01       	movw	r22, r6
    2524:	60 1b       	sub	r22, r16
    2526:	71 0b       	sbc	r23, r17
    2528:	88 27       	eor	r24, r24
    252a:	77 fd       	sbrc	r23, 7
    252c:	80 95       	com	r24
    252e:	98 2f       	mov	r25, r24
    2530:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2534:	2e ea       	ldi	r18, 0xAE	; 174
    2536:	37 e4       	ldi	r19, 0x47	; 71
    2538:	41 ee       	ldi	r20, 0xE1	; 225
    253a:	5d e3       	ldi	r21, 0x3D	; 61
    253c:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2540:	9b 01       	movw	r18, r22
    2542:	ac 01       	movw	r20, r24
    2544:	c5 01       	movw	r24, r10
    2546:	b4 01       	movw	r22, r8
    2548:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    254c:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2550:	69 8b       	std	Y+17, r22	; 0x11
    2552:	7a 8b       	std	Y+18, r23	; 0x12
    2554:	8b 8b       	std	Y+19, r24	; 0x13
    2556:	9c 8b       	std	Y+20, r25	; 0x14
    2558:	a4 e1       	ldi	r26, 0x14	; 20
    255a:	b4 e2       	ldi	r27, 0x24	; 36
    255c:	6d 93       	st	X+, r22
    255e:	7c 93       	st	X, r23
    2560:	ed ea       	ldi	r30, 0xAD	; 173
    2562:	f3 e2       	ldi	r31, 0x23	; 35
    2564:	00 81       	ld	r16, Z
    2566:	11 81       	ldd	r17, Z+1	; 0x01
    2568:	af ea       	ldi	r26, 0xAF	; 175
    256a:	b3 e2       	ldi	r27, 0x23	; 35
    256c:	0d 93       	st	X+, r16
    256e:	1c 93       	st	X, r17
    2570:	f1 01       	movw	r30, r2
    2572:	80 81       	ld	r24, Z
    2574:	91 81       	ldd	r25, Z+1	; 0x01
    2576:	ff e0       	ldi	r31, 0x0F	; 15
    2578:	f8 9f       	mul	r31, r24
    257a:	30 01       	movw	r6, r0
    257c:	f9 9f       	mul	r31, r25
    257e:	70 0c       	add	r7, r0
    2580:	11 24       	eor	r1, r1
    2582:	d1 01       	movw	r26, r2
    2584:	1d 92       	st	X+, r1
    2586:	1c 92       	st	X, r1
    2588:	b8 01       	movw	r22, r16
    258a:	88 27       	eor	r24, r24
    258c:	77 fd       	sbrc	r23, 7
    258e:	80 95       	com	r24
    2590:	98 2f       	mov	r25, r24
    2592:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2596:	4b 01       	movw	r8, r22
    2598:	5c 01       	movw	r10, r24
    259a:	b3 01       	movw	r22, r6
    259c:	60 1b       	sub	r22, r16
    259e:	71 0b       	sbc	r23, r17
    25a0:	88 27       	eor	r24, r24
    25a2:	77 fd       	sbrc	r23, 7
    25a4:	80 95       	com	r24
    25a6:	98 2f       	mov	r25, r24
    25a8:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    25ac:	2e ea       	ldi	r18, 0xAE	; 174
    25ae:	37 e4       	ldi	r19, 0x47	; 71
    25b0:	41 ee       	ldi	r20, 0xE1	; 225
    25b2:	5d e3       	ldi	r21, 0x3D	; 61
    25b4:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    25b8:	9b 01       	movw	r18, r22
    25ba:	ac 01       	movw	r20, r24
    25bc:	c5 01       	movw	r24, r10
    25be:	b4 01       	movw	r22, r8
    25c0:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    25c4:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    25c8:	6d 8b       	std	Y+21, r22	; 0x15
    25ca:	7e 8b       	std	Y+22, r23	; 0x16
    25cc:	8f 8b       	std	Y+23, r24	; 0x17
    25ce:	98 8f       	std	Y+24, r25	; 0x18
    25d0:	ed ea       	ldi	r30, 0xAD	; 173
    25d2:	f3 e2       	ldi	r31, 0x23	; 35
    25d4:	60 83       	st	Z, r22
    25d6:	71 83       	std	Z+1, r23	; 0x01
    25d8:	a8 e0       	ldi	r26, 0x08	; 8
    25da:	b6 e0       	ldi	r27, 0x06	; 6
    25dc:	9c 91       	ld	r25, X
    25de:	8c 91       	ld	r24, X
    25e0:	2c 91       	ld	r18, X
    25e2:	4c 91       	ld	r20, X
    25e4:	22 1f       	adc	r18, r18
    25e6:	22 27       	eor	r18, r18
    25e8:	22 1f       	adc	r18, r18
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	22 0f       	add	r18, r18
    25ee:	33 1f       	adc	r19, r19
    25f0:	22 0f       	add	r18, r18
    25f2:	33 1f       	adc	r19, r19
    25f4:	96 fb       	bst	r25, 6
    25f6:	99 27       	eor	r25, r25
    25f8:	90 f9       	bld	r25, 0
    25fa:	99 8f       	std	Y+25, r25	; 0x19
    25fc:	1a 8e       	std	Y+26, r1	; 0x1a
    25fe:	e9 8d       	ldd	r30, Y+25	; 0x19
    2600:	fa 8d       	ldd	r31, Y+26	; 0x1a
    2602:	2e 2b       	or	r18, r30
    2604:	3f 2b       	or	r19, r31
    2606:	82 95       	swap	r24
    2608:	81 70       	andi	r24, 0x01	; 1
    260a:	8b 8f       	std	Y+27, r24	; 0x1b
    260c:	1c 8e       	std	Y+28, r1	; 0x1c
    260e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2610:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2612:	88 0f       	add	r24, r24
    2614:	99 1f       	adc	r25, r25
    2616:	28 2b       	or	r18, r24
    2618:	39 2b       	or	r19, r25
    261a:	45 fb       	bst	r20, 5
    261c:	44 27       	eor	r20, r20
    261e:	40 f9       	bld	r20, 0
    2620:	4d 8f       	std	Y+29, r20	; 0x1d
    2622:	1e 8e       	std	Y+30, r1	; 0x1e
    2624:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2626:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2628:	88 0f       	add	r24, r24
    262a:	99 1f       	adc	r25, r25
    262c:	88 0f       	add	r24, r24
    262e:	99 1f       	adc	r25, r25
    2630:	88 0f       	add	r24, r24
    2632:	99 1f       	adc	r25, r25
    2634:	28 2b       	or	r18, r24
    2636:	39 2b       	or	r19, r25
    2638:	17 e1       	ldi	r17, 0x17	; 23
    263a:	12 9f       	mul	r17, r18
    263c:	c0 01       	movw	r24, r0
    263e:	13 9f       	mul	r17, r19
    2640:	90 0d       	add	r25, r0
    2642:	11 24       	eor	r1, r1
    2644:	fc 01       	movw	r30, r24
    2646:	ea 54       	subi	r30, 0x4A	; 74
    2648:	ff 4d       	sbci	r31, 0xDF	; 223
    264a:	64 89       	ldd	r22, Z+20	; 0x14
    264c:	70 e0       	ldi	r23, 0x00	; 0
    264e:	80 e0       	ldi	r24, 0x00	; 0
    2650:	90 e0       	ldi	r25, 0x00	; 0
    2652:	0e 94 93 2b 	call	0x5726	; 0x5726 <__floatunsisf>
    2656:	20 e0       	ldi	r18, 0x00	; 0
    2658:	30 e0       	ldi	r19, 0x00	; 0
    265a:	48 ec       	ldi	r20, 0xC8	; 200
    265c:	52 e4       	ldi	r21, 0x42	; 66
    265e:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <__divsf3>
    2662:	69 83       	std	Y+1, r22	; 0x01
    2664:	7a 83       	std	Y+2, r23	; 0x02
    2666:	8b 83       	std	Y+3, r24	; 0x03
    2668:	9c 83       	std	Y+4, r25	; 0x04
    266a:	60 93 24 24 	sts	0x2424, r22
    266e:	70 93 25 24 	sts	0x2425, r23
    2672:	80 93 26 24 	sts	0x2426, r24
    2676:	90 93 27 24 	sts	0x2427, r25
    267a:	a8 e0       	ldi	r26, 0x08	; 8
    267c:	b6 e0       	ldi	r27, 0x06	; 6
    267e:	9c 91       	ld	r25, X
    2680:	8c 91       	ld	r24, X
    2682:	2c 91       	ld	r18, X
    2684:	4c 91       	ld	r20, X
    2686:	22 1f       	adc	r18, r18
    2688:	22 27       	eor	r18, r18
    268a:	22 1f       	adc	r18, r18
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	22 0f       	add	r18, r18
    2690:	33 1f       	adc	r19, r19
    2692:	22 0f       	add	r18, r18
    2694:	33 1f       	adc	r19, r19
    2696:	96 fb       	bst	r25, 6
    2698:	99 27       	eor	r25, r25
    269a:	90 f9       	bld	r25, 0
    269c:	9f 8f       	std	Y+31, r25	; 0x1f
    269e:	18 a2       	std	Y+32, r1	; 0x20
    26a0:	ef 8d       	ldd	r30, Y+31	; 0x1f
    26a2:	f8 a1       	ldd	r31, Y+32	; 0x20
    26a4:	2e 2b       	or	r18, r30
    26a6:	3f 2b       	or	r19, r31
    26a8:	82 95       	swap	r24
    26aa:	81 70       	andi	r24, 0x01	; 1
    26ac:	89 a3       	std	Y+33, r24	; 0x21
    26ae:	1a a2       	std	Y+34, r1	; 0x22
    26b0:	89 a1       	ldd	r24, Y+33	; 0x21
    26b2:	9a a1       	ldd	r25, Y+34	; 0x22
    26b4:	88 0f       	add	r24, r24
    26b6:	99 1f       	adc	r25, r25
    26b8:	28 2b       	or	r18, r24
    26ba:	39 2b       	or	r19, r25
    26bc:	45 fb       	bst	r20, 5
    26be:	44 27       	eor	r20, r20
    26c0:	40 f9       	bld	r20, 0
    26c2:	4b a3       	std	Y+35, r20	; 0x23
    26c4:	1c a2       	std	Y+36, r1	; 0x24
    26c6:	8b a1       	ldd	r24, Y+35	; 0x23
    26c8:	9c a1       	ldd	r25, Y+36	; 0x24
    26ca:	88 0f       	add	r24, r24
    26cc:	99 1f       	adc	r25, r25
    26ce:	88 0f       	add	r24, r24
    26d0:	99 1f       	adc	r25, r25
    26d2:	88 0f       	add	r24, r24
    26d4:	99 1f       	adc	r25, r25
    26d6:	28 2b       	or	r18, r24
    26d8:	39 2b       	or	r19, r25
    26da:	12 9f       	mul	r17, r18
    26dc:	c0 01       	movw	r24, r0
    26de:	13 9f       	mul	r17, r19
    26e0:	90 0d       	add	r25, r0
    26e2:	11 24       	eor	r1, r1
    26e4:	fc 01       	movw	r30, r24
    26e6:	ea 54       	subi	r30, 0x4A	; 74
    26e8:	ff 4d       	sbci	r31, 0xDF	; 223
    26ea:	65 89       	ldd	r22, Z+21	; 0x15
    26ec:	70 e0       	ldi	r23, 0x00	; 0
    26ee:	80 e0       	ldi	r24, 0x00	; 0
    26f0:	90 e0       	ldi	r25, 0x00	; 0
    26f2:	0e 94 93 2b 	call	0x5726	; 0x5726 <__floatunsisf>
    26f6:	20 e0       	ldi	r18, 0x00	; 0
    26f8:	30 e0       	ldi	r19, 0x00	; 0
    26fa:	48 ec       	ldi	r20, 0xC8	; 200
    26fc:	52 e4       	ldi	r21, 0x42	; 66
    26fe:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <__divsf3>
    2702:	69 87       	std	Y+9, r22	; 0x09
    2704:	7a 87       	std	Y+10, r23	; 0x0a
    2706:	8b 87       	std	Y+11, r24	; 0x0b
    2708:	9c 87       	std	Y+12, r25	; 0x0c
    270a:	60 93 bc 23 	sts	0x23BC, r22
    270e:	70 93 bd 23 	sts	0x23BD, r23
    2712:	80 93 be 23 	sts	0x23BE, r24
    2716:	90 93 bf 23 	sts	0x23BF, r25
    271a:	a8 e0       	ldi	r26, 0x08	; 8
    271c:	b6 e0       	ldi	r27, 0x06	; 6
    271e:	9c 91       	ld	r25, X
    2720:	8c 91       	ld	r24, X
    2722:	2c 91       	ld	r18, X
    2724:	4c 91       	ld	r20, X
    2726:	22 1f       	adc	r18, r18
    2728:	22 27       	eor	r18, r18
    272a:	22 1f       	adc	r18, r18
    272c:	30 e0       	ldi	r19, 0x00	; 0
    272e:	22 0f       	add	r18, r18
    2730:	33 1f       	adc	r19, r19
    2732:	22 0f       	add	r18, r18
    2734:	33 1f       	adc	r19, r19
    2736:	96 fb       	bst	r25, 6
    2738:	99 27       	eor	r25, r25
    273a:	90 f9       	bld	r25, 0
    273c:	9d a3       	std	Y+37, r25	; 0x25
    273e:	1e a2       	std	Y+38, r1	; 0x26
    2740:	ed a1       	ldd	r30, Y+37	; 0x25
    2742:	fe a1       	ldd	r31, Y+38	; 0x26
    2744:	2e 2b       	or	r18, r30
    2746:	3f 2b       	or	r19, r31
    2748:	82 95       	swap	r24
    274a:	81 70       	andi	r24, 0x01	; 1
    274c:	8f a3       	std	Y+39, r24	; 0x27
    274e:	18 a6       	std	Y+40, r1	; 0x28
    2750:	8f a1       	ldd	r24, Y+39	; 0x27
    2752:	98 a5       	ldd	r25, Y+40	; 0x28
    2754:	88 0f       	add	r24, r24
    2756:	99 1f       	adc	r25, r25
    2758:	28 2b       	or	r18, r24
    275a:	39 2b       	or	r19, r25
    275c:	45 fb       	bst	r20, 5
    275e:	44 27       	eor	r20, r20
    2760:	40 f9       	bld	r20, 0
    2762:	49 a7       	std	Y+41, r20	; 0x29
    2764:	1a a6       	std	Y+42, r1	; 0x2a
    2766:	89 a5       	ldd	r24, Y+41	; 0x29
    2768:	9a a5       	ldd	r25, Y+42	; 0x2a
    276a:	88 0f       	add	r24, r24
    276c:	99 1f       	adc	r25, r25
    276e:	88 0f       	add	r24, r24
    2770:	99 1f       	adc	r25, r25
    2772:	88 0f       	add	r24, r24
    2774:	99 1f       	adc	r25, r25
    2776:	28 2b       	or	r18, r24
    2778:	39 2b       	or	r19, r25
    277a:	12 9f       	mul	r17, r18
    277c:	c0 01       	movw	r24, r0
    277e:	13 9f       	mul	r17, r19
    2780:	90 0d       	add	r25, r0
    2782:	11 24       	eor	r1, r1
    2784:	fc 01       	movw	r30, r24
    2786:	ea 54       	subi	r30, 0x4A	; 74
    2788:	ff 4d       	sbci	r31, 0xDF	; 223
    278a:	66 89       	ldd	r22, Z+22	; 0x16
    278c:	70 e0       	ldi	r23, 0x00	; 0
    278e:	80 e0       	ldi	r24, 0x00	; 0
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	0e 94 93 2b 	call	0x5726	; 0x5726 <__floatunsisf>
    2796:	20 e0       	ldi	r18, 0x00	; 0
    2798:	30 e0       	ldi	r19, 0x00	; 0
    279a:	48 ec       	ldi	r20, 0xC8	; 200
    279c:	52 e4       	ldi	r21, 0x42	; 66
    279e:	0e 94 fa 2a 	call	0x55f4	; 0x55f4 <__divsf3>
    27a2:	6d 87       	std	Y+13, r22	; 0x0d
    27a4:	7e 87       	std	Y+14, r23	; 0x0e
    27a6:	8f 87       	std	Y+15, r24	; 0x0f
    27a8:	98 8b       	std	Y+16, r25	; 0x10
    27aa:	60 93 cc 21 	sts	0x21CC, r22
    27ae:	70 93 cd 21 	sts	0x21CD, r23
    27b2:	80 93 ce 21 	sts	0x21CE, r24
    27b6:	90 93 cf 21 	sts	0x21CF, r25
    27ba:	10 92 9e 20 	sts	0x209E, r1
    27be:	a8 e0       	ldi	r26, 0x08	; 8
    27c0:	b6 e0       	ldi	r27, 0x06	; 6
    27c2:	6c 91       	ld	r22, X
    27c4:	5c 91       	ld	r21, X
    27c6:	7c 91       	ld	r23, X
    27c8:	4c 91       	ld	r20, X
    27ca:	9c 91       	ld	r25, X
    27cc:	8c 91       	ld	r24, X
    27ce:	2c 91       	ld	r18, X
    27d0:	ec 91       	ld	r30, X
    27d2:	22 1f       	adc	r18, r18
    27d4:	22 27       	eor	r18, r18
    27d6:	22 1f       	adc	r18, r18
    27d8:	30 e0       	ldi	r19, 0x00	; 0
    27da:	22 0f       	add	r18, r18
    27dc:	33 1f       	adc	r19, r19
    27de:	22 0f       	add	r18, r18
    27e0:	33 1f       	adc	r19, r19
    27e2:	96 fb       	bst	r25, 6
    27e4:	99 27       	eor	r25, r25
    27e6:	90 f9       	bld	r25, 0
    27e8:	9b a7       	std	Y+43, r25	; 0x2b
    27ea:	1c a6       	std	Y+44, r1	; 0x2c
    27ec:	ab a5       	ldd	r26, Y+43	; 0x2b
    27ee:	bc a5       	ldd	r27, Y+44	; 0x2c
    27f0:	2a 2b       	or	r18, r26
    27f2:	3b 2b       	or	r19, r27
    27f4:	82 95       	swap	r24
    27f6:	81 70       	andi	r24, 0x01	; 1
    27f8:	8d a7       	std	Y+45, r24	; 0x2d
    27fa:	1e a6       	std	Y+46, r1	; 0x2e
    27fc:	8d a5       	ldd	r24, Y+45	; 0x2d
    27fe:	9e a5       	ldd	r25, Y+46	; 0x2e
    2800:	88 0f       	add	r24, r24
    2802:	99 1f       	adc	r25, r25
    2804:	28 2b       	or	r18, r24
    2806:	39 2b       	or	r19, r25
    2808:	e5 fb       	bst	r30, 5
    280a:	ee 27       	eor	r30, r30
    280c:	e0 f9       	bld	r30, 0
    280e:	ef a7       	std	Y+47, r30	; 0x2f
    2810:	18 aa       	std	Y+48, r1	; 0x30
    2812:	8f a5       	ldd	r24, Y+47	; 0x2f
    2814:	98 a9       	ldd	r25, Y+48	; 0x30
    2816:	88 0f       	add	r24, r24
    2818:	99 1f       	adc	r25, r25
    281a:	88 0f       	add	r24, r24
    281c:	99 1f       	adc	r25, r25
    281e:	88 0f       	add	r24, r24
    2820:	99 1f       	adc	r25, r25
    2822:	28 2b       	or	r18, r24
    2824:	39 2b       	or	r19, r25
    2826:	12 9f       	mul	r17, r18
    2828:	c0 01       	movw	r24, r0
    282a:	13 9f       	mul	r17, r19
    282c:	90 0d       	add	r25, r0
    282e:	11 24       	eor	r1, r1
    2830:	fc 01       	movw	r30, r24
    2832:	ea 54       	subi	r30, 0x4A	; 74
    2834:	ff 4d       	sbci	r31, 0xDF	; 223
    2836:	b1 81       	ldd	r27, Z+1	; 0x01
    2838:	ba ab       	std	Y+50, r27	; 0x32
    283a:	19 aa       	std	Y+49, r1	; 0x31
    283c:	77 1f       	adc	r23, r23
    283e:	77 27       	eor	r23, r23
    2840:	77 1f       	adc	r23, r23
    2842:	87 2f       	mov	r24, r23
    2844:	90 e0       	ldi	r25, 0x00	; 0
    2846:	88 0f       	add	r24, r24
    2848:	99 1f       	adc	r25, r25
    284a:	88 0f       	add	r24, r24
    284c:	99 1f       	adc	r25, r25
    284e:	66 fb       	bst	r22, 6
    2850:	66 27       	eor	r22, r22
    2852:	60 f9       	bld	r22, 0
    2854:	6b ab       	std	Y+51, r22	; 0x33
    2856:	1c aa       	std	Y+52, r1	; 0x34
    2858:	eb a9       	ldd	r30, Y+51	; 0x33
    285a:	fc a9       	ldd	r31, Y+52	; 0x34
    285c:	8e 2b       	or	r24, r30
    285e:	9f 2b       	or	r25, r31
    2860:	52 95       	swap	r21
    2862:	51 70       	andi	r21, 0x01	; 1
    2864:	5d ab       	std	Y+53, r21	; 0x35
    2866:	1e aa       	std	Y+54, r1	; 0x36
    2868:	2d a9       	ldd	r18, Y+53	; 0x35
    286a:	3e a9       	ldd	r19, Y+54	; 0x36
    286c:	22 0f       	add	r18, r18
    286e:	33 1f       	adc	r19, r19
    2870:	82 2b       	or	r24, r18
    2872:	93 2b       	or	r25, r19
    2874:	45 fb       	bst	r20, 5
    2876:	44 27       	eor	r20, r20
    2878:	40 f9       	bld	r20, 0
    287a:	4f ab       	std	Y+55, r20	; 0x37
    287c:	18 ae       	std	Y+56, r1	; 0x38
    287e:	2f a9       	ldd	r18, Y+55	; 0x37
    2880:	38 ad       	ldd	r19, Y+56	; 0x38
    2882:	22 0f       	add	r18, r18
    2884:	33 1f       	adc	r19, r19
    2886:	22 0f       	add	r18, r18
    2888:	33 1f       	adc	r19, r19
    288a:	22 0f       	add	r18, r18
    288c:	33 1f       	adc	r19, r19
    288e:	82 2b       	or	r24, r18
    2890:	93 2b       	or	r25, r19
    2892:	18 9f       	mul	r17, r24
    2894:	a0 01       	movw	r20, r0
    2896:	19 9f       	mul	r17, r25
    2898:	50 0d       	add	r21, r0
    289a:	11 24       	eor	r1, r1
    289c:	fa 01       	movw	r30, r20
    289e:	ea 54       	subi	r30, 0x4A	; 74
    28a0:	ff 4d       	sbci	r31, 0xDF	; 223
    28a2:	23 81       	ldd	r18, Z+3	; 0x03
    28a4:	34 81       	ldd	r19, Z+4	; 0x04
    28a6:	49 a9       	ldd	r20, Y+49	; 0x31
    28a8:	5a a9       	ldd	r21, Y+50	; 0x32
    28aa:	24 2b       	or	r18, r20
    28ac:	35 2b       	or	r19, r21
    28ae:	48 e2       	ldi	r20, 0x28	; 40
    28b0:	42 9f       	mul	r20, r18
    28b2:	c0 01       	movw	r24, r0
    28b4:	43 9f       	mul	r20, r19
    28b6:	90 0d       	add	r25, r0
    28b8:	11 24       	eor	r1, r1
    28ba:	5c 01       	movw	r10, r24
    28bc:	ac 18       	sub	r10, r12
    28be:	bd 08       	sbc	r11, r13
    28c0:	00 91 81 23 	lds	r16, 0x2381
    28c4:	10 91 82 23 	lds	r17, 0x2382
    28c8:	b8 01       	movw	r22, r16
    28ca:	88 27       	eor	r24, r24
    28cc:	77 fd       	sbrc	r23, 7
    28ce:	80 95       	com	r24
    28d0:	98 2f       	mov	r25, r24
    28d2:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    28d6:	6b 01       	movw	r12, r22
    28d8:	7c 01       	movw	r14, r24
    28da:	80 91 7f 23 	lds	r24, 0x237F
    28de:	90 91 80 23 	lds	r25, 0x2380
    28e2:	b5 01       	movw	r22, r10
    28e4:	68 1b       	sub	r22, r24
    28e6:	79 0b       	sbc	r23, r25
    28e8:	cb 01       	movw	r24, r22
    28ea:	22 e3       	ldi	r18, 0x32	; 50
    28ec:	28 9f       	mul	r18, r24
    28ee:	b0 01       	movw	r22, r0
    28f0:	29 9f       	mul	r18, r25
    28f2:	70 0d       	add	r23, r0
    28f4:	11 24       	eor	r1, r1
    28f6:	60 1b       	sub	r22, r16
    28f8:	71 0b       	sbc	r23, r17
    28fa:	88 27       	eor	r24, r24
    28fc:	77 fd       	sbrc	r23, 7
    28fe:	80 95       	com	r24
    2900:	98 2f       	mov	r25, r24
    2902:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2906:	2e ea       	ldi	r18, 0xAE	; 174
    2908:	37 e4       	ldi	r19, 0x47	; 71
    290a:	41 ee       	ldi	r20, 0xE1	; 225
    290c:	5d e3       	ldi	r21, 0x3D	; 61
    290e:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2912:	9b 01       	movw	r18, r22
    2914:	ac 01       	movw	r20, r24
    2916:	c7 01       	movw	r24, r14
    2918:	b6 01       	movw	r22, r12
    291a:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    291e:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2922:	8b 01       	movw	r16, r22
    2924:	6f 5c       	subi	r22, 0xCF	; 207
    2926:	7f 4f       	sbci	r23, 0xFF	; 255
    2928:	63 36       	cpi	r22, 0x63	; 99
    292a:	71 05       	cpc	r23, r1
    292c:	48 f0       	brcs	.+18     	; 0x2940 <main+0x766>
    292e:	01 36       	cpi	r16, 0x61	; 97
    2930:	79 e0       	ldi	r23, 0x09	; 9
    2932:	17 07       	cpc	r17, r23
    2934:	44 f4       	brge	.+16     	; 0x2946 <main+0x76c>
    2936:	00 3a       	cpi	r16, 0xA0	; 160
    2938:	86 ef       	ldi	r24, 0xF6	; 246
    293a:	18 07       	cpc	r17, r24
    293c:	3c f0       	brlt	.+14     	; 0x294c <main+0x772>
    293e:	08 c0       	rjmp	.+16     	; 0x2950 <main+0x776>
    2940:	00 e0       	ldi	r16, 0x00	; 0
    2942:	10 e0       	ldi	r17, 0x00	; 0
    2944:	05 c0       	rjmp	.+10     	; 0x2950 <main+0x776>
    2946:	00 e0       	ldi	r16, 0x00	; 0
    2948:	10 e0       	ldi	r17, 0x00	; 0
    294a:	02 c0       	rjmp	.+4      	; 0x2950 <main+0x776>
    294c:	00 e0       	ldi	r16, 0x00	; 0
    294e:	10 e0       	ldi	r17, 0x00	; 0
    2950:	b5 01       	movw	r22, r10
    2952:	88 27       	eor	r24, r24
    2954:	77 fd       	sbrc	r23, 7
    2956:	80 95       	com	r24
    2958:	98 2f       	mov	r25, r24
    295a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    295e:	6b 01       	movw	r12, r22
    2960:	7c 01       	movw	r14, r24
    2962:	9b 01       	movw	r18, r22
    2964:	ac 01       	movw	r20, r24
    2966:	69 81       	ldd	r22, Y+1	; 0x01
    2968:	7a 81       	ldd	r23, Y+2	; 0x02
    296a:	8b 81       	ldd	r24, Y+3	; 0x03
    296c:	9c 81       	ldd	r25, Y+4	; 0x04
    296e:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2972:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2976:	cf 51       	subi	r28, 0x1F	; 31
    2978:	df 4f       	sbci	r29, 0xFF	; 255
    297a:	68 83       	st	Y, r22
    297c:	79 83       	std	Y+1, r23	; 0x01
    297e:	8a 83       	std	Y+2, r24	; 0x02
    2980:	9b 83       	std	Y+3, r25	; 0x03
    2982:	c1 5e       	subi	r28, 0xE1	; 225
    2984:	d0 40       	sbci	r29, 0x00	; 0
    2986:	60 91 83 23 	lds	r22, 0x2383
    298a:	70 91 84 23 	lds	r23, 0x2384
    298e:	88 27       	eor	r24, r24
    2990:	77 fd       	sbrc	r23, 7
    2992:	80 95       	com	r24
    2994:	98 2f       	mov	r25, r24
    2996:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    299a:	2b 01       	movw	r4, r22
    299c:	3c 01       	movw	r6, r24
    299e:	a7 01       	movw	r20, r14
    29a0:	96 01       	movw	r18, r12
    29a2:	69 85       	ldd	r22, Y+9	; 0x09
    29a4:	7a 85       	ldd	r23, Y+10	; 0x0a
    29a6:	8b 85       	ldd	r24, Y+11	; 0x0b
    29a8:	9c 85       	ldd	r25, Y+12	; 0x0c
    29aa:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    29ae:	2a e0       	ldi	r18, 0x0A	; 10
    29b0:	37 ed       	ldi	r19, 0xD7	; 215
    29b2:	43 ea       	ldi	r20, 0xA3	; 163
    29b4:	5c e3       	ldi	r21, 0x3C	; 60
    29b6:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    29ba:	9b 01       	movw	r18, r22
    29bc:	ac 01       	movw	r20, r24
    29be:	c3 01       	movw	r24, r6
    29c0:	b2 01       	movw	r22, r4
    29c2:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    29c6:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    29ca:	9b 01       	movw	r18, r22
    29cc:	60 93 83 23 	sts	0x2383, r22
    29d0:	70 93 84 23 	sts	0x2384, r23
    29d4:	61 35       	cpi	r22, 0x51	; 81
    29d6:	71 05       	cpc	r23, r1
    29d8:	3c f0       	brlt	.+14     	; 0x29e8 <main+0x80e>
    29da:	80 e5       	ldi	r24, 0x50	; 80
    29dc:	90 e0       	ldi	r25, 0x00	; 0
    29de:	80 93 83 23 	sts	0x2383, r24
    29e2:	90 93 84 23 	sts	0x2384, r25
    29e6:	09 c0       	rjmp	.+18     	; 0x29fa <main+0x820>
    29e8:	20 3b       	cpi	r18, 0xB0	; 176
    29ea:	3f 4f       	sbci	r19, 0xFF	; 255
    29ec:	34 f4       	brge	.+12     	; 0x29fa <main+0x820>
    29ee:	80 eb       	ldi	r24, 0xB0	; 176
    29f0:	9f ef       	ldi	r25, 0xFF	; 255
    29f2:	80 93 83 23 	sts	0x2383, r24
    29f6:	90 93 84 23 	sts	0x2384, r25
    29fa:	cf 51       	subi	r28, 0x1F	; 31
    29fc:	df 4f       	sbci	r29, 0xFF	; 255
    29fe:	88 81       	ld	r24, Y
    2a00:	99 81       	ldd	r25, Y+1	; 0x01
    2a02:	c1 5e       	subi	r28, 0xE1	; 225
    2a04:	d0 40       	sbci	r29, 0x00	; 0
    2a06:	80 38       	cpi	r24, 0x80	; 128
    2a08:	91 05       	cpc	r25, r1
    2a0a:	14 f0       	brlt	.+4      	; 0x2a10 <main+0x836>
    2a0c:	8f e7       	ldi	r24, 0x7F	; 127
    2a0e:	90 e0       	ldi	r25, 0x00	; 0
    2a10:	bc 01       	movw	r22, r24
    2a12:	81 38       	cpi	r24, 0x81	; 129
    2a14:	af ef       	ldi	r26, 0xFF	; 255
    2a16:	9a 07       	cpc	r25, r26
    2a18:	14 f4       	brge	.+4      	; 0x2a1e <main+0x844>
    2a1a:	61 e8       	ldi	r22, 0x81	; 129
    2a1c:	7f ef       	ldi	r23, 0xFF	; 255
    2a1e:	80 90 83 23 	lds	r8, 0x2383
    2a22:	90 90 84 23 	lds	r9, 0x2384
    2a26:	68 0d       	add	r22, r8
    2a28:	79 1d       	adc	r23, r9
    2a2a:	88 27       	eor	r24, r24
    2a2c:	77 fd       	sbrc	r23, 7
    2a2e:	80 95       	com	r24
    2a30:	98 2f       	mov	r25, r24
    2a32:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2a36:	6b 01       	movw	r12, r22
    2a38:	7c 01       	movw	r14, r24
    2a3a:	b8 01       	movw	r22, r16
    2a3c:	88 27       	eor	r24, r24
    2a3e:	77 fd       	sbrc	r23, 7
    2a40:	80 95       	com	r24
    2a42:	98 2f       	mov	r25, r24
    2a44:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2a48:	9b 01       	movw	r18, r22
    2a4a:	ac 01       	movw	r20, r24
    2a4c:	6d 85       	ldd	r22, Y+13	; 0x0d
    2a4e:	7e 85       	ldd	r23, Y+14	; 0x0e
    2a50:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a52:	98 89       	ldd	r25, Y+16	; 0x10
    2a54:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2a58:	9b 01       	movw	r18, r22
    2a5a:	ac 01       	movw	r20, r24
    2a5c:	c7 01       	movw	r24, r14
    2a5e:	b6 01       	movw	r22, r12
    2a60:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2a64:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2a68:	60 38       	cpi	r22, 0x80	; 128
    2a6a:	71 05       	cpc	r23, r1
    2a6c:	14 f0       	brlt	.+4      	; 0x2a72 <main+0x898>
    2a6e:	6f e7       	ldi	r22, 0x7F	; 127
    2a70:	70 e0       	ldi	r23, 0x00	; 0
    2a72:	a0 92 7f 23 	sts	0x237F, r10
    2a76:	b0 92 80 23 	sts	0x2380, r11
    2a7a:	00 93 81 23 	sts	0x2381, r16
    2a7e:	10 93 82 23 	sts	0x2382, r17
    2a82:	cb 01       	movw	r24, r22
    2a84:	61 38       	cpi	r22, 0x81	; 129
    2a86:	bf ef       	ldi	r27, 0xFF	; 255
    2a88:	7b 07       	cpc	r23, r27
    2a8a:	14 f4       	brge	.+4      	; 0x2a90 <main+0x8b6>
    2a8c:	81 e8       	ldi	r24, 0x81	; 129
    2a8e:	9f ef       	ldi	r25, 0xFF	; 255
    2a90:	80 93 87 23 	sts	0x2387, r24
    2a94:	e8 e0       	ldi	r30, 0x08	; 8
    2a96:	f6 e0       	ldi	r31, 0x06	; 6
    2a98:	60 81       	ld	r22, Z
    2a9a:	50 81       	ld	r21, Z
    2a9c:	70 81       	ld	r23, Z
    2a9e:	40 81       	ld	r20, Z
    2aa0:	90 81       	ld	r25, Z
    2aa2:	80 81       	ld	r24, Z
    2aa4:	20 81       	ld	r18, Z
    2aa6:	e0 81       	ld	r30, Z
    2aa8:	22 1f       	adc	r18, r18
    2aaa:	22 27       	eor	r18, r18
    2aac:	22 1f       	adc	r18, r18
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	22 0f       	add	r18, r18
    2ab2:	33 1f       	adc	r19, r19
    2ab4:	22 0f       	add	r18, r18
    2ab6:	33 1f       	adc	r19, r19
    2ab8:	96 fb       	bst	r25, 6
    2aba:	99 27       	eor	r25, r25
    2abc:	90 f9       	bld	r25, 0
    2abe:	99 af       	std	Y+57, r25	; 0x39
    2ac0:	1a ae       	std	Y+58, r1	; 0x3a
    2ac2:	a9 ad       	ldd	r26, Y+57	; 0x39
    2ac4:	ba ad       	ldd	r27, Y+58	; 0x3a
    2ac6:	2a 2b       	or	r18, r26
    2ac8:	3b 2b       	or	r19, r27
    2aca:	82 95       	swap	r24
    2acc:	81 70       	andi	r24, 0x01	; 1
    2ace:	8b af       	std	Y+59, r24	; 0x3b
    2ad0:	1c ae       	std	Y+60, r1	; 0x3c
    2ad2:	8b ad       	ldd	r24, Y+59	; 0x3b
    2ad4:	9c ad       	ldd	r25, Y+60	; 0x3c
    2ad6:	88 0f       	add	r24, r24
    2ad8:	99 1f       	adc	r25, r25
    2ada:	28 2b       	or	r18, r24
    2adc:	39 2b       	or	r19, r25
    2ade:	e5 fb       	bst	r30, 5
    2ae0:	ee 27       	eor	r30, r30
    2ae2:	e0 f9       	bld	r30, 0
    2ae4:	ed af       	std	Y+61, r30	; 0x3d
    2ae6:	1e ae       	std	Y+62, r1	; 0x3e
    2ae8:	8d ad       	ldd	r24, Y+61	; 0x3d
    2aea:	9e ad       	ldd	r25, Y+62	; 0x3e
    2aec:	88 0f       	add	r24, r24
    2aee:	99 1f       	adc	r25, r25
    2af0:	88 0f       	add	r24, r24
    2af2:	99 1f       	adc	r25, r25
    2af4:	88 0f       	add	r24, r24
    2af6:	99 1f       	adc	r25, r25
    2af8:	28 2b       	or	r18, r24
    2afa:	39 2b       	or	r19, r25
    2afc:	f7 e1       	ldi	r31, 0x17	; 23
    2afe:	f2 9f       	mul	r31, r18
    2b00:	c0 01       	movw	r24, r0
    2b02:	f3 9f       	mul	r31, r19
    2b04:	90 0d       	add	r25, r0
    2b06:	11 24       	eor	r1, r1
    2b08:	dc 01       	movw	r26, r24
    2b0a:	aa 54       	subi	r26, 0x4A	; 74
    2b0c:	bf 4d       	sbci	r27, 0xDF	; 223
    2b0e:	15 96       	adiw	r26, 0x05	; 5
    2b10:	ec 91       	ld	r30, X
    2b12:	21 96       	adiw	r28, 0x01	; 1
    2b14:	ef af       	std	Y+63, r30	; 0x3f
    2b16:	21 97       	sbiw	r28, 0x01	; 1
    2b18:	1f ae       	std	Y+63, r1	; 0x3f
    2b1a:	77 1f       	adc	r23, r23
    2b1c:	77 27       	eor	r23, r23
    2b1e:	77 1f       	adc	r23, r23
    2b20:	87 2f       	mov	r24, r23
    2b22:	90 e0       	ldi	r25, 0x00	; 0
    2b24:	88 0f       	add	r24, r24
    2b26:	99 1f       	adc	r25, r25
    2b28:	88 0f       	add	r24, r24
    2b2a:	99 1f       	adc	r25, r25
    2b2c:	66 fb       	bst	r22, 6
    2b2e:	66 27       	eor	r22, r22
    2b30:	60 f9       	bld	r22, 0
    2b32:	22 96       	adiw	r28, 0x02	; 2
    2b34:	6f af       	std	Y+63, r22	; 0x3f
    2b36:	22 97       	sbiw	r28, 0x02	; 2
    2b38:	23 96       	adiw	r28, 0x03	; 3
    2b3a:	1f ae       	std	Y+63, r1	; 0x3f
    2b3c:	23 97       	sbiw	r28, 0x03	; 3
    2b3e:	23 96       	adiw	r28, 0x03	; 3
    2b40:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b42:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b44:	23 97       	sbiw	r28, 0x03	; 3
    2b46:	82 2b       	or	r24, r18
    2b48:	93 2b       	or	r25, r19
    2b4a:	52 95       	swap	r21
    2b4c:	51 70       	andi	r21, 0x01	; 1
    2b4e:	24 96       	adiw	r28, 0x04	; 4
    2b50:	5f af       	std	Y+63, r21	; 0x3f
    2b52:	24 97       	sbiw	r28, 0x04	; 4
    2b54:	25 96       	adiw	r28, 0x05	; 5
    2b56:	1f ae       	std	Y+63, r1	; 0x3f
    2b58:	25 97       	sbiw	r28, 0x05	; 5
    2b5a:	25 96       	adiw	r28, 0x05	; 5
    2b5c:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b5e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b60:	25 97       	sbiw	r28, 0x05	; 5
    2b62:	22 0f       	add	r18, r18
    2b64:	33 1f       	adc	r19, r19
    2b66:	82 2b       	or	r24, r18
    2b68:	93 2b       	or	r25, r19
    2b6a:	45 fb       	bst	r20, 5
    2b6c:	44 27       	eor	r20, r20
    2b6e:	40 f9       	bld	r20, 0
    2b70:	26 96       	adiw	r28, 0x06	; 6
    2b72:	4f af       	std	Y+63, r20	; 0x3f
    2b74:	26 97       	sbiw	r28, 0x06	; 6
    2b76:	27 96       	adiw	r28, 0x07	; 7
    2b78:	1f ae       	std	Y+63, r1	; 0x3f
    2b7a:	27 97       	sbiw	r28, 0x07	; 7
    2b7c:	27 96       	adiw	r28, 0x07	; 7
    2b7e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2b80:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b82:	27 97       	sbiw	r28, 0x07	; 7
    2b84:	22 0f       	add	r18, r18
    2b86:	33 1f       	adc	r19, r19
    2b88:	22 0f       	add	r18, r18
    2b8a:	33 1f       	adc	r19, r19
    2b8c:	22 0f       	add	r18, r18
    2b8e:	33 1f       	adc	r19, r19
    2b90:	82 2b       	or	r24, r18
    2b92:	93 2b       	or	r25, r19
    2b94:	f8 9f       	mul	r31, r24
    2b96:	a0 01       	movw	r20, r0
    2b98:	f9 9f       	mul	r31, r25
    2b9a:	50 0d       	add	r21, r0
    2b9c:	11 24       	eor	r1, r1
    2b9e:	fa 01       	movw	r30, r20
    2ba0:	ea 54       	subi	r30, 0x4A	; 74
    2ba2:	ff 4d       	sbci	r31, 0xDF	; 223
    2ba4:	27 81       	ldd	r18, Z+7	; 0x07
    2ba6:	30 85       	ldd	r19, Z+8	; 0x08
    2ba8:	21 96       	adiw	r28, 0x01	; 1
    2baa:	4e ad       	ldd	r20, Y+62	; 0x3e
    2bac:	5f ad       	ldd	r21, Y+63	; 0x3f
    2bae:	21 97       	sbiw	r28, 0x01	; 1
    2bb0:	24 2b       	or	r18, r20
    2bb2:	35 2b       	or	r19, r21
    2bb4:	48 e2       	ldi	r20, 0x28	; 40
    2bb6:	42 9f       	mul	r20, r18
    2bb8:	c0 01       	movw	r24, r0
    2bba:	43 9f       	mul	r20, r19
    2bbc:	90 0d       	add	r25, r0
    2bbe:	11 24       	eor	r1, r1
    2bc0:	5c 01       	movw	r10, r24
    2bc2:	6d 81       	ldd	r22, Y+5	; 0x05
    2bc4:	7e 81       	ldd	r23, Y+6	; 0x06
    2bc6:	a6 1a       	sub	r10, r22
    2bc8:	b7 0a       	sbc	r11, r23
    2bca:	00 91 06 24 	lds	r16, 0x2406
    2bce:	10 91 07 24 	lds	r17, 0x2407
    2bd2:	b8 01       	movw	r22, r16
    2bd4:	88 27       	eor	r24, r24
    2bd6:	77 fd       	sbrc	r23, 7
    2bd8:	80 95       	com	r24
    2bda:	98 2f       	mov	r25, r24
    2bdc:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2be0:	6b 01       	movw	r12, r22
    2be2:	7c 01       	movw	r14, r24
    2be4:	80 91 04 24 	lds	r24, 0x2404
    2be8:	90 91 05 24 	lds	r25, 0x2405
    2bec:	d5 01       	movw	r26, r10
    2bee:	a8 1b       	sub	r26, r24
    2bf0:	b9 0b       	sbc	r27, r25
    2bf2:	22 e3       	ldi	r18, 0x32	; 50
    2bf4:	2a 9f       	mul	r18, r26
    2bf6:	b0 01       	movw	r22, r0
    2bf8:	2b 9f       	mul	r18, r27
    2bfa:	70 0d       	add	r23, r0
    2bfc:	11 24       	eor	r1, r1
    2bfe:	60 1b       	sub	r22, r16
    2c00:	71 0b       	sbc	r23, r17
    2c02:	88 27       	eor	r24, r24
    2c04:	77 fd       	sbrc	r23, 7
    2c06:	80 95       	com	r24
    2c08:	98 2f       	mov	r25, r24
    2c0a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2c0e:	2e ea       	ldi	r18, 0xAE	; 174
    2c10:	37 e4       	ldi	r19, 0x47	; 71
    2c12:	41 ee       	ldi	r20, 0xE1	; 225
    2c14:	5d e3       	ldi	r21, 0x3D	; 61
    2c16:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2c1a:	9b 01       	movw	r18, r22
    2c1c:	ac 01       	movw	r20, r24
    2c1e:	c7 01       	movw	r24, r14
    2c20:	b6 01       	movw	r22, r12
    2c22:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2c26:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2c2a:	8b 01       	movw	r16, r22
    2c2c:	6f 5c       	subi	r22, 0xCF	; 207
    2c2e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c30:	63 36       	cpi	r22, 0x63	; 99
    2c32:	71 05       	cpc	r23, r1
    2c34:	48 f0       	brcs	.+18     	; 0x2c48 <main+0xa6e>
    2c36:	01 36       	cpi	r16, 0x61	; 97
    2c38:	b9 e0       	ldi	r27, 0x09	; 9
    2c3a:	1b 07       	cpc	r17, r27
    2c3c:	44 f4       	brge	.+16     	; 0x2c4e <main+0xa74>
    2c3e:	00 3a       	cpi	r16, 0xA0	; 160
    2c40:	e6 ef       	ldi	r30, 0xF6	; 246
    2c42:	1e 07       	cpc	r17, r30
    2c44:	3c f0       	brlt	.+14     	; 0x2c54 <main+0xa7a>
    2c46:	08 c0       	rjmp	.+16     	; 0x2c58 <main+0xa7e>
    2c48:	00 e0       	ldi	r16, 0x00	; 0
    2c4a:	10 e0       	ldi	r17, 0x00	; 0
    2c4c:	05 c0       	rjmp	.+10     	; 0x2c58 <main+0xa7e>
    2c4e:	00 e0       	ldi	r16, 0x00	; 0
    2c50:	10 e0       	ldi	r17, 0x00	; 0
    2c52:	02 c0       	rjmp	.+4      	; 0x2c58 <main+0xa7e>
    2c54:	00 e0       	ldi	r16, 0x00	; 0
    2c56:	10 e0       	ldi	r17, 0x00	; 0
    2c58:	b5 01       	movw	r22, r10
    2c5a:	88 27       	eor	r24, r24
    2c5c:	77 fd       	sbrc	r23, 7
    2c5e:	80 95       	com	r24
    2c60:	98 2f       	mov	r25, r24
    2c62:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2c66:	6b 01       	movw	r12, r22
    2c68:	7c 01       	movw	r14, r24
    2c6a:	9b 01       	movw	r18, r22
    2c6c:	ac 01       	movw	r20, r24
    2c6e:	69 81       	ldd	r22, Y+1	; 0x01
    2c70:	7a 81       	ldd	r23, Y+2	; 0x02
    2c72:	8b 81       	ldd	r24, Y+3	; 0x03
    2c74:	9c 81       	ldd	r25, Y+4	; 0x04
    2c76:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2c7a:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2c7e:	6d 83       	std	Y+5, r22	; 0x05
    2c80:	7e 83       	std	Y+6, r23	; 0x06
    2c82:	8f 83       	std	Y+7, r24	; 0x07
    2c84:	98 87       	std	Y+8, r25	; 0x08
    2c86:	60 91 08 24 	lds	r22, 0x2408
    2c8a:	70 91 09 24 	lds	r23, 0x2409
    2c8e:	88 27       	eor	r24, r24
    2c90:	77 fd       	sbrc	r23, 7
    2c92:	80 95       	com	r24
    2c94:	98 2f       	mov	r25, r24
    2c96:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2c9a:	2b 01       	movw	r4, r22
    2c9c:	3c 01       	movw	r6, r24
    2c9e:	a7 01       	movw	r20, r14
    2ca0:	96 01       	movw	r18, r12
    2ca2:	69 85       	ldd	r22, Y+9	; 0x09
    2ca4:	7a 85       	ldd	r23, Y+10	; 0x0a
    2ca6:	8b 85       	ldd	r24, Y+11	; 0x0b
    2ca8:	9c 85       	ldd	r25, Y+12	; 0x0c
    2caa:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2cae:	2a e0       	ldi	r18, 0x0A	; 10
    2cb0:	37 ed       	ldi	r19, 0xD7	; 215
    2cb2:	43 ea       	ldi	r20, 0xA3	; 163
    2cb4:	5c e3       	ldi	r21, 0x3C	; 60
    2cb6:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2cba:	9b 01       	movw	r18, r22
    2cbc:	ac 01       	movw	r20, r24
    2cbe:	c3 01       	movw	r24, r6
    2cc0:	b2 01       	movw	r22, r4
    2cc2:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2cc6:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2cca:	60 93 08 24 	sts	0x2408, r22
    2cce:	70 93 09 24 	sts	0x2409, r23
    2cd2:	61 35       	cpi	r22, 0x51	; 81
    2cd4:	71 05       	cpc	r23, r1
    2cd6:	3c f0       	brlt	.+14     	; 0x2ce6 <main+0xb0c>
    2cd8:	80 e5       	ldi	r24, 0x50	; 80
    2cda:	90 e0       	ldi	r25, 0x00	; 0
    2cdc:	80 93 08 24 	sts	0x2408, r24
    2ce0:	90 93 09 24 	sts	0x2409, r25
    2ce4:	0a c0       	rjmp	.+20     	; 0x2cfa <main+0xb20>
    2ce6:	60 3b       	cpi	r22, 0xB0	; 176
    2ce8:	ff ef       	ldi	r31, 0xFF	; 255
    2cea:	7f 07       	cpc	r23, r31
    2cec:	34 f4       	brge	.+12     	; 0x2cfa <main+0xb20>
    2cee:	80 eb       	ldi	r24, 0xB0	; 176
    2cf0:	9f ef       	ldi	r25, 0xFF	; 255
    2cf2:	80 93 08 24 	sts	0x2408, r24
    2cf6:	90 93 09 24 	sts	0x2409, r25
    2cfa:	8d 81       	ldd	r24, Y+5	; 0x05
    2cfc:	9e 81       	ldd	r25, Y+6	; 0x06
    2cfe:	80 38       	cpi	r24, 0x80	; 128
    2d00:	91 05       	cpc	r25, r1
    2d02:	14 f0       	brlt	.+4      	; 0x2d08 <main+0xb2e>
    2d04:	8f e7       	ldi	r24, 0x7F	; 127
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	bc 01       	movw	r22, r24
    2d0a:	81 38       	cpi	r24, 0x81	; 129
    2d0c:	2f ef       	ldi	r18, 0xFF	; 255
    2d0e:	92 07       	cpc	r25, r18
    2d10:	14 f4       	brge	.+4      	; 0x2d16 <main+0xb3c>
    2d12:	61 e8       	ldi	r22, 0x81	; 129
    2d14:	7f ef       	ldi	r23, 0xFF	; 255
    2d16:	80 90 08 24 	lds	r8, 0x2408
    2d1a:	90 90 09 24 	lds	r9, 0x2409
    2d1e:	68 0d       	add	r22, r8
    2d20:	79 1d       	adc	r23, r9
    2d22:	88 27       	eor	r24, r24
    2d24:	77 fd       	sbrc	r23, 7
    2d26:	80 95       	com	r24
    2d28:	98 2f       	mov	r25, r24
    2d2a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2d2e:	6b 01       	movw	r12, r22
    2d30:	7c 01       	movw	r14, r24
    2d32:	b8 01       	movw	r22, r16
    2d34:	88 27       	eor	r24, r24
    2d36:	77 fd       	sbrc	r23, 7
    2d38:	80 95       	com	r24
    2d3a:	98 2f       	mov	r25, r24
    2d3c:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2d40:	9b 01       	movw	r18, r22
    2d42:	ac 01       	movw	r20, r24
    2d44:	6d 85       	ldd	r22, Y+13	; 0x0d
    2d46:	7e 85       	ldd	r23, Y+14	; 0x0e
    2d48:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d4a:	98 89       	ldd	r25, Y+16	; 0x10
    2d4c:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2d50:	9b 01       	movw	r18, r22
    2d52:	ac 01       	movw	r20, r24
    2d54:	c7 01       	movw	r24, r14
    2d56:	b6 01       	movw	r22, r12
    2d58:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2d5c:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2d60:	60 38       	cpi	r22, 0x80	; 128
    2d62:	71 05       	cpc	r23, r1
    2d64:	14 f0       	brlt	.+4      	; 0x2d6a <main+0xb90>
    2d66:	6f e7       	ldi	r22, 0x7F	; 127
    2d68:	70 e0       	ldi	r23, 0x00	; 0
    2d6a:	a0 92 04 24 	sts	0x2404, r10
    2d6e:	b0 92 05 24 	sts	0x2405, r11
    2d72:	00 93 06 24 	sts	0x2406, r16
    2d76:	10 93 07 24 	sts	0x2407, r17
    2d7a:	cb 01       	movw	r24, r22
    2d7c:	61 38       	cpi	r22, 0x81	; 129
    2d7e:	3f ef       	ldi	r19, 0xFF	; 255
    2d80:	73 07       	cpc	r23, r19
    2d82:	14 f4       	brge	.+4      	; 0x2d88 <main+0xbae>
    2d84:	81 e8       	ldi	r24, 0x81	; 129
    2d86:	9f ef       	ldi	r25, 0xFF	; 255
    2d88:	80 93 0c 24 	sts	0x240C, r24
    2d8c:	a8 e0       	ldi	r26, 0x08	; 8
    2d8e:	b6 e0       	ldi	r27, 0x06	; 6
    2d90:	6c 91       	ld	r22, X
    2d92:	5c 91       	ld	r21, X
    2d94:	7c 91       	ld	r23, X
    2d96:	4c 91       	ld	r20, X
    2d98:	9c 91       	ld	r25, X
    2d9a:	8c 91       	ld	r24, X
    2d9c:	2c 91       	ld	r18, X
    2d9e:	ec 91       	ld	r30, X
    2da0:	22 1f       	adc	r18, r18
    2da2:	22 27       	eor	r18, r18
    2da4:	22 1f       	adc	r18, r18
    2da6:	30 e0       	ldi	r19, 0x00	; 0
    2da8:	22 0f       	add	r18, r18
    2daa:	33 1f       	adc	r19, r19
    2dac:	22 0f       	add	r18, r18
    2dae:	33 1f       	adc	r19, r19
    2db0:	96 fb       	bst	r25, 6
    2db2:	99 27       	eor	r25, r25
    2db4:	90 f9       	bld	r25, 0
    2db6:	28 96       	adiw	r28, 0x08	; 8
    2db8:	9f af       	std	Y+63, r25	; 0x3f
    2dba:	28 97       	sbiw	r28, 0x08	; 8
    2dbc:	29 96       	adiw	r28, 0x09	; 9
    2dbe:	1f ae       	std	Y+63, r1	; 0x3f
    2dc0:	29 97       	sbiw	r28, 0x09	; 9
    2dc2:	29 96       	adiw	r28, 0x09	; 9
    2dc4:	ae ad       	ldd	r26, Y+62	; 0x3e
    2dc6:	bf ad       	ldd	r27, Y+63	; 0x3f
    2dc8:	29 97       	sbiw	r28, 0x09	; 9
    2dca:	2a 2b       	or	r18, r26
    2dcc:	3b 2b       	or	r19, r27
    2dce:	82 95       	swap	r24
    2dd0:	81 70       	andi	r24, 0x01	; 1
    2dd2:	2a 96       	adiw	r28, 0x0a	; 10
    2dd4:	8f af       	std	Y+63, r24	; 0x3f
    2dd6:	2a 97       	sbiw	r28, 0x0a	; 10
    2dd8:	2b 96       	adiw	r28, 0x0b	; 11
    2dda:	1f ae       	std	Y+63, r1	; 0x3f
    2ddc:	2b 97       	sbiw	r28, 0x0b	; 11
    2dde:	2b 96       	adiw	r28, 0x0b	; 11
    2de0:	8e ad       	ldd	r24, Y+62	; 0x3e
    2de2:	9f ad       	ldd	r25, Y+63	; 0x3f
    2de4:	2b 97       	sbiw	r28, 0x0b	; 11
    2de6:	88 0f       	add	r24, r24
    2de8:	99 1f       	adc	r25, r25
    2dea:	28 2b       	or	r18, r24
    2dec:	39 2b       	or	r19, r25
    2dee:	e5 fb       	bst	r30, 5
    2df0:	ee 27       	eor	r30, r30
    2df2:	e0 f9       	bld	r30, 0
    2df4:	2c 96       	adiw	r28, 0x0c	; 12
    2df6:	ef af       	std	Y+63, r30	; 0x3f
    2df8:	2c 97       	sbiw	r28, 0x0c	; 12
    2dfa:	2d 96       	adiw	r28, 0x0d	; 13
    2dfc:	1f ae       	std	Y+63, r1	; 0x3f
    2dfe:	2d 97       	sbiw	r28, 0x0d	; 13
    2e00:	2d 96       	adiw	r28, 0x0d	; 13
    2e02:	8e ad       	ldd	r24, Y+62	; 0x3e
    2e04:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e06:	2d 97       	sbiw	r28, 0x0d	; 13
    2e08:	88 0f       	add	r24, r24
    2e0a:	99 1f       	adc	r25, r25
    2e0c:	88 0f       	add	r24, r24
    2e0e:	99 1f       	adc	r25, r25
    2e10:	88 0f       	add	r24, r24
    2e12:	99 1f       	adc	r25, r25
    2e14:	28 2b       	or	r18, r24
    2e16:	39 2b       	or	r19, r25
    2e18:	f7 e1       	ldi	r31, 0x17	; 23
    2e1a:	f2 9f       	mul	r31, r18
    2e1c:	c0 01       	movw	r24, r0
    2e1e:	f3 9f       	mul	r31, r19
    2e20:	90 0d       	add	r25, r0
    2e22:	11 24       	eor	r1, r1
    2e24:	dc 01       	movw	r26, r24
    2e26:	aa 54       	subi	r26, 0x4A	; 74
    2e28:	bf 4d       	sbci	r27, 0xDF	; 223
    2e2a:	19 96       	adiw	r26, 0x09	; 9
    2e2c:	ec 91       	ld	r30, X
    2e2e:	2f 96       	adiw	r28, 0x0f	; 15
    2e30:	ef af       	std	Y+63, r30	; 0x3f
    2e32:	2f 97       	sbiw	r28, 0x0f	; 15
    2e34:	2e 96       	adiw	r28, 0x0e	; 14
    2e36:	1f ae       	std	Y+63, r1	; 0x3f
    2e38:	2e 97       	sbiw	r28, 0x0e	; 14
    2e3a:	77 1f       	adc	r23, r23
    2e3c:	77 27       	eor	r23, r23
    2e3e:	77 1f       	adc	r23, r23
    2e40:	87 2f       	mov	r24, r23
    2e42:	90 e0       	ldi	r25, 0x00	; 0
    2e44:	88 0f       	add	r24, r24
    2e46:	99 1f       	adc	r25, r25
    2e48:	88 0f       	add	r24, r24
    2e4a:	99 1f       	adc	r25, r25
    2e4c:	66 fb       	bst	r22, 6
    2e4e:	66 27       	eor	r22, r22
    2e50:	60 f9       	bld	r22, 0
    2e52:	60 96       	adiw	r28, 0x10	; 16
    2e54:	6f af       	std	Y+63, r22	; 0x3f
    2e56:	60 97       	sbiw	r28, 0x10	; 16
    2e58:	61 96       	adiw	r28, 0x11	; 17
    2e5a:	1f ae       	std	Y+63, r1	; 0x3f
    2e5c:	61 97       	sbiw	r28, 0x11	; 17
    2e5e:	61 96       	adiw	r28, 0x11	; 17
    2e60:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e62:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e64:	61 97       	sbiw	r28, 0x11	; 17
    2e66:	82 2b       	or	r24, r18
    2e68:	93 2b       	or	r25, r19
    2e6a:	52 95       	swap	r21
    2e6c:	51 70       	andi	r21, 0x01	; 1
    2e6e:	62 96       	adiw	r28, 0x12	; 18
    2e70:	5f af       	std	Y+63, r21	; 0x3f
    2e72:	62 97       	sbiw	r28, 0x12	; 18
    2e74:	63 96       	adiw	r28, 0x13	; 19
    2e76:	1f ae       	std	Y+63, r1	; 0x3f
    2e78:	63 97       	sbiw	r28, 0x13	; 19
    2e7a:	63 96       	adiw	r28, 0x13	; 19
    2e7c:	2e ad       	ldd	r18, Y+62	; 0x3e
    2e7e:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e80:	63 97       	sbiw	r28, 0x13	; 19
    2e82:	22 0f       	add	r18, r18
    2e84:	33 1f       	adc	r19, r19
    2e86:	82 2b       	or	r24, r18
    2e88:	93 2b       	or	r25, r19
    2e8a:	45 fb       	bst	r20, 5
    2e8c:	44 27       	eor	r20, r20
    2e8e:	40 f9       	bld	r20, 0
    2e90:	64 96       	adiw	r28, 0x14	; 20
    2e92:	4f af       	std	Y+63, r20	; 0x3f
    2e94:	64 97       	sbiw	r28, 0x14	; 20
    2e96:	65 96       	adiw	r28, 0x15	; 21
    2e98:	1f ae       	std	Y+63, r1	; 0x3f
    2e9a:	65 97       	sbiw	r28, 0x15	; 21
    2e9c:	65 96       	adiw	r28, 0x15	; 21
    2e9e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2ea0:	3f ad       	ldd	r19, Y+63	; 0x3f
    2ea2:	65 97       	sbiw	r28, 0x15	; 21
    2ea4:	22 0f       	add	r18, r18
    2ea6:	33 1f       	adc	r19, r19
    2ea8:	22 0f       	add	r18, r18
    2eaa:	33 1f       	adc	r19, r19
    2eac:	22 0f       	add	r18, r18
    2eae:	33 1f       	adc	r19, r19
    2eb0:	82 2b       	or	r24, r18
    2eb2:	93 2b       	or	r25, r19
    2eb4:	f8 9f       	mul	r31, r24
    2eb6:	a0 01       	movw	r20, r0
    2eb8:	f9 9f       	mul	r31, r25
    2eba:	50 0d       	add	r21, r0
    2ebc:	11 24       	eor	r1, r1
    2ebe:	fa 01       	movw	r30, r20
    2ec0:	ea 54       	subi	r30, 0x4A	; 74
    2ec2:	ff 4d       	sbci	r31, 0xDF	; 223
    2ec4:	23 85       	ldd	r18, Z+11	; 0x0b
    2ec6:	34 85       	ldd	r19, Z+12	; 0x0c
    2ec8:	2f 96       	adiw	r28, 0x0f	; 15
    2eca:	4e ad       	ldd	r20, Y+62	; 0x3e
    2ecc:	5f ad       	ldd	r21, Y+63	; 0x3f
    2ece:	2f 97       	sbiw	r28, 0x0f	; 15
    2ed0:	24 2b       	or	r18, r20
    2ed2:	35 2b       	or	r19, r21
    2ed4:	48 e2       	ldi	r20, 0x28	; 40
    2ed6:	42 9f       	mul	r20, r18
    2ed8:	c0 01       	movw	r24, r0
    2eda:	43 9f       	mul	r20, r19
    2edc:	90 0d       	add	r25, r0
    2ede:	11 24       	eor	r1, r1
    2ee0:	5c 01       	movw	r10, r24
    2ee2:	69 89       	ldd	r22, Y+17	; 0x11
    2ee4:	7a 89       	ldd	r23, Y+18	; 0x12
    2ee6:	a6 1a       	sub	r10, r22
    2ee8:	b7 0a       	sbc	r11, r23
    2eea:	00 91 1a 24 	lds	r16, 0x241A
    2eee:	10 91 1b 24 	lds	r17, 0x241B
    2ef2:	b8 01       	movw	r22, r16
    2ef4:	88 27       	eor	r24, r24
    2ef6:	77 fd       	sbrc	r23, 7
    2ef8:	80 95       	com	r24
    2efa:	98 2f       	mov	r25, r24
    2efc:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2f00:	6b 01       	movw	r12, r22
    2f02:	7c 01       	movw	r14, r24
    2f04:	80 91 18 24 	lds	r24, 0x2418
    2f08:	90 91 19 24 	lds	r25, 0x2419
    2f0c:	d5 01       	movw	r26, r10
    2f0e:	a8 1b       	sub	r26, r24
    2f10:	b9 0b       	sbc	r27, r25
    2f12:	22 e3       	ldi	r18, 0x32	; 50
    2f14:	2a 9f       	mul	r18, r26
    2f16:	b0 01       	movw	r22, r0
    2f18:	2b 9f       	mul	r18, r27
    2f1a:	70 0d       	add	r23, r0
    2f1c:	11 24       	eor	r1, r1
    2f1e:	60 1b       	sub	r22, r16
    2f20:	71 0b       	sbc	r23, r17
    2f22:	88 27       	eor	r24, r24
    2f24:	77 fd       	sbrc	r23, 7
    2f26:	80 95       	com	r24
    2f28:	98 2f       	mov	r25, r24
    2f2a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2f2e:	2e ea       	ldi	r18, 0xAE	; 174
    2f30:	37 e4       	ldi	r19, 0x47	; 71
    2f32:	41 ee       	ldi	r20, 0xE1	; 225
    2f34:	5d e3       	ldi	r21, 0x3D	; 61
    2f36:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2f3a:	9b 01       	movw	r18, r22
    2f3c:	ac 01       	movw	r20, r24
    2f3e:	c7 01       	movw	r24, r14
    2f40:	b6 01       	movw	r22, r12
    2f42:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2f46:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2f4a:	8b 01       	movw	r16, r22
    2f4c:	6f 5c       	subi	r22, 0xCF	; 207
    2f4e:	7f 4f       	sbci	r23, 0xFF	; 255
    2f50:	63 36       	cpi	r22, 0x63	; 99
    2f52:	71 05       	cpc	r23, r1
    2f54:	48 f0       	brcs	.+18     	; 0x2f68 <main+0xd8e>
    2f56:	01 36       	cpi	r16, 0x61	; 97
    2f58:	b9 e0       	ldi	r27, 0x09	; 9
    2f5a:	1b 07       	cpc	r17, r27
    2f5c:	44 f4       	brge	.+16     	; 0x2f6e <main+0xd94>
    2f5e:	00 3a       	cpi	r16, 0xA0	; 160
    2f60:	e6 ef       	ldi	r30, 0xF6	; 246
    2f62:	1e 07       	cpc	r17, r30
    2f64:	3c f0       	brlt	.+14     	; 0x2f74 <main+0xd9a>
    2f66:	08 c0       	rjmp	.+16     	; 0x2f78 <main+0xd9e>
    2f68:	00 e0       	ldi	r16, 0x00	; 0
    2f6a:	10 e0       	ldi	r17, 0x00	; 0
    2f6c:	05 c0       	rjmp	.+10     	; 0x2f78 <main+0xd9e>
    2f6e:	00 e0       	ldi	r16, 0x00	; 0
    2f70:	10 e0       	ldi	r17, 0x00	; 0
    2f72:	02 c0       	rjmp	.+4      	; 0x2f78 <main+0xd9e>
    2f74:	00 e0       	ldi	r16, 0x00	; 0
    2f76:	10 e0       	ldi	r17, 0x00	; 0
    2f78:	b5 01       	movw	r22, r10
    2f7a:	88 27       	eor	r24, r24
    2f7c:	77 fd       	sbrc	r23, 7
    2f7e:	80 95       	com	r24
    2f80:	98 2f       	mov	r25, r24
    2f82:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2f86:	6b 01       	movw	r12, r22
    2f88:	7c 01       	movw	r14, r24
    2f8a:	9b 01       	movw	r18, r22
    2f8c:	ac 01       	movw	r20, r24
    2f8e:	69 81       	ldd	r22, Y+1	; 0x01
    2f90:	7a 81       	ldd	r23, Y+2	; 0x02
    2f92:	8b 81       	ldd	r24, Y+3	; 0x03
    2f94:	9c 81       	ldd	r25, Y+4	; 0x04
    2f96:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2f9a:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2f9e:	6d 83       	std	Y+5, r22	; 0x05
    2fa0:	7e 83       	std	Y+6, r23	; 0x06
    2fa2:	8f 83       	std	Y+7, r24	; 0x07
    2fa4:	98 87       	std	Y+8, r25	; 0x08
    2fa6:	60 91 1c 24 	lds	r22, 0x241C
    2faa:	70 91 1d 24 	lds	r23, 0x241D
    2fae:	88 27       	eor	r24, r24
    2fb0:	77 fd       	sbrc	r23, 7
    2fb2:	80 95       	com	r24
    2fb4:	98 2f       	mov	r25, r24
    2fb6:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    2fba:	2b 01       	movw	r4, r22
    2fbc:	3c 01       	movw	r6, r24
    2fbe:	a7 01       	movw	r20, r14
    2fc0:	96 01       	movw	r18, r12
    2fc2:	69 85       	ldd	r22, Y+9	; 0x09
    2fc4:	7a 85       	ldd	r23, Y+10	; 0x0a
    2fc6:	8b 85       	ldd	r24, Y+11	; 0x0b
    2fc8:	9c 85       	ldd	r25, Y+12	; 0x0c
    2fca:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2fce:	2a e0       	ldi	r18, 0x0A	; 10
    2fd0:	37 ed       	ldi	r19, 0xD7	; 215
    2fd2:	43 ea       	ldi	r20, 0xA3	; 163
    2fd4:	5c e3       	ldi	r21, 0x3C	; 60
    2fd6:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    2fda:	9b 01       	movw	r18, r22
    2fdc:	ac 01       	movw	r20, r24
    2fde:	c3 01       	movw	r24, r6
    2fe0:	b2 01       	movw	r22, r4
    2fe2:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    2fe6:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    2fea:	60 93 1c 24 	sts	0x241C, r22
    2fee:	70 93 1d 24 	sts	0x241D, r23
    2ff2:	61 35       	cpi	r22, 0x51	; 81
    2ff4:	71 05       	cpc	r23, r1
    2ff6:	3c f0       	brlt	.+14     	; 0x3006 <main+0xe2c>
    2ff8:	80 e5       	ldi	r24, 0x50	; 80
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	80 93 1c 24 	sts	0x241C, r24
    3000:	90 93 1d 24 	sts	0x241D, r25
    3004:	0a c0       	rjmp	.+20     	; 0x301a <main+0xe40>
    3006:	60 3b       	cpi	r22, 0xB0	; 176
    3008:	ff ef       	ldi	r31, 0xFF	; 255
    300a:	7f 07       	cpc	r23, r31
    300c:	34 f4       	brge	.+12     	; 0x301a <main+0xe40>
    300e:	80 eb       	ldi	r24, 0xB0	; 176
    3010:	9f ef       	ldi	r25, 0xFF	; 255
    3012:	80 93 1c 24 	sts	0x241C, r24
    3016:	90 93 1d 24 	sts	0x241D, r25
    301a:	8d 81       	ldd	r24, Y+5	; 0x05
    301c:	9e 81       	ldd	r25, Y+6	; 0x06
    301e:	80 38       	cpi	r24, 0x80	; 128
    3020:	91 05       	cpc	r25, r1
    3022:	14 f0       	brlt	.+4      	; 0x3028 <main+0xe4e>
    3024:	8f e7       	ldi	r24, 0x7F	; 127
    3026:	90 e0       	ldi	r25, 0x00	; 0
    3028:	bc 01       	movw	r22, r24
    302a:	81 38       	cpi	r24, 0x81	; 129
    302c:	2f ef       	ldi	r18, 0xFF	; 255
    302e:	92 07       	cpc	r25, r18
    3030:	14 f4       	brge	.+4      	; 0x3036 <main+0xe5c>
    3032:	61 e8       	ldi	r22, 0x81	; 129
    3034:	7f ef       	ldi	r23, 0xFF	; 255
    3036:	80 90 1c 24 	lds	r8, 0x241C
    303a:	90 90 1d 24 	lds	r9, 0x241D
    303e:	68 0d       	add	r22, r8
    3040:	79 1d       	adc	r23, r9
    3042:	88 27       	eor	r24, r24
    3044:	77 fd       	sbrc	r23, 7
    3046:	80 95       	com	r24
    3048:	98 2f       	mov	r25, r24
    304a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    304e:	6b 01       	movw	r12, r22
    3050:	7c 01       	movw	r14, r24
    3052:	b8 01       	movw	r22, r16
    3054:	88 27       	eor	r24, r24
    3056:	77 fd       	sbrc	r23, 7
    3058:	80 95       	com	r24
    305a:	98 2f       	mov	r25, r24
    305c:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    3060:	9b 01       	movw	r18, r22
    3062:	ac 01       	movw	r20, r24
    3064:	6d 85       	ldd	r22, Y+13	; 0x0d
    3066:	7e 85       	ldd	r23, Y+14	; 0x0e
    3068:	8f 85       	ldd	r24, Y+15	; 0x0f
    306a:	98 89       	ldd	r25, Y+16	; 0x10
    306c:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    3070:	9b 01       	movw	r18, r22
    3072:	ac 01       	movw	r20, r24
    3074:	c7 01       	movw	r24, r14
    3076:	b6 01       	movw	r22, r12
    3078:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    307c:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    3080:	60 38       	cpi	r22, 0x80	; 128
    3082:	71 05       	cpc	r23, r1
    3084:	14 f0       	brlt	.+4      	; 0x308a <main+0xeb0>
    3086:	6f e7       	ldi	r22, 0x7F	; 127
    3088:	70 e0       	ldi	r23, 0x00	; 0
    308a:	a0 92 18 24 	sts	0x2418, r10
    308e:	b0 92 19 24 	sts	0x2419, r11
    3092:	00 93 1a 24 	sts	0x241A, r16
    3096:	10 93 1b 24 	sts	0x241B, r17
    309a:	cb 01       	movw	r24, r22
    309c:	61 38       	cpi	r22, 0x81	; 129
    309e:	3f ef       	ldi	r19, 0xFF	; 255
    30a0:	73 07       	cpc	r23, r19
    30a2:	14 f4       	brge	.+4      	; 0x30a8 <main+0xece>
    30a4:	81 e8       	ldi	r24, 0x81	; 129
    30a6:	9f ef       	ldi	r25, 0xFF	; 255
    30a8:	80 93 20 24 	sts	0x2420, r24
    30ac:	a8 e0       	ldi	r26, 0x08	; 8
    30ae:	b6 e0       	ldi	r27, 0x06	; 6
    30b0:	6c 91       	ld	r22, X
    30b2:	5c 91       	ld	r21, X
    30b4:	7c 91       	ld	r23, X
    30b6:	4c 91       	ld	r20, X
    30b8:	9c 91       	ld	r25, X
    30ba:	8c 91       	ld	r24, X
    30bc:	2c 91       	ld	r18, X
    30be:	ec 91       	ld	r30, X
    30c0:	22 1f       	adc	r18, r18
    30c2:	22 27       	eor	r18, r18
    30c4:	22 1f       	adc	r18, r18
    30c6:	30 e0       	ldi	r19, 0x00	; 0
    30c8:	22 0f       	add	r18, r18
    30ca:	33 1f       	adc	r19, r19
    30cc:	22 0f       	add	r18, r18
    30ce:	33 1f       	adc	r19, r19
    30d0:	96 fb       	bst	r25, 6
    30d2:	99 27       	eor	r25, r25
    30d4:	90 f9       	bld	r25, 0
    30d6:	66 96       	adiw	r28, 0x16	; 22
    30d8:	9f af       	std	Y+63, r25	; 0x3f
    30da:	66 97       	sbiw	r28, 0x16	; 22
    30dc:	67 96       	adiw	r28, 0x17	; 23
    30de:	1f ae       	std	Y+63, r1	; 0x3f
    30e0:	67 97       	sbiw	r28, 0x17	; 23
    30e2:	67 96       	adiw	r28, 0x17	; 23
    30e4:	ae ad       	ldd	r26, Y+62	; 0x3e
    30e6:	bf ad       	ldd	r27, Y+63	; 0x3f
    30e8:	67 97       	sbiw	r28, 0x17	; 23
    30ea:	2a 2b       	or	r18, r26
    30ec:	3b 2b       	or	r19, r27
    30ee:	82 95       	swap	r24
    30f0:	81 70       	andi	r24, 0x01	; 1
    30f2:	68 96       	adiw	r28, 0x18	; 24
    30f4:	8f af       	std	Y+63, r24	; 0x3f
    30f6:	68 97       	sbiw	r28, 0x18	; 24
    30f8:	69 96       	adiw	r28, 0x19	; 25
    30fa:	1f ae       	std	Y+63, r1	; 0x3f
    30fc:	69 97       	sbiw	r28, 0x19	; 25
    30fe:	69 96       	adiw	r28, 0x19	; 25
    3100:	8e ad       	ldd	r24, Y+62	; 0x3e
    3102:	9f ad       	ldd	r25, Y+63	; 0x3f
    3104:	69 97       	sbiw	r28, 0x19	; 25
    3106:	88 0f       	add	r24, r24
    3108:	99 1f       	adc	r25, r25
    310a:	28 2b       	or	r18, r24
    310c:	39 2b       	or	r19, r25
    310e:	e5 fb       	bst	r30, 5
    3110:	ee 27       	eor	r30, r30
    3112:	e0 f9       	bld	r30, 0
    3114:	6a 96       	adiw	r28, 0x1a	; 26
    3116:	ef af       	std	Y+63, r30	; 0x3f
    3118:	6a 97       	sbiw	r28, 0x1a	; 26
    311a:	6b 96       	adiw	r28, 0x1b	; 27
    311c:	1f ae       	std	Y+63, r1	; 0x3f
    311e:	6b 97       	sbiw	r28, 0x1b	; 27
    3120:	6b 96       	adiw	r28, 0x1b	; 27
    3122:	8e ad       	ldd	r24, Y+62	; 0x3e
    3124:	9f ad       	ldd	r25, Y+63	; 0x3f
    3126:	6b 97       	sbiw	r28, 0x1b	; 27
    3128:	88 0f       	add	r24, r24
    312a:	99 1f       	adc	r25, r25
    312c:	88 0f       	add	r24, r24
    312e:	99 1f       	adc	r25, r25
    3130:	88 0f       	add	r24, r24
    3132:	99 1f       	adc	r25, r25
    3134:	28 2b       	or	r18, r24
    3136:	39 2b       	or	r19, r25
    3138:	f7 e1       	ldi	r31, 0x17	; 23
    313a:	f2 9f       	mul	r31, r18
    313c:	c0 01       	movw	r24, r0
    313e:	f3 9f       	mul	r31, r19
    3140:	90 0d       	add	r25, r0
    3142:	11 24       	eor	r1, r1
    3144:	dc 01       	movw	r26, r24
    3146:	aa 54       	subi	r26, 0x4A	; 74
    3148:	bf 4d       	sbci	r27, 0xDF	; 223
    314a:	1d 96       	adiw	r26, 0x0d	; 13
    314c:	ec 91       	ld	r30, X
    314e:	6d 96       	adiw	r28, 0x1d	; 29
    3150:	ef af       	std	Y+63, r30	; 0x3f
    3152:	6d 97       	sbiw	r28, 0x1d	; 29
    3154:	6c 96       	adiw	r28, 0x1c	; 28
    3156:	1f ae       	std	Y+63, r1	; 0x3f
    3158:	6c 97       	sbiw	r28, 0x1c	; 28
    315a:	77 1f       	adc	r23, r23
    315c:	77 27       	eor	r23, r23
    315e:	77 1f       	adc	r23, r23
    3160:	87 2f       	mov	r24, r23
    3162:	90 e0       	ldi	r25, 0x00	; 0
    3164:	88 0f       	add	r24, r24
    3166:	99 1f       	adc	r25, r25
    3168:	88 0f       	add	r24, r24
    316a:	99 1f       	adc	r25, r25
    316c:	66 fb       	bst	r22, 6
    316e:	66 27       	eor	r22, r22
    3170:	60 f9       	bld	r22, 0
    3172:	6e 96       	adiw	r28, 0x1e	; 30
    3174:	6f af       	std	Y+63, r22	; 0x3f
    3176:	6e 97       	sbiw	r28, 0x1e	; 30
    3178:	6f 96       	adiw	r28, 0x1f	; 31
    317a:	1f ae       	std	Y+63, r1	; 0x3f
    317c:	6f 97       	sbiw	r28, 0x1f	; 31
    317e:	6f 96       	adiw	r28, 0x1f	; 31
    3180:	2e ad       	ldd	r18, Y+62	; 0x3e
    3182:	3f ad       	ldd	r19, Y+63	; 0x3f
    3184:	6f 97       	sbiw	r28, 0x1f	; 31
    3186:	82 2b       	or	r24, r18
    3188:	93 2b       	or	r25, r19
    318a:	52 95       	swap	r21
    318c:	51 70       	andi	r21, 0x01	; 1
    318e:	a0 96       	adiw	r28, 0x20	; 32
    3190:	5f af       	std	Y+63, r21	; 0x3f
    3192:	a0 97       	sbiw	r28, 0x20	; 32
    3194:	a1 96       	adiw	r28, 0x21	; 33
    3196:	1f ae       	std	Y+63, r1	; 0x3f
    3198:	a1 97       	sbiw	r28, 0x21	; 33
    319a:	a1 96       	adiw	r28, 0x21	; 33
    319c:	2e ad       	ldd	r18, Y+62	; 0x3e
    319e:	3f ad       	ldd	r19, Y+63	; 0x3f
    31a0:	a1 97       	sbiw	r28, 0x21	; 33
    31a2:	22 0f       	add	r18, r18
    31a4:	33 1f       	adc	r19, r19
    31a6:	82 2b       	or	r24, r18
    31a8:	93 2b       	or	r25, r19
    31aa:	45 fb       	bst	r20, 5
    31ac:	44 27       	eor	r20, r20
    31ae:	40 f9       	bld	r20, 0
    31b0:	a2 96       	adiw	r28, 0x22	; 34
    31b2:	4f af       	std	Y+63, r20	; 0x3f
    31b4:	a2 97       	sbiw	r28, 0x22	; 34
    31b6:	a3 96       	adiw	r28, 0x23	; 35
    31b8:	1f ae       	std	Y+63, r1	; 0x3f
    31ba:	a3 97       	sbiw	r28, 0x23	; 35
    31bc:	a3 96       	adiw	r28, 0x23	; 35
    31be:	2e ad       	ldd	r18, Y+62	; 0x3e
    31c0:	3f ad       	ldd	r19, Y+63	; 0x3f
    31c2:	a3 97       	sbiw	r28, 0x23	; 35
    31c4:	22 0f       	add	r18, r18
    31c6:	33 1f       	adc	r19, r19
    31c8:	22 0f       	add	r18, r18
    31ca:	33 1f       	adc	r19, r19
    31cc:	22 0f       	add	r18, r18
    31ce:	33 1f       	adc	r19, r19
    31d0:	82 2b       	or	r24, r18
    31d2:	93 2b       	or	r25, r19
    31d4:	f8 9f       	mul	r31, r24
    31d6:	a0 01       	movw	r20, r0
    31d8:	f9 9f       	mul	r31, r25
    31da:	50 0d       	add	r21, r0
    31dc:	11 24       	eor	r1, r1
    31de:	fa 01       	movw	r30, r20
    31e0:	ea 54       	subi	r30, 0x4A	; 74
    31e2:	ff 4d       	sbci	r31, 0xDF	; 223
    31e4:	27 85       	ldd	r18, Z+15	; 0x0f
    31e6:	30 89       	ldd	r19, Z+16	; 0x10
    31e8:	6d 96       	adiw	r28, 0x1d	; 29
    31ea:	4e ad       	ldd	r20, Y+62	; 0x3e
    31ec:	5f ad       	ldd	r21, Y+63	; 0x3f
    31ee:	6d 97       	sbiw	r28, 0x1d	; 29
    31f0:	24 2b       	or	r18, r20
    31f2:	35 2b       	or	r19, r21
    31f4:	48 e2       	ldi	r20, 0x28	; 40
    31f6:	42 9f       	mul	r20, r18
    31f8:	c0 01       	movw	r24, r0
    31fa:	43 9f       	mul	r20, r19
    31fc:	90 0d       	add	r25, r0
    31fe:	11 24       	eor	r1, r1
    3200:	5c 01       	movw	r10, r24
    3202:	6d 89       	ldd	r22, Y+21	; 0x15
    3204:	7e 89       	ldd	r23, Y+22	; 0x16
    3206:	a6 1a       	sub	r10, r22
    3208:	b7 0a       	sbc	r11, r23
    320a:	d1 01       	movw	r26, r2
    320c:	18 96       	adiw	r26, 0x08	; 8
    320e:	0d 91       	ld	r16, X+
    3210:	1c 91       	ld	r17, X
    3212:	19 97       	sbiw	r26, 0x09	; 9
    3214:	b8 01       	movw	r22, r16
    3216:	88 27       	eor	r24, r24
    3218:	77 fd       	sbrc	r23, 7
    321a:	80 95       	com	r24
    321c:	98 2f       	mov	r25, r24
    321e:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    3222:	6b 01       	movw	r12, r22
    3224:	7c 01       	movw	r14, r24
    3226:	f1 01       	movw	r30, r2
    3228:	86 81       	ldd	r24, Z+6	; 0x06
    322a:	97 81       	ldd	r25, Z+7	; 0x07
    322c:	95 01       	movw	r18, r10
    322e:	28 1b       	sub	r18, r24
    3230:	39 0b       	sbc	r19, r25
    3232:	c9 01       	movw	r24, r18
    3234:	22 e3       	ldi	r18, 0x32	; 50
    3236:	28 9f       	mul	r18, r24
    3238:	b0 01       	movw	r22, r0
    323a:	29 9f       	mul	r18, r25
    323c:	70 0d       	add	r23, r0
    323e:	11 24       	eor	r1, r1
    3240:	60 1b       	sub	r22, r16
    3242:	71 0b       	sbc	r23, r17
    3244:	88 27       	eor	r24, r24
    3246:	77 fd       	sbrc	r23, 7
    3248:	80 95       	com	r24
    324a:	98 2f       	mov	r25, r24
    324c:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    3250:	2e ea       	ldi	r18, 0xAE	; 174
    3252:	37 e4       	ldi	r19, 0x47	; 71
    3254:	41 ee       	ldi	r20, 0xE1	; 225
    3256:	5d e3       	ldi	r21, 0x3D	; 61
    3258:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    325c:	9b 01       	movw	r18, r22
    325e:	ac 01       	movw	r20, r24
    3260:	c7 01       	movw	r24, r14
    3262:	b6 01       	movw	r22, r12
    3264:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    3268:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    326c:	8b 01       	movw	r16, r22
    326e:	6f 5c       	subi	r22, 0xCF	; 207
    3270:	7f 4f       	sbci	r23, 0xFF	; 255
    3272:	63 36       	cpi	r22, 0x63	; 99
    3274:	71 05       	cpc	r23, r1
    3276:	48 f0       	brcs	.+18     	; 0x328a <main+0x10b0>
    3278:	01 36       	cpi	r16, 0x61	; 97
    327a:	39 e0       	ldi	r19, 0x09	; 9
    327c:	13 07       	cpc	r17, r19
    327e:	44 f4       	brge	.+16     	; 0x3290 <main+0x10b6>
    3280:	00 3a       	cpi	r16, 0xA0	; 160
    3282:	46 ef       	ldi	r20, 0xF6	; 246
    3284:	14 07       	cpc	r17, r20
    3286:	3c f0       	brlt	.+14     	; 0x3296 <main+0x10bc>
    3288:	08 c0       	rjmp	.+16     	; 0x329a <main+0x10c0>
    328a:	00 e0       	ldi	r16, 0x00	; 0
    328c:	10 e0       	ldi	r17, 0x00	; 0
    328e:	05 c0       	rjmp	.+10     	; 0x329a <main+0x10c0>
    3290:	00 e0       	ldi	r16, 0x00	; 0
    3292:	10 e0       	ldi	r17, 0x00	; 0
    3294:	02 c0       	rjmp	.+4      	; 0x329a <main+0x10c0>
    3296:	00 e0       	ldi	r16, 0x00	; 0
    3298:	10 e0       	ldi	r17, 0x00	; 0
    329a:	b5 01       	movw	r22, r10
    329c:	88 27       	eor	r24, r24
    329e:	77 fd       	sbrc	r23, 7
    32a0:	80 95       	com	r24
    32a2:	98 2f       	mov	r25, r24
    32a4:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    32a8:	6b 01       	movw	r12, r22
    32aa:	7c 01       	movw	r14, r24
    32ac:	9b 01       	movw	r18, r22
    32ae:	ac 01       	movw	r20, r24
    32b0:	69 81       	ldd	r22, Y+1	; 0x01
    32b2:	7a 81       	ldd	r23, Y+2	; 0x02
    32b4:	8b 81       	ldd	r24, Y+3	; 0x03
    32b6:	9c 81       	ldd	r25, Y+4	; 0x04
    32b8:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    32bc:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    32c0:	69 83       	std	Y+1, r22	; 0x01
    32c2:	7a 83       	std	Y+2, r23	; 0x02
    32c4:	8b 83       	std	Y+3, r24	; 0x03
    32c6:	9c 83       	std	Y+4, r25	; 0x04
    32c8:	d1 01       	movw	r26, r2
    32ca:	1a 96       	adiw	r26, 0x0a	; 10
    32cc:	6d 91       	ld	r22, X+
    32ce:	7c 91       	ld	r23, X
    32d0:	1b 97       	sbiw	r26, 0x0b	; 11
    32d2:	88 27       	eor	r24, r24
    32d4:	77 fd       	sbrc	r23, 7
    32d6:	80 95       	com	r24
    32d8:	98 2f       	mov	r25, r24
    32da:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    32de:	2b 01       	movw	r4, r22
    32e0:	3c 01       	movw	r6, r24
    32e2:	a7 01       	movw	r20, r14
    32e4:	96 01       	movw	r18, r12
    32e6:	69 85       	ldd	r22, Y+9	; 0x09
    32e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    32ea:	8b 85       	ldd	r24, Y+11	; 0x0b
    32ec:	9c 85       	ldd	r25, Y+12	; 0x0c
    32ee:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    32f2:	2a e0       	ldi	r18, 0x0A	; 10
    32f4:	37 ed       	ldi	r19, 0xD7	; 215
    32f6:	43 ea       	ldi	r20, 0xA3	; 163
    32f8:	5c e3       	ldi	r21, 0x3C	; 60
    32fa:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    32fe:	9b 01       	movw	r18, r22
    3300:	ac 01       	movw	r20, r24
    3302:	c3 01       	movw	r24, r6
    3304:	b2 01       	movw	r22, r4
    3306:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    330a:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    330e:	f1 01       	movw	r30, r2
    3310:	62 87       	std	Z+10, r22	; 0x0a
    3312:	73 87       	std	Z+11, r23	; 0x0b
    3314:	61 35       	cpi	r22, 0x51	; 81
    3316:	71 05       	cpc	r23, r1
    3318:	2c f0       	brlt	.+10     	; 0x3324 <main+0x114a>
    331a:	80 e5       	ldi	r24, 0x50	; 80
    331c:	90 e0       	ldi	r25, 0x00	; 0
    331e:	82 87       	std	Z+10, r24	; 0x0a
    3320:	93 87       	std	Z+11, r25	; 0x0b
    3322:	0b c0       	rjmp	.+22     	; 0x333a <main+0x1160>
    3324:	60 3b       	cpi	r22, 0xB0	; 176
    3326:	ff ef       	ldi	r31, 0xFF	; 255
    3328:	7f 07       	cpc	r23, r31
    332a:	3c f4       	brge	.+14     	; 0x333a <main+0x1160>
    332c:	80 eb       	ldi	r24, 0xB0	; 176
    332e:	9f ef       	ldi	r25, 0xFF	; 255
    3330:	d1 01       	movw	r26, r2
    3332:	1a 96       	adiw	r26, 0x0a	; 10
    3334:	8d 93       	st	X+, r24
    3336:	9c 93       	st	X, r25
    3338:	1b 97       	sbiw	r26, 0x0b	; 11
    333a:	89 81       	ldd	r24, Y+1	; 0x01
    333c:	9a 81       	ldd	r25, Y+2	; 0x02
    333e:	80 38       	cpi	r24, 0x80	; 128
    3340:	91 05       	cpc	r25, r1
    3342:	14 f0       	brlt	.+4      	; 0x3348 <main+0x116e>
    3344:	8f e7       	ldi	r24, 0x7F	; 127
    3346:	90 e0       	ldi	r25, 0x00	; 0
    3348:	bc 01       	movw	r22, r24
    334a:	81 38       	cpi	r24, 0x81	; 129
    334c:	bf ef       	ldi	r27, 0xFF	; 255
    334e:	9b 07       	cpc	r25, r27
    3350:	14 f4       	brge	.+4      	; 0x3356 <main+0x117c>
    3352:	61 e8       	ldi	r22, 0x81	; 129
    3354:	7f ef       	ldi	r23, 0xFF	; 255
    3356:	f1 01       	movw	r30, r2
    3358:	82 84       	ldd	r8, Z+10	; 0x0a
    335a:	93 84       	ldd	r9, Z+11	; 0x0b
    335c:	68 0d       	add	r22, r8
    335e:	79 1d       	adc	r23, r9
    3360:	88 27       	eor	r24, r24
    3362:	77 fd       	sbrc	r23, 7
    3364:	80 95       	com	r24
    3366:	98 2f       	mov	r25, r24
    3368:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    336c:	6b 01       	movw	r12, r22
    336e:	7c 01       	movw	r14, r24
    3370:	b8 01       	movw	r22, r16
    3372:	88 27       	eor	r24, r24
    3374:	77 fd       	sbrc	r23, 7
    3376:	80 95       	com	r24
    3378:	98 2f       	mov	r25, r24
    337a:	0e 94 95 2b 	call	0x572a	; 0x572a <__floatsisf>
    337e:	9b 01       	movw	r18, r22
    3380:	ac 01       	movw	r20, r24
    3382:	6d 85       	ldd	r22, Y+13	; 0x0d
    3384:	7e 85       	ldd	r23, Y+14	; 0x0e
    3386:	8f 85       	ldd	r24, Y+15	; 0x0f
    3388:	98 89       	ldd	r25, Y+16	; 0x10
    338a:	0e 94 21 2c 	call	0x5842	; 0x5842 <__mulsf3>
    338e:	9b 01       	movw	r18, r22
    3390:	ac 01       	movw	r20, r24
    3392:	c7 01       	movw	r24, r14
    3394:	b6 01       	movw	r22, r12
    3396:	0e 94 96 2a 	call	0x552c	; 0x552c <__addsf3>
    339a:	0e 94 62 2b 	call	0x56c4	; 0x56c4 <__fixsfsi>
    339e:	60 38       	cpi	r22, 0x80	; 128
    33a0:	71 05       	cpc	r23, r1
    33a2:	14 f0       	brlt	.+4      	; 0x33a8 <main+0x11ce>
    33a4:	6f e7       	ldi	r22, 0x7F	; 127
    33a6:	70 e0       	ldi	r23, 0x00	; 0
    33a8:	d1 01       	movw	r26, r2
    33aa:	16 96       	adiw	r26, 0x06	; 6
    33ac:	ad 92       	st	X+, r10
    33ae:	bc 92       	st	X, r11
    33b0:	17 97       	sbiw	r26, 0x07	; 7
    33b2:	18 96       	adiw	r26, 0x08	; 8
    33b4:	0d 93       	st	X+, r16
    33b6:	1c 93       	st	X, r17
    33b8:	19 97       	sbiw	r26, 0x09	; 9
    33ba:	cb 01       	movw	r24, r22
    33bc:	61 38       	cpi	r22, 0x81	; 129
    33be:	bf ef       	ldi	r27, 0xFF	; 255
    33c0:	7b 07       	cpc	r23, r27
    33c2:	14 f4       	brge	.+4      	; 0x33c8 <main+0x11ee>
    33c4:	81 e8       	ldi	r24, 0x81	; 129
    33c6:	9f ef       	ldi	r25, 0xFF	; 255
    33c8:	80 93 b9 23 	sts	0x23B9, r24
    33cc:	6a e2       	ldi	r22, 0x2A	; 42
    33ce:	80 ea       	ldi	r24, 0xA0	; 160
    33d0:	9b e0       	ldi	r25, 0x0B	; 11
    33d2:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    33d6:	6e e7       	ldi	r22, 0x7E	; 126
    33d8:	80 ea       	ldi	r24, 0xA0	; 160
    33da:	9b e0       	ldi	r25, 0x0B	; 11
    33dc:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    33e0:	60 91 87 23 	lds	r22, 0x2387
    33e4:	80 ea       	ldi	r24, 0xA0	; 160
    33e6:	9b e0       	ldi	r25, 0x0B	; 11
    33e8:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    33ec:	60 91 0c 24 	lds	r22, 0x240C
    33f0:	80 ea       	ldi	r24, 0xA0	; 160
    33f2:	9b e0       	ldi	r25, 0x0B	; 11
    33f4:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    33f8:	60 91 20 24 	lds	r22, 0x2420
    33fc:	80 ea       	ldi	r24, 0xA0	; 160
    33fe:	9b e0       	ldi	r25, 0x0B	; 11
    3400:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    3404:	60 91 b9 23 	lds	r22, 0x23B9
    3408:	80 ea       	ldi	r24, 0xA0	; 160
    340a:	9b e0       	ldi	r25, 0x0B	; 11
    340c:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    3410:	63 e2       	ldi	r22, 0x23	; 35
    3412:	80 ea       	ldi	r24, 0xA0	; 160
    3414:	9b e0       	ldi	r25, 0x0B	; 11
    3416:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    341a:	2f b7       	in	r18, 0x3f	; 63
    341c:	f8 94       	cli
    341e:	e0 e0       	ldi	r30, 0x00	; 0
    3420:	f2 e0       	ldi	r31, 0x02	; 2
    3422:	84 a1       	ldd	r24, Z+36	; 0x24
    3424:	95 a1       	ldd	r25, Z+37	; 0x25
    3426:	2f bf       	out	0x3f, r18	; 63
    3428:	80 93 a5 20 	sts	0x20A5, r24
    342c:	90 93 a6 20 	sts	0x20A6, r25
    3430:	89 3d       	cpi	r24, 0xD9	; 217
    3432:	94 40       	sbci	r25, 0x04	; 4
    3434:	24 f4       	brge	.+8      	; 0x343e <main+0x1264>
    3436:	80 e4       	ldi	r24, 0x40	; 64
    3438:	e0 e4       	ldi	r30, 0x40	; 64
    343a:	f6 e0       	ldi	r31, 0x06	; 6
    343c:	85 83       	std	Z+5, r24	; 0x05
    343e:	60 e0       	ldi	r22, 0x00	; 0
    3440:	80 e0       	ldi	r24, 0x00	; 0
    3442:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    3446:	a8 e0       	ldi	r26, 0x08	; 8
    3448:	b6 e0       	ldi	r27, 0x06	; 6
    344a:	1c 91       	ld	r17, X
    344c:	7c 91       	ld	r23, X
    344e:	2c 91       	ld	r18, X
    3450:	6c 91       	ld	r22, X
    3452:	fc 91       	ld	r31, X
    3454:	ec 91       	ld	r30, X
    3456:	8c 91       	ld	r24, X
    3458:	3c 91       	ld	r19, X
    345a:	90 91 87 23 	lds	r25, 0x2387
    345e:	49 2f       	mov	r20, r25
    3460:	55 27       	eor	r21, r21
    3462:	47 fd       	sbrc	r20, 7
    3464:	50 95       	com	r21
    3466:	5f 93       	push	r21
    3468:	9f 93       	push	r25
    346a:	88 1f       	adc	r24, r24
    346c:	88 27       	eor	r24, r24
    346e:	88 1f       	adc	r24, r24
    3470:	90 e0       	ldi	r25, 0x00	; 0
    3472:	88 0f       	add	r24, r24
    3474:	99 1f       	adc	r25, r25
    3476:	88 0f       	add	r24, r24
    3478:	99 1f       	adc	r25, r25
    347a:	f6 fb       	bst	r31, 6
    347c:	ff 27       	eor	r31, r31
    347e:	f0 f9       	bld	r31, 0
    3480:	a4 96       	adiw	r28, 0x24	; 36
    3482:	ff af       	std	Y+63, r31	; 0x3f
    3484:	a4 97       	sbiw	r28, 0x24	; 36
    3486:	a5 96       	adiw	r28, 0x25	; 37
    3488:	1f ae       	std	Y+63, r1	; 0x3f
    348a:	a5 97       	sbiw	r28, 0x25	; 37
    348c:	a5 96       	adiw	r28, 0x25	; 37
    348e:	4e ad       	ldd	r20, Y+62	; 0x3e
    3490:	5f ad       	ldd	r21, Y+63	; 0x3f
    3492:	a5 97       	sbiw	r28, 0x25	; 37
    3494:	84 2b       	or	r24, r20
    3496:	95 2b       	or	r25, r21
    3498:	e2 95       	swap	r30
    349a:	e1 70       	andi	r30, 0x01	; 1
    349c:	a6 96       	adiw	r28, 0x26	; 38
    349e:	ef af       	std	Y+63, r30	; 0x3f
    34a0:	a6 97       	sbiw	r28, 0x26	; 38
    34a2:	a7 96       	adiw	r28, 0x27	; 39
    34a4:	1f ae       	std	Y+63, r1	; 0x3f
    34a6:	a7 97       	sbiw	r28, 0x27	; 39
    34a8:	a7 96       	adiw	r28, 0x27	; 39
    34aa:	4e ad       	ldd	r20, Y+62	; 0x3e
    34ac:	5f ad       	ldd	r21, Y+63	; 0x3f
    34ae:	a7 97       	sbiw	r28, 0x27	; 39
    34b0:	44 0f       	add	r20, r20
    34b2:	55 1f       	adc	r21, r21
    34b4:	84 2b       	or	r24, r20
    34b6:	95 2b       	or	r25, r21
    34b8:	35 fb       	bst	r19, 5
    34ba:	33 27       	eor	r19, r19
    34bc:	30 f9       	bld	r19, 0
    34be:	a8 96       	adiw	r28, 0x28	; 40
    34c0:	3f af       	std	Y+63, r19	; 0x3f
    34c2:	a8 97       	sbiw	r28, 0x28	; 40
    34c4:	a9 96       	adiw	r28, 0x29	; 41
    34c6:	1f ae       	std	Y+63, r1	; 0x3f
    34c8:	a9 97       	sbiw	r28, 0x29	; 41
    34ca:	a9 96       	adiw	r28, 0x29	; 41
    34cc:	4e ad       	ldd	r20, Y+62	; 0x3e
    34ce:	5f ad       	ldd	r21, Y+63	; 0x3f
    34d0:	a9 97       	sbiw	r28, 0x29	; 41
    34d2:	44 0f       	add	r20, r20
    34d4:	55 1f       	adc	r21, r21
    34d6:	44 0f       	add	r20, r20
    34d8:	55 1f       	adc	r21, r21
    34da:	44 0f       	add	r20, r20
    34dc:	55 1f       	adc	r21, r21
    34de:	84 2b       	or	r24, r20
    34e0:	95 2b       	or	r25, r21
    34e2:	47 e1       	ldi	r20, 0x17	; 23
    34e4:	48 9f       	mul	r20, r24
    34e6:	f0 01       	movw	r30, r0
    34e8:	49 9f       	mul	r20, r25
    34ea:	f0 0d       	add	r31, r0
    34ec:	11 24       	eor	r1, r1
    34ee:	ea 54       	subi	r30, 0x4A	; 74
    34f0:	ff 4d       	sbci	r31, 0xDF	; 223
    34f2:	51 81       	ldd	r21, Z+1	; 0x01
    34f4:	ab 96       	adiw	r28, 0x2b	; 43
    34f6:	5f af       	std	Y+63, r21	; 0x3f
    34f8:	ab 97       	sbiw	r28, 0x2b	; 43
    34fa:	aa 96       	adiw	r28, 0x2a	; 42
    34fc:	1f ae       	std	Y+63, r1	; 0x3f
    34fe:	aa 97       	sbiw	r28, 0x2a	; 42
    3500:	22 1f       	adc	r18, r18
    3502:	22 27       	eor	r18, r18
    3504:	22 1f       	adc	r18, r18
    3506:	30 e0       	ldi	r19, 0x00	; 0
    3508:	22 0f       	add	r18, r18
    350a:	33 1f       	adc	r19, r19
    350c:	22 0f       	add	r18, r18
    350e:	33 1f       	adc	r19, r19
    3510:	16 fb       	bst	r17, 6
    3512:	11 27       	eor	r17, r17
    3514:	10 f9       	bld	r17, 0
    3516:	ac 96       	adiw	r28, 0x2c	; 44
    3518:	1f af       	std	Y+63, r17	; 0x3f
    351a:	ac 97       	sbiw	r28, 0x2c	; 44
    351c:	ad 96       	adiw	r28, 0x2d	; 45
    351e:	1f ae       	std	Y+63, r1	; 0x3f
    3520:	ad 97       	sbiw	r28, 0x2d	; 45
    3522:	ad 96       	adiw	r28, 0x2d	; 45
    3524:	8e ad       	ldd	r24, Y+62	; 0x3e
    3526:	9f ad       	ldd	r25, Y+63	; 0x3f
    3528:	ad 97       	sbiw	r28, 0x2d	; 45
    352a:	28 2b       	or	r18, r24
    352c:	39 2b       	or	r19, r25
    352e:	72 95       	swap	r23
    3530:	71 70       	andi	r23, 0x01	; 1
    3532:	ae 96       	adiw	r28, 0x2e	; 46
    3534:	7f af       	std	Y+63, r23	; 0x3f
    3536:	ae 97       	sbiw	r28, 0x2e	; 46
    3538:	af 96       	adiw	r28, 0x2f	; 47
    353a:	1f ae       	std	Y+63, r1	; 0x3f
    353c:	af 97       	sbiw	r28, 0x2f	; 47
    353e:	af 96       	adiw	r28, 0x2f	; 47
    3540:	8e ad       	ldd	r24, Y+62	; 0x3e
    3542:	9f ad       	ldd	r25, Y+63	; 0x3f
    3544:	af 97       	sbiw	r28, 0x2f	; 47
    3546:	88 0f       	add	r24, r24
    3548:	99 1f       	adc	r25, r25
    354a:	82 2b       	or	r24, r18
    354c:	93 2b       	or	r25, r19
    354e:	65 fb       	bst	r22, 5
    3550:	66 27       	eor	r22, r22
    3552:	60 f9       	bld	r22, 0
    3554:	e0 96       	adiw	r28, 0x30	; 48
    3556:	6f af       	std	Y+63, r22	; 0x3f
    3558:	e0 97       	sbiw	r28, 0x30	; 48
    355a:	e1 96       	adiw	r28, 0x31	; 49
    355c:	1f ae       	std	Y+63, r1	; 0x3f
    355e:	e1 97       	sbiw	r28, 0x31	; 49
    3560:	e1 96       	adiw	r28, 0x31	; 49
    3562:	2e ad       	ldd	r18, Y+62	; 0x3e
    3564:	3f ad       	ldd	r19, Y+63	; 0x3f
    3566:	e1 97       	sbiw	r28, 0x31	; 49
    3568:	22 0f       	add	r18, r18
    356a:	33 1f       	adc	r19, r19
    356c:	22 0f       	add	r18, r18
    356e:	33 1f       	adc	r19, r19
    3570:	22 0f       	add	r18, r18
    3572:	33 1f       	adc	r19, r19
    3574:	82 2b       	or	r24, r18
    3576:	93 2b       	or	r25, r19
    3578:	48 9f       	mul	r20, r24
    357a:	b0 01       	movw	r22, r0
    357c:	49 9f       	mul	r20, r25
    357e:	70 0d       	add	r23, r0
    3580:	11 24       	eor	r1, r1
    3582:	fb 01       	movw	r30, r22
    3584:	ea 54       	subi	r30, 0x4A	; 74
    3586:	ff 4d       	sbci	r31, 0xDF	; 223
    3588:	83 81       	ldd	r24, Z+3	; 0x03
    358a:	94 81       	ldd	r25, Z+4	; 0x04
    358c:	ab 96       	adiw	r28, 0x2b	; 43
    358e:	ae ad       	ldd	r26, Y+62	; 0x3e
    3590:	bf ad       	ldd	r27, Y+63	; 0x3f
    3592:	ab 97       	sbiw	r28, 0x2b	; 43
    3594:	8a 2b       	or	r24, r26
    3596:	9b 2b       	or	r25, r27
    3598:	9f 93       	push	r25
    359a:	8f 93       	push	r24
    359c:	8c e3       	ldi	r24, 0x3C	; 60
    359e:	90 e2       	ldi	r25, 0x20	; 32
    35a0:	9f 93       	push	r25
    35a2:	8f 93       	push	r24
    35a4:	01 ed       	ldi	r16, 0xD1	; 209
    35a6:	13 e2       	ldi	r17, 0x23	; 35
    35a8:	1f 93       	push	r17
    35aa:	0f 93       	push	r16
    35ac:	0e 94 84 2c 	call	0x5908	; 0x5908 <sprintf>
    35b0:	c8 01       	movw	r24, r16
    35b2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    35b6:	61 e0       	ldi	r22, 0x01	; 1
    35b8:	80 e0       	ldi	r24, 0x00	; 0
    35ba:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <LCDGotoXY>
    35be:	80 91 7c 23 	lds	r24, 0x237C
    35c2:	8f 93       	push	r24
    35c4:	eb e7       	ldi	r30, 0x7B	; 123
    35c6:	f3 e2       	ldi	r31, 0x23	; 35
    35c8:	80 81       	ld	r24, Z
    35ca:	8f 93       	push	r24
    35cc:	84 e4       	ldi	r24, 0x44	; 68
    35ce:	90 e2       	ldi	r25, 0x20	; 32
    35d0:	9f 93       	push	r25
    35d2:	8f 93       	push	r24
    35d4:	1f 93       	push	r17
    35d6:	0f 93       	push	r16
    35d8:	0e 94 84 2c 	call	0x5908	; 0x5908 <sprintf>
    35dc:	c8 01       	movw	r24, r16
    35de:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCDStringRam>
    35e2:	80 91 48 06 	lds	r24, 0x0648
    35e6:	cd bf       	out	0x3d, r28	; 61
    35e8:	de bf       	out	0x3e, r29	; 62
    35ea:	88 23       	and	r24, r24
    35ec:	5c f4       	brge	.+22     	; 0x3604 <main+0x142a>
    35ee:	e0 e6       	ldi	r30, 0x60	; 96
    35f0:	f6 e0       	ldi	r31, 0x06	; 6
    35f2:	80 85       	ldd	r24, Z+8	; 0x08
    35f4:	88 23       	and	r24, r24
    35f6:	34 f0       	brlt	.+12     	; 0x3604 <main+0x142a>
    35f8:	81 e0       	ldi	r24, 0x01	; 1
    35fa:	90 e0       	ldi	r25, 0x00	; 0
    35fc:	80 93 a9 20 	sts	0x20A9, r24
    3600:	90 93 aa 20 	sts	0x20AA, r25
    3604:	80 91 48 06 	lds	r24, 0x0648
    3608:	88 23       	and	r24, r24
    360a:	5c f4       	brge	.+22     	; 0x3622 <main+0x1448>
    360c:	e0 e6       	ldi	r30, 0x60	; 96
    360e:	f6 e0       	ldi	r31, 0x06	; 6
    3610:	80 85       	ldd	r24, Z+8	; 0x08
    3612:	88 23       	and	r24, r24
    3614:	34 f0       	brlt	.+12     	; 0x3622 <main+0x1448>
    3616:	81 e0       	ldi	r24, 0x01	; 1
    3618:	90 e0       	ldi	r25, 0x00	; 0
    361a:	80 93 a7 20 	sts	0x20A7, r24
    361e:	90 93 a8 20 	sts	0x20A8, r25
    3622:	a8 e0       	ldi	r26, 0x08	; 8
    3624:	b6 e0       	ldi	r27, 0x06	; 6
    3626:	7c 91       	ld	r23, X
    3628:	5c 91       	ld	r21, X
    362a:	bc 91       	ld	r27, X
    362c:	e8 e0       	ldi	r30, 0x08	; 8
    362e:	f6 e0       	ldi	r31, 0x06	; 6
    3630:	40 81       	ld	r20, Z
    3632:	30 81       	ld	r19, Z
    3634:	20 81       	ld	r18, Z
    3636:	80 81       	ld	r24, Z
    3638:	60 81       	ld	r22, Z
    363a:	88 1f       	adc	r24, r24
    363c:	88 27       	eor	r24, r24
    363e:	88 1f       	adc	r24, r24
    3640:	90 e0       	ldi	r25, 0x00	; 0
    3642:	88 0f       	add	r24, r24
    3644:	99 1f       	adc	r25, r25
    3646:	88 0f       	add	r24, r24
    3648:	99 1f       	adc	r25, r25
    364a:	36 fb       	bst	r19, 6
    364c:	33 27       	eor	r19, r19
    364e:	30 f9       	bld	r19, 0
    3650:	e2 96       	adiw	r28, 0x32	; 50
    3652:	3f af       	std	Y+63, r19	; 0x3f
    3654:	e2 97       	sbiw	r28, 0x32	; 50
    3656:	e3 96       	adiw	r28, 0x33	; 51
    3658:	1f ae       	std	Y+63, r1	; 0x3f
    365a:	e3 97       	sbiw	r28, 0x33	; 51
    365c:	e3 96       	adiw	r28, 0x33	; 51
    365e:	ee ad       	ldd	r30, Y+62	; 0x3e
    3660:	ff ad       	ldd	r31, Y+63	; 0x3f
    3662:	e3 97       	sbiw	r28, 0x33	; 51
    3664:	8e 2b       	or	r24, r30
    3666:	9f 2b       	or	r25, r31
    3668:	22 95       	swap	r18
    366a:	21 70       	andi	r18, 0x01	; 1
    366c:	e4 96       	adiw	r28, 0x34	; 52
    366e:	2f af       	std	Y+63, r18	; 0x3f
    3670:	e4 97       	sbiw	r28, 0x34	; 52
    3672:	e5 96       	adiw	r28, 0x35	; 53
    3674:	1f ae       	std	Y+63, r1	; 0x3f
    3676:	e5 97       	sbiw	r28, 0x35	; 53
    3678:	e5 96       	adiw	r28, 0x35	; 53
    367a:	2e ad       	ldd	r18, Y+62	; 0x3e
    367c:	3f ad       	ldd	r19, Y+63	; 0x3f
    367e:	e5 97       	sbiw	r28, 0x35	; 53
    3680:	22 0f       	add	r18, r18
    3682:	33 1f       	adc	r19, r19
    3684:	82 2b       	or	r24, r18
    3686:	93 2b       	or	r25, r19
    3688:	65 fb       	bst	r22, 5
    368a:	66 27       	eor	r22, r22
    368c:	60 f9       	bld	r22, 0
    368e:	e6 96       	adiw	r28, 0x36	; 54
    3690:	6f af       	std	Y+63, r22	; 0x3f
    3692:	e6 97       	sbiw	r28, 0x36	; 54
    3694:	e7 96       	adiw	r28, 0x37	; 55
    3696:	1f ae       	std	Y+63, r1	; 0x3f
    3698:	e7 97       	sbiw	r28, 0x37	; 55
    369a:	e7 96       	adiw	r28, 0x37	; 55
    369c:	2e ad       	ldd	r18, Y+62	; 0x3e
    369e:	3f ad       	ldd	r19, Y+63	; 0x3f
    36a0:	e7 97       	sbiw	r28, 0x37	; 55
    36a2:	22 0f       	add	r18, r18
    36a4:	33 1f       	adc	r19, r19
    36a6:	22 0f       	add	r18, r18
    36a8:	33 1f       	adc	r19, r19
    36aa:	22 0f       	add	r18, r18
    36ac:	33 1f       	adc	r19, r19
    36ae:	82 2b       	or	r24, r18
    36b0:	93 2b       	or	r25, r19
    36b2:	67 e1       	ldi	r22, 0x17	; 23
    36b4:	68 9f       	mul	r22, r24
    36b6:	f0 01       	movw	r30, r0
    36b8:	69 9f       	mul	r22, r25
    36ba:	f0 0d       	add	r31, r0
    36bc:	11 24       	eor	r1, r1
    36be:	ea 54       	subi	r30, 0x4A	; 74
    36c0:	ff 4d       	sbci	r31, 0xDF	; 223
    36c2:	21 81       	ldd	r18, Z+1	; 0x01
    36c4:	e9 96       	adiw	r28, 0x39	; 57
    36c6:	2f af       	std	Y+63, r18	; 0x3f
    36c8:	e9 97       	sbiw	r28, 0x39	; 57
    36ca:	e8 96       	adiw	r28, 0x38	; 56
    36cc:	1f ae       	std	Y+63, r1	; 0x3f
    36ce:	e8 97       	sbiw	r28, 0x38	; 56
    36d0:	ab 2f       	mov	r26, r27
    36d2:	aa 1f       	adc	r26, r26
    36d4:	aa 27       	eor	r26, r26
    36d6:	aa 1f       	adc	r26, r26
    36d8:	b0 e0       	ldi	r27, 0x00	; 0
    36da:	aa 0f       	add	r26, r26
    36dc:	bb 1f       	adc	r27, r27
    36de:	aa 0f       	add	r26, r26
    36e0:	bb 1f       	adc	r27, r27
    36e2:	76 fb       	bst	r23, 6
    36e4:	77 27       	eor	r23, r23
    36e6:	70 f9       	bld	r23, 0
    36e8:	ea 96       	adiw	r28, 0x3a	; 58
    36ea:	7f af       	std	Y+63, r23	; 0x3f
    36ec:	ea 97       	sbiw	r28, 0x3a	; 58
    36ee:	eb 96       	adiw	r28, 0x3b	; 59
    36f0:	1f ae       	std	Y+63, r1	; 0x3f
    36f2:	eb 97       	sbiw	r28, 0x3b	; 59
    36f4:	eb 96       	adiw	r28, 0x3b	; 59
    36f6:	8e ad       	ldd	r24, Y+62	; 0x3e
    36f8:	9f ad       	ldd	r25, Y+63	; 0x3f
    36fa:	eb 97       	sbiw	r28, 0x3b	; 59
    36fc:	a8 2b       	or	r26, r24
    36fe:	b9 2b       	or	r27, r25
    3700:	52 95       	swap	r21
    3702:	51 70       	andi	r21, 0x01	; 1
    3704:	ec 96       	adiw	r28, 0x3c	; 60
    3706:	5f af       	std	Y+63, r21	; 0x3f
    3708:	ec 97       	sbiw	r28, 0x3c	; 60
    370a:	ed 96       	adiw	r28, 0x3d	; 61
    370c:	1f ae       	std	Y+63, r1	; 0x3f
    370e:	ed 97       	sbiw	r28, 0x3d	; 61
    3710:	ed 96       	adiw	r28, 0x3d	; 61
    3712:	8e ad       	ldd	r24, Y+62	; 0x3e
    3714:	9f ad       	ldd	r25, Y+63	; 0x3f
    3716:	ed 97       	sbiw	r28, 0x3d	; 61
    3718:	88 0f       	add	r24, r24
    371a:	99 1f       	adc	r25, r25
    371c:	8a 2b       	or	r24, r26
    371e:	9b 2b       	or	r25, r27
    3720:	45 fb       	bst	r20, 5
    3722:	44 27       	eor	r20, r20
    3724:	40 f9       	bld	r20, 0
    3726:	ee 96       	adiw	r28, 0x3e	; 62
    3728:	4f af       	std	Y+63, r20	; 0x3f
    372a:	ee 97       	sbiw	r28, 0x3e	; 62
    372c:	ef 96       	adiw	r28, 0x3f	; 63
    372e:	1f ae       	std	Y+63, r1	; 0x3f
    3730:	ef 97       	sbiw	r28, 0x3f	; 63
    3732:	ef 96       	adiw	r28, 0x3f	; 63
    3734:	ae ad       	ldd	r26, Y+62	; 0x3e
    3736:	bf ad       	ldd	r27, Y+63	; 0x3f
    3738:	ef 97       	sbiw	r28, 0x3f	; 63
    373a:	aa 0f       	add	r26, r26
    373c:	bb 1f       	adc	r27, r27
    373e:	aa 0f       	add	r26, r26
    3740:	bb 1f       	adc	r27, r27
    3742:	aa 0f       	add	r26, r26
    3744:	bb 1f       	adc	r27, r27
    3746:	8a 2b       	or	r24, r26
    3748:	9b 2b       	or	r25, r27
    374a:	68 9f       	mul	r22, r24
    374c:	90 01       	movw	r18, r0
    374e:	69 9f       	mul	r22, r25
    3750:	30 0d       	add	r19, r0
    3752:	11 24       	eor	r1, r1
    3754:	f9 01       	movw	r30, r18
    3756:	ea 54       	subi	r30, 0x4A	; 74
    3758:	ff 4d       	sbci	r31, 0xDF	; 223
    375a:	83 81       	ldd	r24, Z+3	; 0x03
    375c:	94 81       	ldd	r25, Z+4	; 0x04
    375e:	e9 96       	adiw	r28, 0x39	; 57
    3760:	ae ad       	ldd	r26, Y+62	; 0x3e
    3762:	bf ad       	ldd	r27, Y+63	; 0x3f
    3764:	e9 97       	sbiw	r28, 0x39	; 57
    3766:	8a 2b       	or	r24, r26
    3768:	9b 2b       	or	r25, r27
    376a:	78 e2       	ldi	r23, 0x28	; 40
    376c:	87 9f       	mul	r24, r23
    376e:	80 2d       	mov	r24, r0
    3770:	11 24       	eor	r1, r1
    3772:	80 93 89 23 	sts	0x2389, r24
    3776:	e8 e0       	ldi	r30, 0x08	; 8
    3778:	f6 e0       	ldi	r31, 0x06	; 6
    377a:	10 81       	ld	r17, Z
    377c:	f0 81       	ld	r31, Z
    377e:	a8 e0       	ldi	r26, 0x08	; 8
    3780:	b6 e0       	ldi	r27, 0x06	; 6
    3782:	8c 91       	ld	r24, X
    3784:	ec 91       	ld	r30, X
    3786:	3c 91       	ld	r19, X
    3788:	2c 91       	ld	r18, X
    378a:	4c 91       	ld	r20, X
    378c:	9c 91       	ld	r25, X
    378e:	44 1f       	adc	r20, r20
    3790:	44 27       	eor	r20, r20
    3792:	44 1f       	adc	r20, r20
    3794:	50 e0       	ldi	r21, 0x00	; 0
    3796:	44 0f       	add	r20, r20
    3798:	55 1f       	adc	r21, r21
    379a:	44 0f       	add	r20, r20
    379c:	55 1f       	adc	r21, r21
    379e:	36 fb       	bst	r19, 6
    37a0:	33 27       	eor	r19, r19
    37a2:	30 f9       	bld	r19, 0
    37a4:	c1 58       	subi	r28, 0x81	; 129
    37a6:	df 4f       	sbci	r29, 0xFF	; 255
    37a8:	38 83       	st	Y, r19
    37aa:	cf 57       	subi	r28, 0x7F	; 127
    37ac:	d0 40       	sbci	r29, 0x00	; 0
    37ae:	c0 58       	subi	r28, 0x80	; 128
    37b0:	df 4f       	sbci	r29, 0xFF	; 255
    37b2:	18 82       	st	Y, r1
    37b4:	c0 58       	subi	r28, 0x80	; 128
    37b6:	d0 40       	sbci	r29, 0x00	; 0
    37b8:	c1 58       	subi	r28, 0x81	; 129
    37ba:	df 4f       	sbci	r29, 0xFF	; 255
    37bc:	a8 81       	ld	r26, Y
    37be:	b9 81       	ldd	r27, Y+1	; 0x01
    37c0:	cf 57       	subi	r28, 0x7F	; 127
    37c2:	d0 40       	sbci	r29, 0x00	; 0
    37c4:	4a 2b       	or	r20, r26
    37c6:	5b 2b       	or	r21, r27
    37c8:	22 95       	swap	r18
    37ca:	21 70       	andi	r18, 0x01	; 1
    37cc:	cf 57       	subi	r28, 0x7F	; 127
    37ce:	df 4f       	sbci	r29, 0xFF	; 255
    37d0:	28 83       	st	Y, r18
    37d2:	c1 58       	subi	r28, 0x81	; 129
    37d4:	d0 40       	sbci	r29, 0x00	; 0
    37d6:	ce 57       	subi	r28, 0x7E	; 126
    37d8:	df 4f       	sbci	r29, 0xFF	; 255
    37da:	18 82       	st	Y, r1
    37dc:	c2 58       	subi	r28, 0x82	; 130
    37de:	d0 40       	sbci	r29, 0x00	; 0
    37e0:	cf 57       	subi	r28, 0x7F	; 127
    37e2:	df 4f       	sbci	r29, 0xFF	; 255
    37e4:	28 81       	ld	r18, Y
    37e6:	39 81       	ldd	r19, Y+1	; 0x01
    37e8:	c1 58       	subi	r28, 0x81	; 129
    37ea:	d0 40       	sbci	r29, 0x00	; 0
    37ec:	22 0f       	add	r18, r18
    37ee:	33 1f       	adc	r19, r19
    37f0:	42 2b       	or	r20, r18
    37f2:	53 2b       	or	r21, r19
    37f4:	95 fb       	bst	r25, 5
    37f6:	99 27       	eor	r25, r25
    37f8:	90 f9       	bld	r25, 0
    37fa:	cd 57       	subi	r28, 0x7D	; 125
    37fc:	df 4f       	sbci	r29, 0xFF	; 255
    37fe:	98 83       	st	Y, r25
    3800:	c3 58       	subi	r28, 0x83	; 131
    3802:	d0 40       	sbci	r29, 0x00	; 0
    3804:	cc 57       	subi	r28, 0x7C	; 124
    3806:	df 4f       	sbci	r29, 0xFF	; 255
    3808:	18 82       	st	Y, r1
    380a:	c4 58       	subi	r28, 0x84	; 132
    380c:	d0 40       	sbci	r29, 0x00	; 0
    380e:	cd 57       	subi	r28, 0x7D	; 125
    3810:	df 4f       	sbci	r29, 0xFF	; 255
    3812:	28 81       	ld	r18, Y
    3814:	39 81       	ldd	r19, Y+1	; 0x01
    3816:	c3 58       	subi	r28, 0x83	; 131
    3818:	d0 40       	sbci	r29, 0x00	; 0
    381a:	22 0f       	add	r18, r18
    381c:	33 1f       	adc	r19, r19
    381e:	22 0f       	add	r18, r18
    3820:	33 1f       	adc	r19, r19
    3822:	22 0f       	add	r18, r18
    3824:	33 1f       	adc	r19, r19
    3826:	42 2b       	or	r20, r18
    3828:	53 2b       	or	r21, r19
    382a:	64 9f       	mul	r22, r20
    382c:	90 01       	movw	r18, r0
    382e:	65 9f       	mul	r22, r21
    3830:	30 0d       	add	r19, r0
    3832:	11 24       	eor	r1, r1
    3834:	2a 54       	subi	r18, 0x4A	; 74
    3836:	3f 4d       	sbci	r19, 0xDF	; 223
    3838:	d9 01       	movw	r26, r18
    383a:	11 96       	adiw	r26, 0x01	; 1
    383c:	bc 91       	ld	r27, X
    383e:	ca 57       	subi	r28, 0x7A	; 122
    3840:	df 4f       	sbci	r29, 0xFF	; 255
    3842:	b8 83       	st	Y, r27
    3844:	c6 58       	subi	r28, 0x86	; 134
    3846:	d0 40       	sbci	r29, 0x00	; 0
    3848:	cb 57       	subi	r28, 0x7B	; 123
    384a:	df 4f       	sbci	r29, 0xFF	; 255
    384c:	18 82       	st	Y, r1
    384e:	c5 58       	subi	r28, 0x85	; 133
    3850:	d0 40       	sbci	r29, 0x00	; 0
    3852:	88 1f       	adc	r24, r24
    3854:	88 27       	eor	r24, r24
    3856:	88 1f       	adc	r24, r24
    3858:	90 e0       	ldi	r25, 0x00	; 0
    385a:	88 0f       	add	r24, r24
    385c:	99 1f       	adc	r25, r25
    385e:	88 0f       	add	r24, r24
    3860:	99 1f       	adc	r25, r25
    3862:	16 fb       	bst	r17, 6
    3864:	11 27       	eor	r17, r17
    3866:	10 f9       	bld	r17, 0
    3868:	c9 57       	subi	r28, 0x79	; 121
    386a:	df 4f       	sbci	r29, 0xFF	; 255
    386c:	18 83       	st	Y, r17
    386e:	c7 58       	subi	r28, 0x87	; 135
    3870:	d0 40       	sbci	r29, 0x00	; 0
    3872:	c8 57       	subi	r28, 0x78	; 120
    3874:	df 4f       	sbci	r29, 0xFF	; 255
    3876:	18 82       	st	Y, r1
    3878:	c8 58       	subi	r28, 0x88	; 136
    387a:	d0 40       	sbci	r29, 0x00	; 0
    387c:	c9 57       	subi	r28, 0x79	; 121
    387e:	df 4f       	sbci	r29, 0xFF	; 255
    3880:	28 81       	ld	r18, Y
    3882:	39 81       	ldd	r19, Y+1	; 0x01
    3884:	c7 58       	subi	r28, 0x87	; 135
    3886:	d0 40       	sbci	r29, 0x00	; 0
    3888:	82 2b       	or	r24, r18
    388a:	93 2b       	or	r25, r19
    388c:	f2 95       	swap	r31
    388e:	f1 70       	andi	r31, 0x01	; 1
    3890:	c7 57       	subi	r28, 0x77	; 119
    3892:	df 4f       	sbci	r29, 0xFF	; 255
    3894:	f8 83       	st	Y, r31
    3896:	c9 58       	subi	r28, 0x89	; 137
    3898:	d0 40       	sbci	r29, 0x00	; 0
    389a:	c6 57       	subi	r28, 0x76	; 118
    389c:	df 4f       	sbci	r29, 0xFF	; 255
    389e:	18 82       	st	Y, r1
    38a0:	ca 58       	subi	r28, 0x8A	; 138
    38a2:	d0 40       	sbci	r29, 0x00	; 0
    38a4:	c7 57       	subi	r28, 0x77	; 119
    38a6:	df 4f       	sbci	r29, 0xFF	; 255
    38a8:	28 81       	ld	r18, Y
    38aa:	39 81       	ldd	r19, Y+1	; 0x01
    38ac:	c9 58       	subi	r28, 0x89	; 137
    38ae:	d0 40       	sbci	r29, 0x00	; 0
    38b0:	22 0f       	add	r18, r18
    38b2:	33 1f       	adc	r19, r19
    38b4:	82 2b       	or	r24, r18
    38b6:	93 2b       	or	r25, r19
    38b8:	e5 fb       	bst	r30, 5
    38ba:	ee 27       	eor	r30, r30
    38bc:	e0 f9       	bld	r30, 0
    38be:	c5 57       	subi	r28, 0x75	; 117
    38c0:	df 4f       	sbci	r29, 0xFF	; 255
    38c2:	e8 83       	st	Y, r30
    38c4:	cb 58       	subi	r28, 0x8B	; 139
    38c6:	d0 40       	sbci	r29, 0x00	; 0
    38c8:	c4 57       	subi	r28, 0x74	; 116
    38ca:	df 4f       	sbci	r29, 0xFF	; 255
    38cc:	18 82       	st	Y, r1
    38ce:	cc 58       	subi	r28, 0x8C	; 140
    38d0:	d0 40       	sbci	r29, 0x00	; 0
    38d2:	c5 57       	subi	r28, 0x75	; 117
    38d4:	df 4f       	sbci	r29, 0xFF	; 255
    38d6:	28 81       	ld	r18, Y
    38d8:	39 81       	ldd	r19, Y+1	; 0x01
    38da:	cb 58       	subi	r28, 0x8B	; 139
    38dc:	d0 40       	sbci	r29, 0x00	; 0
    38de:	22 0f       	add	r18, r18
    38e0:	33 1f       	adc	r19, r19
    38e2:	22 0f       	add	r18, r18
    38e4:	33 1f       	adc	r19, r19
    38e6:	22 0f       	add	r18, r18
    38e8:	33 1f       	adc	r19, r19
    38ea:	82 2b       	or	r24, r18
    38ec:	93 2b       	or	r25, r19
    38ee:	68 9f       	mul	r22, r24
    38f0:	90 01       	movw	r18, r0
    38f2:	69 9f       	mul	r22, r25
    38f4:	30 0d       	add	r19, r0
    38f6:	11 24       	eor	r1, r1
    38f8:	f9 01       	movw	r30, r18
    38fa:	ea 54       	subi	r30, 0x4A	; 74
    38fc:	ff 4d       	sbci	r31, 0xDF	; 223
    38fe:	23 81       	ldd	r18, Z+3	; 0x03
    3900:	34 81       	ldd	r19, Z+4	; 0x04
    3902:	cb 57       	subi	r28, 0x7B	; 123
    3904:	df 4f       	sbci	r29, 0xFF	; 255
    3906:	48 81       	ld	r20, Y
    3908:	59 81       	ldd	r21, Y+1	; 0x01
    390a:	c5 58       	subi	r28, 0x85	; 133
    390c:	d0 40       	sbci	r29, 0x00	; 0
    390e:	24 2b       	or	r18, r20
    3910:	35 2b       	or	r19, r21
    3912:	72 9f       	mul	r23, r18
    3914:	c0 01       	movw	r24, r0
    3916:	73 9f       	mul	r23, r19
    3918:	90 0d       	add	r25, r0
    391a:	11 24       	eor	r1, r1
    391c:	90 93 8a 23 	sts	0x238A, r25
    3920:	a8 e0       	ldi	r26, 0x08	; 8
    3922:	b6 e0       	ldi	r27, 0x06	; 6
    3924:	1c 91       	ld	r17, X
    3926:	fc 91       	ld	r31, X
    3928:	8c 91       	ld	r24, X
    392a:	ec 91       	ld	r30, X
    392c:	3c 91       	ld	r19, X
    392e:	2c 91       	ld	r18, X
    3930:	4c 91       	ld	r20, X
    3932:	9c 91       	ld	r25, X
    3934:	44 1f       	adc	r20, r20
    3936:	44 27       	eor	r20, r20
    3938:	44 1f       	adc	r20, r20
    393a:	50 e0       	ldi	r21, 0x00	; 0
    393c:	44 0f       	add	r20, r20
    393e:	55 1f       	adc	r21, r21
    3940:	44 0f       	add	r20, r20
    3942:	55 1f       	adc	r21, r21
    3944:	36 fb       	bst	r19, 6
    3946:	33 27       	eor	r19, r19
    3948:	30 f9       	bld	r19, 0
    394a:	c3 57       	subi	r28, 0x73	; 115
    394c:	df 4f       	sbci	r29, 0xFF	; 255
    394e:	38 83       	st	Y, r19
    3950:	cd 58       	subi	r28, 0x8D	; 141
    3952:	d0 40       	sbci	r29, 0x00	; 0
    3954:	c2 57       	subi	r28, 0x72	; 114
    3956:	df 4f       	sbci	r29, 0xFF	; 255
    3958:	18 82       	st	Y, r1
    395a:	ce 58       	subi	r28, 0x8E	; 142
    395c:	d0 40       	sbci	r29, 0x00	; 0
    395e:	c3 57       	subi	r28, 0x73	; 115
    3960:	df 4f       	sbci	r29, 0xFF	; 255
    3962:	a8 81       	ld	r26, Y
    3964:	b9 81       	ldd	r27, Y+1	; 0x01
    3966:	cd 58       	subi	r28, 0x8D	; 141
    3968:	d0 40       	sbci	r29, 0x00	; 0
    396a:	4a 2b       	or	r20, r26
    396c:	5b 2b       	or	r21, r27
    396e:	22 95       	swap	r18
    3970:	21 70       	andi	r18, 0x01	; 1
    3972:	c1 57       	subi	r28, 0x71	; 113
    3974:	df 4f       	sbci	r29, 0xFF	; 255
    3976:	28 83       	st	Y, r18
    3978:	cf 58       	subi	r28, 0x8F	; 143
    397a:	d0 40       	sbci	r29, 0x00	; 0
    397c:	c0 57       	subi	r28, 0x70	; 112
    397e:	df 4f       	sbci	r29, 0xFF	; 255
    3980:	18 82       	st	Y, r1
    3982:	c0 59       	subi	r28, 0x90	; 144
    3984:	d0 40       	sbci	r29, 0x00	; 0
    3986:	c1 57       	subi	r28, 0x71	; 113
    3988:	df 4f       	sbci	r29, 0xFF	; 255
    398a:	28 81       	ld	r18, Y
    398c:	39 81       	ldd	r19, Y+1	; 0x01
    398e:	cf 58       	subi	r28, 0x8F	; 143
    3990:	d0 40       	sbci	r29, 0x00	; 0
    3992:	22 0f       	add	r18, r18
    3994:	33 1f       	adc	r19, r19
    3996:	42 2b       	or	r20, r18
    3998:	53 2b       	or	r21, r19
    399a:	95 fb       	bst	r25, 5
    399c:	99 27       	eor	r25, r25
    399e:	90 f9       	bld	r25, 0
    39a0:	cf 56       	subi	r28, 0x6F	; 111
    39a2:	df 4f       	sbci	r29, 0xFF	; 255
    39a4:	98 83       	st	Y, r25
    39a6:	c1 59       	subi	r28, 0x91	; 145
    39a8:	d0 40       	sbci	r29, 0x00	; 0
    39aa:	ce 56       	subi	r28, 0x6E	; 110
    39ac:	df 4f       	sbci	r29, 0xFF	; 255
    39ae:	18 82       	st	Y, r1
    39b0:	c2 59       	subi	r28, 0x92	; 146
    39b2:	d0 40       	sbci	r29, 0x00	; 0
    39b4:	cf 56       	subi	r28, 0x6F	; 111
    39b6:	df 4f       	sbci	r29, 0xFF	; 255
    39b8:	28 81       	ld	r18, Y
    39ba:	39 81       	ldd	r19, Y+1	; 0x01
    39bc:	c1 59       	subi	r28, 0x91	; 145
    39be:	d0 40       	sbci	r29, 0x00	; 0
    39c0:	22 0f       	add	r18, r18
    39c2:	33 1f       	adc	r19, r19
    39c4:	22 0f       	add	r18, r18
    39c6:	33 1f       	adc	r19, r19
    39c8:	22 0f       	add	r18, r18
    39ca:	33 1f       	adc	r19, r19
    39cc:	42 2b       	or	r20, r18
    39ce:	53 2b       	or	r21, r19
    39d0:	64 9f       	mul	r22, r20
    39d2:	90 01       	movw	r18, r0
    39d4:	65 9f       	mul	r22, r21
    39d6:	30 0d       	add	r19, r0
    39d8:	11 24       	eor	r1, r1
    39da:	2a 54       	subi	r18, 0x4A	; 74
    39dc:	3f 4d       	sbci	r19, 0xDF	; 223
    39de:	d9 01       	movw	r26, r18
    39e0:	15 96       	adiw	r26, 0x05	; 5
    39e2:	bc 91       	ld	r27, X
    39e4:	cc 56       	subi	r28, 0x6C	; 108
    39e6:	df 4f       	sbci	r29, 0xFF	; 255
    39e8:	b8 83       	st	Y, r27
    39ea:	c4 59       	subi	r28, 0x94	; 148
    39ec:	d0 40       	sbci	r29, 0x00	; 0
    39ee:	cd 56       	subi	r28, 0x6D	; 109
    39f0:	df 4f       	sbci	r29, 0xFF	; 255
    39f2:	18 82       	st	Y, r1
    39f4:	c3 59       	subi	r28, 0x93	; 147
    39f6:	d0 40       	sbci	r29, 0x00	; 0
    39f8:	88 1f       	adc	r24, r24
    39fa:	88 27       	eor	r24, r24
    39fc:	88 1f       	adc	r24, r24
    39fe:	90 e0       	ldi	r25, 0x00	; 0
    3a00:	88 0f       	add	r24, r24
    3a02:	99 1f       	adc	r25, r25
    3a04:	88 0f       	add	r24, r24
    3a06:	99 1f       	adc	r25, r25
    3a08:	16 fb       	bst	r17, 6
    3a0a:	11 27       	eor	r17, r17
    3a0c:	10 f9       	bld	r17, 0
    3a0e:	cb 56       	subi	r28, 0x6B	; 107
    3a10:	df 4f       	sbci	r29, 0xFF	; 255
    3a12:	18 83       	st	Y, r17
    3a14:	c5 59       	subi	r28, 0x95	; 149
    3a16:	d0 40       	sbci	r29, 0x00	; 0
    3a18:	ca 56       	subi	r28, 0x6A	; 106
    3a1a:	df 4f       	sbci	r29, 0xFF	; 255
    3a1c:	18 82       	st	Y, r1
    3a1e:	c6 59       	subi	r28, 0x96	; 150
    3a20:	d0 40       	sbci	r29, 0x00	; 0
    3a22:	cb 56       	subi	r28, 0x6B	; 107
    3a24:	df 4f       	sbci	r29, 0xFF	; 255
    3a26:	28 81       	ld	r18, Y
    3a28:	39 81       	ldd	r19, Y+1	; 0x01
    3a2a:	c5 59       	subi	r28, 0x95	; 149
    3a2c:	d0 40       	sbci	r29, 0x00	; 0
    3a2e:	82 2b       	or	r24, r18
    3a30:	93 2b       	or	r25, r19
    3a32:	f2 95       	swap	r31
    3a34:	f1 70       	andi	r31, 0x01	; 1
    3a36:	c9 56       	subi	r28, 0x69	; 105
    3a38:	df 4f       	sbci	r29, 0xFF	; 255
    3a3a:	f8 83       	st	Y, r31
    3a3c:	c7 59       	subi	r28, 0x97	; 151
    3a3e:	d0 40       	sbci	r29, 0x00	; 0
    3a40:	c8 56       	subi	r28, 0x68	; 104
    3a42:	df 4f       	sbci	r29, 0xFF	; 255
    3a44:	18 82       	st	Y, r1
    3a46:	c8 59       	subi	r28, 0x98	; 152
    3a48:	d0 40       	sbci	r29, 0x00	; 0
    3a4a:	c9 56       	subi	r28, 0x69	; 105
    3a4c:	df 4f       	sbci	r29, 0xFF	; 255
    3a4e:	28 81       	ld	r18, Y
    3a50:	39 81       	ldd	r19, Y+1	; 0x01
    3a52:	c7 59       	subi	r28, 0x97	; 151
    3a54:	d0 40       	sbci	r29, 0x00	; 0
    3a56:	22 0f       	add	r18, r18
    3a58:	33 1f       	adc	r19, r19
    3a5a:	82 2b       	or	r24, r18
    3a5c:	93 2b       	or	r25, r19
    3a5e:	e5 fb       	bst	r30, 5
    3a60:	ee 27       	eor	r30, r30
    3a62:	e0 f9       	bld	r30, 0
    3a64:	c7 56       	subi	r28, 0x67	; 103
    3a66:	df 4f       	sbci	r29, 0xFF	; 255
    3a68:	e8 83       	st	Y, r30
    3a6a:	c9 59       	subi	r28, 0x99	; 153
    3a6c:	d0 40       	sbci	r29, 0x00	; 0
    3a6e:	c6 56       	subi	r28, 0x66	; 102
    3a70:	df 4f       	sbci	r29, 0xFF	; 255
    3a72:	18 82       	st	Y, r1
    3a74:	ca 59       	subi	r28, 0x9A	; 154
    3a76:	d0 40       	sbci	r29, 0x00	; 0
    3a78:	c7 56       	subi	r28, 0x67	; 103
    3a7a:	df 4f       	sbci	r29, 0xFF	; 255
    3a7c:	28 81       	ld	r18, Y
    3a7e:	39 81       	ldd	r19, Y+1	; 0x01
    3a80:	c9 59       	subi	r28, 0x99	; 153
    3a82:	d0 40       	sbci	r29, 0x00	; 0
    3a84:	22 0f       	add	r18, r18
    3a86:	33 1f       	adc	r19, r19
    3a88:	22 0f       	add	r18, r18
    3a8a:	33 1f       	adc	r19, r19
    3a8c:	22 0f       	add	r18, r18
    3a8e:	33 1f       	adc	r19, r19
    3a90:	82 2b       	or	r24, r18
    3a92:	93 2b       	or	r25, r19
    3a94:	68 9f       	mul	r22, r24
    3a96:	90 01       	movw	r18, r0
    3a98:	69 9f       	mul	r22, r25
    3a9a:	30 0d       	add	r19, r0
    3a9c:	11 24       	eor	r1, r1
    3a9e:	f9 01       	movw	r30, r18
    3aa0:	ea 54       	subi	r30, 0x4A	; 74
    3aa2:	ff 4d       	sbci	r31, 0xDF	; 223
    3aa4:	87 81       	ldd	r24, Z+7	; 0x07
    3aa6:	90 85       	ldd	r25, Z+8	; 0x08
    3aa8:	cd 56       	subi	r28, 0x6D	; 109
    3aaa:	df 4f       	sbci	r29, 0xFF	; 255
    3aac:	48 81       	ld	r20, Y
    3aae:	59 81       	ldd	r21, Y+1	; 0x01
    3ab0:	c3 59       	subi	r28, 0x93	; 147
    3ab2:	d0 40       	sbci	r29, 0x00	; 0
    3ab4:	84 2b       	or	r24, r20
    3ab6:	95 2b       	or	r25, r21
    3ab8:	87 9f       	mul	r24, r23
    3aba:	80 2d       	mov	r24, r0
    3abc:	11 24       	eor	r1, r1
    3abe:	80 93 8b 23 	sts	0x238B, r24
    3ac2:	a8 e0       	ldi	r26, 0x08	; 8
    3ac4:	b6 e0       	ldi	r27, 0x06	; 6
    3ac6:	1c 91       	ld	r17, X
    3ac8:	fc 91       	ld	r31, X
    3aca:	8c 91       	ld	r24, X
    3acc:	ec 91       	ld	r30, X
    3ace:	3c 91       	ld	r19, X
    3ad0:	2c 91       	ld	r18, X
    3ad2:	4c 91       	ld	r20, X
    3ad4:	9c 91       	ld	r25, X
    3ad6:	44 1f       	adc	r20, r20
    3ad8:	44 27       	eor	r20, r20
    3ada:	44 1f       	adc	r20, r20
    3adc:	50 e0       	ldi	r21, 0x00	; 0
    3ade:	44 0f       	add	r20, r20
    3ae0:	55 1f       	adc	r21, r21
    3ae2:	44 0f       	add	r20, r20
    3ae4:	55 1f       	adc	r21, r21
    3ae6:	36 fb       	bst	r19, 6
    3ae8:	33 27       	eor	r19, r19
    3aea:	30 f9       	bld	r19, 0
    3aec:	c5 56       	subi	r28, 0x65	; 101
    3aee:	df 4f       	sbci	r29, 0xFF	; 255
    3af0:	38 83       	st	Y, r19
    3af2:	cb 59       	subi	r28, 0x9B	; 155
    3af4:	d0 40       	sbci	r29, 0x00	; 0
    3af6:	c4 56       	subi	r28, 0x64	; 100
    3af8:	df 4f       	sbci	r29, 0xFF	; 255
    3afa:	18 82       	st	Y, r1
    3afc:	cc 59       	subi	r28, 0x9C	; 156
    3afe:	d0 40       	sbci	r29, 0x00	; 0
    3b00:	c5 56       	subi	r28, 0x65	; 101
    3b02:	df 4f       	sbci	r29, 0xFF	; 255
    3b04:	a8 81       	ld	r26, Y
    3b06:	b9 81       	ldd	r27, Y+1	; 0x01
    3b08:	cb 59       	subi	r28, 0x9B	; 155
    3b0a:	d0 40       	sbci	r29, 0x00	; 0
    3b0c:	4a 2b       	or	r20, r26
    3b0e:	5b 2b       	or	r21, r27
    3b10:	22 95       	swap	r18
    3b12:	21 70       	andi	r18, 0x01	; 1
    3b14:	c3 56       	subi	r28, 0x63	; 99
    3b16:	df 4f       	sbci	r29, 0xFF	; 255
    3b18:	28 83       	st	Y, r18
    3b1a:	cd 59       	subi	r28, 0x9D	; 157
    3b1c:	d0 40       	sbci	r29, 0x00	; 0
    3b1e:	c2 56       	subi	r28, 0x62	; 98
    3b20:	df 4f       	sbci	r29, 0xFF	; 255
    3b22:	18 82       	st	Y, r1
    3b24:	ce 59       	subi	r28, 0x9E	; 158
    3b26:	d0 40       	sbci	r29, 0x00	; 0
    3b28:	c3 56       	subi	r28, 0x63	; 99
    3b2a:	df 4f       	sbci	r29, 0xFF	; 255
    3b2c:	28 81       	ld	r18, Y
    3b2e:	39 81       	ldd	r19, Y+1	; 0x01
    3b30:	cd 59       	subi	r28, 0x9D	; 157
    3b32:	d0 40       	sbci	r29, 0x00	; 0
    3b34:	22 0f       	add	r18, r18
    3b36:	33 1f       	adc	r19, r19
    3b38:	42 2b       	or	r20, r18
    3b3a:	53 2b       	or	r21, r19
    3b3c:	95 fb       	bst	r25, 5
    3b3e:	99 27       	eor	r25, r25
    3b40:	90 f9       	bld	r25, 0
    3b42:	c1 56       	subi	r28, 0x61	; 97
    3b44:	df 4f       	sbci	r29, 0xFF	; 255
    3b46:	98 83       	st	Y, r25
    3b48:	cf 59       	subi	r28, 0x9F	; 159
    3b4a:	d0 40       	sbci	r29, 0x00	; 0
    3b4c:	c0 56       	subi	r28, 0x60	; 96
    3b4e:	df 4f       	sbci	r29, 0xFF	; 255
    3b50:	18 82       	st	Y, r1
    3b52:	c0 5a       	subi	r28, 0xA0	; 160
    3b54:	d0 40       	sbci	r29, 0x00	; 0
    3b56:	c1 56       	subi	r28, 0x61	; 97
    3b58:	df 4f       	sbci	r29, 0xFF	; 255
    3b5a:	28 81       	ld	r18, Y
    3b5c:	39 81       	ldd	r19, Y+1	; 0x01
    3b5e:	cf 59       	subi	r28, 0x9F	; 159
    3b60:	d0 40       	sbci	r29, 0x00	; 0
    3b62:	22 0f       	add	r18, r18
    3b64:	33 1f       	adc	r19, r19
    3b66:	22 0f       	add	r18, r18
    3b68:	33 1f       	adc	r19, r19
    3b6a:	22 0f       	add	r18, r18
    3b6c:	33 1f       	adc	r19, r19
    3b6e:	42 2b       	or	r20, r18
    3b70:	53 2b       	or	r21, r19
    3b72:	64 9f       	mul	r22, r20
    3b74:	90 01       	movw	r18, r0
    3b76:	65 9f       	mul	r22, r21
    3b78:	30 0d       	add	r19, r0
    3b7a:	11 24       	eor	r1, r1
    3b7c:	2a 54       	subi	r18, 0x4A	; 74
    3b7e:	3f 4d       	sbci	r19, 0xDF	; 223
    3b80:	d9 01       	movw	r26, r18
    3b82:	15 96       	adiw	r26, 0x05	; 5
    3b84:	bc 91       	ld	r27, X
    3b86:	ce 55       	subi	r28, 0x5E	; 94
    3b88:	df 4f       	sbci	r29, 0xFF	; 255
    3b8a:	b8 83       	st	Y, r27
    3b8c:	c2 5a       	subi	r28, 0xA2	; 162
    3b8e:	d0 40       	sbci	r29, 0x00	; 0
    3b90:	cf 55       	subi	r28, 0x5F	; 95
    3b92:	df 4f       	sbci	r29, 0xFF	; 255
    3b94:	18 82       	st	Y, r1
    3b96:	c1 5a       	subi	r28, 0xA1	; 161
    3b98:	d0 40       	sbci	r29, 0x00	; 0
    3b9a:	88 1f       	adc	r24, r24
    3b9c:	88 27       	eor	r24, r24
    3b9e:	88 1f       	adc	r24, r24
    3ba0:	90 e0       	ldi	r25, 0x00	; 0
    3ba2:	88 0f       	add	r24, r24
    3ba4:	99 1f       	adc	r25, r25
    3ba6:	88 0f       	add	r24, r24
    3ba8:	99 1f       	adc	r25, r25
    3baa:	16 fb       	bst	r17, 6
    3bac:	11 27       	eor	r17, r17
    3bae:	10 f9       	bld	r17, 0
    3bb0:	cd 55       	subi	r28, 0x5D	; 93
    3bb2:	df 4f       	sbci	r29, 0xFF	; 255
    3bb4:	18 83       	st	Y, r17
    3bb6:	c3 5a       	subi	r28, 0xA3	; 163
    3bb8:	d0 40       	sbci	r29, 0x00	; 0
    3bba:	cc 55       	subi	r28, 0x5C	; 92
    3bbc:	df 4f       	sbci	r29, 0xFF	; 255
    3bbe:	18 82       	st	Y, r1
    3bc0:	c4 5a       	subi	r28, 0xA4	; 164
    3bc2:	d0 40       	sbci	r29, 0x00	; 0
    3bc4:	cd 55       	subi	r28, 0x5D	; 93
    3bc6:	df 4f       	sbci	r29, 0xFF	; 255
    3bc8:	28 81       	ld	r18, Y
    3bca:	39 81       	ldd	r19, Y+1	; 0x01
    3bcc:	c3 5a       	subi	r28, 0xA3	; 163
    3bce:	d0 40       	sbci	r29, 0x00	; 0
    3bd0:	82 2b       	or	r24, r18
    3bd2:	93 2b       	or	r25, r19
    3bd4:	f2 95       	swap	r31
    3bd6:	f1 70       	andi	r31, 0x01	; 1
    3bd8:	cb 55       	subi	r28, 0x5B	; 91
    3bda:	df 4f       	sbci	r29, 0xFF	; 255
    3bdc:	f8 83       	st	Y, r31
    3bde:	c5 5a       	subi	r28, 0xA5	; 165
    3be0:	d0 40       	sbci	r29, 0x00	; 0
    3be2:	ca 55       	subi	r28, 0x5A	; 90
    3be4:	df 4f       	sbci	r29, 0xFF	; 255
    3be6:	18 82       	st	Y, r1
    3be8:	c6 5a       	subi	r28, 0xA6	; 166
    3bea:	d0 40       	sbci	r29, 0x00	; 0
    3bec:	cb 55       	subi	r28, 0x5B	; 91
    3bee:	df 4f       	sbci	r29, 0xFF	; 255
    3bf0:	28 81       	ld	r18, Y
    3bf2:	39 81       	ldd	r19, Y+1	; 0x01
    3bf4:	c5 5a       	subi	r28, 0xA5	; 165
    3bf6:	d0 40       	sbci	r29, 0x00	; 0
    3bf8:	22 0f       	add	r18, r18
    3bfa:	33 1f       	adc	r19, r19
    3bfc:	82 2b       	or	r24, r18
    3bfe:	93 2b       	or	r25, r19
    3c00:	e5 fb       	bst	r30, 5
    3c02:	ee 27       	eor	r30, r30
    3c04:	e0 f9       	bld	r30, 0
    3c06:	c9 55       	subi	r28, 0x59	; 89
    3c08:	df 4f       	sbci	r29, 0xFF	; 255
    3c0a:	e8 83       	st	Y, r30
    3c0c:	c7 5a       	subi	r28, 0xA7	; 167
    3c0e:	d0 40       	sbci	r29, 0x00	; 0
    3c10:	c8 55       	subi	r28, 0x58	; 88
    3c12:	df 4f       	sbci	r29, 0xFF	; 255
    3c14:	18 82       	st	Y, r1
    3c16:	c8 5a       	subi	r28, 0xA8	; 168
    3c18:	d0 40       	sbci	r29, 0x00	; 0
    3c1a:	c9 55       	subi	r28, 0x59	; 89
    3c1c:	df 4f       	sbci	r29, 0xFF	; 255
    3c1e:	28 81       	ld	r18, Y
    3c20:	39 81       	ldd	r19, Y+1	; 0x01
    3c22:	c7 5a       	subi	r28, 0xA7	; 167
    3c24:	d0 40       	sbci	r29, 0x00	; 0
    3c26:	22 0f       	add	r18, r18
    3c28:	33 1f       	adc	r19, r19
    3c2a:	22 0f       	add	r18, r18
    3c2c:	33 1f       	adc	r19, r19
    3c2e:	22 0f       	add	r18, r18
    3c30:	33 1f       	adc	r19, r19
    3c32:	82 2b       	or	r24, r18
    3c34:	93 2b       	or	r25, r19
    3c36:	68 9f       	mul	r22, r24
    3c38:	90 01       	movw	r18, r0
    3c3a:	69 9f       	mul	r22, r25
    3c3c:	30 0d       	add	r19, r0
    3c3e:	11 24       	eor	r1, r1
    3c40:	f9 01       	movw	r30, r18
    3c42:	ea 54       	subi	r30, 0x4A	; 74
    3c44:	ff 4d       	sbci	r31, 0xDF	; 223
    3c46:	27 81       	ldd	r18, Z+7	; 0x07
    3c48:	30 85       	ldd	r19, Z+8	; 0x08
    3c4a:	cf 55       	subi	r28, 0x5F	; 95
    3c4c:	df 4f       	sbci	r29, 0xFF	; 255
    3c4e:	48 81       	ld	r20, Y
    3c50:	59 81       	ldd	r21, Y+1	; 0x01
    3c52:	c1 5a       	subi	r28, 0xA1	; 161
    3c54:	d0 40       	sbci	r29, 0x00	; 0
    3c56:	24 2b       	or	r18, r20
    3c58:	35 2b       	or	r19, r21
    3c5a:	72 9f       	mul	r23, r18
    3c5c:	c0 01       	movw	r24, r0
    3c5e:	73 9f       	mul	r23, r19
    3c60:	90 0d       	add	r25, r0
    3c62:	11 24       	eor	r1, r1
    3c64:	90 93 8c 23 	sts	0x238C, r25
    3c68:	a8 e0       	ldi	r26, 0x08	; 8
    3c6a:	b6 e0       	ldi	r27, 0x06	; 6
    3c6c:	1c 91       	ld	r17, X
    3c6e:	fc 91       	ld	r31, X
    3c70:	8c 91       	ld	r24, X
    3c72:	ec 91       	ld	r30, X
    3c74:	3c 91       	ld	r19, X
    3c76:	2c 91       	ld	r18, X
    3c78:	4c 91       	ld	r20, X
    3c7a:	9c 91       	ld	r25, X
    3c7c:	44 1f       	adc	r20, r20
    3c7e:	44 27       	eor	r20, r20
    3c80:	44 1f       	adc	r20, r20
    3c82:	50 e0       	ldi	r21, 0x00	; 0
    3c84:	44 0f       	add	r20, r20
    3c86:	55 1f       	adc	r21, r21
    3c88:	44 0f       	add	r20, r20
    3c8a:	55 1f       	adc	r21, r21
    3c8c:	36 fb       	bst	r19, 6
    3c8e:	33 27       	eor	r19, r19
    3c90:	30 f9       	bld	r19, 0
    3c92:	c7 55       	subi	r28, 0x57	; 87
    3c94:	df 4f       	sbci	r29, 0xFF	; 255
    3c96:	38 83       	st	Y, r19
    3c98:	c9 5a       	subi	r28, 0xA9	; 169
    3c9a:	d0 40       	sbci	r29, 0x00	; 0
    3c9c:	c6 55       	subi	r28, 0x56	; 86
    3c9e:	df 4f       	sbci	r29, 0xFF	; 255
    3ca0:	18 82       	st	Y, r1
    3ca2:	ca 5a       	subi	r28, 0xAA	; 170
    3ca4:	d0 40       	sbci	r29, 0x00	; 0
    3ca6:	c7 55       	subi	r28, 0x57	; 87
    3ca8:	df 4f       	sbci	r29, 0xFF	; 255
    3caa:	a8 81       	ld	r26, Y
    3cac:	b9 81       	ldd	r27, Y+1	; 0x01
    3cae:	c9 5a       	subi	r28, 0xA9	; 169
    3cb0:	d0 40       	sbci	r29, 0x00	; 0
    3cb2:	4a 2b       	or	r20, r26
    3cb4:	5b 2b       	or	r21, r27
    3cb6:	22 95       	swap	r18
    3cb8:	21 70       	andi	r18, 0x01	; 1
    3cba:	c5 55       	subi	r28, 0x55	; 85
    3cbc:	df 4f       	sbci	r29, 0xFF	; 255
    3cbe:	28 83       	st	Y, r18
    3cc0:	cb 5a       	subi	r28, 0xAB	; 171
    3cc2:	d0 40       	sbci	r29, 0x00	; 0
    3cc4:	c4 55       	subi	r28, 0x54	; 84
    3cc6:	df 4f       	sbci	r29, 0xFF	; 255
    3cc8:	18 82       	st	Y, r1
    3cca:	cc 5a       	subi	r28, 0xAC	; 172
    3ccc:	d0 40       	sbci	r29, 0x00	; 0
    3cce:	c5 55       	subi	r28, 0x55	; 85
    3cd0:	df 4f       	sbci	r29, 0xFF	; 255
    3cd2:	28 81       	ld	r18, Y
    3cd4:	39 81       	ldd	r19, Y+1	; 0x01
    3cd6:	cb 5a       	subi	r28, 0xAB	; 171
    3cd8:	d0 40       	sbci	r29, 0x00	; 0
    3cda:	22 0f       	add	r18, r18
    3cdc:	33 1f       	adc	r19, r19
    3cde:	42 2b       	or	r20, r18
    3ce0:	53 2b       	or	r21, r19
    3ce2:	95 fb       	bst	r25, 5
    3ce4:	99 27       	eor	r25, r25
    3ce6:	90 f9       	bld	r25, 0
    3ce8:	c3 55       	subi	r28, 0x53	; 83
    3cea:	df 4f       	sbci	r29, 0xFF	; 255
    3cec:	98 83       	st	Y, r25
    3cee:	cd 5a       	subi	r28, 0xAD	; 173
    3cf0:	d0 40       	sbci	r29, 0x00	; 0
    3cf2:	c2 55       	subi	r28, 0x52	; 82
    3cf4:	df 4f       	sbci	r29, 0xFF	; 255
    3cf6:	18 82       	st	Y, r1
    3cf8:	ce 5a       	subi	r28, 0xAE	; 174
    3cfa:	d0 40       	sbci	r29, 0x00	; 0
    3cfc:	c3 55       	subi	r28, 0x53	; 83
    3cfe:	df 4f       	sbci	r29, 0xFF	; 255
    3d00:	28 81       	ld	r18, Y
    3d02:	39 81       	ldd	r19, Y+1	; 0x01
    3d04:	cd 5a       	subi	r28, 0xAD	; 173
    3d06:	d0 40       	sbci	r29, 0x00	; 0
    3d08:	22 0f       	add	r18, r18
    3d0a:	33 1f       	adc	r19, r19
    3d0c:	22 0f       	add	r18, r18
    3d0e:	33 1f       	adc	r19, r19
    3d10:	22 0f       	add	r18, r18
    3d12:	33 1f       	adc	r19, r19
    3d14:	42 2b       	or	r20, r18
    3d16:	53 2b       	or	r21, r19
    3d18:	64 9f       	mul	r22, r20
    3d1a:	90 01       	movw	r18, r0
    3d1c:	65 9f       	mul	r22, r21
    3d1e:	30 0d       	add	r19, r0
    3d20:	11 24       	eor	r1, r1
    3d22:	2a 54       	subi	r18, 0x4A	; 74
    3d24:	3f 4d       	sbci	r19, 0xDF	; 223
    3d26:	d9 01       	movw	r26, r18
    3d28:	19 96       	adiw	r26, 0x09	; 9
    3d2a:	bc 91       	ld	r27, X
    3d2c:	c0 55       	subi	r28, 0x50	; 80
    3d2e:	df 4f       	sbci	r29, 0xFF	; 255
    3d30:	b8 83       	st	Y, r27
    3d32:	c0 5b       	subi	r28, 0xB0	; 176
    3d34:	d0 40       	sbci	r29, 0x00	; 0
    3d36:	c1 55       	subi	r28, 0x51	; 81
    3d38:	df 4f       	sbci	r29, 0xFF	; 255
    3d3a:	18 82       	st	Y, r1
    3d3c:	cf 5a       	subi	r28, 0xAF	; 175
    3d3e:	d0 40       	sbci	r29, 0x00	; 0
    3d40:	88 1f       	adc	r24, r24
    3d42:	88 27       	eor	r24, r24
    3d44:	88 1f       	adc	r24, r24
    3d46:	90 e0       	ldi	r25, 0x00	; 0
    3d48:	88 0f       	add	r24, r24
    3d4a:	99 1f       	adc	r25, r25
    3d4c:	88 0f       	add	r24, r24
    3d4e:	99 1f       	adc	r25, r25
    3d50:	16 fb       	bst	r17, 6
    3d52:	11 27       	eor	r17, r17
    3d54:	10 f9       	bld	r17, 0
    3d56:	cf 54       	subi	r28, 0x4F	; 79
    3d58:	df 4f       	sbci	r29, 0xFF	; 255
    3d5a:	18 83       	st	Y, r17
    3d5c:	c1 5b       	subi	r28, 0xB1	; 177
    3d5e:	d0 40       	sbci	r29, 0x00	; 0
    3d60:	ce 54       	subi	r28, 0x4E	; 78
    3d62:	df 4f       	sbci	r29, 0xFF	; 255
    3d64:	18 82       	st	Y, r1
    3d66:	c2 5b       	subi	r28, 0xB2	; 178
    3d68:	d0 40       	sbci	r29, 0x00	; 0
    3d6a:	cf 54       	subi	r28, 0x4F	; 79
    3d6c:	df 4f       	sbci	r29, 0xFF	; 255
    3d6e:	28 81       	ld	r18, Y
    3d70:	39 81       	ldd	r19, Y+1	; 0x01
    3d72:	c1 5b       	subi	r28, 0xB1	; 177
    3d74:	d0 40       	sbci	r29, 0x00	; 0
    3d76:	82 2b       	or	r24, r18
    3d78:	93 2b       	or	r25, r19
    3d7a:	f2 95       	swap	r31
    3d7c:	f1 70       	andi	r31, 0x01	; 1
    3d7e:	cd 54       	subi	r28, 0x4D	; 77
    3d80:	df 4f       	sbci	r29, 0xFF	; 255
    3d82:	f8 83       	st	Y, r31
    3d84:	c3 5b       	subi	r28, 0xB3	; 179
    3d86:	d0 40       	sbci	r29, 0x00	; 0
    3d88:	cc 54       	subi	r28, 0x4C	; 76
    3d8a:	df 4f       	sbci	r29, 0xFF	; 255
    3d8c:	18 82       	st	Y, r1
    3d8e:	c4 5b       	subi	r28, 0xB4	; 180
    3d90:	d0 40       	sbci	r29, 0x00	; 0
    3d92:	cd 54       	subi	r28, 0x4D	; 77
    3d94:	df 4f       	sbci	r29, 0xFF	; 255
    3d96:	28 81       	ld	r18, Y
    3d98:	39 81       	ldd	r19, Y+1	; 0x01
    3d9a:	c3 5b       	subi	r28, 0xB3	; 179
    3d9c:	d0 40       	sbci	r29, 0x00	; 0
    3d9e:	22 0f       	add	r18, r18
    3da0:	33 1f       	adc	r19, r19
    3da2:	82 2b       	or	r24, r18
    3da4:	93 2b       	or	r25, r19
    3da6:	e5 fb       	bst	r30, 5
    3da8:	ee 27       	eor	r30, r30
    3daa:	e0 f9       	bld	r30, 0
    3dac:	cb 54       	subi	r28, 0x4B	; 75
    3dae:	df 4f       	sbci	r29, 0xFF	; 255
    3db0:	e8 83       	st	Y, r30
    3db2:	c5 5b       	subi	r28, 0xB5	; 181
    3db4:	d0 40       	sbci	r29, 0x00	; 0
    3db6:	ca 54       	subi	r28, 0x4A	; 74
    3db8:	df 4f       	sbci	r29, 0xFF	; 255
    3dba:	18 82       	st	Y, r1
    3dbc:	c6 5b       	subi	r28, 0xB6	; 182
    3dbe:	d0 40       	sbci	r29, 0x00	; 0
    3dc0:	cb 54       	subi	r28, 0x4B	; 75
    3dc2:	df 4f       	sbci	r29, 0xFF	; 255
    3dc4:	28 81       	ld	r18, Y
    3dc6:	39 81       	ldd	r19, Y+1	; 0x01
    3dc8:	c5 5b       	subi	r28, 0xB5	; 181
    3dca:	d0 40       	sbci	r29, 0x00	; 0
    3dcc:	22 0f       	add	r18, r18
    3dce:	33 1f       	adc	r19, r19
    3dd0:	22 0f       	add	r18, r18
    3dd2:	33 1f       	adc	r19, r19
    3dd4:	22 0f       	add	r18, r18
    3dd6:	33 1f       	adc	r19, r19
    3dd8:	82 2b       	or	r24, r18
    3dda:	93 2b       	or	r25, r19
    3ddc:	68 9f       	mul	r22, r24
    3dde:	90 01       	movw	r18, r0
    3de0:	69 9f       	mul	r22, r25
    3de2:	30 0d       	add	r19, r0
    3de4:	11 24       	eor	r1, r1
    3de6:	f9 01       	movw	r30, r18
    3de8:	ea 54       	subi	r30, 0x4A	; 74
    3dea:	ff 4d       	sbci	r31, 0xDF	; 223
    3dec:	83 85       	ldd	r24, Z+11	; 0x0b
    3dee:	94 85       	ldd	r25, Z+12	; 0x0c
    3df0:	c1 55       	subi	r28, 0x51	; 81
    3df2:	df 4f       	sbci	r29, 0xFF	; 255
    3df4:	48 81       	ld	r20, Y
    3df6:	59 81       	ldd	r21, Y+1	; 0x01
    3df8:	cf 5a       	subi	r28, 0xAF	; 175
    3dfa:	d0 40       	sbci	r29, 0x00	; 0
    3dfc:	84 2b       	or	r24, r20
    3dfe:	95 2b       	or	r25, r21
    3e00:	87 9f       	mul	r24, r23
    3e02:	80 2d       	mov	r24, r0
    3e04:	11 24       	eor	r1, r1
    3e06:	80 93 8d 23 	sts	0x238D, r24
    3e0a:	a8 e0       	ldi	r26, 0x08	; 8
    3e0c:	b6 e0       	ldi	r27, 0x06	; 6
    3e0e:	1c 91       	ld	r17, X
    3e10:	fc 91       	ld	r31, X
    3e12:	8c 91       	ld	r24, X
    3e14:	ec 91       	ld	r30, X
    3e16:	3c 91       	ld	r19, X
    3e18:	2c 91       	ld	r18, X
    3e1a:	4c 91       	ld	r20, X
    3e1c:	9c 91       	ld	r25, X
    3e1e:	44 1f       	adc	r20, r20
    3e20:	44 27       	eor	r20, r20
    3e22:	44 1f       	adc	r20, r20
    3e24:	50 e0       	ldi	r21, 0x00	; 0
    3e26:	44 0f       	add	r20, r20
    3e28:	55 1f       	adc	r21, r21
    3e2a:	44 0f       	add	r20, r20
    3e2c:	55 1f       	adc	r21, r21
    3e2e:	36 fb       	bst	r19, 6
    3e30:	33 27       	eor	r19, r19
    3e32:	30 f9       	bld	r19, 0
    3e34:	c9 54       	subi	r28, 0x49	; 73
    3e36:	df 4f       	sbci	r29, 0xFF	; 255
    3e38:	38 83       	st	Y, r19
    3e3a:	c7 5b       	subi	r28, 0xB7	; 183
    3e3c:	d0 40       	sbci	r29, 0x00	; 0
    3e3e:	c8 54       	subi	r28, 0x48	; 72
    3e40:	df 4f       	sbci	r29, 0xFF	; 255
    3e42:	18 82       	st	Y, r1
    3e44:	c8 5b       	subi	r28, 0xB8	; 184
    3e46:	d0 40       	sbci	r29, 0x00	; 0
    3e48:	c9 54       	subi	r28, 0x49	; 73
    3e4a:	df 4f       	sbci	r29, 0xFF	; 255
    3e4c:	a8 81       	ld	r26, Y
    3e4e:	b9 81       	ldd	r27, Y+1	; 0x01
    3e50:	c7 5b       	subi	r28, 0xB7	; 183
    3e52:	d0 40       	sbci	r29, 0x00	; 0
    3e54:	4a 2b       	or	r20, r26
    3e56:	5b 2b       	or	r21, r27
    3e58:	22 95       	swap	r18
    3e5a:	21 70       	andi	r18, 0x01	; 1
    3e5c:	c7 54       	subi	r28, 0x47	; 71
    3e5e:	df 4f       	sbci	r29, 0xFF	; 255
    3e60:	28 83       	st	Y, r18
    3e62:	c9 5b       	subi	r28, 0xB9	; 185
    3e64:	d0 40       	sbci	r29, 0x00	; 0
    3e66:	c6 54       	subi	r28, 0x46	; 70
    3e68:	df 4f       	sbci	r29, 0xFF	; 255
    3e6a:	18 82       	st	Y, r1
    3e6c:	ca 5b       	subi	r28, 0xBA	; 186
    3e6e:	d0 40       	sbci	r29, 0x00	; 0
    3e70:	c7 54       	subi	r28, 0x47	; 71
    3e72:	df 4f       	sbci	r29, 0xFF	; 255
    3e74:	28 81       	ld	r18, Y
    3e76:	39 81       	ldd	r19, Y+1	; 0x01
    3e78:	c9 5b       	subi	r28, 0xB9	; 185
    3e7a:	d0 40       	sbci	r29, 0x00	; 0
    3e7c:	22 0f       	add	r18, r18
    3e7e:	33 1f       	adc	r19, r19
    3e80:	42 2b       	or	r20, r18
    3e82:	53 2b       	or	r21, r19
    3e84:	95 fb       	bst	r25, 5
    3e86:	99 27       	eor	r25, r25
    3e88:	90 f9       	bld	r25, 0
    3e8a:	c5 54       	subi	r28, 0x45	; 69
    3e8c:	df 4f       	sbci	r29, 0xFF	; 255
    3e8e:	98 83       	st	Y, r25
    3e90:	cb 5b       	subi	r28, 0xBB	; 187
    3e92:	d0 40       	sbci	r29, 0x00	; 0
    3e94:	c4 54       	subi	r28, 0x44	; 68
    3e96:	df 4f       	sbci	r29, 0xFF	; 255
    3e98:	18 82       	st	Y, r1
    3e9a:	cc 5b       	subi	r28, 0xBC	; 188
    3e9c:	d0 40       	sbci	r29, 0x00	; 0
    3e9e:	c5 54       	subi	r28, 0x45	; 69
    3ea0:	df 4f       	sbci	r29, 0xFF	; 255
    3ea2:	28 81       	ld	r18, Y
    3ea4:	39 81       	ldd	r19, Y+1	; 0x01
    3ea6:	cb 5b       	subi	r28, 0xBB	; 187
    3ea8:	d0 40       	sbci	r29, 0x00	; 0
    3eaa:	22 0f       	add	r18, r18
    3eac:	33 1f       	adc	r19, r19
    3eae:	22 0f       	add	r18, r18
    3eb0:	33 1f       	adc	r19, r19
    3eb2:	22 0f       	add	r18, r18
    3eb4:	33 1f       	adc	r19, r19
    3eb6:	42 2b       	or	r20, r18
    3eb8:	53 2b       	or	r21, r19
    3eba:	64 9f       	mul	r22, r20
    3ebc:	90 01       	movw	r18, r0
    3ebe:	65 9f       	mul	r22, r21
    3ec0:	30 0d       	add	r19, r0
    3ec2:	11 24       	eor	r1, r1
    3ec4:	2a 54       	subi	r18, 0x4A	; 74
    3ec6:	3f 4d       	sbci	r19, 0xDF	; 223
    3ec8:	d9 01       	movw	r26, r18
    3eca:	19 96       	adiw	r26, 0x09	; 9
    3ecc:	bc 91       	ld	r27, X
    3ece:	c2 54       	subi	r28, 0x42	; 66
    3ed0:	df 4f       	sbci	r29, 0xFF	; 255
    3ed2:	b8 83       	st	Y, r27
    3ed4:	ce 5b       	subi	r28, 0xBE	; 190
    3ed6:	d0 40       	sbci	r29, 0x00	; 0
    3ed8:	c3 54       	subi	r28, 0x43	; 67
    3eda:	df 4f       	sbci	r29, 0xFF	; 255
    3edc:	18 82       	st	Y, r1
    3ede:	cd 5b       	subi	r28, 0xBD	; 189
    3ee0:	d0 40       	sbci	r29, 0x00	; 0
    3ee2:	88 1f       	adc	r24, r24
    3ee4:	88 27       	eor	r24, r24
    3ee6:	88 1f       	adc	r24, r24
    3ee8:	90 e0       	ldi	r25, 0x00	; 0
    3eea:	88 0f       	add	r24, r24
    3eec:	99 1f       	adc	r25, r25
    3eee:	88 0f       	add	r24, r24
    3ef0:	99 1f       	adc	r25, r25
    3ef2:	16 fb       	bst	r17, 6
    3ef4:	11 27       	eor	r17, r17
    3ef6:	10 f9       	bld	r17, 0
    3ef8:	c1 54       	subi	r28, 0x41	; 65
    3efa:	df 4f       	sbci	r29, 0xFF	; 255
    3efc:	18 83       	st	Y, r17
    3efe:	cf 5b       	subi	r28, 0xBF	; 191
    3f00:	d0 40       	sbci	r29, 0x00	; 0
    3f02:	c0 54       	subi	r28, 0x40	; 64
    3f04:	df 4f       	sbci	r29, 0xFF	; 255
    3f06:	18 82       	st	Y, r1
    3f08:	c0 5c       	subi	r28, 0xC0	; 192
    3f0a:	d0 40       	sbci	r29, 0x00	; 0
    3f0c:	c1 54       	subi	r28, 0x41	; 65
    3f0e:	df 4f       	sbci	r29, 0xFF	; 255
    3f10:	28 81       	ld	r18, Y
    3f12:	39 81       	ldd	r19, Y+1	; 0x01
    3f14:	cf 5b       	subi	r28, 0xBF	; 191
    3f16:	d0 40       	sbci	r29, 0x00	; 0
    3f18:	82 2b       	or	r24, r18
    3f1a:	93 2b       	or	r25, r19
    3f1c:	f2 95       	swap	r31
    3f1e:	f1 70       	andi	r31, 0x01	; 1
    3f20:	cf 53       	subi	r28, 0x3F	; 63
    3f22:	df 4f       	sbci	r29, 0xFF	; 255
    3f24:	f8 83       	st	Y, r31
    3f26:	c1 5c       	subi	r28, 0xC1	; 193
    3f28:	d0 40       	sbci	r29, 0x00	; 0
    3f2a:	ce 53       	subi	r28, 0x3E	; 62
    3f2c:	df 4f       	sbci	r29, 0xFF	; 255
    3f2e:	18 82       	st	Y, r1
    3f30:	c2 5c       	subi	r28, 0xC2	; 194
    3f32:	d0 40       	sbci	r29, 0x00	; 0
    3f34:	cf 53       	subi	r28, 0x3F	; 63
    3f36:	df 4f       	sbci	r29, 0xFF	; 255
    3f38:	28 81       	ld	r18, Y
    3f3a:	39 81       	ldd	r19, Y+1	; 0x01
    3f3c:	c1 5c       	subi	r28, 0xC1	; 193
    3f3e:	d0 40       	sbci	r29, 0x00	; 0
    3f40:	22 0f       	add	r18, r18
    3f42:	33 1f       	adc	r19, r19
    3f44:	82 2b       	or	r24, r18
    3f46:	93 2b       	or	r25, r19
    3f48:	e5 fb       	bst	r30, 5
    3f4a:	ee 27       	eor	r30, r30
    3f4c:	e0 f9       	bld	r30, 0
    3f4e:	cd 53       	subi	r28, 0x3D	; 61
    3f50:	df 4f       	sbci	r29, 0xFF	; 255
    3f52:	e8 83       	st	Y, r30
    3f54:	c3 5c       	subi	r28, 0xC3	; 195
    3f56:	d0 40       	sbci	r29, 0x00	; 0
    3f58:	cc 53       	subi	r28, 0x3C	; 60
    3f5a:	df 4f       	sbci	r29, 0xFF	; 255
    3f5c:	18 82       	st	Y, r1
    3f5e:	c4 5c       	subi	r28, 0xC4	; 196
    3f60:	d0 40       	sbci	r29, 0x00	; 0
    3f62:	cd 53       	subi	r28, 0x3D	; 61
    3f64:	df 4f       	sbci	r29, 0xFF	; 255
    3f66:	28 81       	ld	r18, Y
    3f68:	39 81       	ldd	r19, Y+1	; 0x01
    3f6a:	c3 5c       	subi	r28, 0xC3	; 195
    3f6c:	d0 40       	sbci	r29, 0x00	; 0
    3f6e:	22 0f       	add	r18, r18
    3f70:	33 1f       	adc	r19, r19
    3f72:	22 0f       	add	r18, r18
    3f74:	33 1f       	adc	r19, r19
    3f76:	22 0f       	add	r18, r18
    3f78:	33 1f       	adc	r19, r19
    3f7a:	82 2b       	or	r24, r18
    3f7c:	93 2b       	or	r25, r19
    3f7e:	68 9f       	mul	r22, r24
    3f80:	90 01       	movw	r18, r0
    3f82:	69 9f       	mul	r22, r25
    3f84:	30 0d       	add	r19, r0
    3f86:	11 24       	eor	r1, r1
    3f88:	f9 01       	movw	r30, r18
    3f8a:	ea 54       	subi	r30, 0x4A	; 74
    3f8c:	ff 4d       	sbci	r31, 0xDF	; 223
    3f8e:	23 85       	ldd	r18, Z+11	; 0x0b
    3f90:	34 85       	ldd	r19, Z+12	; 0x0c
    3f92:	c3 54       	subi	r28, 0x43	; 67
    3f94:	df 4f       	sbci	r29, 0xFF	; 255
    3f96:	48 81       	ld	r20, Y
    3f98:	59 81       	ldd	r21, Y+1	; 0x01
    3f9a:	cd 5b       	subi	r28, 0xBD	; 189
    3f9c:	d0 40       	sbci	r29, 0x00	; 0
    3f9e:	24 2b       	or	r18, r20
    3fa0:	35 2b       	or	r19, r21
    3fa2:	72 9f       	mul	r23, r18
    3fa4:	c0 01       	movw	r24, r0
    3fa6:	73 9f       	mul	r23, r19
    3fa8:	90 0d       	add	r25, r0
    3faa:	11 24       	eor	r1, r1
    3fac:	90 93 8e 23 	sts	0x238E, r25
    3fb0:	a8 e0       	ldi	r26, 0x08	; 8
    3fb2:	b6 e0       	ldi	r27, 0x06	; 6
    3fb4:	1c 91       	ld	r17, X
    3fb6:	fc 91       	ld	r31, X
    3fb8:	8c 91       	ld	r24, X
    3fba:	ec 91       	ld	r30, X
    3fbc:	3c 91       	ld	r19, X
    3fbe:	2c 91       	ld	r18, X
    3fc0:	4c 91       	ld	r20, X
    3fc2:	9c 91       	ld	r25, X
    3fc4:	44 1f       	adc	r20, r20
    3fc6:	44 27       	eor	r20, r20
    3fc8:	44 1f       	adc	r20, r20
    3fca:	50 e0       	ldi	r21, 0x00	; 0
    3fcc:	44 0f       	add	r20, r20
    3fce:	55 1f       	adc	r21, r21
    3fd0:	44 0f       	add	r20, r20
    3fd2:	55 1f       	adc	r21, r21
    3fd4:	36 fb       	bst	r19, 6
    3fd6:	33 27       	eor	r19, r19
    3fd8:	30 f9       	bld	r19, 0
    3fda:	cb 53       	subi	r28, 0x3B	; 59
    3fdc:	df 4f       	sbci	r29, 0xFF	; 255
    3fde:	38 83       	st	Y, r19
    3fe0:	c5 5c       	subi	r28, 0xC5	; 197
    3fe2:	d0 40       	sbci	r29, 0x00	; 0
    3fe4:	ca 53       	subi	r28, 0x3A	; 58
    3fe6:	df 4f       	sbci	r29, 0xFF	; 255
    3fe8:	18 82       	st	Y, r1
    3fea:	c6 5c       	subi	r28, 0xC6	; 198
    3fec:	d0 40       	sbci	r29, 0x00	; 0
    3fee:	cb 53       	subi	r28, 0x3B	; 59
    3ff0:	df 4f       	sbci	r29, 0xFF	; 255
    3ff2:	a8 81       	ld	r26, Y
    3ff4:	b9 81       	ldd	r27, Y+1	; 0x01
    3ff6:	c5 5c       	subi	r28, 0xC5	; 197
    3ff8:	d0 40       	sbci	r29, 0x00	; 0
    3ffa:	4a 2b       	or	r20, r26
    3ffc:	5b 2b       	or	r21, r27
    3ffe:	22 95       	swap	r18
    4000:	21 70       	andi	r18, 0x01	; 1
    4002:	c9 53       	subi	r28, 0x39	; 57
    4004:	df 4f       	sbci	r29, 0xFF	; 255
    4006:	28 83       	st	Y, r18
    4008:	c7 5c       	subi	r28, 0xC7	; 199
    400a:	d0 40       	sbci	r29, 0x00	; 0
    400c:	c8 53       	subi	r28, 0x38	; 56
    400e:	df 4f       	sbci	r29, 0xFF	; 255
    4010:	18 82       	st	Y, r1
    4012:	c8 5c       	subi	r28, 0xC8	; 200
    4014:	d0 40       	sbci	r29, 0x00	; 0
    4016:	c9 53       	subi	r28, 0x39	; 57
    4018:	df 4f       	sbci	r29, 0xFF	; 255
    401a:	28 81       	ld	r18, Y
    401c:	39 81       	ldd	r19, Y+1	; 0x01
    401e:	c7 5c       	subi	r28, 0xC7	; 199
    4020:	d0 40       	sbci	r29, 0x00	; 0
    4022:	22 0f       	add	r18, r18
    4024:	33 1f       	adc	r19, r19
    4026:	42 2b       	or	r20, r18
    4028:	53 2b       	or	r21, r19
    402a:	95 fb       	bst	r25, 5
    402c:	99 27       	eor	r25, r25
    402e:	90 f9       	bld	r25, 0
    4030:	c7 53       	subi	r28, 0x37	; 55
    4032:	df 4f       	sbci	r29, 0xFF	; 255
    4034:	98 83       	st	Y, r25
    4036:	c9 5c       	subi	r28, 0xC9	; 201
    4038:	d0 40       	sbci	r29, 0x00	; 0
    403a:	c6 53       	subi	r28, 0x36	; 54
    403c:	df 4f       	sbci	r29, 0xFF	; 255
    403e:	18 82       	st	Y, r1
    4040:	ca 5c       	subi	r28, 0xCA	; 202
    4042:	d0 40       	sbci	r29, 0x00	; 0
    4044:	c7 53       	subi	r28, 0x37	; 55
    4046:	df 4f       	sbci	r29, 0xFF	; 255
    4048:	28 81       	ld	r18, Y
    404a:	39 81       	ldd	r19, Y+1	; 0x01
    404c:	c9 5c       	subi	r28, 0xC9	; 201
    404e:	d0 40       	sbci	r29, 0x00	; 0
    4050:	22 0f       	add	r18, r18
    4052:	33 1f       	adc	r19, r19
    4054:	22 0f       	add	r18, r18
    4056:	33 1f       	adc	r19, r19
    4058:	22 0f       	add	r18, r18
    405a:	33 1f       	adc	r19, r19
    405c:	42 2b       	or	r20, r18
    405e:	53 2b       	or	r21, r19
    4060:	64 9f       	mul	r22, r20
    4062:	90 01       	movw	r18, r0
    4064:	65 9f       	mul	r22, r21
    4066:	30 0d       	add	r19, r0
    4068:	11 24       	eor	r1, r1
    406a:	2a 54       	subi	r18, 0x4A	; 74
    406c:	3f 4d       	sbci	r19, 0xDF	; 223
    406e:	d9 01       	movw	r26, r18
    4070:	1d 96       	adiw	r26, 0x0d	; 13
    4072:	bc 91       	ld	r27, X
    4074:	c4 53       	subi	r28, 0x34	; 52
    4076:	df 4f       	sbci	r29, 0xFF	; 255
    4078:	b8 83       	st	Y, r27
    407a:	cc 5c       	subi	r28, 0xCC	; 204
    407c:	d0 40       	sbci	r29, 0x00	; 0
    407e:	c5 53       	subi	r28, 0x35	; 53
    4080:	df 4f       	sbci	r29, 0xFF	; 255
    4082:	18 82       	st	Y, r1
    4084:	cb 5c       	subi	r28, 0xCB	; 203
    4086:	d0 40       	sbci	r29, 0x00	; 0
    4088:	88 1f       	adc	r24, r24
    408a:	88 27       	eor	r24, r24
    408c:	88 1f       	adc	r24, r24
    408e:	90 e0       	ldi	r25, 0x00	; 0
    4090:	88 0f       	add	r24, r24
    4092:	99 1f       	adc	r25, r25
    4094:	88 0f       	add	r24, r24
    4096:	99 1f       	adc	r25, r25
    4098:	16 fb       	bst	r17, 6
    409a:	11 27       	eor	r17, r17
    409c:	10 f9       	bld	r17, 0
    409e:	c3 53       	subi	r28, 0x33	; 51
    40a0:	df 4f       	sbci	r29, 0xFF	; 255
    40a2:	18 83       	st	Y, r17
    40a4:	cd 5c       	subi	r28, 0xCD	; 205
    40a6:	d0 40       	sbci	r29, 0x00	; 0
    40a8:	c2 53       	subi	r28, 0x32	; 50
    40aa:	df 4f       	sbci	r29, 0xFF	; 255
    40ac:	18 82       	st	Y, r1
    40ae:	ce 5c       	subi	r28, 0xCE	; 206
    40b0:	d0 40       	sbci	r29, 0x00	; 0
    40b2:	c3 53       	subi	r28, 0x33	; 51
    40b4:	df 4f       	sbci	r29, 0xFF	; 255
    40b6:	28 81       	ld	r18, Y
    40b8:	39 81       	ldd	r19, Y+1	; 0x01
    40ba:	cd 5c       	subi	r28, 0xCD	; 205
    40bc:	d0 40       	sbci	r29, 0x00	; 0
    40be:	82 2b       	or	r24, r18
    40c0:	93 2b       	or	r25, r19
    40c2:	f2 95       	swap	r31
    40c4:	f1 70       	andi	r31, 0x01	; 1
    40c6:	c1 53       	subi	r28, 0x31	; 49
    40c8:	df 4f       	sbci	r29, 0xFF	; 255
    40ca:	f8 83       	st	Y, r31
    40cc:	cf 5c       	subi	r28, 0xCF	; 207
    40ce:	d0 40       	sbci	r29, 0x00	; 0
    40d0:	c0 53       	subi	r28, 0x30	; 48
    40d2:	df 4f       	sbci	r29, 0xFF	; 255
    40d4:	18 82       	st	Y, r1
    40d6:	c0 5d       	subi	r28, 0xD0	; 208
    40d8:	d0 40       	sbci	r29, 0x00	; 0
    40da:	c1 53       	subi	r28, 0x31	; 49
    40dc:	df 4f       	sbci	r29, 0xFF	; 255
    40de:	28 81       	ld	r18, Y
    40e0:	39 81       	ldd	r19, Y+1	; 0x01
    40e2:	cf 5c       	subi	r28, 0xCF	; 207
    40e4:	d0 40       	sbci	r29, 0x00	; 0
    40e6:	22 0f       	add	r18, r18
    40e8:	33 1f       	adc	r19, r19
    40ea:	82 2b       	or	r24, r18
    40ec:	93 2b       	or	r25, r19
    40ee:	e5 fb       	bst	r30, 5
    40f0:	ee 27       	eor	r30, r30
    40f2:	e0 f9       	bld	r30, 0
    40f4:	cf 52       	subi	r28, 0x2F	; 47
    40f6:	df 4f       	sbci	r29, 0xFF	; 255
    40f8:	e8 83       	st	Y, r30
    40fa:	c1 5d       	subi	r28, 0xD1	; 209
    40fc:	d0 40       	sbci	r29, 0x00	; 0
    40fe:	ce 52       	subi	r28, 0x2E	; 46
    4100:	df 4f       	sbci	r29, 0xFF	; 255
    4102:	18 82       	st	Y, r1
    4104:	c2 5d       	subi	r28, 0xD2	; 210
    4106:	d0 40       	sbci	r29, 0x00	; 0
    4108:	cf 52       	subi	r28, 0x2F	; 47
    410a:	df 4f       	sbci	r29, 0xFF	; 255
    410c:	28 81       	ld	r18, Y
    410e:	39 81       	ldd	r19, Y+1	; 0x01
    4110:	c1 5d       	subi	r28, 0xD1	; 209
    4112:	d0 40       	sbci	r29, 0x00	; 0
    4114:	22 0f       	add	r18, r18
    4116:	33 1f       	adc	r19, r19
    4118:	22 0f       	add	r18, r18
    411a:	33 1f       	adc	r19, r19
    411c:	22 0f       	add	r18, r18
    411e:	33 1f       	adc	r19, r19
    4120:	82 2b       	or	r24, r18
    4122:	93 2b       	or	r25, r19
    4124:	68 9f       	mul	r22, r24
    4126:	90 01       	movw	r18, r0
    4128:	69 9f       	mul	r22, r25
    412a:	30 0d       	add	r19, r0
    412c:	11 24       	eor	r1, r1
    412e:	f9 01       	movw	r30, r18
    4130:	ea 54       	subi	r30, 0x4A	; 74
    4132:	ff 4d       	sbci	r31, 0xDF	; 223
    4134:	87 85       	ldd	r24, Z+15	; 0x0f
    4136:	90 89       	ldd	r25, Z+16	; 0x10
    4138:	c5 53       	subi	r28, 0x35	; 53
    413a:	df 4f       	sbci	r29, 0xFF	; 255
    413c:	48 81       	ld	r20, Y
    413e:	59 81       	ldd	r21, Y+1	; 0x01
    4140:	cb 5c       	subi	r28, 0xCB	; 203
    4142:	d0 40       	sbci	r29, 0x00	; 0
    4144:	84 2b       	or	r24, r20
    4146:	95 2b       	or	r25, r21
    4148:	87 9f       	mul	r24, r23
    414a:	80 2d       	mov	r24, r0
    414c:	11 24       	eor	r1, r1
    414e:	80 93 8f 23 	sts	0x238F, r24
    4152:	a8 e0       	ldi	r26, 0x08	; 8
    4154:	b6 e0       	ldi	r27, 0x06	; 6
    4156:	1c 91       	ld	r17, X
    4158:	fc 91       	ld	r31, X
    415a:	8c 91       	ld	r24, X
    415c:	ec 91       	ld	r30, X
    415e:	3c 91       	ld	r19, X
    4160:	2c 91       	ld	r18, X
    4162:	4c 91       	ld	r20, X
    4164:	9c 91       	ld	r25, X
    4166:	44 1f       	adc	r20, r20
    4168:	44 27       	eor	r20, r20
    416a:	44 1f       	adc	r20, r20
    416c:	50 e0       	ldi	r21, 0x00	; 0
    416e:	44 0f       	add	r20, r20
    4170:	55 1f       	adc	r21, r21
    4172:	44 0f       	add	r20, r20
    4174:	55 1f       	adc	r21, r21
    4176:	36 fb       	bst	r19, 6
    4178:	33 27       	eor	r19, r19
    417a:	30 f9       	bld	r19, 0
    417c:	cd 52       	subi	r28, 0x2D	; 45
    417e:	df 4f       	sbci	r29, 0xFF	; 255
    4180:	38 83       	st	Y, r19
    4182:	c3 5d       	subi	r28, 0xD3	; 211
    4184:	d0 40       	sbci	r29, 0x00	; 0
    4186:	cc 52       	subi	r28, 0x2C	; 44
    4188:	df 4f       	sbci	r29, 0xFF	; 255
    418a:	18 82       	st	Y, r1
    418c:	c4 5d       	subi	r28, 0xD4	; 212
    418e:	d0 40       	sbci	r29, 0x00	; 0
    4190:	cd 52       	subi	r28, 0x2D	; 45
    4192:	df 4f       	sbci	r29, 0xFF	; 255
    4194:	a8 81       	ld	r26, Y
    4196:	b9 81       	ldd	r27, Y+1	; 0x01
    4198:	c3 5d       	subi	r28, 0xD3	; 211
    419a:	d0 40       	sbci	r29, 0x00	; 0
    419c:	4a 2b       	or	r20, r26
    419e:	5b 2b       	or	r21, r27
    41a0:	22 95       	swap	r18
    41a2:	21 70       	andi	r18, 0x01	; 1
    41a4:	cb 52       	subi	r28, 0x2B	; 43
    41a6:	df 4f       	sbci	r29, 0xFF	; 255
    41a8:	28 83       	st	Y, r18
    41aa:	c5 5d       	subi	r28, 0xD5	; 213
    41ac:	d0 40       	sbci	r29, 0x00	; 0
    41ae:	ca 52       	subi	r28, 0x2A	; 42
    41b0:	df 4f       	sbci	r29, 0xFF	; 255
    41b2:	18 82       	st	Y, r1
    41b4:	c6 5d       	subi	r28, 0xD6	; 214
    41b6:	d0 40       	sbci	r29, 0x00	; 0
    41b8:	cb 52       	subi	r28, 0x2B	; 43
    41ba:	df 4f       	sbci	r29, 0xFF	; 255
    41bc:	28 81       	ld	r18, Y
    41be:	39 81       	ldd	r19, Y+1	; 0x01
    41c0:	c5 5d       	subi	r28, 0xD5	; 213
    41c2:	d0 40       	sbci	r29, 0x00	; 0
    41c4:	22 0f       	add	r18, r18
    41c6:	33 1f       	adc	r19, r19
    41c8:	42 2b       	or	r20, r18
    41ca:	53 2b       	or	r21, r19
    41cc:	95 fb       	bst	r25, 5
    41ce:	99 27       	eor	r25, r25
    41d0:	90 f9       	bld	r25, 0
    41d2:	c9 52       	subi	r28, 0x29	; 41
    41d4:	df 4f       	sbci	r29, 0xFF	; 255
    41d6:	98 83       	st	Y, r25
    41d8:	c7 5d       	subi	r28, 0xD7	; 215
    41da:	d0 40       	sbci	r29, 0x00	; 0
    41dc:	c8 52       	subi	r28, 0x28	; 40
    41de:	df 4f       	sbci	r29, 0xFF	; 255
    41e0:	18 82       	st	Y, r1
    41e2:	c8 5d       	subi	r28, 0xD8	; 216
    41e4:	d0 40       	sbci	r29, 0x00	; 0
    41e6:	c9 52       	subi	r28, 0x29	; 41
    41e8:	df 4f       	sbci	r29, 0xFF	; 255
    41ea:	28 81       	ld	r18, Y
    41ec:	39 81       	ldd	r19, Y+1	; 0x01
    41ee:	c7 5d       	subi	r28, 0xD7	; 215
    41f0:	d0 40       	sbci	r29, 0x00	; 0
    41f2:	22 0f       	add	r18, r18
    41f4:	33 1f       	adc	r19, r19
    41f6:	22 0f       	add	r18, r18
    41f8:	33 1f       	adc	r19, r19
    41fa:	22 0f       	add	r18, r18
    41fc:	33 1f       	adc	r19, r19
    41fe:	42 2b       	or	r20, r18
    4200:	53 2b       	or	r21, r19
    4202:	64 9f       	mul	r22, r20
    4204:	90 01       	movw	r18, r0
    4206:	65 9f       	mul	r22, r21
    4208:	30 0d       	add	r19, r0
    420a:	11 24       	eor	r1, r1
    420c:	2a 54       	subi	r18, 0x4A	; 74
    420e:	3f 4d       	sbci	r19, 0xDF	; 223
    4210:	d9 01       	movw	r26, r18
    4212:	1d 96       	adiw	r26, 0x0d	; 13
    4214:	bc 91       	ld	r27, X
    4216:	c6 52       	subi	r28, 0x26	; 38
    4218:	df 4f       	sbci	r29, 0xFF	; 255
    421a:	b8 83       	st	Y, r27
    421c:	ca 5d       	subi	r28, 0xDA	; 218
    421e:	d0 40       	sbci	r29, 0x00	; 0
    4220:	c7 52       	subi	r28, 0x27	; 39
    4222:	df 4f       	sbci	r29, 0xFF	; 255
    4224:	18 82       	st	Y, r1
    4226:	c9 5d       	subi	r28, 0xD9	; 217
    4228:	d0 40       	sbci	r29, 0x00	; 0
    422a:	88 1f       	adc	r24, r24
    422c:	88 27       	eor	r24, r24
    422e:	88 1f       	adc	r24, r24
    4230:	90 e0       	ldi	r25, 0x00	; 0
    4232:	88 0f       	add	r24, r24
    4234:	99 1f       	adc	r25, r25
    4236:	88 0f       	add	r24, r24
    4238:	99 1f       	adc	r25, r25
    423a:	16 fb       	bst	r17, 6
    423c:	11 27       	eor	r17, r17
    423e:	10 f9       	bld	r17, 0
    4240:	c5 52       	subi	r28, 0x25	; 37
    4242:	df 4f       	sbci	r29, 0xFF	; 255
    4244:	18 83       	st	Y, r17
    4246:	cb 5d       	subi	r28, 0xDB	; 219
    4248:	d0 40       	sbci	r29, 0x00	; 0
    424a:	c4 52       	subi	r28, 0x24	; 36
    424c:	df 4f       	sbci	r29, 0xFF	; 255
    424e:	18 82       	st	Y, r1
    4250:	cc 5d       	subi	r28, 0xDC	; 220
    4252:	d0 40       	sbci	r29, 0x00	; 0
    4254:	c5 52       	subi	r28, 0x25	; 37
    4256:	df 4f       	sbci	r29, 0xFF	; 255
    4258:	28 81       	ld	r18, Y
    425a:	39 81       	ldd	r19, Y+1	; 0x01
    425c:	cb 5d       	subi	r28, 0xDB	; 219
    425e:	d0 40       	sbci	r29, 0x00	; 0
    4260:	82 2b       	or	r24, r18
    4262:	93 2b       	or	r25, r19
    4264:	f2 95       	swap	r31
    4266:	f1 70       	andi	r31, 0x01	; 1
    4268:	c3 52       	subi	r28, 0x23	; 35
    426a:	df 4f       	sbci	r29, 0xFF	; 255
    426c:	f8 83       	st	Y, r31
    426e:	cd 5d       	subi	r28, 0xDD	; 221
    4270:	d0 40       	sbci	r29, 0x00	; 0
    4272:	c2 52       	subi	r28, 0x22	; 34
    4274:	df 4f       	sbci	r29, 0xFF	; 255
    4276:	18 82       	st	Y, r1
    4278:	ce 5d       	subi	r28, 0xDE	; 222
    427a:	d0 40       	sbci	r29, 0x00	; 0
    427c:	c3 52       	subi	r28, 0x23	; 35
    427e:	df 4f       	sbci	r29, 0xFF	; 255
    4280:	28 81       	ld	r18, Y
    4282:	39 81       	ldd	r19, Y+1	; 0x01
    4284:	cd 5d       	subi	r28, 0xDD	; 221
    4286:	d0 40       	sbci	r29, 0x00	; 0
    4288:	22 0f       	add	r18, r18
    428a:	33 1f       	adc	r19, r19
    428c:	82 2b       	or	r24, r18
    428e:	93 2b       	or	r25, r19
    4290:	e5 fb       	bst	r30, 5
    4292:	ee 27       	eor	r30, r30
    4294:	e0 f9       	bld	r30, 0
    4296:	c1 52       	subi	r28, 0x21	; 33
    4298:	df 4f       	sbci	r29, 0xFF	; 255
    429a:	e8 83       	st	Y, r30
    429c:	cf 5d       	subi	r28, 0xDF	; 223
    429e:	d0 40       	sbci	r29, 0x00	; 0
    42a0:	c0 52       	subi	r28, 0x20	; 32
    42a2:	df 4f       	sbci	r29, 0xFF	; 255
    42a4:	18 82       	st	Y, r1
    42a6:	c0 5e       	subi	r28, 0xE0	; 224
    42a8:	d0 40       	sbci	r29, 0x00	; 0
    42aa:	c1 52       	subi	r28, 0x21	; 33
    42ac:	df 4f       	sbci	r29, 0xFF	; 255
    42ae:	28 81       	ld	r18, Y
    42b0:	39 81       	ldd	r19, Y+1	; 0x01
    42b2:	cf 5d       	subi	r28, 0xDF	; 223
    42b4:	d0 40       	sbci	r29, 0x00	; 0
    42b6:	22 0f       	add	r18, r18
    42b8:	33 1f       	adc	r19, r19
    42ba:	22 0f       	add	r18, r18
    42bc:	33 1f       	adc	r19, r19
    42be:	22 0f       	add	r18, r18
    42c0:	33 1f       	adc	r19, r19
    42c2:	82 2b       	or	r24, r18
    42c4:	93 2b       	or	r25, r19
    42c6:	68 9f       	mul	r22, r24
    42c8:	90 01       	movw	r18, r0
    42ca:	69 9f       	mul	r22, r25
    42cc:	30 0d       	add	r19, r0
    42ce:	11 24       	eor	r1, r1
    42d0:	f9 01       	movw	r30, r18
    42d2:	ea 54       	subi	r30, 0x4A	; 74
    42d4:	ff 4d       	sbci	r31, 0xDF	; 223
    42d6:	27 85       	ldd	r18, Z+15	; 0x0f
    42d8:	30 89       	ldd	r19, Z+16	; 0x10
    42da:	c7 52       	subi	r28, 0x27	; 39
    42dc:	df 4f       	sbci	r29, 0xFF	; 255
    42de:	48 81       	ld	r20, Y
    42e0:	59 81       	ldd	r21, Y+1	; 0x01
    42e2:	c9 5d       	subi	r28, 0xD9	; 217
    42e4:	d0 40       	sbci	r29, 0x00	; 0
    42e6:	24 2b       	or	r18, r20
    42e8:	35 2b       	or	r19, r21
    42ea:	72 9f       	mul	r23, r18
    42ec:	c0 01       	movw	r24, r0
    42ee:	73 9f       	mul	r23, r19
    42f0:	90 0d       	add	r25, r0
    42f2:	11 24       	eor	r1, r1
    42f4:	90 93 90 23 	sts	0x2390, r25
    42f8:	ab e7       	ldi	r26, 0x7B	; 123
    42fa:	b3 e2       	ldi	r27, 0x23	; 35
    42fc:	9c 91       	ld	r25, X
    42fe:	80 91 7c 23 	lds	r24, 0x237C
    4302:	90 93 91 23 	sts	0x2391, r25
    4306:	80 93 92 23 	sts	0x2392, r24
    430a:	e0 e0       	ldi	r30, 0x00	; 0
    430c:	f4 e2       	ldi	r31, 0x24	; 36
    430e:	90 81       	ld	r25, Z
    4310:	80 91 01 24 	lds	r24, 0x2401
    4314:	90 93 93 23 	sts	0x2393, r25
    4318:	80 93 94 23 	sts	0x2394, r24
    431c:	a4 e1       	ldi	r26, 0x14	; 20
    431e:	b4 e2       	ldi	r27, 0x24	; 36
    4320:	9c 91       	ld	r25, X
    4322:	80 91 15 24 	lds	r24, 0x2415
    4326:	90 93 95 23 	sts	0x2395, r25
    432a:	80 93 96 23 	sts	0x2396, r24
    432e:	ed ea       	ldi	r30, 0xAD	; 173
    4330:	f3 e2       	ldi	r31, 0x23	; 35
    4332:	90 81       	ld	r25, Z
    4334:	80 91 ae 23 	lds	r24, 0x23AE
    4338:	90 93 97 23 	sts	0x2397, r25
    433c:	80 93 98 23 	sts	0x2398, r24
    4340:	80 91 a5 20 	lds	r24, 0x20A5
    4344:	90 91 a6 20 	lds	r25, 0x20A6
    4348:	95 95       	asr	r25
    434a:	87 95       	ror	r24
    434c:	95 95       	asr	r25
    434e:	87 95       	ror	r24
    4350:	95 95       	asr	r25
    4352:	87 95       	ror	r24
    4354:	95 95       	asr	r25
    4356:	87 95       	ror	r24
    4358:	80 93 99 23 	sts	0x2399, r24
    435c:	60 e2       	ldi	r22, 0x20	; 32
    435e:	70 e0       	ldi	r23, 0x00	; 0
    4360:	89 e8       	ldi	r24, 0x89	; 137
    4362:	93 e2       	ldi	r25, 0x23	; 35
    4364:	0e 94 52 2a 	call	0x54a4	; 0x54a4 <NRF24L01_L_Write_TX_Buf>
    4368:	8d d7       	rcall	.+3866   	; 0x5284 <NRF24L01_L_RF_TX>
    436a:	fa e0       	ldi	r31, 0x0A	; 10
    436c:	fa 95       	dec	r31
    436e:	f1 f7       	brne	.-4      	; 0x436c <__stack+0x36d>
    4370:	00 c0       	rjmp	.+0      	; 0x4372 <__stack+0x373>
    4372:	0c 94 f1 11 	jmp	0x23e2	; 0x23e2 <main+0x208>

00004376 <__vector_43>:
    4376:	1f 92       	push	r1
    4378:	0f 92       	push	r0
    437a:	0f b6       	in	r0, 0x3f	; 63
    437c:	0f 92       	push	r0
    437e:	11 24       	eor	r1, r1
    4380:	08 b6       	in	r0, 0x38	; 56
    4382:	0f 92       	push	r0
    4384:	18 be       	out	0x38, r1	; 56
    4386:	09 b6       	in	r0, 0x39	; 57
    4388:	0f 92       	push	r0
    438a:	19 be       	out	0x39, r1	; 57
    438c:	0a b6       	in	r0, 0x3a	; 58
    438e:	0f 92       	push	r0
    4390:	1a be       	out	0x3a, r1	; 58
    4392:	0b b6       	in	r0, 0x3b	; 59
    4394:	0f 92       	push	r0
    4396:	1b be       	out	0x3b, r1	; 59
    4398:	2f 92       	push	r2
    439a:	3f 92       	push	r3
    439c:	4f 92       	push	r4
    439e:	5f 92       	push	r5
    43a0:	7f 92       	push	r7
    43a2:	8f 92       	push	r8
    43a4:	9f 92       	push	r9
    43a6:	af 92       	push	r10
    43a8:	bf 92       	push	r11
    43aa:	cf 92       	push	r12
    43ac:	df 92       	push	r13
    43ae:	ef 92       	push	r14
    43b0:	ff 92       	push	r15
    43b2:	0f 93       	push	r16
    43b4:	1f 93       	push	r17
    43b6:	2f 93       	push	r18
    43b8:	3f 93       	push	r19
    43ba:	4f 93       	push	r20
    43bc:	5f 93       	push	r21
    43be:	6f 93       	push	r22
    43c0:	7f 93       	push	r23
    43c2:	8f 93       	push	r24
    43c4:	9f 93       	push	r25
    43c6:	af 93       	push	r26
    43c8:	bf 93       	push	r27
    43ca:	ef 93       	push	r30
    43cc:	ff 93       	push	r31
    43ce:	cf 93       	push	r28
    43d0:	df 93       	push	r29
    43d2:	cd b7       	in	r28, 0x3d	; 61
    43d4:	de b7       	in	r29, 0x3e	; 62
    43d6:	c4 55       	subi	r28, 0x54	; 84
    43d8:	d1 09       	sbc	r29, r1
    43da:	cd bf       	out	0x3d, r28	; 61
    43dc:	de bf       	out	0x3e, r29	; 62
    43de:	60 e7       	ldi	r22, 0x70	; 112
    43e0:	87 e2       	ldi	r24, 0x27	; 39
    43e2:	75 d7       	rcall	.+3818   	; 0x52ce <NRF24L01_L_WriteReg>
    43e4:	78 2e       	mov	r7, r24
    43e6:	86 ff       	sbrs	r24, 6
    43e8:	f6 c3       	rjmp	.+2028   	; 0x4bd6 <__vector_43+0x860>
    43ea:	88 e0       	ldi	r24, 0x08	; 8
    43ec:	e0 e6       	ldi	r30, 0x60	; 96
    43ee:	f6 e0       	ldi	r31, 0x06	; 6
    43f0:	87 83       	std	Z+7, r24	; 0x07
    43f2:	60 e2       	ldi	r22, 0x20	; 32
    43f4:	70 e0       	ldi	r23, 0x00	; 0
    43f6:	89 e4       	ldi	r24, 0x49	; 73
    43f8:	93 e2       	ldi	r25, 0x23	; 35
    43fa:	be d7       	rcall	.+3964   	; 0x5378 <NRF24L01_L_Read_RX_Buf>
    43fc:	0f 2e       	mov	r0, r31
    43fe:	f9 e4       	ldi	r31, 0x49	; 73
    4400:	8f 2e       	mov	r8, r31
    4402:	f3 e2       	ldi	r31, 0x23	; 35
    4404:	9f 2e       	mov	r9, r31
    4406:	f0 2d       	mov	r31, r0
    4408:	d4 01       	movw	r26, r8
    440a:	6d 91       	ld	r22, X+
    440c:	4d 01       	movw	r8, r26
    440e:	80 ea       	ldi	r24, 0xA0	; 160
    4410:	9a e0       	ldi	r25, 0x0A	; 10
    4412:	0e 94 73 0e 	call	0x1ce6	; 0x1ce6 <usart_putchar>
    4416:	b9 e6       	ldi	r27, 0x69	; 105
    4418:	8b 16       	cp	r8, r27
    441a:	b3 e2       	ldi	r27, 0x23	; 35
    441c:	9b 06       	cpc	r9, r27
    441e:	a1 f7       	brne	.-24     	; 0x4408 <__vector_43+0x92>
    4420:	40 91 49 23 	lds	r20, 0x2349
    4424:	e8 e0       	ldi	r30, 0x08	; 8
    4426:	f6 e0       	ldi	r31, 0x06	; 6
    4428:	70 81       	ld	r23, Z
    442a:	60 81       	ld	r22, Z
    442c:	20 81       	ld	r18, Z
    442e:	50 81       	ld	r21, Z
    4430:	84 2f       	mov	r24, r20
    4432:	90 e0       	ldi	r25, 0x00	; 0
    4434:	22 1f       	adc	r18, r18
    4436:	22 27       	eor	r18, r18
    4438:	22 1f       	adc	r18, r18
    443a:	30 e0       	ldi	r19, 0x00	; 0
    443c:	22 0f       	add	r18, r18
    443e:	33 1f       	adc	r19, r19
    4440:	22 0f       	add	r18, r18
    4442:	33 1f       	adc	r19, r19
    4444:	76 fb       	bst	r23, 6
    4446:	cc 24       	eor	r12, r12
    4448:	c0 f8       	bld	r12, 0
    444a:	d1 2c       	mov	r13, r1
    444c:	c2 2a       	or	r12, r18
    444e:	d3 2a       	or	r13, r19
    4450:	64 fb       	bst	r22, 4
    4452:	ee 24       	eor	r14, r14
    4454:	e0 f8       	bld	r14, 0
    4456:	f1 2c       	mov	r15, r1
    4458:	ee 0c       	add	r14, r14
    445a:	ff 1c       	adc	r15, r15
    445c:	ce 28       	or	r12, r14
    445e:	df 28       	or	r13, r15
    4460:	55 fb       	bst	r21, 5
    4462:	00 27       	eor	r16, r16
    4464:	00 f9       	bld	r16, 0
    4466:	10 e0       	ldi	r17, 0x00	; 0
    4468:	98 01       	movw	r18, r16
    446a:	22 0f       	add	r18, r18
    446c:	33 1f       	adc	r19, r19
    446e:	22 0f       	add	r18, r18
    4470:	33 1f       	adc	r19, r19
    4472:	22 0f       	add	r18, r18
    4474:	33 1f       	adc	r19, r19
    4476:	86 01       	movw	r16, r12
    4478:	02 2b       	or	r16, r18
    447a:	13 2b       	or	r17, r19
    447c:	80 17       	cp	r24, r16
    447e:	91 07       	cpc	r25, r17
    4480:	09 f0       	breq	.+2      	; 0x4484 <__vector_43+0x10e>
    4482:	a9 c3       	rjmp	.+1874   	; 0x4bd6 <__vector_43+0x860>
    4484:	10 92 ab 20 	sts	0x20AB, r1
    4488:	10 92 ac 20 	sts	0x20AC, r1
    448c:	50 81       	ld	r21, Z
    448e:	30 81       	ld	r19, Z
    4490:	80 81       	ld	r24, Z
    4492:	20 81       	ld	r18, Z
    4494:	88 1f       	adc	r24, r24
    4496:	88 27       	eor	r24, r24
    4498:	88 1f       	adc	r24, r24
    449a:	90 e0       	ldi	r25, 0x00	; 0
    449c:	88 0f       	add	r24, r24
    449e:	99 1f       	adc	r25, r25
    44a0:	88 0f       	add	r24, r24
    44a2:	99 1f       	adc	r25, r25
    44a4:	56 fb       	bst	r21, 6
    44a6:	aa 24       	eor	r10, r10
    44a8:	a0 f8       	bld	r10, 0
    44aa:	b1 2c       	mov	r11, r1
    44ac:	a8 2a       	or	r10, r24
    44ae:	b9 2a       	or	r11, r25
    44b0:	32 95       	swap	r19
    44b2:	31 70       	andi	r19, 0x01	; 1
    44b4:	39 83       	std	Y+1, r19	; 0x01
    44b6:	1a 82       	std	Y+2, r1	; 0x02
    44b8:	89 81       	ldd	r24, Y+1	; 0x01
    44ba:	9a 81       	ldd	r25, Y+2	; 0x02
    44bc:	88 0f       	add	r24, r24
    44be:	99 1f       	adc	r25, r25
    44c0:	a8 2a       	or	r10, r24
    44c2:	b9 2a       	or	r11, r25
    44c4:	25 fb       	bst	r18, 5
    44c6:	44 24       	eor	r4, r4
    44c8:	40 f8       	bld	r4, 0
    44ca:	51 2c       	mov	r5, r1
    44cc:	c2 01       	movw	r24, r4
    44ce:	88 0f       	add	r24, r24
    44d0:	99 1f       	adc	r25, r25
    44d2:	88 0f       	add	r24, r24
    44d4:	99 1f       	adc	r25, r25
    44d6:	88 0f       	add	r24, r24
    44d8:	99 1f       	adc	r25, r25
    44da:	25 01       	movw	r4, r10
    44dc:	48 2a       	or	r4, r24
    44de:	59 2a       	or	r5, r25
    44e0:	57 e1       	ldi	r21, 0x17	; 23
    44e2:	54 9d       	mul	r21, r4
    44e4:	d0 01       	movw	r26, r0
    44e6:	55 9d       	mul	r21, r5
    44e8:	b0 0d       	add	r27, r0
    44ea:	11 24       	eor	r1, r1
    44ec:	aa 54       	subi	r26, 0x4A	; 74
    44ee:	bf 4d       	sbci	r27, 0xDF	; 223
    44f0:	4c 93       	st	X, r20
    44f2:	40 81       	ld	r20, Z
    44f4:	30 81       	ld	r19, Z
    44f6:	80 81       	ld	r24, Z
    44f8:	20 81       	ld	r18, Z
    44fa:	88 1f       	adc	r24, r24
    44fc:	88 27       	eor	r24, r24
    44fe:	88 1f       	adc	r24, r24
    4500:	90 e0       	ldi	r25, 0x00	; 0
    4502:	88 0f       	add	r24, r24
    4504:	99 1f       	adc	r25, r25
    4506:	88 0f       	add	r24, r24
    4508:	99 1f       	adc	r25, r25
    450a:	46 fb       	bst	r20, 6
    450c:	22 24       	eor	r2, r2
    450e:	20 f8       	bld	r2, 0
    4510:	31 2c       	mov	r3, r1
    4512:	28 2a       	or	r2, r24
    4514:	39 2a       	or	r3, r25
    4516:	32 95       	swap	r19
    4518:	31 70       	andi	r19, 0x01	; 1
    451a:	3b 83       	std	Y+3, r19	; 0x03
    451c:	1c 82       	std	Y+4, r1	; 0x04
    451e:	8b 81       	ldd	r24, Y+3	; 0x03
    4520:	9c 81       	ldd	r25, Y+4	; 0x04
    4522:	88 0f       	add	r24, r24
    4524:	99 1f       	adc	r25, r25
    4526:	28 2a       	or	r2, r24
    4528:	39 2a       	or	r3, r25
    452a:	25 fb       	bst	r18, 5
    452c:	22 27       	eor	r18, r18
    452e:	20 f9       	bld	r18, 0
    4530:	2d 83       	std	Y+5, r18	; 0x05
    4532:	1e 82       	std	Y+6, r1	; 0x06
    4534:	8d 81       	ldd	r24, Y+5	; 0x05
    4536:	9e 81       	ldd	r25, Y+6	; 0x06
    4538:	88 0f       	add	r24, r24
    453a:	99 1f       	adc	r25, r25
    453c:	88 0f       	add	r24, r24
    453e:	99 1f       	adc	r25, r25
    4540:	88 0f       	add	r24, r24
    4542:	99 1f       	adc	r25, r25
    4544:	28 2a       	or	r2, r24
    4546:	39 2a       	or	r3, r25
    4548:	52 9d       	mul	r21, r2
    454a:	d0 01       	movw	r26, r0
    454c:	53 9d       	mul	r21, r3
    454e:	b0 0d       	add	r27, r0
    4550:	11 24       	eor	r1, r1
    4552:	aa 54       	subi	r26, 0x4A	; 74
    4554:	bf 4d       	sbci	r27, 0xDF	; 223
    4556:	80 91 4a 23 	lds	r24, 0x234A
    455a:	90 e0       	ldi	r25, 0x00	; 0
    455c:	11 96       	adiw	r26, 0x01	; 1
    455e:	8d 93       	st	X+, r24
    4560:	9c 93       	st	X, r25
    4562:	12 97       	sbiw	r26, 0x02	; 2
    4564:	30 81       	ld	r19, Z
    4566:	20 81       	ld	r18, Z
    4568:	80 81       	ld	r24, Z
    456a:	40 81       	ld	r20, Z
    456c:	88 1f       	adc	r24, r24
    456e:	88 27       	eor	r24, r24
    4570:	88 1f       	adc	r24, r24
    4572:	90 e0       	ldi	r25, 0x00	; 0
    4574:	88 0f       	add	r24, r24
    4576:	99 1f       	adc	r25, r25
    4578:	88 0f       	add	r24, r24
    457a:	99 1f       	adc	r25, r25
    457c:	36 fb       	bst	r19, 6
    457e:	33 27       	eor	r19, r19
    4580:	30 f9       	bld	r19, 0
    4582:	3f 83       	std	Y+7, r19	; 0x07
    4584:	18 86       	std	Y+8, r1	; 0x08
    4586:	6f 81       	ldd	r22, Y+7	; 0x07
    4588:	78 85       	ldd	r23, Y+8	; 0x08
    458a:	86 2b       	or	r24, r22
    458c:	97 2b       	or	r25, r23
    458e:	22 95       	swap	r18
    4590:	21 70       	andi	r18, 0x01	; 1
    4592:	29 87       	std	Y+9, r18	; 0x09
    4594:	1a 86       	std	Y+10, r1	; 0x0a
    4596:	29 85       	ldd	r18, Y+9	; 0x09
    4598:	3a 85       	ldd	r19, Y+10	; 0x0a
    459a:	22 0f       	add	r18, r18
    459c:	33 1f       	adc	r19, r19
    459e:	82 2b       	or	r24, r18
    45a0:	93 2b       	or	r25, r19
    45a2:	45 fb       	bst	r20, 5
    45a4:	44 27       	eor	r20, r20
    45a6:	40 f9       	bld	r20, 0
    45a8:	4b 87       	std	Y+11, r20	; 0x0b
    45aa:	1c 86       	std	Y+12, r1	; 0x0c
    45ac:	2b 85       	ldd	r18, Y+11	; 0x0b
    45ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    45b0:	22 0f       	add	r18, r18
    45b2:	33 1f       	adc	r19, r19
    45b4:	22 0f       	add	r18, r18
    45b6:	33 1f       	adc	r19, r19
    45b8:	22 0f       	add	r18, r18
    45ba:	33 1f       	adc	r19, r19
    45bc:	82 2b       	or	r24, r18
    45be:	93 2b       	or	r25, r19
    45c0:	58 9f       	mul	r21, r24
    45c2:	d0 01       	movw	r26, r0
    45c4:	59 9f       	mul	r21, r25
    45c6:	b0 0d       	add	r27, r0
    45c8:	11 24       	eor	r1, r1
    45ca:	aa 54       	subi	r26, 0x4A	; 74
    45cc:	bf 4d       	sbci	r27, 0xDF	; 223
    45ce:	80 91 4b 23 	lds	r24, 0x234B
    45d2:	90 e0       	ldi	r25, 0x00	; 0
    45d4:	13 96       	adiw	r26, 0x03	; 3
    45d6:	8d 93       	st	X+, r24
    45d8:	9c 93       	st	X, r25
    45da:	14 97       	sbiw	r26, 0x04	; 4
    45dc:	30 81       	ld	r19, Z
    45de:	20 81       	ld	r18, Z
    45e0:	80 81       	ld	r24, Z
    45e2:	40 81       	ld	r20, Z
    45e4:	88 1f       	adc	r24, r24
    45e6:	88 27       	eor	r24, r24
    45e8:	88 1f       	adc	r24, r24
    45ea:	90 e0       	ldi	r25, 0x00	; 0
    45ec:	88 0f       	add	r24, r24
    45ee:	99 1f       	adc	r25, r25
    45f0:	88 0f       	add	r24, r24
    45f2:	99 1f       	adc	r25, r25
    45f4:	36 fb       	bst	r19, 6
    45f6:	33 27       	eor	r19, r19
    45f8:	30 f9       	bld	r19, 0
    45fa:	3d 87       	std	Y+13, r19	; 0x0d
    45fc:	1e 86       	std	Y+14, r1	; 0x0e
    45fe:	ad 85       	ldd	r26, Y+13	; 0x0d
    4600:	be 85       	ldd	r27, Y+14	; 0x0e
    4602:	8a 2b       	or	r24, r26
    4604:	9b 2b       	or	r25, r27
    4606:	22 95       	swap	r18
    4608:	21 70       	andi	r18, 0x01	; 1
    460a:	2f 87       	std	Y+15, r18	; 0x0f
    460c:	18 8a       	std	Y+16, r1	; 0x10
    460e:	2f 85       	ldd	r18, Y+15	; 0x0f
    4610:	38 89       	ldd	r19, Y+16	; 0x10
    4612:	22 0f       	add	r18, r18
    4614:	33 1f       	adc	r19, r19
    4616:	82 2b       	or	r24, r18
    4618:	93 2b       	or	r25, r19
    461a:	45 fb       	bst	r20, 5
    461c:	44 27       	eor	r20, r20
    461e:	40 f9       	bld	r20, 0
    4620:	49 8b       	std	Y+17, r20	; 0x11
    4622:	1a 8a       	std	Y+18, r1	; 0x12
    4624:	29 89       	ldd	r18, Y+17	; 0x11
    4626:	3a 89       	ldd	r19, Y+18	; 0x12
    4628:	22 0f       	add	r18, r18
    462a:	33 1f       	adc	r19, r19
    462c:	22 0f       	add	r18, r18
    462e:	33 1f       	adc	r19, r19
    4630:	22 0f       	add	r18, r18
    4632:	33 1f       	adc	r19, r19
    4634:	82 2b       	or	r24, r18
    4636:	93 2b       	or	r25, r19
    4638:	58 9f       	mul	r21, r24
    463a:	d0 01       	movw	r26, r0
    463c:	59 9f       	mul	r21, r25
    463e:	b0 0d       	add	r27, r0
    4640:	11 24       	eor	r1, r1
    4642:	aa 54       	subi	r26, 0x4A	; 74
    4644:	bf 4d       	sbci	r27, 0xDF	; 223
    4646:	80 91 4c 23 	lds	r24, 0x234C
    464a:	90 e0       	ldi	r25, 0x00	; 0
    464c:	15 96       	adiw	r26, 0x05	; 5
    464e:	8d 93       	st	X+, r24
    4650:	9c 93       	st	X, r25
    4652:	16 97       	sbiw	r26, 0x06	; 6
    4654:	30 81       	ld	r19, Z
    4656:	20 81       	ld	r18, Z
    4658:	80 81       	ld	r24, Z
    465a:	40 81       	ld	r20, Z
    465c:	88 1f       	adc	r24, r24
    465e:	88 27       	eor	r24, r24
    4660:	88 1f       	adc	r24, r24
    4662:	90 e0       	ldi	r25, 0x00	; 0
    4664:	88 0f       	add	r24, r24
    4666:	99 1f       	adc	r25, r25
    4668:	88 0f       	add	r24, r24
    466a:	99 1f       	adc	r25, r25
    466c:	36 fb       	bst	r19, 6
    466e:	33 27       	eor	r19, r19
    4670:	30 f9       	bld	r19, 0
    4672:	3b 8b       	std	Y+19, r19	; 0x13
    4674:	1c 8a       	std	Y+20, r1	; 0x14
    4676:	6b 89       	ldd	r22, Y+19	; 0x13
    4678:	7c 89       	ldd	r23, Y+20	; 0x14
    467a:	86 2b       	or	r24, r22
    467c:	97 2b       	or	r25, r23
    467e:	22 95       	swap	r18
    4680:	21 70       	andi	r18, 0x01	; 1
    4682:	2d 8b       	std	Y+21, r18	; 0x15
    4684:	1e 8a       	std	Y+22, r1	; 0x16
    4686:	2d 89       	ldd	r18, Y+21	; 0x15
    4688:	3e 89       	ldd	r19, Y+22	; 0x16
    468a:	22 0f       	add	r18, r18
    468c:	33 1f       	adc	r19, r19
    468e:	82 2b       	or	r24, r18
    4690:	93 2b       	or	r25, r19
    4692:	45 fb       	bst	r20, 5
    4694:	44 27       	eor	r20, r20
    4696:	40 f9       	bld	r20, 0
    4698:	4f 8b       	std	Y+23, r20	; 0x17
    469a:	18 8e       	std	Y+24, r1	; 0x18
    469c:	2f 89       	ldd	r18, Y+23	; 0x17
    469e:	38 8d       	ldd	r19, Y+24	; 0x18
    46a0:	22 0f       	add	r18, r18
    46a2:	33 1f       	adc	r19, r19
    46a4:	22 0f       	add	r18, r18
    46a6:	33 1f       	adc	r19, r19
    46a8:	22 0f       	add	r18, r18
    46aa:	33 1f       	adc	r19, r19
    46ac:	82 2b       	or	r24, r18
    46ae:	93 2b       	or	r25, r19
    46b0:	58 9f       	mul	r21, r24
    46b2:	d0 01       	movw	r26, r0
    46b4:	59 9f       	mul	r21, r25
    46b6:	b0 0d       	add	r27, r0
    46b8:	11 24       	eor	r1, r1
    46ba:	aa 54       	subi	r26, 0x4A	; 74
    46bc:	bf 4d       	sbci	r27, 0xDF	; 223
    46be:	80 91 4d 23 	lds	r24, 0x234D
    46c2:	90 e0       	ldi	r25, 0x00	; 0
    46c4:	17 96       	adiw	r26, 0x07	; 7
    46c6:	8d 93       	st	X+, r24
    46c8:	9c 93       	st	X, r25
    46ca:	18 97       	sbiw	r26, 0x08	; 8
    46cc:	30 81       	ld	r19, Z
    46ce:	20 81       	ld	r18, Z
    46d0:	80 81       	ld	r24, Z
    46d2:	40 81       	ld	r20, Z
    46d4:	88 1f       	adc	r24, r24
    46d6:	88 27       	eor	r24, r24
    46d8:	88 1f       	adc	r24, r24
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	88 0f       	add	r24, r24
    46de:	99 1f       	adc	r25, r25
    46e0:	88 0f       	add	r24, r24
    46e2:	99 1f       	adc	r25, r25
    46e4:	36 fb       	bst	r19, 6
    46e6:	33 27       	eor	r19, r19
    46e8:	30 f9       	bld	r19, 0
    46ea:	39 8f       	std	Y+25, r19	; 0x19
    46ec:	1a 8e       	std	Y+26, r1	; 0x1a
    46ee:	a9 8d       	ldd	r26, Y+25	; 0x19
    46f0:	ba 8d       	ldd	r27, Y+26	; 0x1a
    46f2:	8a 2b       	or	r24, r26
    46f4:	9b 2b       	or	r25, r27
    46f6:	22 95       	swap	r18
    46f8:	21 70       	andi	r18, 0x01	; 1
    46fa:	2b 8f       	std	Y+27, r18	; 0x1b
    46fc:	1c 8e       	std	Y+28, r1	; 0x1c
    46fe:	2b 8d       	ldd	r18, Y+27	; 0x1b
    4700:	3c 8d       	ldd	r19, Y+28	; 0x1c
    4702:	22 0f       	add	r18, r18
    4704:	33 1f       	adc	r19, r19
    4706:	82 2b       	or	r24, r18
    4708:	93 2b       	or	r25, r19
    470a:	45 fb       	bst	r20, 5
    470c:	44 27       	eor	r20, r20
    470e:	40 f9       	bld	r20, 0
    4710:	4d 8f       	std	Y+29, r20	; 0x1d
    4712:	1e 8e       	std	Y+30, r1	; 0x1e
    4714:	2d 8d       	ldd	r18, Y+29	; 0x1d
    4716:	3e 8d       	ldd	r19, Y+30	; 0x1e
    4718:	22 0f       	add	r18, r18
    471a:	33 1f       	adc	r19, r19
    471c:	22 0f       	add	r18, r18
    471e:	33 1f       	adc	r19, r19
    4720:	22 0f       	add	r18, r18
    4722:	33 1f       	adc	r19, r19
    4724:	82 2b       	or	r24, r18
    4726:	93 2b       	or	r25, r19
    4728:	58 9f       	mul	r21, r24
    472a:	d0 01       	movw	r26, r0
    472c:	59 9f       	mul	r21, r25
    472e:	b0 0d       	add	r27, r0
    4730:	11 24       	eor	r1, r1
    4732:	aa 54       	subi	r26, 0x4A	; 74
    4734:	bf 4d       	sbci	r27, 0xDF	; 223
    4736:	80 91 4e 23 	lds	r24, 0x234E
    473a:	90 e0       	ldi	r25, 0x00	; 0
    473c:	19 96       	adiw	r26, 0x09	; 9
    473e:	8d 93       	st	X+, r24
    4740:	9c 93       	st	X, r25
    4742:	1a 97       	sbiw	r26, 0x0a	; 10
    4744:	30 81       	ld	r19, Z
    4746:	20 81       	ld	r18, Z
    4748:	80 81       	ld	r24, Z
    474a:	40 81       	ld	r20, Z
    474c:	88 1f       	adc	r24, r24
    474e:	88 27       	eor	r24, r24
    4750:	88 1f       	adc	r24, r24
    4752:	90 e0       	ldi	r25, 0x00	; 0
    4754:	88 0f       	add	r24, r24
    4756:	99 1f       	adc	r25, r25
    4758:	88 0f       	add	r24, r24
    475a:	99 1f       	adc	r25, r25
    475c:	36 fb       	bst	r19, 6
    475e:	33 27       	eor	r19, r19
    4760:	30 f9       	bld	r19, 0
    4762:	3f 8f       	std	Y+31, r19	; 0x1f
    4764:	18 a2       	std	Y+32, r1	; 0x20
    4766:	6f 8d       	ldd	r22, Y+31	; 0x1f
    4768:	78 a1       	ldd	r23, Y+32	; 0x20
    476a:	86 2b       	or	r24, r22
    476c:	97 2b       	or	r25, r23
    476e:	22 95       	swap	r18
    4770:	21 70       	andi	r18, 0x01	; 1
    4772:	29 a3       	std	Y+33, r18	; 0x21
    4774:	1a a2       	std	Y+34, r1	; 0x22
    4776:	29 a1       	ldd	r18, Y+33	; 0x21
    4778:	3a a1       	ldd	r19, Y+34	; 0x22
    477a:	22 0f       	add	r18, r18
    477c:	33 1f       	adc	r19, r19
    477e:	82 2b       	or	r24, r18
    4780:	93 2b       	or	r25, r19
    4782:	45 fb       	bst	r20, 5
    4784:	44 27       	eor	r20, r20
    4786:	40 f9       	bld	r20, 0
    4788:	4b a3       	std	Y+35, r20	; 0x23
    478a:	1c a2       	std	Y+36, r1	; 0x24
    478c:	2b a1       	ldd	r18, Y+35	; 0x23
    478e:	3c a1       	ldd	r19, Y+36	; 0x24
    4790:	22 0f       	add	r18, r18
    4792:	33 1f       	adc	r19, r19
    4794:	22 0f       	add	r18, r18
    4796:	33 1f       	adc	r19, r19
    4798:	22 0f       	add	r18, r18
    479a:	33 1f       	adc	r19, r19
    479c:	82 2b       	or	r24, r18
    479e:	93 2b       	or	r25, r19
    47a0:	58 9f       	mul	r21, r24
    47a2:	d0 01       	movw	r26, r0
    47a4:	59 9f       	mul	r21, r25
    47a6:	b0 0d       	add	r27, r0
    47a8:	11 24       	eor	r1, r1
    47aa:	aa 54       	subi	r26, 0x4A	; 74
    47ac:	bf 4d       	sbci	r27, 0xDF	; 223
    47ae:	80 91 4f 23 	lds	r24, 0x234F
    47b2:	90 e0       	ldi	r25, 0x00	; 0
    47b4:	1b 96       	adiw	r26, 0x0b	; 11
    47b6:	8d 93       	st	X+, r24
    47b8:	9c 93       	st	X, r25
    47ba:	1c 97       	sbiw	r26, 0x0c	; 12
    47bc:	30 81       	ld	r19, Z
    47be:	20 81       	ld	r18, Z
    47c0:	80 81       	ld	r24, Z
    47c2:	40 81       	ld	r20, Z
    47c4:	88 1f       	adc	r24, r24
    47c6:	88 27       	eor	r24, r24
    47c8:	88 1f       	adc	r24, r24
    47ca:	90 e0       	ldi	r25, 0x00	; 0
    47cc:	88 0f       	add	r24, r24
    47ce:	99 1f       	adc	r25, r25
    47d0:	88 0f       	add	r24, r24
    47d2:	99 1f       	adc	r25, r25
    47d4:	36 fb       	bst	r19, 6
    47d6:	33 27       	eor	r19, r19
    47d8:	30 f9       	bld	r19, 0
    47da:	3d a3       	std	Y+37, r19	; 0x25
    47dc:	1e a2       	std	Y+38, r1	; 0x26
    47de:	ad a1       	ldd	r26, Y+37	; 0x25
    47e0:	be a1       	ldd	r27, Y+38	; 0x26
    47e2:	8a 2b       	or	r24, r26
    47e4:	9b 2b       	or	r25, r27
    47e6:	22 95       	swap	r18
    47e8:	21 70       	andi	r18, 0x01	; 1
    47ea:	2f a3       	std	Y+39, r18	; 0x27
    47ec:	18 a6       	std	Y+40, r1	; 0x28
    47ee:	2f a1       	ldd	r18, Y+39	; 0x27
    47f0:	38 a5       	ldd	r19, Y+40	; 0x28
    47f2:	22 0f       	add	r18, r18
    47f4:	33 1f       	adc	r19, r19
    47f6:	82 2b       	or	r24, r18
    47f8:	93 2b       	or	r25, r19
    47fa:	45 fb       	bst	r20, 5
    47fc:	44 27       	eor	r20, r20
    47fe:	40 f9       	bld	r20, 0
    4800:	49 a7       	std	Y+41, r20	; 0x29
    4802:	1a a6       	std	Y+42, r1	; 0x2a
    4804:	29 a5       	ldd	r18, Y+41	; 0x29
    4806:	3a a5       	ldd	r19, Y+42	; 0x2a
    4808:	22 0f       	add	r18, r18
    480a:	33 1f       	adc	r19, r19
    480c:	22 0f       	add	r18, r18
    480e:	33 1f       	adc	r19, r19
    4810:	22 0f       	add	r18, r18
    4812:	33 1f       	adc	r19, r19
    4814:	82 2b       	or	r24, r18
    4816:	93 2b       	or	r25, r19
    4818:	58 9f       	mul	r21, r24
    481a:	d0 01       	movw	r26, r0
    481c:	59 9f       	mul	r21, r25
    481e:	b0 0d       	add	r27, r0
    4820:	11 24       	eor	r1, r1
    4822:	aa 54       	subi	r26, 0x4A	; 74
    4824:	bf 4d       	sbci	r27, 0xDF	; 223
    4826:	80 91 50 23 	lds	r24, 0x2350
    482a:	90 e0       	ldi	r25, 0x00	; 0
    482c:	1d 96       	adiw	r26, 0x0d	; 13
    482e:	8d 93       	st	X+, r24
    4830:	9c 93       	st	X, r25
    4832:	1e 97       	sbiw	r26, 0x0e	; 14
    4834:	30 81       	ld	r19, Z
    4836:	20 81       	ld	r18, Z
    4838:	80 81       	ld	r24, Z
    483a:	40 81       	ld	r20, Z
    483c:	88 1f       	adc	r24, r24
    483e:	88 27       	eor	r24, r24
    4840:	88 1f       	adc	r24, r24
    4842:	90 e0       	ldi	r25, 0x00	; 0
    4844:	88 0f       	add	r24, r24
    4846:	99 1f       	adc	r25, r25
    4848:	88 0f       	add	r24, r24
    484a:	99 1f       	adc	r25, r25
    484c:	36 fb       	bst	r19, 6
    484e:	33 27       	eor	r19, r19
    4850:	30 f9       	bld	r19, 0
    4852:	3b a7       	std	Y+43, r19	; 0x2b
    4854:	1c a6       	std	Y+44, r1	; 0x2c
    4856:	6b a5       	ldd	r22, Y+43	; 0x2b
    4858:	7c a5       	ldd	r23, Y+44	; 0x2c
    485a:	86 2b       	or	r24, r22
    485c:	97 2b       	or	r25, r23
    485e:	22 95       	swap	r18
    4860:	21 70       	andi	r18, 0x01	; 1
    4862:	2d a7       	std	Y+45, r18	; 0x2d
    4864:	1e a6       	std	Y+46, r1	; 0x2e
    4866:	2d a5       	ldd	r18, Y+45	; 0x2d
    4868:	3e a5       	ldd	r19, Y+46	; 0x2e
    486a:	22 0f       	add	r18, r18
    486c:	33 1f       	adc	r19, r19
    486e:	82 2b       	or	r24, r18
    4870:	93 2b       	or	r25, r19
    4872:	45 fb       	bst	r20, 5
    4874:	44 27       	eor	r20, r20
    4876:	40 f9       	bld	r20, 0
    4878:	4f a7       	std	Y+47, r20	; 0x2f
    487a:	18 aa       	std	Y+48, r1	; 0x30
    487c:	2f a5       	ldd	r18, Y+47	; 0x2f
    487e:	38 a9       	ldd	r19, Y+48	; 0x30
    4880:	22 0f       	add	r18, r18
    4882:	33 1f       	adc	r19, r19
    4884:	22 0f       	add	r18, r18
    4886:	33 1f       	adc	r19, r19
    4888:	22 0f       	add	r18, r18
    488a:	33 1f       	adc	r19, r19
    488c:	82 2b       	or	r24, r18
    488e:	93 2b       	or	r25, r19
    4890:	58 9f       	mul	r21, r24
    4892:	d0 01       	movw	r26, r0
    4894:	59 9f       	mul	r21, r25
    4896:	b0 0d       	add	r27, r0
    4898:	11 24       	eor	r1, r1
    489a:	aa 54       	subi	r26, 0x4A	; 74
    489c:	bf 4d       	sbci	r27, 0xDF	; 223
    489e:	80 91 51 23 	lds	r24, 0x2351
    48a2:	90 e0       	ldi	r25, 0x00	; 0
    48a4:	1f 96       	adiw	r26, 0x0f	; 15
    48a6:	8d 93       	st	X+, r24
    48a8:	9c 93       	st	X, r25
    48aa:	50 97       	sbiw	r26, 0x10	; 16
    48ac:	30 81       	ld	r19, Z
    48ae:	20 81       	ld	r18, Z
    48b0:	80 81       	ld	r24, Z
    48b2:	40 81       	ld	r20, Z
    48b4:	88 1f       	adc	r24, r24
    48b6:	88 27       	eor	r24, r24
    48b8:	88 1f       	adc	r24, r24
    48ba:	90 e0       	ldi	r25, 0x00	; 0
    48bc:	88 0f       	add	r24, r24
    48be:	99 1f       	adc	r25, r25
    48c0:	88 0f       	add	r24, r24
    48c2:	99 1f       	adc	r25, r25
    48c4:	36 fb       	bst	r19, 6
    48c6:	33 27       	eor	r19, r19
    48c8:	30 f9       	bld	r19, 0
    48ca:	39 ab       	std	Y+49, r19	; 0x31
    48cc:	1a aa       	std	Y+50, r1	; 0x32
    48ce:	a9 a9       	ldd	r26, Y+49	; 0x31
    48d0:	ba a9       	ldd	r27, Y+50	; 0x32
    48d2:	8a 2b       	or	r24, r26
    48d4:	9b 2b       	or	r25, r27
    48d6:	22 95       	swap	r18
    48d8:	21 70       	andi	r18, 0x01	; 1
    48da:	2b ab       	std	Y+51, r18	; 0x33
    48dc:	1c aa       	std	Y+52, r1	; 0x34
    48de:	2b a9       	ldd	r18, Y+51	; 0x33
    48e0:	3c a9       	ldd	r19, Y+52	; 0x34
    48e2:	22 0f       	add	r18, r18
    48e4:	33 1f       	adc	r19, r19
    48e6:	82 2b       	or	r24, r18
    48e8:	93 2b       	or	r25, r19
    48ea:	45 fb       	bst	r20, 5
    48ec:	44 27       	eor	r20, r20
    48ee:	40 f9       	bld	r20, 0
    48f0:	4d ab       	std	Y+53, r20	; 0x35
    48f2:	1e aa       	std	Y+54, r1	; 0x36
    48f4:	2d a9       	ldd	r18, Y+53	; 0x35
    48f6:	3e a9       	ldd	r19, Y+54	; 0x36
    48f8:	22 0f       	add	r18, r18
    48fa:	33 1f       	adc	r19, r19
    48fc:	22 0f       	add	r18, r18
    48fe:	33 1f       	adc	r19, r19
    4900:	22 0f       	add	r18, r18
    4902:	33 1f       	adc	r19, r19
    4904:	82 2b       	or	r24, r18
    4906:	93 2b       	or	r25, r19
    4908:	58 9f       	mul	r21, r24
    490a:	d0 01       	movw	r26, r0
    490c:	59 9f       	mul	r21, r25
    490e:	b0 0d       	add	r27, r0
    4910:	11 24       	eor	r1, r1
    4912:	aa 54       	subi	r26, 0x4A	; 74
    4914:	bf 4d       	sbci	r27, 0xDF	; 223
    4916:	80 91 52 23 	lds	r24, 0x2352
    491a:	51 96       	adiw	r26, 0x11	; 17
    491c:	8c 93       	st	X, r24
    491e:	30 81       	ld	r19, Z
    4920:	20 81       	ld	r18, Z
    4922:	80 81       	ld	r24, Z
    4924:	40 81       	ld	r20, Z
    4926:	88 1f       	adc	r24, r24
    4928:	88 27       	eor	r24, r24
    492a:	88 1f       	adc	r24, r24
    492c:	90 e0       	ldi	r25, 0x00	; 0
    492e:	88 0f       	add	r24, r24
    4930:	99 1f       	adc	r25, r25
    4932:	88 0f       	add	r24, r24
    4934:	99 1f       	adc	r25, r25
    4936:	36 fb       	bst	r19, 6
    4938:	33 27       	eor	r19, r19
    493a:	30 f9       	bld	r19, 0
    493c:	3f ab       	std	Y+55, r19	; 0x37
    493e:	18 ae       	std	Y+56, r1	; 0x38
    4940:	6f a9       	ldd	r22, Y+55	; 0x37
    4942:	78 ad       	ldd	r23, Y+56	; 0x38
    4944:	86 2b       	or	r24, r22
    4946:	97 2b       	or	r25, r23
    4948:	22 95       	swap	r18
    494a:	21 70       	andi	r18, 0x01	; 1
    494c:	29 af       	std	Y+57, r18	; 0x39
    494e:	1a ae       	std	Y+58, r1	; 0x3a
    4950:	29 ad       	ldd	r18, Y+57	; 0x39
    4952:	3a ad       	ldd	r19, Y+58	; 0x3a
    4954:	22 0f       	add	r18, r18
    4956:	33 1f       	adc	r19, r19
    4958:	82 2b       	or	r24, r18
    495a:	93 2b       	or	r25, r19
    495c:	45 fb       	bst	r20, 5
    495e:	44 27       	eor	r20, r20
    4960:	40 f9       	bld	r20, 0
    4962:	4b af       	std	Y+59, r20	; 0x3b
    4964:	1c ae       	std	Y+60, r1	; 0x3c
    4966:	2b ad       	ldd	r18, Y+59	; 0x3b
    4968:	3c ad       	ldd	r19, Y+60	; 0x3c
    496a:	22 0f       	add	r18, r18
    496c:	33 1f       	adc	r19, r19
    496e:	22 0f       	add	r18, r18
    4970:	33 1f       	adc	r19, r19
    4972:	22 0f       	add	r18, r18
    4974:	33 1f       	adc	r19, r19
    4976:	82 2b       	or	r24, r18
    4978:	93 2b       	or	r25, r19
    497a:	58 9f       	mul	r21, r24
    497c:	d0 01       	movw	r26, r0
    497e:	59 9f       	mul	r21, r25
    4980:	b0 0d       	add	r27, r0
    4982:	11 24       	eor	r1, r1
    4984:	aa 54       	subi	r26, 0x4A	; 74
    4986:	bf 4d       	sbci	r27, 0xDF	; 223
    4988:	80 91 53 23 	lds	r24, 0x2353
    498c:	52 96       	adiw	r26, 0x12	; 18
    498e:	8c 93       	st	X, r24
    4990:	30 81       	ld	r19, Z
    4992:	20 81       	ld	r18, Z
    4994:	80 81       	ld	r24, Z
    4996:	40 81       	ld	r20, Z
    4998:	88 1f       	adc	r24, r24
    499a:	88 27       	eor	r24, r24
    499c:	88 1f       	adc	r24, r24
    499e:	90 e0       	ldi	r25, 0x00	; 0
    49a0:	88 0f       	add	r24, r24
    49a2:	99 1f       	adc	r25, r25
    49a4:	88 0f       	add	r24, r24
    49a6:	99 1f       	adc	r25, r25
    49a8:	36 fb       	bst	r19, 6
    49aa:	33 27       	eor	r19, r19
    49ac:	30 f9       	bld	r19, 0
    49ae:	3d af       	std	Y+61, r19	; 0x3d
    49b0:	1e ae       	std	Y+62, r1	; 0x3e
    49b2:	ad ad       	ldd	r26, Y+61	; 0x3d
    49b4:	be ad       	ldd	r27, Y+62	; 0x3e
    49b6:	8a 2b       	or	r24, r26
    49b8:	9b 2b       	or	r25, r27
    49ba:	22 95       	swap	r18
    49bc:	21 70       	andi	r18, 0x01	; 1
    49be:	2f af       	std	Y+63, r18	; 0x3f
    49c0:	21 96       	adiw	r28, 0x01	; 1
    49c2:	1f ae       	std	Y+63, r1	; 0x3f
    49c4:	21 97       	sbiw	r28, 0x01	; 1
    49c6:	21 96       	adiw	r28, 0x01	; 1
    49c8:	2e ad       	ldd	r18, Y+62	; 0x3e
    49ca:	3f ad       	ldd	r19, Y+63	; 0x3f
    49cc:	21 97       	sbiw	r28, 0x01	; 1
    49ce:	22 0f       	add	r18, r18
    49d0:	33 1f       	adc	r19, r19
    49d2:	82 2b       	or	r24, r18
    49d4:	93 2b       	or	r25, r19
    49d6:	45 fb       	bst	r20, 5
    49d8:	44 27       	eor	r20, r20
    49da:	40 f9       	bld	r20, 0
    49dc:	22 96       	adiw	r28, 0x02	; 2
    49de:	4f af       	std	Y+63, r20	; 0x3f
    49e0:	22 97       	sbiw	r28, 0x02	; 2
    49e2:	23 96       	adiw	r28, 0x03	; 3
    49e4:	1f ae       	std	Y+63, r1	; 0x3f
    49e6:	23 97       	sbiw	r28, 0x03	; 3
    49e8:	23 96       	adiw	r28, 0x03	; 3
    49ea:	2e ad       	ldd	r18, Y+62	; 0x3e
    49ec:	3f ad       	ldd	r19, Y+63	; 0x3f
    49ee:	23 97       	sbiw	r28, 0x03	; 3
    49f0:	22 0f       	add	r18, r18
    49f2:	33 1f       	adc	r19, r19
    49f4:	22 0f       	add	r18, r18
    49f6:	33 1f       	adc	r19, r19
    49f8:	22 0f       	add	r18, r18
    49fa:	33 1f       	adc	r19, r19
    49fc:	82 2b       	or	r24, r18
    49fe:	93 2b       	or	r25, r19
    4a00:	58 9f       	mul	r21, r24
    4a02:	d0 01       	movw	r26, r0
    4a04:	59 9f       	mul	r21, r25
    4a06:	b0 0d       	add	r27, r0
    4a08:	11 24       	eor	r1, r1
    4a0a:	aa 54       	subi	r26, 0x4A	; 74
    4a0c:	bf 4d       	sbci	r27, 0xDF	; 223
    4a0e:	80 91 54 23 	lds	r24, 0x2354
    4a12:	53 96       	adiw	r26, 0x13	; 19
    4a14:	8c 93       	st	X, r24
    4a16:	30 81       	ld	r19, Z
    4a18:	20 81       	ld	r18, Z
    4a1a:	80 81       	ld	r24, Z
    4a1c:	40 81       	ld	r20, Z
    4a1e:	88 1f       	adc	r24, r24
    4a20:	88 27       	eor	r24, r24
    4a22:	88 1f       	adc	r24, r24
    4a24:	90 e0       	ldi	r25, 0x00	; 0
    4a26:	88 0f       	add	r24, r24
    4a28:	99 1f       	adc	r25, r25
    4a2a:	88 0f       	add	r24, r24
    4a2c:	99 1f       	adc	r25, r25
    4a2e:	36 fb       	bst	r19, 6
    4a30:	33 27       	eor	r19, r19
    4a32:	30 f9       	bld	r19, 0
    4a34:	24 96       	adiw	r28, 0x04	; 4
    4a36:	3f af       	std	Y+63, r19	; 0x3f
    4a38:	24 97       	sbiw	r28, 0x04	; 4
    4a3a:	25 96       	adiw	r28, 0x05	; 5
    4a3c:	1f ae       	std	Y+63, r1	; 0x3f
    4a3e:	25 97       	sbiw	r28, 0x05	; 5
    4a40:	25 96       	adiw	r28, 0x05	; 5
    4a42:	6e ad       	ldd	r22, Y+62	; 0x3e
    4a44:	7f ad       	ldd	r23, Y+63	; 0x3f
    4a46:	25 97       	sbiw	r28, 0x05	; 5
    4a48:	86 2b       	or	r24, r22
    4a4a:	97 2b       	or	r25, r23
    4a4c:	22 95       	swap	r18
    4a4e:	21 70       	andi	r18, 0x01	; 1
    4a50:	26 96       	adiw	r28, 0x06	; 6
    4a52:	2f af       	std	Y+63, r18	; 0x3f
    4a54:	26 97       	sbiw	r28, 0x06	; 6
    4a56:	27 96       	adiw	r28, 0x07	; 7
    4a58:	1f ae       	std	Y+63, r1	; 0x3f
    4a5a:	27 97       	sbiw	r28, 0x07	; 7
    4a5c:	27 96       	adiw	r28, 0x07	; 7
    4a5e:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a60:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a62:	27 97       	sbiw	r28, 0x07	; 7
    4a64:	22 0f       	add	r18, r18
    4a66:	33 1f       	adc	r19, r19
    4a68:	82 2b       	or	r24, r18
    4a6a:	93 2b       	or	r25, r19
    4a6c:	45 fb       	bst	r20, 5
    4a6e:	44 27       	eor	r20, r20
    4a70:	40 f9       	bld	r20, 0
    4a72:	28 96       	adiw	r28, 0x08	; 8
    4a74:	4f af       	std	Y+63, r20	; 0x3f
    4a76:	28 97       	sbiw	r28, 0x08	; 8
    4a78:	29 96       	adiw	r28, 0x09	; 9
    4a7a:	1f ae       	std	Y+63, r1	; 0x3f
    4a7c:	29 97       	sbiw	r28, 0x09	; 9
    4a7e:	29 96       	adiw	r28, 0x09	; 9
    4a80:	2e ad       	ldd	r18, Y+62	; 0x3e
    4a82:	3f ad       	ldd	r19, Y+63	; 0x3f
    4a84:	29 97       	sbiw	r28, 0x09	; 9
    4a86:	22 0f       	add	r18, r18
    4a88:	33 1f       	adc	r19, r19
    4a8a:	22 0f       	add	r18, r18
    4a8c:	33 1f       	adc	r19, r19
    4a8e:	22 0f       	add	r18, r18
    4a90:	33 1f       	adc	r19, r19
    4a92:	82 2b       	or	r24, r18
    4a94:	93 2b       	or	r25, r19
    4a96:	58 9f       	mul	r21, r24
    4a98:	d0 01       	movw	r26, r0
    4a9a:	59 9f       	mul	r21, r25
    4a9c:	b0 0d       	add	r27, r0
    4a9e:	11 24       	eor	r1, r1
    4aa0:	aa 54       	subi	r26, 0x4A	; 74
    4aa2:	bf 4d       	sbci	r27, 0xDF	; 223
    4aa4:	80 91 55 23 	lds	r24, 0x2355
    4aa8:	54 96       	adiw	r26, 0x14	; 20
    4aaa:	8c 93       	st	X, r24
    4aac:	30 81       	ld	r19, Z
    4aae:	20 81       	ld	r18, Z
    4ab0:	80 81       	ld	r24, Z
    4ab2:	40 81       	ld	r20, Z
    4ab4:	88 1f       	adc	r24, r24
    4ab6:	88 27       	eor	r24, r24
    4ab8:	88 1f       	adc	r24, r24
    4aba:	90 e0       	ldi	r25, 0x00	; 0
    4abc:	88 0f       	add	r24, r24
    4abe:	99 1f       	adc	r25, r25
    4ac0:	88 0f       	add	r24, r24
    4ac2:	99 1f       	adc	r25, r25
    4ac4:	36 fb       	bst	r19, 6
    4ac6:	33 27       	eor	r19, r19
    4ac8:	30 f9       	bld	r19, 0
    4aca:	2a 96       	adiw	r28, 0x0a	; 10
    4acc:	3f af       	std	Y+63, r19	; 0x3f
    4ace:	2a 97       	sbiw	r28, 0x0a	; 10
    4ad0:	2b 96       	adiw	r28, 0x0b	; 11
    4ad2:	1f ae       	std	Y+63, r1	; 0x3f
    4ad4:	2b 97       	sbiw	r28, 0x0b	; 11
    4ad6:	2b 96       	adiw	r28, 0x0b	; 11
    4ad8:	ae ad       	ldd	r26, Y+62	; 0x3e
    4ada:	bf ad       	ldd	r27, Y+63	; 0x3f
    4adc:	2b 97       	sbiw	r28, 0x0b	; 11
    4ade:	8a 2b       	or	r24, r26
    4ae0:	9b 2b       	or	r25, r27
    4ae2:	22 95       	swap	r18
    4ae4:	21 70       	andi	r18, 0x01	; 1
    4ae6:	2c 96       	adiw	r28, 0x0c	; 12
    4ae8:	2f af       	std	Y+63, r18	; 0x3f
    4aea:	2c 97       	sbiw	r28, 0x0c	; 12
    4aec:	2d 96       	adiw	r28, 0x0d	; 13
    4aee:	1f ae       	std	Y+63, r1	; 0x3f
    4af0:	2d 97       	sbiw	r28, 0x0d	; 13
    4af2:	2d 96       	adiw	r28, 0x0d	; 13
    4af4:	2e ad       	ldd	r18, Y+62	; 0x3e
    4af6:	3f ad       	ldd	r19, Y+63	; 0x3f
    4af8:	2d 97       	sbiw	r28, 0x0d	; 13
    4afa:	22 0f       	add	r18, r18
    4afc:	33 1f       	adc	r19, r19
    4afe:	82 2b       	or	r24, r18
    4b00:	93 2b       	or	r25, r19
    4b02:	45 fb       	bst	r20, 5
    4b04:	44 27       	eor	r20, r20
    4b06:	40 f9       	bld	r20, 0
    4b08:	2e 96       	adiw	r28, 0x0e	; 14
    4b0a:	4f af       	std	Y+63, r20	; 0x3f
    4b0c:	2e 97       	sbiw	r28, 0x0e	; 14
    4b0e:	2f 96       	adiw	r28, 0x0f	; 15
    4b10:	1f ae       	std	Y+63, r1	; 0x3f
    4b12:	2f 97       	sbiw	r28, 0x0f	; 15
    4b14:	2f 96       	adiw	r28, 0x0f	; 15
    4b16:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b18:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b1a:	2f 97       	sbiw	r28, 0x0f	; 15
    4b1c:	22 0f       	add	r18, r18
    4b1e:	33 1f       	adc	r19, r19
    4b20:	22 0f       	add	r18, r18
    4b22:	33 1f       	adc	r19, r19
    4b24:	22 0f       	add	r18, r18
    4b26:	33 1f       	adc	r19, r19
    4b28:	82 2b       	or	r24, r18
    4b2a:	93 2b       	or	r25, r19
    4b2c:	58 9f       	mul	r21, r24
    4b2e:	d0 01       	movw	r26, r0
    4b30:	59 9f       	mul	r21, r25
    4b32:	b0 0d       	add	r27, r0
    4b34:	11 24       	eor	r1, r1
    4b36:	aa 54       	subi	r26, 0x4A	; 74
    4b38:	bf 4d       	sbci	r27, 0xDF	; 223
    4b3a:	80 91 56 23 	lds	r24, 0x2356
    4b3e:	55 96       	adiw	r26, 0x15	; 21
    4b40:	8c 93       	st	X, r24
    4b42:	30 81       	ld	r19, Z
    4b44:	20 81       	ld	r18, Z
    4b46:	80 81       	ld	r24, Z
    4b48:	40 81       	ld	r20, Z
    4b4a:	88 1f       	adc	r24, r24
    4b4c:	88 27       	eor	r24, r24
    4b4e:	88 1f       	adc	r24, r24
    4b50:	90 e0       	ldi	r25, 0x00	; 0
    4b52:	88 0f       	add	r24, r24
    4b54:	99 1f       	adc	r25, r25
    4b56:	88 0f       	add	r24, r24
    4b58:	99 1f       	adc	r25, r25
    4b5a:	36 fb       	bst	r19, 6
    4b5c:	33 27       	eor	r19, r19
    4b5e:	30 f9       	bld	r19, 0
    4b60:	60 96       	adiw	r28, 0x10	; 16
    4b62:	3f af       	std	Y+63, r19	; 0x3f
    4b64:	60 97       	sbiw	r28, 0x10	; 16
    4b66:	61 96       	adiw	r28, 0x11	; 17
    4b68:	1f ae       	std	Y+63, r1	; 0x3f
    4b6a:	61 97       	sbiw	r28, 0x11	; 17
    4b6c:	61 96       	adiw	r28, 0x11	; 17
    4b6e:	ee ad       	ldd	r30, Y+62	; 0x3e
    4b70:	ff ad       	ldd	r31, Y+63	; 0x3f
    4b72:	61 97       	sbiw	r28, 0x11	; 17
    4b74:	8e 2b       	or	r24, r30
    4b76:	9f 2b       	or	r25, r31
    4b78:	22 95       	swap	r18
    4b7a:	21 70       	andi	r18, 0x01	; 1
    4b7c:	62 96       	adiw	r28, 0x12	; 18
    4b7e:	2f af       	std	Y+63, r18	; 0x3f
    4b80:	62 97       	sbiw	r28, 0x12	; 18
    4b82:	63 96       	adiw	r28, 0x13	; 19
    4b84:	1f ae       	std	Y+63, r1	; 0x3f
    4b86:	63 97       	sbiw	r28, 0x13	; 19
    4b88:	63 96       	adiw	r28, 0x13	; 19
    4b8a:	2e ad       	ldd	r18, Y+62	; 0x3e
    4b8c:	3f ad       	ldd	r19, Y+63	; 0x3f
    4b8e:	63 97       	sbiw	r28, 0x13	; 19
    4b90:	22 0f       	add	r18, r18
    4b92:	33 1f       	adc	r19, r19
    4b94:	82 2b       	or	r24, r18
    4b96:	93 2b       	or	r25, r19
    4b98:	45 fb       	bst	r20, 5
    4b9a:	44 27       	eor	r20, r20
    4b9c:	40 f9       	bld	r20, 0
    4b9e:	64 96       	adiw	r28, 0x14	; 20
    4ba0:	4f af       	std	Y+63, r20	; 0x3f
    4ba2:	64 97       	sbiw	r28, 0x14	; 20
    4ba4:	65 96       	adiw	r28, 0x15	; 21
    4ba6:	1f ae       	std	Y+63, r1	; 0x3f
    4ba8:	65 97       	sbiw	r28, 0x15	; 21
    4baa:	65 96       	adiw	r28, 0x15	; 21
    4bac:	2e ad       	ldd	r18, Y+62	; 0x3e
    4bae:	3f ad       	ldd	r19, Y+63	; 0x3f
    4bb0:	65 97       	sbiw	r28, 0x15	; 21
    4bb2:	22 0f       	add	r18, r18
    4bb4:	33 1f       	adc	r19, r19
    4bb6:	22 0f       	add	r18, r18
    4bb8:	33 1f       	adc	r19, r19
    4bba:	22 0f       	add	r18, r18
    4bbc:	33 1f       	adc	r19, r19
    4bbe:	82 2b       	or	r24, r18
    4bc0:	93 2b       	or	r25, r19
    4bc2:	58 9f       	mul	r21, r24
    4bc4:	f0 01       	movw	r30, r0
    4bc6:	59 9f       	mul	r21, r25
    4bc8:	f0 0d       	add	r31, r0
    4bca:	11 24       	eor	r1, r1
    4bcc:	ea 54       	subi	r30, 0x4A	; 74
    4bce:	ff 4d       	sbci	r31, 0xDF	; 223
    4bd0:	80 91 57 23 	lds	r24, 0x2357
    4bd4:	86 8b       	std	Z+22, r24	; 0x16
    4bd6:	75 fe       	sbrs	r7, 5
    4bd8:	04 c0       	rjmp	.+8      	; 0x4be2 <__vector_43+0x86c>
    4bda:	80 e2       	ldi	r24, 0x20	; 32
    4bdc:	e0 e6       	ldi	r30, 0x60	; 96
    4bde:	f6 e0       	ldi	r31, 0x06	; 6
    4be0:	87 83       	std	Z+7, r24	; 0x07
    4be2:	74 fe       	sbrs	r7, 4
    4be4:	05 c0       	rjmp	.+10     	; 0x4bf0 <__vector_43+0x87a>
    4be6:	84 e0       	ldi	r24, 0x04	; 4
    4be8:	e0 e6       	ldi	r30, 0x60	; 96
    4bea:	f6 e0       	ldi	r31, 0x06	; 6
    4bec:	87 83       	std	Z+7, r24	; 0x07
    4bee:	5f d4       	rcall	.+2238   	; 0x54ae <NRF24L01_L_Flush_TX>
    4bf0:	cc 5a       	subi	r28, 0xAC	; 172
    4bf2:	df 4f       	sbci	r29, 0xFF	; 255
    4bf4:	cd bf       	out	0x3d, r28	; 61
    4bf6:	de bf       	out	0x3e, r29	; 62
    4bf8:	df 91       	pop	r29
    4bfa:	cf 91       	pop	r28
    4bfc:	ff 91       	pop	r31
    4bfe:	ef 91       	pop	r30
    4c00:	bf 91       	pop	r27
    4c02:	af 91       	pop	r26
    4c04:	9f 91       	pop	r25
    4c06:	8f 91       	pop	r24
    4c08:	7f 91       	pop	r23
    4c0a:	6f 91       	pop	r22
    4c0c:	5f 91       	pop	r21
    4c0e:	4f 91       	pop	r20
    4c10:	3f 91       	pop	r19
    4c12:	2f 91       	pop	r18
    4c14:	1f 91       	pop	r17
    4c16:	0f 91       	pop	r16
    4c18:	ff 90       	pop	r15
    4c1a:	ef 90       	pop	r14
    4c1c:	df 90       	pop	r13
    4c1e:	cf 90       	pop	r12
    4c20:	bf 90       	pop	r11
    4c22:	af 90       	pop	r10
    4c24:	9f 90       	pop	r9
    4c26:	8f 90       	pop	r8
    4c28:	7f 90       	pop	r7
    4c2a:	5f 90       	pop	r5
    4c2c:	4f 90       	pop	r4
    4c2e:	3f 90       	pop	r3
    4c30:	2f 90       	pop	r2
    4c32:	0f 90       	pop	r0
    4c34:	0b be       	out	0x3b, r0	; 59
    4c36:	0f 90       	pop	r0
    4c38:	0a be       	out	0x3a, r0	; 58
    4c3a:	0f 90       	pop	r0
    4c3c:	09 be       	out	0x39, r0	; 57
    4c3e:	0f 90       	pop	r0
    4c40:	08 be       	out	0x38, r0	; 56
    4c42:	0f 90       	pop	r0
    4c44:	0f be       	out	0x3f, r0	; 63
    4c46:	0f 90       	pop	r0
    4c48:	1f 90       	pop	r1
    4c4a:	18 95       	reti

00004c4c <__vector_77>:
    4c4c:	1f 92       	push	r1
    4c4e:	0f 92       	push	r0
    4c50:	0f b6       	in	r0, 0x3f	; 63
    4c52:	0f 92       	push	r0
    4c54:	11 24       	eor	r1, r1
    4c56:	08 b6       	in	r0, 0x38	; 56
    4c58:	0f 92       	push	r0
    4c5a:	18 be       	out	0x38, r1	; 56
    4c5c:	09 b6       	in	r0, 0x39	; 57
    4c5e:	0f 92       	push	r0
    4c60:	19 be       	out	0x39, r1	; 57
    4c62:	0a b6       	in	r0, 0x3a	; 58
    4c64:	0f 92       	push	r0
    4c66:	1a be       	out	0x3a, r1	; 58
    4c68:	0b b6       	in	r0, 0x3b	; 59
    4c6a:	0f 92       	push	r0
    4c6c:	1b be       	out	0x3b, r1	; 59
    4c6e:	af 92       	push	r10
    4c70:	bf 92       	push	r11
    4c72:	df 92       	push	r13
    4c74:	ef 92       	push	r14
    4c76:	ff 92       	push	r15
    4c78:	0f 93       	push	r16
    4c7a:	1f 93       	push	r17
    4c7c:	2f 93       	push	r18
    4c7e:	3f 93       	push	r19
    4c80:	4f 93       	push	r20
    4c82:	5f 93       	push	r21
    4c84:	6f 93       	push	r22
    4c86:	7f 93       	push	r23
    4c88:	8f 93       	push	r24
    4c8a:	9f 93       	push	r25
    4c8c:	af 93       	push	r26
    4c8e:	bf 93       	push	r27
    4c90:	cf 93       	push	r28
    4c92:	df 93       	push	r29
    4c94:	ef 93       	push	r30
    4c96:	ff 93       	push	r31
    4c98:	a8 95       	wdr
    4c9a:	80 91 6d 23 	lds	r24, 0x236D
    4c9e:	8f 5f       	subi	r24, 0xFF	; 255
    4ca0:	80 93 6d 23 	sts	0x236D, r24
    4ca4:	84 31       	cpi	r24, 0x14	; 20
    4ca6:	74 f0       	brlt	.+28     	; 0x4cc4 <__vector_77+0x78>
    4ca8:	81 e0       	ldi	r24, 0x01	; 1
    4caa:	80 93 9e 20 	sts	0x209E, r24
    4cae:	10 92 6d 23 	sts	0x236D, r1
    4cb2:	80 91 a3 20 	lds	r24, 0x20A3
    4cb6:	90 91 a4 20 	lds	r25, 0x20A4
    4cba:	01 96       	adiw	r24, 0x01	; 1
    4cbc:	80 93 a3 20 	sts	0x20A3, r24
    4cc0:	90 93 a4 20 	sts	0x20A4, r25
    4cc4:	80 91 9f 20 	lds	r24, 0x209F
    4cc8:	90 91 a0 20 	lds	r25, 0x20A0
    4ccc:	a0 91 a1 20 	lds	r26, 0x20A1
    4cd0:	b0 91 a2 20 	lds	r27, 0x20A2
    4cd4:	01 96       	adiw	r24, 0x01	; 1
    4cd6:	a1 1d       	adc	r26, r1
    4cd8:	b1 1d       	adc	r27, r1
    4cda:	80 93 9f 20 	sts	0x209F, r24
    4cde:	90 93 a0 20 	sts	0x20A0, r25
    4ce2:	a0 93 a1 20 	sts	0x20A1, r26
    4ce6:	b0 93 a2 20 	sts	0x20A2, r27
    4cea:	80 91 a9 20 	lds	r24, 0x20A9
    4cee:	90 91 aa 20 	lds	r25, 0x20AA
    4cf2:	89 2b       	or	r24, r25
    4cf4:	09 f4       	brne	.+2      	; 0x4cf8 <__vector_77+0xac>
    4cf6:	40 c0       	rjmp	.+128    	; 0x4d78 <__vector_77+0x12c>
    4cf8:	80 91 d0 21 	lds	r24, 0x21D0
    4cfc:	90 91 d1 21 	lds	r25, 0x21D1
    4d00:	a0 91 d2 21 	lds	r26, 0x21D2
    4d04:	b0 91 d3 21 	lds	r27, 0x21D3
    4d08:	88 3b       	cpi	r24, 0xB8	; 184
    4d0a:	2b e0       	ldi	r18, 0x0B	; 11
    4d0c:	92 07       	cpc	r25, r18
    4d0e:	a1 05       	cpc	r26, r1
    4d10:	b1 05       	cpc	r27, r1
    4d12:	d0 f4       	brcc	.+52     	; 0x4d48 <__vector_77+0xfc>
    4d14:	01 96       	adiw	r24, 0x01	; 1
    4d16:	a1 1d       	adc	r26, r1
    4d18:	b1 1d       	adc	r27, r1
    4d1a:	80 93 d0 21 	sts	0x21D0, r24
    4d1e:	90 93 d1 21 	sts	0x21D1, r25
    4d22:	a0 93 d2 21 	sts	0x21D2, r26
    4d26:	b0 93 d3 21 	sts	0x21D3, r27
    4d2a:	a0 e2       	ldi	r26, 0x20	; 32
    4d2c:	b6 e0       	ldi	r27, 0x06	; 6
    4d2e:	14 96       	adiw	r26, 0x04	; 4
    4d30:	8c 91       	ld	r24, X
    4d32:	14 97       	sbiw	r26, 0x04	; 4
    4d34:	80 64       	ori	r24, 0x40	; 64
    4d36:	14 96       	adiw	r26, 0x04	; 4
    4d38:	8c 93       	st	X, r24
    4d3a:	8f ef       	ldi	r24, 0xFF	; 255
    4d3c:	90 e0       	ldi	r25, 0x00	; 0
    4d3e:	80 93 28 08 	sts	0x0828, r24
    4d42:	90 93 29 08 	sts	0x0829, r25
    4d46:	18 c0       	rjmp	.+48     	; 0x4d78 <__vector_77+0x12c>
    4d48:	10 92 28 08 	sts	0x0828, r1
    4d4c:	10 92 29 08 	sts	0x0829, r1
    4d50:	a0 e2       	ldi	r26, 0x20	; 32
    4d52:	b6 e0       	ldi	r27, 0x06	; 6
    4d54:	14 96       	adiw	r26, 0x04	; 4
    4d56:	8c 91       	ld	r24, X
    4d58:	14 97       	sbiw	r26, 0x04	; 4
    4d5a:	8f 7b       	andi	r24, 0xBF	; 191
    4d5c:	14 96       	adiw	r26, 0x04	; 4
    4d5e:	8c 93       	st	X, r24
    4d60:	10 92 d0 21 	sts	0x21D0, r1
    4d64:	10 92 d1 21 	sts	0x21D1, r1
    4d68:	10 92 d2 21 	sts	0x21D2, r1
    4d6c:	10 92 d3 21 	sts	0x21D3, r1
    4d70:	10 92 a9 20 	sts	0x20A9, r1
    4d74:	10 92 aa 20 	sts	0x20AA, r1
    4d78:	80 91 a7 20 	lds	r24, 0x20A7
    4d7c:	90 91 a8 20 	lds	r25, 0x20A8
    4d80:	89 2b       	or	r24, r25
    4d82:	09 f4       	brne	.+2      	; 0x4d86 <__vector_77+0x13a>
    4d84:	3f c0       	rjmp	.+126    	; 0x4e04 <__vector_77+0x1b8>
    4d86:	80 91 d0 21 	lds	r24, 0x21D0
    4d8a:	90 91 d1 21 	lds	r25, 0x21D1
    4d8e:	a0 91 d2 21 	lds	r26, 0x21D2
    4d92:	b0 91 d3 21 	lds	r27, 0x21D3
    4d96:	84 36       	cpi	r24, 0x64	; 100
    4d98:	91 05       	cpc	r25, r1
    4d9a:	a1 05       	cpc	r26, r1
    4d9c:	b1 05       	cpc	r27, r1
    4d9e:	d0 f4       	brcc	.+52     	; 0x4dd4 <__vector_77+0x188>
    4da0:	01 96       	adiw	r24, 0x01	; 1
    4da2:	a1 1d       	adc	r26, r1
    4da4:	b1 1d       	adc	r27, r1
    4da6:	80 93 d0 21 	sts	0x21D0, r24
    4daa:	90 93 d1 21 	sts	0x21D1, r25
    4dae:	a0 93 d2 21 	sts	0x21D2, r26
    4db2:	b0 93 d3 21 	sts	0x21D3, r27
    4db6:	8f ef       	ldi	r24, 0xFF	; 255
    4db8:	90 e0       	ldi	r25, 0x00	; 0
    4dba:	80 93 2a 08 	sts	0x082A, r24
    4dbe:	90 93 2b 08 	sts	0x082B, r25
    4dc2:	a0 e2       	ldi	r26, 0x20	; 32
    4dc4:	b6 e0       	ldi	r27, 0x06	; 6
    4dc6:	14 96       	adiw	r26, 0x04	; 4
    4dc8:	8c 91       	ld	r24, X
    4dca:	14 97       	sbiw	r26, 0x04	; 4
    4dcc:	80 64       	ori	r24, 0x40	; 64
    4dce:	14 96       	adiw	r26, 0x04	; 4
    4dd0:	8c 93       	st	X, r24
    4dd2:	18 c0       	rjmp	.+48     	; 0x4e04 <__vector_77+0x1b8>
    4dd4:	10 92 2a 08 	sts	0x082A, r1
    4dd8:	10 92 2b 08 	sts	0x082B, r1
    4ddc:	a0 e2       	ldi	r26, 0x20	; 32
    4dde:	b6 e0       	ldi	r27, 0x06	; 6
    4de0:	14 96       	adiw	r26, 0x04	; 4
    4de2:	8c 91       	ld	r24, X
    4de4:	14 97       	sbiw	r26, 0x04	; 4
    4de6:	8f 7b       	andi	r24, 0xBF	; 191
    4de8:	14 96       	adiw	r26, 0x04	; 4
    4dea:	8c 93       	st	X, r24
    4dec:	10 92 d0 21 	sts	0x21D0, r1
    4df0:	10 92 d1 21 	sts	0x21D1, r1
    4df4:	10 92 d2 21 	sts	0x21D2, r1
    4df8:	10 92 d3 21 	sts	0x21D3, r1
    4dfc:	10 92 a7 20 	sts	0x20A7, r1
    4e00:	10 92 a8 20 	sts	0x20A8, r1
    4e04:	80 91 ab 20 	lds	r24, 0x20AB
    4e08:	90 91 ac 20 	lds	r25, 0x20AC
    4e0c:	01 96       	adiw	r24, 0x01	; 1
    4e0e:	80 93 ab 20 	sts	0x20AB, r24
    4e12:	90 93 ac 20 	sts	0x20AC, r25
    4e16:	80 91 48 20 	lds	r24, 0x2048
    4e1a:	90 91 49 20 	lds	r25, 0x2049
    4e1e:	81 30       	cpi	r24, 0x01	; 1
    4e20:	91 05       	cpc	r25, r1
    4e22:	81 f4       	brne	.+32     	; 0x4e44 <__vector_77+0x1f8>
    4e24:	10 92 ad 20 	sts	0x20AD, r1
    4e28:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    4e2c:	0e 94 c4 02 	call	0x588	; 0x588 <Menu_Reset>
    4e30:	80 91 48 20 	lds	r24, 0x2048
    4e34:	90 91 49 20 	lds	r25, 0x2049
    4e38:	01 97       	sbiw	r24, 0x01	; 1
    4e3a:	80 93 48 20 	sts	0x2048, r24
    4e3e:	90 93 49 20 	sts	0x2049, r25
    4e42:	87 c0       	rjmp	.+270    	; 0x4f52 <__vector_77+0x306>
    4e44:	82 30       	cpi	r24, 0x02	; 2
    4e46:	91 05       	cpc	r25, r1
    4e48:	08 f1       	brcs	.+66     	; 0x4e8c <__vector_77+0x240>
    4e4a:	01 97       	sbiw	r24, 0x01	; 1
    4e4c:	80 93 48 20 	sts	0x2048, r24
    4e50:	90 93 49 20 	sts	0x2049, r25
    4e54:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <menu_check_status>
    4e58:	80 91 48 20 	lds	r24, 0x2048
    4e5c:	90 91 49 20 	lds	r25, 0x2049
    4e60:	88 3b       	cpi	r24, 0xB8	; 184
    4e62:	2b e0       	ldi	r18, 0x0B	; 11
    4e64:	92 07       	cpc	r25, r18
    4e66:	08 f0       	brcs	.+2      	; 0x4e6a <__vector_77+0x21e>
    4e68:	74 c0       	rjmp	.+232    	; 0x4f52 <__vector_77+0x306>
    4e6a:	a0 e0       	ldi	r26, 0x00	; 0
    4e6c:	b0 e0       	ldi	r27, 0x00	; 0
    4e6e:	80 93 2c 20 	sts	0x202C, r24
    4e72:	90 93 2d 20 	sts	0x202D, r25
    4e76:	a0 93 2e 20 	sts	0x202E, r26
    4e7a:	b0 93 2f 20 	sts	0x202F, r27
    4e7e:	88 ec       	ldi	r24, 0xC8	; 200
    4e80:	90 e0       	ldi	r25, 0x00	; 0
    4e82:	80 93 31 22 	sts	0x2231, r24
    4e86:	90 93 32 22 	sts	0x2232, r25
    4e8a:	63 c0       	rjmp	.+198    	; 0x4f52 <__vector_77+0x306>
    4e8c:	a8 e0       	ldi	r26, 0x08	; 8
    4e8e:	b6 e0       	ldi	r27, 0x06	; 6
    4e90:	dc 90       	ld	r13, X
    4e92:	ec 90       	ld	r14, X
    4e94:	8c 91       	ld	r24, X
    4e96:	fc 90       	ld	r15, X
    4e98:	88 1f       	adc	r24, r24
    4e9a:	88 27       	eor	r24, r24
    4e9c:	88 1f       	adc	r24, r24
    4e9e:	90 e0       	ldi	r25, 0x00	; 0
    4ea0:	88 0f       	add	r24, r24
    4ea2:	99 1f       	adc	r25, r25
    4ea4:	88 0f       	add	r24, r24
    4ea6:	99 1f       	adc	r25, r25
    4ea8:	d6 fa       	bst	r13, 6
    4eaa:	00 27       	eor	r16, r16
    4eac:	00 f9       	bld	r16, 0
    4eae:	10 e0       	ldi	r17, 0x00	; 0
    4eb0:	08 2b       	or	r16, r24
    4eb2:	19 2b       	or	r17, r25
    4eb4:	e4 fa       	bst	r14, 4
    4eb6:	ee 24       	eor	r14, r14
    4eb8:	e0 f8       	bld	r14, 0
    4eba:	ce 2d       	mov	r28, r14
    4ebc:	80 e0       	ldi	r24, 0x00	; 0
    4ebe:	d8 2f       	mov	r29, r24
    4ec0:	cc 0f       	add	r28, r28
    4ec2:	dd 1f       	adc	r29, r29
    4ec4:	0c 2b       	or	r16, r28
    4ec6:	1d 2b       	or	r17, r29
    4ec8:	f5 fa       	bst	r15, 5
    4eca:	ee 27       	eor	r30, r30
    4ecc:	e0 f9       	bld	r30, 0
    4ece:	f0 e0       	ldi	r31, 0x00	; 0
    4ed0:	cf 01       	movw	r24, r30
    4ed2:	88 0f       	add	r24, r24
    4ed4:	99 1f       	adc	r25, r25
    4ed6:	88 0f       	add	r24, r24
    4ed8:	99 1f       	adc	r25, r25
    4eda:	88 0f       	add	r24, r24
    4edc:	99 1f       	adc	r25, r25
    4ede:	f8 01       	movw	r30, r16
    4ee0:	e8 2b       	or	r30, r24
    4ee2:	f9 2b       	or	r31, r25
    4ee4:	ee 0f       	add	r30, r30
    4ee6:	ff 1f       	adc	r31, r31
    4ee8:	e8 5f       	subi	r30, 0xF8	; 248
    4eea:	ff 4d       	sbci	r31, 0xDF	; 223
    4eec:	80 81       	ld	r24, Z
    4eee:	e0 e0       	ldi	r30, 0x00	; 0
    4ef0:	f7 e0       	ldi	r31, 0x07	; 7
    4ef2:	84 83       	std	Z+4, r24	; 0x04
    4ef4:	cc 91       	ld	r28, X
    4ef6:	9c 91       	ld	r25, X
    4ef8:	ec 91       	ld	r30, X
    4efa:	8c 91       	ld	r24, X
    4efc:	ee 1f       	adc	r30, r30
    4efe:	ee 27       	eor	r30, r30
    4f00:	ee 1f       	adc	r30, r30
    4f02:	f0 e0       	ldi	r31, 0x00	; 0
    4f04:	ee 0f       	add	r30, r30
    4f06:	ff 1f       	adc	r31, r31
    4f08:	ee 0f       	add	r30, r30
    4f0a:	ff 1f       	adc	r31, r31
    4f0c:	c6 fb       	bst	r28, 6
    4f0e:	66 27       	eor	r22, r22
    4f10:	60 f9       	bld	r22, 0
    4f12:	70 e0       	ldi	r23, 0x00	; 0
    4f14:	e6 2b       	or	r30, r22
    4f16:	f7 2b       	or	r31, r23
    4f18:	94 fb       	bst	r25, 4
    4f1a:	44 27       	eor	r20, r20
    4f1c:	40 f9       	bld	r20, 0
    4f1e:	50 e0       	ldi	r21, 0x00	; 0
    4f20:	44 0f       	add	r20, r20
    4f22:	55 1f       	adc	r21, r21
    4f24:	e4 2b       	or	r30, r20
    4f26:	f5 2b       	or	r31, r21
    4f28:	85 fb       	bst	r24, 5
    4f2a:	aa 24       	eor	r10, r10
    4f2c:	a0 f8       	bld	r10, 0
    4f2e:	b1 2c       	mov	r11, r1
    4f30:	95 01       	movw	r18, r10
    4f32:	22 0f       	add	r18, r18
    4f34:	33 1f       	adc	r19, r19
    4f36:	22 0f       	add	r18, r18
    4f38:	33 1f       	adc	r19, r19
    4f3a:	22 0f       	add	r18, r18
    4f3c:	33 1f       	adc	r19, r19
    4f3e:	e2 2b       	or	r30, r18
    4f40:	f3 2b       	or	r31, r19
    4f42:	ee 0f       	add	r30, r30
    4f44:	ff 1f       	adc	r31, r31
    4f46:	e8 5f       	subi	r30, 0xF8	; 248
    4f48:	ff 4d       	sbci	r31, 0xDF	; 223
    4f4a:	80 81       	ld	r24, Z
    4f4c:	e0 ee       	ldi	r30, 0xE0	; 224
    4f4e:	f6 e0       	ldi	r31, 0x06	; 6
    4f50:	84 83       	std	Z+4, r24	; 0x04
    4f52:	ff 91       	pop	r31
    4f54:	ef 91       	pop	r30
    4f56:	df 91       	pop	r29
    4f58:	cf 91       	pop	r28
    4f5a:	bf 91       	pop	r27
    4f5c:	af 91       	pop	r26
    4f5e:	9f 91       	pop	r25
    4f60:	8f 91       	pop	r24
    4f62:	7f 91       	pop	r23
    4f64:	6f 91       	pop	r22
    4f66:	5f 91       	pop	r21
    4f68:	4f 91       	pop	r20
    4f6a:	3f 91       	pop	r19
    4f6c:	2f 91       	pop	r18
    4f6e:	1f 91       	pop	r17
    4f70:	0f 91       	pop	r16
    4f72:	ff 90       	pop	r15
    4f74:	ef 90       	pop	r14
    4f76:	df 90       	pop	r13
    4f78:	bf 90       	pop	r11
    4f7a:	af 90       	pop	r10
    4f7c:	0f 90       	pop	r0
    4f7e:	0b be       	out	0x3b, r0	; 59
    4f80:	0f 90       	pop	r0
    4f82:	0a be       	out	0x3a, r0	; 58
    4f84:	0f 90       	pop	r0
    4f86:	09 be       	out	0x39, r0	; 57
    4f88:	0f 90       	pop	r0
    4f8a:	08 be       	out	0x38, r0	; 56
    4f8c:	0f 90       	pop	r0
    4f8e:	0f be       	out	0x3f, r0	; 63
    4f90:	0f 90       	pop	r0
    4f92:	1f 90       	pop	r1
    4f94:	18 95       	reti

00004f96 <__vector_104>:
    4f96:	1f 92       	push	r1
    4f98:	0f 92       	push	r0
    4f9a:	0f b6       	in	r0, 0x3f	; 63
    4f9c:	0f 92       	push	r0
    4f9e:	11 24       	eor	r1, r1
    4fa0:	08 b6       	in	r0, 0x38	; 56
    4fa2:	0f 92       	push	r0
    4fa4:	18 be       	out	0x38, r1	; 56
    4fa6:	0f 90       	pop	r0
    4fa8:	08 be       	out	0x38, r0	; 56
    4faa:	0f 90       	pop	r0
    4fac:	0f be       	out	0x3f, r0	; 63
    4fae:	0f 90       	pop	r0
    4fb0:	1f 90       	pop	r1
    4fb2:	18 95       	reti

00004fb4 <__vector_94>:
    4fb4:	1f 92       	push	r1
    4fb6:	0f 92       	push	r0
    4fb8:	0f b6       	in	r0, 0x3f	; 63
    4fba:	0f 92       	push	r0
    4fbc:	11 24       	eor	r1, r1
    4fbe:	08 b6       	in	r0, 0x38	; 56
    4fc0:	0f 92       	push	r0
    4fc2:	18 be       	out	0x38, r1	; 56
    4fc4:	2f 93       	push	r18
    4fc6:	3f 93       	push	r19
    4fc8:	8f 93       	push	r24
    4fca:	9f 93       	push	r25
    4fcc:	20 91 fe 23 	lds	r18, 0x23FE
    4fd0:	30 91 ff 23 	lds	r19, 0x23FF
    4fd4:	80 91 c8 07 	lds	r24, 0x07C8
    4fd8:	81 ff       	sbrs	r24, 1
    4fda:	03 c0       	rjmp	.+6      	; 0x4fe2 <__vector_94+0x2e>
    4fdc:	8f ef       	ldi	r24, 0xFF	; 255
    4fde:	9f ef       	ldi	r25, 0xFF	; 255
    4fe0:	02 c0       	rjmp	.+4      	; 0x4fe6 <__vector_94+0x32>
    4fe2:	81 e0       	ldi	r24, 0x01	; 1
    4fe4:	90 e0       	ldi	r25, 0x00	; 0
    4fe6:	82 0f       	add	r24, r18
    4fe8:	93 1f       	adc	r25, r19
    4fea:	80 93 fe 23 	sts	0x23FE, r24
    4fee:	90 93 ff 23 	sts	0x23FF, r25
    4ff2:	9f 91       	pop	r25
    4ff4:	8f 91       	pop	r24
    4ff6:	3f 91       	pop	r19
    4ff8:	2f 91       	pop	r18
    4ffa:	0f 90       	pop	r0
    4ffc:	08 be       	out	0x38, r0	; 56
    4ffe:	0f 90       	pop	r0
    5000:	0f be       	out	0x3f, r0	; 63
    5002:	0f 90       	pop	r0
    5004:	1f 90       	pop	r1
    5006:	18 95       	reti

00005008 <__vector_96>:
    5008:	1f 92       	push	r1
    500a:	0f 92       	push	r0
    500c:	0f b6       	in	r0, 0x3f	; 63
    500e:	0f 92       	push	r0
    5010:	11 24       	eor	r1, r1
    5012:	08 b6       	in	r0, 0x38	; 56
    5014:	0f 92       	push	r0
    5016:	18 be       	out	0x38, r1	; 56
    5018:	2f 93       	push	r18
    501a:	3f 93       	push	r19
    501c:	8f 93       	push	r24
    501e:	9f 93       	push	r25
    5020:	20 91 79 23 	lds	r18, 0x2379
    5024:	30 91 7a 23 	lds	r19, 0x237A
    5028:	80 91 e8 06 	lds	r24, 0x06E8
    502c:	84 ff       	sbrs	r24, 4
    502e:	03 c0       	rjmp	.+6      	; 0x5036 <__vector_96+0x2e>
    5030:	8f ef       	ldi	r24, 0xFF	; 255
    5032:	9f ef       	ldi	r25, 0xFF	; 255
    5034:	02 c0       	rjmp	.+4      	; 0x503a <__vector_96+0x32>
    5036:	81 e0       	ldi	r24, 0x01	; 1
    5038:	90 e0       	ldi	r25, 0x00	; 0
    503a:	82 0f       	add	r24, r18
    503c:	93 1f       	adc	r25, r19
    503e:	80 93 79 23 	sts	0x2379, r24
    5042:	90 93 7a 23 	sts	0x237A, r25
    5046:	9f 91       	pop	r25
    5048:	8f 91       	pop	r24
    504a:	3f 91       	pop	r19
    504c:	2f 91       	pop	r18
    504e:	0f 90       	pop	r0
    5050:	08 be       	out	0x38, r0	; 56
    5052:	0f 90       	pop	r0
    5054:	0f be       	out	0x3f, r0	; 63
    5056:	0f 90       	pop	r0
    5058:	1f 90       	pop	r1
    505a:	18 95       	reti

0000505c <__vector_2>:
    505c:	1f 92       	push	r1
    505e:	0f 92       	push	r0
    5060:	0f b6       	in	r0, 0x3f	; 63
    5062:	0f 92       	push	r0
    5064:	11 24       	eor	r1, r1
    5066:	08 b6       	in	r0, 0x38	; 56
    5068:	0f 92       	push	r0
    506a:	18 be       	out	0x38, r1	; 56
    506c:	2f 93       	push	r18
    506e:	3f 93       	push	r19
    5070:	8f 93       	push	r24
    5072:	9f 93       	push	r25
    5074:	20 91 ab 23 	lds	r18, 0x23AB
    5078:	30 91 ac 23 	lds	r19, 0x23AC
    507c:	80 91 48 06 	lds	r24, 0x0648
    5080:	84 ff       	sbrs	r24, 4
    5082:	03 c0       	rjmp	.+6      	; 0x508a <__vector_2+0x2e>
    5084:	8f ef       	ldi	r24, 0xFF	; 255
    5086:	9f ef       	ldi	r25, 0xFF	; 255
    5088:	02 c0       	rjmp	.+4      	; 0x508e <__vector_2+0x32>
    508a:	81 e0       	ldi	r24, 0x01	; 1
    508c:	90 e0       	ldi	r25, 0x00	; 0
    508e:	82 0f       	add	r24, r18
    5090:	93 1f       	adc	r25, r19
    5092:	80 93 ab 23 	sts	0x23AB, r24
    5096:	90 93 ac 23 	sts	0x23AC, r25
    509a:	9f 91       	pop	r25
    509c:	8f 91       	pop	r24
    509e:	3f 91       	pop	r19
    50a0:	2f 91       	pop	r18
    50a2:	0f 90       	pop	r0
    50a4:	08 be       	out	0x38, r0	; 56
    50a6:	0f 90       	pop	r0
    50a8:	0f be       	out	0x3f, r0	; 63
    50aa:	0f 90       	pop	r0
    50ac:	1f 90       	pop	r1
    50ae:	18 95       	reti

000050b0 <__vector_95>:
    50b0:	1f 92       	push	r1
    50b2:	0f 92       	push	r0
    50b4:	0f b6       	in	r0, 0x3f	; 63
    50b6:	0f 92       	push	r0
    50b8:	11 24       	eor	r1, r1
    50ba:	08 b6       	in	r0, 0x38	; 56
    50bc:	0f 92       	push	r0
    50be:	18 be       	out	0x38, r1	; 56
    50c0:	2f 93       	push	r18
    50c2:	3f 93       	push	r19
    50c4:	8f 93       	push	r24
    50c6:	9f 93       	push	r25
    50c8:	20 91 12 24 	lds	r18, 0x2412
    50cc:	30 91 13 24 	lds	r19, 0x2413
    50d0:	80 91 c8 07 	lds	r24, 0x07C8
    50d4:	82 ff       	sbrs	r24, 2
    50d6:	03 c0       	rjmp	.+6      	; 0x50de <__vector_95+0x2e>
    50d8:	8f ef       	ldi	r24, 0xFF	; 255
    50da:	9f ef       	ldi	r25, 0xFF	; 255
    50dc:	02 c0       	rjmp	.+4      	; 0x50e2 <__vector_95+0x32>
    50de:	81 e0       	ldi	r24, 0x01	; 1
    50e0:	90 e0       	ldi	r25, 0x00	; 0
    50e2:	82 0f       	add	r24, r18
    50e4:	93 1f       	adc	r25, r19
    50e6:	80 93 12 24 	sts	0x2412, r24
    50ea:	90 93 13 24 	sts	0x2413, r25
    50ee:	9f 91       	pop	r25
    50f0:	8f 91       	pop	r24
    50f2:	3f 91       	pop	r19
    50f4:	2f 91       	pop	r18
    50f6:	0f 90       	pop	r0
    50f8:	08 be       	out	0x38, r0	; 56
    50fa:	0f 90       	pop	r0
    50fc:	0f be       	out	0x3f, r0	; 63
    50fe:	0f 90       	pop	r0
    5100:	1f 90       	pop	r1
    5102:	18 95       	reti

00005104 <__vector_100>:
    5104:	1f 92       	push	r1
    5106:	0f 92       	push	r0
    5108:	0f b6       	in	r0, 0x3f	; 63
    510a:	0f 92       	push	r0
    510c:	11 24       	eor	r1, r1
    510e:	08 b6       	in	r0, 0x38	; 56
    5110:	0f 92       	push	r0
    5112:	18 be       	out	0x38, r1	; 56
    5114:	09 b6       	in	r0, 0x39	; 57
    5116:	0f 92       	push	r0
    5118:	19 be       	out	0x39, r1	; 57
    511a:	0b b6       	in	r0, 0x3b	; 59
    511c:	0f 92       	push	r0
    511e:	1b be       	out	0x3b, r1	; 59
    5120:	2f 93       	push	r18
    5122:	3f 93       	push	r19
    5124:	4f 93       	push	r20
    5126:	5f 93       	push	r21
    5128:	6f 93       	push	r22
    512a:	7f 93       	push	r23
    512c:	8f 93       	push	r24
    512e:	9f 93       	push	r25
    5130:	af 93       	push	r26
    5132:	bf 93       	push	r27
    5134:	ef 93       	push	r30
    5136:	ff 93       	push	r31
    5138:	80 91 48 20 	lds	r24, 0x2048
    513c:	90 91 49 20 	lds	r25, 0x2049
    5140:	89 2b       	or	r24, r25
    5142:	91 f4       	brne	.+36     	; 0x5168 <__vector_100+0x64>
    5144:	80 91 28 07 	lds	r24, 0x0728
    5148:	6b e4       	ldi	r22, 0x4B	; 75
    514a:	70 e2       	ldi	r23, 0x20	; 32
    514c:	88 1f       	adc	r24, r24
    514e:	88 27       	eor	r24, r24
    5150:	88 1f       	adc	r24, r24
    5152:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    5156:	e0 ee       	ldi	r30, 0xE0	; 224
    5158:	f6 e0       	ldi	r31, 0x06	; 6
    515a:	80 85       	ldd	r24, Z+8	; 0x08
    515c:	6a e4       	ldi	r22, 0x4A	; 74
    515e:	70 e2       	ldi	r23, 0x20	; 32
    5160:	82 95       	swap	r24
    5162:	81 70       	andi	r24, 0x01	; 1
    5164:	0e 94 89 02 	call	0x512	; 0x512 <menu_check_sw>
    5168:	80 e3       	ldi	r24, 0x30	; 48
    516a:	95 e7       	ldi	r25, 0x75	; 117
    516c:	80 93 48 20 	sts	0x2048, r24
    5170:	90 93 49 20 	sts	0x2049, r25
    5174:	8f ef       	ldi	r24, 0xFF	; 255
    5176:	80 93 ad 20 	sts	0x20AD, r24
    517a:	0e 94 98 02 	call	0x530	; 0x530 <Menu_Display>
    517e:	ff 91       	pop	r31
    5180:	ef 91       	pop	r30
    5182:	bf 91       	pop	r27
    5184:	af 91       	pop	r26
    5186:	9f 91       	pop	r25
    5188:	8f 91       	pop	r24
    518a:	7f 91       	pop	r23
    518c:	6f 91       	pop	r22
    518e:	5f 91       	pop	r21
    5190:	4f 91       	pop	r20
    5192:	3f 91       	pop	r19
    5194:	2f 91       	pop	r18
    5196:	0f 90       	pop	r0
    5198:	0b be       	out	0x3b, r0	; 59
    519a:	0f 90       	pop	r0
    519c:	09 be       	out	0x39, r0	; 57
    519e:	0f 90       	pop	r0
    51a0:	08 be       	out	0x38, r0	; 56
    51a2:	0f 90       	pop	r0
    51a4:	0f be       	out	0x3f, r0	; 63
    51a6:	0f 90       	pop	r0
    51a8:	1f 90       	pop	r1
    51aa:	18 95       	reti

000051ac <__vector_119>:
int buff_i_temp;
int buff_d_temp;
int buff_u_temp;
unsigned char reply2_tmp;
ISR(USARTF0_RXC_vect)
{
    51ac:	1f 92       	push	r1
    51ae:	0f 92       	push	r0
    51b0:	0f b6       	in	r0, 0x3f	; 63
    51b2:	0f 92       	push	r0
    51b4:	11 24       	eor	r1, r1
    51b6:	08 b6       	in	r0, 0x38	; 56
    51b8:	0f 92       	push	r0
    51ba:	18 be       	out	0x38, r1	; 56
    51bc:	2f 93       	push	r18
    51be:	8f 93       	push	r24
    51c0:	9f 93       	push	r25
    //LED_Green_PORT.OUTSET = LED_Green_PIN_bm;
    //char buff_reply [16];
    unsigned char data;
    data=USARTF0_DATA;
    51c2:	20 91 a0 0b 	lds	r18, 0x0BA0

    //LED_Red_PORT.OUTTGL = LED_Red_PIN_bm;

    switch(ask_cnt)
    51c6:	80 91 9c 20 	lds	r24, 0x209C
    51ca:	90 91 9d 20 	lds	r25, 0x209D
    51ce:	82 30       	cpi	r24, 0x02	; 2
    51d0:	91 05       	cpc	r25, r1
    51d2:	19 f1       	breq	.+70     	; 0x521a <__vector_119+0x6e>
    51d4:	2c f4       	brge	.+10     	; 0x51e0 <__vector_119+0x34>
    51d6:	00 97       	sbiw	r24, 0x00	; 0
    51d8:	49 f0       	breq	.+18     	; 0x51ec <__vector_119+0x40>
    51da:	01 97       	sbiw	r24, 0x01	; 1
    51dc:	89 f0       	breq	.+34     	; 0x5200 <__vector_119+0x54>
    51de:	48 c0       	rjmp	.+144    	; 0x5270 <__vector_119+0xc4>
    51e0:	83 30       	cpi	r24, 0x03	; 3
    51e2:	91 05       	cpc	r25, r1
    51e4:	51 f1       	breq	.+84     	; 0x523a <__vector_119+0x8e>
    51e6:	04 97       	sbiw	r24, 0x04	; 4
    51e8:	89 f1       	breq	.+98     	; 0x524c <__vector_119+0xa0>
    51ea:	42 c0       	rjmp	.+132    	; 0x5270 <__vector_119+0xc4>
    {
    case 0:
        if (data== '*')
    51ec:	2a 32       	cpi	r18, 0x2A	; 42
    51ee:	09 f0       	breq	.+2      	; 0x51f2 <__vector_119+0x46>
    51f0:	3f c0       	rjmp	.+126    	; 0x5270 <__vector_119+0xc4>
        {
            ask_cnt++;}
    51f2:	81 e0       	ldi	r24, 0x01	; 1
    51f4:	90 e0       	ldi	r25, 0x00	; 0
    51f6:	80 93 9c 20 	sts	0x209C, r24
    51fa:	90 93 9d 20 	sts	0x209D, r25
    51fe:	38 c0       	rjmp	.+112    	; 0x5270 <__vector_119+0xc4>
        break;

    case 1:
        buff_reply_tmp=data&0x0ff;
    5200:	82 2f       	mov	r24, r18
    5202:	90 e0       	ldi	r25, 0x00	; 0
    5204:	80 93 ba 23 	sts	0x23BA, r24
    5208:	90 93 bb 23 	sts	0x23BB, r25
        ask_cnt++;
    520c:	82 e0       	ldi	r24, 0x02	; 2
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	80 93 9c 20 	sts	0x209C, r24
    5214:	90 93 9d 20 	sts	0x209D, r25
        break;
    5218:	2b c0       	rjmp	.+86     	; 0x5270 <__vector_119+0xc4>

    case 2:
        buff_reply_tmp|=(data<<8)&0x0ff00;
    521a:	80 91 ba 23 	lds	r24, 0x23BA
    521e:	90 91 bb 23 	lds	r25, 0x23BB
    5222:	92 2b       	or	r25, r18
    5224:	80 93 ba 23 	sts	0x23BA, r24
    5228:	90 93 bb 23 	sts	0x23BB, r25
        ask_cnt++;
    522c:	83 e0       	ldi	r24, 0x03	; 3
    522e:	90 e0       	ldi	r25, 0x00	; 0
    5230:	80 93 9c 20 	sts	0x209C, r24
    5234:	90 93 9d 20 	sts	0x209D, r25
        break;
    5238:	1b c0       	rjmp	.+54     	; 0x5270 <__vector_119+0xc4>

    case 3:
        reply2_tmp = data;
    523a:	20 93 ca 23 	sts	0x23CA, r18
        ask_cnt++;
    523e:	84 e0       	ldi	r24, 0x04	; 4
    5240:	90 e0       	ldi	r25, 0x00	; 0
    5242:	80 93 9c 20 	sts	0x209C, r24
    5246:	90 93 9d 20 	sts	0x209D, r25
        break;
    524a:	12 c0       	rjmp	.+36     	; 0x5270 <__vector_119+0xc4>
        //ask_cnt++;
        //break;


    case 4:
        if (data=='#')
    524c:	23 32       	cpi	r18, 0x23	; 35
    524e:	61 f4       	brne	.+24     	; 0x5268 <__vector_119+0xbc>
        {
            //LED_Green_PORT.OUTTGL = LED_Green_PIN_bm;
            buff_reply = buff_reply_tmp;
    5250:	80 91 ba 23 	lds	r24, 0x23BA
    5254:	90 91 bb 23 	lds	r25, 0x23BB
    5258:	80 93 71 23 	sts	0x2371, r24
    525c:	90 93 72 23 	sts	0x2372, r25
            reply2 = reply2_tmp;
    5260:	80 91 ca 23 	lds	r24, 0x23CA
    5264:	80 93 d7 21 	sts	0x21D7, r24


            //flg_reply=0;
            ask_cnt=0;
        }
        ask_cnt=0;
    5268:	10 92 9c 20 	sts	0x209C, r1
    526c:	10 92 9d 20 	sts	0x209D, r1
        break;
    }
}
    5270:	9f 91       	pop	r25
    5272:	8f 91       	pop	r24
    5274:	2f 91       	pop	r18
    5276:	0f 90       	pop	r0
    5278:	08 be       	out	0x38, r0	; 56
    527a:	0f 90       	pop	r0
    527c:	0f be       	out	0x3f, r0	; 63
    527e:	0f 90       	pop	r0
    5280:	1f 90       	pop	r1
    5282:	18 95       	reti

00005284 <NRF24L01_L_RF_TX>:
		NRF24L01_L_RF_TX();
	while ((NRF24L01_L_Get_Status() & _TX_DS) != _TX_DS)
	{
		
	}		
	NRF24L01_L_Clear_Interrupts();
    5284:	e0 e8       	ldi	r30, 0x80	; 128
    5286:	f6 e0       	ldi	r31, 0x06	; 6
    5288:	82 e0       	ldi	r24, 0x02	; 2
    528a:	86 83       	std	Z+6, r24	; 0x06
    528c:	85 83       	std	Z+5, r24	; 0x05
    528e:	8a e6       	ldi	r24, 0x6A	; 106
    5290:	8a 95       	dec	r24
    5292:	f1 f7       	brne	.-4      	; 0x5290 <NRF24L01_L_RF_TX+0xc>
    5294:	00 c0       	rjmp	.+0      	; 0x5296 <NRF24L01_L_RF_TX+0x12>
    5296:	82 e0       	ldi	r24, 0x02	; 2
    5298:	86 83       	std	Z+6, r24	; 0x06
    529a:	08 95       	ret

0000529c <SPI_L>:
    529c:	e0 ec       	ldi	r30, 0xC0	; 192
    529e:	fa e0       	ldi	r31, 0x0A	; 10
    52a0:	83 83       	std	Z+3, r24	; 0x03
    52a2:	82 81       	ldd	r24, Z+2	; 0x02
    52a4:	88 23       	and	r24, r24
    52a6:	ec f7       	brge	.-6      	; 0x52a2 <SPI_L+0x6>
    52a8:	e0 ec       	ldi	r30, 0xC0	; 192
    52aa:	fa e0       	ldi	r31, 0x0A	; 10
    52ac:	83 81       	ldd	r24, Z+3	; 0x03
    52ae:	08 95       	ret

000052b0 <NRF24L01_L_ReadReg>:
    52b0:	1f 93       	push	r17
    52b2:	cf 93       	push	r28
    52b4:	df 93       	push	r29
    52b6:	c0 e8       	ldi	r28, 0x80	; 128
    52b8:	d6 e0       	ldi	r29, 0x06	; 6
    52ba:	10 e1       	ldi	r17, 0x10	; 16
    52bc:	1e 83       	std	Y+6, r17	; 0x06
    52be:	ee df       	rcall	.-36     	; 0x529c <SPI_L>
    52c0:	8f ef       	ldi	r24, 0xFF	; 255
    52c2:	ec df       	rcall	.-40     	; 0x529c <SPI_L>
    52c4:	1d 83       	std	Y+5, r17	; 0x05
    52c6:	df 91       	pop	r29
    52c8:	cf 91       	pop	r28
    52ca:	1f 91       	pop	r17
    52cc:	08 95       	ret

000052ce <NRF24L01_L_WriteReg>:
    52ce:	ff 92       	push	r15
    52d0:	0f 93       	push	r16
    52d2:	1f 93       	push	r17
    52d4:	cf 93       	push	r28
    52d6:	df 93       	push	r29
    52d8:	f6 2e       	mov	r15, r22
    52da:	c0 e8       	ldi	r28, 0x80	; 128
    52dc:	d6 e0       	ldi	r29, 0x06	; 6
    52de:	10 e1       	ldi	r17, 0x10	; 16
    52e0:	1e 83       	std	Y+6, r17	; 0x06
    52e2:	dc df       	rcall	.-72     	; 0x529c <SPI_L>
    52e4:	08 2f       	mov	r16, r24
    52e6:	8f 2d       	mov	r24, r15
    52e8:	d9 df       	rcall	.-78     	; 0x529c <SPI_L>
    52ea:	1d 83       	std	Y+5, r17	; 0x05
    52ec:	80 2f       	mov	r24, r16
    52ee:	df 91       	pop	r29
    52f0:	cf 91       	pop	r28
    52f2:	1f 91       	pop	r17
    52f4:	0f 91       	pop	r16
    52f6:	ff 90       	pop	r15
    52f8:	08 95       	ret

000052fa <NRF24L01_L_Set_CH>:
    52fa:	68 2f       	mov	r22, r24
    52fc:	6f 77       	andi	r22, 0x7F	; 127
    52fe:	85 e2       	ldi	r24, 0x25	; 37
    5300:	e6 cf       	rjmp	.-52     	; 0x52ce <NRF24L01_L_WriteReg>
    5302:	08 95       	ret

00005304 <NRF24L01_L_Set_ShockBurst>:
    5304:	cf 93       	push	r28
    5306:	c8 2f       	mov	r28, r24
    5308:	68 2f       	mov	r22, r24
    530a:	84 e2       	ldi	r24, 0x24	; 36
    530c:	e0 df       	rcall	.-64     	; 0x52ce <NRF24L01_L_WriteReg>
    530e:	6c 2f       	mov	r22, r28
    5310:	81 e2       	ldi	r24, 0x21	; 33
    5312:	dd df       	rcall	.-70     	; 0x52ce <NRF24L01_L_WriteReg>
    5314:	cf 91       	pop	r28
    5316:	08 95       	ret

00005318 <NRF24L01_L_Set_Address_Width>:
    5318:	63 e0       	ldi	r22, 0x03	; 3
    531a:	83 e2       	ldi	r24, 0x23	; 35
    531c:	d8 cf       	rjmp	.-80     	; 0x52ce <NRF24L01_L_WriteReg>
    531e:	08 95       	ret

00005320 <NRF24L01_L_Clear_Interrupts>:
    5320:	60 e7       	ldi	r22, 0x70	; 112
    5322:	87 e2       	ldi	r24, 0x27	; 39
    5324:	d4 cf       	rjmp	.-88     	; 0x52ce <NRF24L01_L_WriteReg>
    5326:	08 95       	ret

00005328 <NRF24L01_L_ReadRegBuf>:
    5328:	df 92       	push	r13
    532a:	ef 92       	push	r14
    532c:	ff 92       	push	r15
    532e:	0f 93       	push	r16
    5330:	1f 93       	push	r17
    5332:	cf 93       	push	r28
    5334:	df 93       	push	r29
    5336:	7b 01       	movw	r14, r22
    5338:	8a 01       	movw	r16, r20
    533a:	90 e1       	ldi	r25, 0x10	; 16
    533c:	e0 e8       	ldi	r30, 0x80	; 128
    533e:	f6 e0       	ldi	r31, 0x06	; 6
    5340:	96 83       	std	Z+6, r25	; 0x06
    5342:	ac df       	rcall	.-168    	; 0x529c <SPI_L>
    5344:	d8 2e       	mov	r13, r24
    5346:	10 16       	cp	r1, r16
    5348:	11 06       	cpc	r1, r17
    534a:	4c f4       	brge	.+18     	; 0x535e <NRF24L01_L_ReadRegBuf+0x36>
    534c:	e7 01       	movw	r28, r14
    534e:	0e 0d       	add	r16, r14
    5350:	1f 1d       	adc	r17, r15
    5352:	8f ef       	ldi	r24, 0xFF	; 255
    5354:	a3 df       	rcall	.-186    	; 0x529c <SPI_L>
    5356:	89 93       	st	Y+, r24
    5358:	c0 17       	cp	r28, r16
    535a:	d1 07       	cpc	r29, r17
    535c:	d1 f7       	brne	.-12     	; 0x5352 <NRF24L01_L_ReadRegBuf+0x2a>
    535e:	80 e1       	ldi	r24, 0x10	; 16
    5360:	e0 e8       	ldi	r30, 0x80	; 128
    5362:	f6 e0       	ldi	r31, 0x06	; 6
    5364:	85 83       	std	Z+5, r24	; 0x05
    5366:	8d 2d       	mov	r24, r13
    5368:	df 91       	pop	r29
    536a:	cf 91       	pop	r28
    536c:	1f 91       	pop	r17
    536e:	0f 91       	pop	r16
    5370:	ff 90       	pop	r15
    5372:	ef 90       	pop	r14
    5374:	df 90       	pop	r13
    5376:	08 95       	ret

00005378 <NRF24L01_L_Read_RX_Buf>:
    5378:	ab 01       	movw	r20, r22
    537a:	bc 01       	movw	r22, r24
    537c:	81 e6       	ldi	r24, 0x61	; 97
    537e:	d4 cf       	rjmp	.-88     	; 0x5328 <NRF24L01_L_ReadRegBuf>
    5380:	08 95       	ret

00005382 <NRF24L01_L_WriteRegBuf>:
    5382:	df 92       	push	r13
    5384:	ef 92       	push	r14
    5386:	ff 92       	push	r15
    5388:	0f 93       	push	r16
    538a:	1f 93       	push	r17
    538c:	cf 93       	push	r28
    538e:	df 93       	push	r29
    5390:	7b 01       	movw	r14, r22
    5392:	8a 01       	movw	r16, r20
    5394:	90 e1       	ldi	r25, 0x10	; 16
    5396:	e0 e8       	ldi	r30, 0x80	; 128
    5398:	f6 e0       	ldi	r31, 0x06	; 6
    539a:	96 83       	std	Z+6, r25	; 0x06
    539c:	7f df       	rcall	.-258    	; 0x529c <SPI_L>
    539e:	d8 2e       	mov	r13, r24
    53a0:	10 16       	cp	r1, r16
    53a2:	11 06       	cpc	r1, r17
    53a4:	44 f4       	brge	.+16     	; 0x53b6 <NRF24L01_L_WriteRegBuf+0x34>
    53a6:	e7 01       	movw	r28, r14
    53a8:	0e 0d       	add	r16, r14
    53aa:	1f 1d       	adc	r17, r15
    53ac:	89 91       	ld	r24, Y+
    53ae:	76 df       	rcall	.-276    	; 0x529c <SPI_L>
    53b0:	c0 17       	cp	r28, r16
    53b2:	d1 07       	cpc	r29, r17
    53b4:	d9 f7       	brne	.-10     	; 0x53ac <NRF24L01_L_WriteRegBuf+0x2a>
    53b6:	80 e1       	ldi	r24, 0x10	; 16
    53b8:	e0 e8       	ldi	r30, 0x80	; 128
    53ba:	f6 e0       	ldi	r31, 0x06	; 6
    53bc:	85 83       	std	Z+5, r24	; 0x05
    53be:	8d 2d       	mov	r24, r13
    53c0:	df 91       	pop	r29
    53c2:	cf 91       	pop	r28
    53c4:	1f 91       	pop	r17
    53c6:	0f 91       	pop	r16
    53c8:	ff 90       	pop	r15
    53ca:	ef 90       	pop	r14
    53cc:	df 90       	pop	r13
    53ce:	08 95       	ret

000053d0 <NRF24L01_L_Set_RX_Pipe>:
    53d0:	ef 92       	push	r14
    53d2:	ff 92       	push	r15
    53d4:	0f 93       	push	r16
    53d6:	1f 93       	push	r17
    53d8:	cf 93       	push	r28
    53da:	df 93       	push	r29
    53dc:	f8 2e       	mov	r15, r24
    53de:	eb 01       	movw	r28, r22
    53e0:	8a 01       	movw	r16, r20
    53e2:	e2 2e       	mov	r14, r18
    53e4:	82 e0       	ldi	r24, 0x02	; 2
    53e6:	64 df       	rcall	.-312    	; 0x52b0 <NRF24L01_L_ReadReg>
    53e8:	41 e0       	ldi	r20, 0x01	; 1
    53ea:	50 e0       	ldi	r21, 0x00	; 0
    53ec:	0f 2c       	mov	r0, r15
    53ee:	02 c0       	rjmp	.+4      	; 0x53f4 <NRF24L01_L_Set_RX_Pipe+0x24>
    53f0:	44 0f       	add	r20, r20
    53f2:	55 1f       	adc	r21, r21
    53f4:	0a 94       	dec	r0
    53f6:	e2 f7       	brpl	.-8      	; 0x53f0 <NRF24L01_L_Set_RX_Pipe+0x20>
    53f8:	68 2f       	mov	r22, r24
    53fa:	64 2b       	or	r22, r20
    53fc:	82 e2       	ldi	r24, 0x22	; 34
    53fe:	67 df       	rcall	.-306    	; 0x52ce <NRF24L01_L_WriteReg>
    5400:	81 e1       	ldi	r24, 0x11	; 17
    5402:	8f 0d       	add	r24, r15
    5404:	6e 2d       	mov	r22, r14
    5406:	80 62       	ori	r24, 0x20	; 32
    5408:	62 df       	rcall	.-316    	; 0x52ce <NRF24L01_L_WriteReg>
    540a:	8a e0       	ldi	r24, 0x0A	; 10
    540c:	8f 0d       	add	r24, r15
    540e:	a8 01       	movw	r20, r16
    5410:	be 01       	movw	r22, r28
    5412:	80 62       	ori	r24, 0x20	; 32
    5414:	b6 df       	rcall	.-148    	; 0x5382 <NRF24L01_L_WriteRegBuf>
    5416:	df 91       	pop	r29
    5418:	cf 91       	pop	r28
    541a:	1f 91       	pop	r17
    541c:	0f 91       	pop	r16
    541e:	ff 90       	pop	r15
    5420:	ef 90       	pop	r14
    5422:	08 95       	ret

00005424 <NRF24L01_L_Set_TX_Address>:
    5424:	ab 01       	movw	r20, r22
    5426:	bc 01       	movw	r22, r24
    5428:	80 e3       	ldi	r24, 0x30	; 48
    542a:	ab cf       	rjmp	.-170    	; 0x5382 <NRF24L01_L_WriteRegBuf>
    542c:	08 95       	ret

0000542e <NRF24L01_L_Init_milad>:
    542e:	cf 92       	push	r12
    5430:	df 92       	push	r13
    5432:	ef 92       	push	r14
    5434:	ff 92       	push	r15
    5436:	0f 93       	push	r16
    5438:	1f 93       	push	r17
    543a:	cf 93       	push	r28
    543c:	df 93       	push	r29
    543e:	f8 2e       	mov	r15, r24
    5440:	d6 2e       	mov	r13, r22
    5442:	14 2f       	mov	r17, r20
    5444:	e9 01       	movw	r28, r18
    5446:	80 e0       	ldi	r24, 0x00	; 0
    5448:	5d df       	rcall	.-326    	; 0x5304 <NRF24L01_L_Set_ShockBurst>
    544a:	61 e0       	ldi	r22, 0x01	; 1
    544c:	81 e2       	ldi	r24, 0x21	; 33
    544e:	3f df       	rcall	.-386    	; 0x52ce <NRF24L01_L_WriteReg>
    5450:	6f e2       	ldi	r22, 0x2F	; 47
    5452:	84 e2       	ldi	r24, 0x24	; 36
    5454:	3c df       	rcall	.-392    	; 0x52ce <NRF24L01_L_WriteReg>
    5456:	11 60       	ori	r17, 0x01	; 1
    5458:	61 2f       	mov	r22, r17
    545a:	6c 29       	or	r22, r12
    545c:	86 e2       	ldi	r24, 0x26	; 38
    545e:	37 df       	rcall	.-402    	; 0x52ce <NRF24L01_L_WriteReg>
    5460:	80 2f       	mov	r24, r16
    5462:	5a df       	rcall	.-332    	; 0x5318 <NRF24L01_L_Set_Address_Width>
    5464:	11 27       	eor	r17, r17
    5466:	07 fd       	sbrc	r16, 7
    5468:	10 95       	com	r17
    546a:	2e 2d       	mov	r18, r14
    546c:	a8 01       	movw	r20, r16
    546e:	be 01       	movw	r22, r28
    5470:	80 e0       	ldi	r24, 0x00	; 0
    5472:	ae df       	rcall	.-164    	; 0x53d0 <NRF24L01_L_Set_RX_Pipe>
    5474:	8d 2d       	mov	r24, r13
    5476:	41 df       	rcall	.-382    	; 0x52fa <NRF24L01_L_Set_CH>
    5478:	b8 01       	movw	r22, r16
    547a:	ce 01       	movw	r24, r28
    547c:	d3 df       	rcall	.-90     	; 0x5424 <NRF24L01_L_Set_TX_Address>
    547e:	6f 2d       	mov	r22, r15
    5480:	6a 60       	ori	r22, 0x0A	; 10
    5482:	80 e2       	ldi	r24, 0x20	; 32
    5484:	24 df       	rcall	.-440    	; 0x52ce <NRF24L01_L_WriteReg>
    5486:	8f ed       	ldi	r24, 0xDF	; 223
    5488:	9e e2       	ldi	r25, 0x2E	; 46
    548a:	01 97       	sbiw	r24, 0x01	; 1
    548c:	f1 f7       	brne	.-4      	; 0x548a <NRF24L01_L_Init_milad+0x5c>
    548e:	00 c0       	rjmp	.+0      	; 0x5490 <NRF24L01_L_Init_milad+0x62>
    5490:	00 00       	nop
    5492:	df 91       	pop	r29
    5494:	cf 91       	pop	r28
    5496:	1f 91       	pop	r17
    5498:	0f 91       	pop	r16
    549a:	ff 90       	pop	r15
    549c:	ef 90       	pop	r14
    549e:	df 90       	pop	r13
    54a0:	cf 90       	pop	r12
    54a2:	08 95       	ret

000054a4 <NRF24L01_L_Write_TX_Buf>:
    54a4:	ab 01       	movw	r20, r22
    54a6:	bc 01       	movw	r22, r24
    54a8:	80 ea       	ldi	r24, 0xA0	; 160
    54aa:	6b cf       	rjmp	.-298    	; 0x5382 <NRF24L01_L_WriteRegBuf>
    54ac:	08 95       	ret

000054ae <NRF24L01_L_Flush_TX>:

/**
 Empty the transmit buffer

*/
void NRF24L01_L_Flush_TX(void) {
    54ae:	1f 93       	push	r17
    54b0:	cf 93       	push	r28
    54b2:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    54b4:	c0 e8       	ldi	r28, 0x80	; 128
    54b6:	d6 e0       	ldi	r29, 0x06	; 6
    54b8:	10 e1       	ldi	r17, 0x10	; 16
    54ba:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_TX);
    54bc:	81 ee       	ldi	r24, 0xE1	; 225
    54be:	ee de       	rcall	.-548    	; 0x529c <SPI_L>
	NRF24L01_L_CS_HIGH;
    54c0:	1d 83       	std	Y+5, r17	; 0x05
}
    54c2:	df 91       	pop	r29
    54c4:	cf 91       	pop	r28
    54c6:	1f 91       	pop	r17
    54c8:	08 95       	ret

000054ca <NRF24L01_L_Flush_RX>:

/**
 Empty the receive buffer
*/
void NRF24L01_L_Flush_RX(void) {
    54ca:	1f 93       	push	r17
    54cc:	cf 93       	push	r28
    54ce:	df 93       	push	r29
	NRF24L01_L_CS_LOW;
    54d0:	c0 e8       	ldi	r28, 0x80	; 128
    54d2:	d6 e0       	ldi	r29, 0x06	; 6
    54d4:	10 e1       	ldi	r17, 0x10	; 16
    54d6:	1e 83       	std	Y+6, r17	; 0x06
	SPI_L(FLUSH_RX);
    54d8:	82 ee       	ldi	r24, 0xE2	; 226
    54da:	e0 de       	rcall	.-576    	; 0x529c <SPI_L>
	NRF24L01_L_CS_HIGH;
    54dc:	1d 83       	std	Y+5, r17	; 0x05
}
    54de:	df 91       	pop	r29
    54e0:	cf 91       	pop	r28
    54e2:	1f 91       	pop	r17
    54e4:	08 95       	ret

000054e6 <__udivmodsi4>:
    54e6:	a1 e2       	ldi	r26, 0x21	; 33
    54e8:	1a 2e       	mov	r1, r26
    54ea:	aa 1b       	sub	r26, r26
    54ec:	bb 1b       	sub	r27, r27
    54ee:	fd 01       	movw	r30, r26
    54f0:	0d c0       	rjmp	.+26     	; 0x550c <__udivmodsi4_ep>

000054f2 <__udivmodsi4_loop>:
    54f2:	aa 1f       	adc	r26, r26
    54f4:	bb 1f       	adc	r27, r27
    54f6:	ee 1f       	adc	r30, r30
    54f8:	ff 1f       	adc	r31, r31
    54fa:	a2 17       	cp	r26, r18
    54fc:	b3 07       	cpc	r27, r19
    54fe:	e4 07       	cpc	r30, r20
    5500:	f5 07       	cpc	r31, r21
    5502:	20 f0       	brcs	.+8      	; 0x550c <__udivmodsi4_ep>
    5504:	a2 1b       	sub	r26, r18
    5506:	b3 0b       	sbc	r27, r19
    5508:	e4 0b       	sbc	r30, r20
    550a:	f5 0b       	sbc	r31, r21

0000550c <__udivmodsi4_ep>:
    550c:	66 1f       	adc	r22, r22
    550e:	77 1f       	adc	r23, r23
    5510:	88 1f       	adc	r24, r24
    5512:	99 1f       	adc	r25, r25
    5514:	1a 94       	dec	r1
    5516:	69 f7       	brne	.-38     	; 0x54f2 <__udivmodsi4_loop>
    5518:	60 95       	com	r22
    551a:	70 95       	com	r23
    551c:	80 95       	com	r24
    551e:	90 95       	com	r25
    5520:	9b 01       	movw	r18, r22
    5522:	ac 01       	movw	r20, r24
    5524:	bd 01       	movw	r22, r26
    5526:	cf 01       	movw	r24, r30
    5528:	08 95       	ret

0000552a <__subsf3>:
    552a:	50 58       	subi	r21, 0x80	; 128

0000552c <__addsf3>:
    552c:	bb 27       	eor	r27, r27
    552e:	aa 27       	eor	r26, r26
    5530:	0e d0       	rcall	.+28     	; 0x554e <__addsf3x>
    5532:	4d c1       	rjmp	.+666    	; 0x57ce <__fp_round>
    5534:	3e d1       	rcall	.+636    	; 0x57b2 <__fp_pscA>
    5536:	30 f0       	brcs	.+12     	; 0x5544 <__addsf3+0x18>
    5538:	43 d1       	rcall	.+646    	; 0x57c0 <__fp_pscB>
    553a:	20 f0       	brcs	.+8      	; 0x5544 <__addsf3+0x18>
    553c:	31 f4       	brne	.+12     	; 0x554a <__addsf3+0x1e>
    553e:	9f 3f       	cpi	r25, 0xFF	; 255
    5540:	11 f4       	brne	.+4      	; 0x5546 <__addsf3+0x1a>
    5542:	1e f4       	brtc	.+6      	; 0x554a <__addsf3+0x1e>
    5544:	33 c1       	rjmp	.+614    	; 0x57ac <__fp_nan>
    5546:	0e f4       	brtc	.+2      	; 0x554a <__addsf3+0x1e>
    5548:	e0 95       	com	r30
    554a:	e7 fb       	bst	r30, 7
    554c:	29 c1       	rjmp	.+594    	; 0x57a0 <__fp_inf>

0000554e <__addsf3x>:
    554e:	e9 2f       	mov	r30, r25
    5550:	4f d1       	rcall	.+670    	; 0x57f0 <__fp_split3>
    5552:	80 f3       	brcs	.-32     	; 0x5534 <__addsf3+0x8>
    5554:	ba 17       	cp	r27, r26
    5556:	62 07       	cpc	r22, r18
    5558:	73 07       	cpc	r23, r19
    555a:	84 07       	cpc	r24, r20
    555c:	95 07       	cpc	r25, r21
    555e:	18 f0       	brcs	.+6      	; 0x5566 <__addsf3x+0x18>
    5560:	71 f4       	brne	.+28     	; 0x557e <__addsf3x+0x30>
    5562:	9e f5       	brtc	.+102    	; 0x55ca <__addsf3x+0x7c>
    5564:	67 c1       	rjmp	.+718    	; 0x5834 <__fp_zero>
    5566:	0e f4       	brtc	.+2      	; 0x556a <__addsf3x+0x1c>
    5568:	e0 95       	com	r30
    556a:	0b 2e       	mov	r0, r27
    556c:	ba 2f       	mov	r27, r26
    556e:	a0 2d       	mov	r26, r0
    5570:	0b 01       	movw	r0, r22
    5572:	b9 01       	movw	r22, r18
    5574:	90 01       	movw	r18, r0
    5576:	0c 01       	movw	r0, r24
    5578:	ca 01       	movw	r24, r20
    557a:	a0 01       	movw	r20, r0
    557c:	11 24       	eor	r1, r1
    557e:	ff 27       	eor	r31, r31
    5580:	59 1b       	sub	r21, r25
    5582:	99 f0       	breq	.+38     	; 0x55aa <__addsf3x+0x5c>
    5584:	59 3f       	cpi	r21, 0xF9	; 249
    5586:	50 f4       	brcc	.+20     	; 0x559c <__addsf3x+0x4e>
    5588:	50 3e       	cpi	r21, 0xE0	; 224
    558a:	68 f1       	brcs	.+90     	; 0x55e6 <__addsf3x+0x98>
    558c:	1a 16       	cp	r1, r26
    558e:	f0 40       	sbci	r31, 0x00	; 0
    5590:	a2 2f       	mov	r26, r18
    5592:	23 2f       	mov	r18, r19
    5594:	34 2f       	mov	r19, r20
    5596:	44 27       	eor	r20, r20
    5598:	58 5f       	subi	r21, 0xF8	; 248
    559a:	f3 cf       	rjmp	.-26     	; 0x5582 <__addsf3x+0x34>
    559c:	46 95       	lsr	r20
    559e:	37 95       	ror	r19
    55a0:	27 95       	ror	r18
    55a2:	a7 95       	ror	r26
    55a4:	f0 40       	sbci	r31, 0x00	; 0
    55a6:	53 95       	inc	r21
    55a8:	c9 f7       	brne	.-14     	; 0x559c <__addsf3x+0x4e>
    55aa:	7e f4       	brtc	.+30     	; 0x55ca <__addsf3x+0x7c>
    55ac:	1f 16       	cp	r1, r31
    55ae:	ba 0b       	sbc	r27, r26
    55b0:	62 0b       	sbc	r22, r18
    55b2:	73 0b       	sbc	r23, r19
    55b4:	84 0b       	sbc	r24, r20
    55b6:	ba f0       	brmi	.+46     	; 0x55e6 <__addsf3x+0x98>
    55b8:	91 50       	subi	r25, 0x01	; 1
    55ba:	a1 f0       	breq	.+40     	; 0x55e4 <__addsf3x+0x96>
    55bc:	ff 0f       	add	r31, r31
    55be:	bb 1f       	adc	r27, r27
    55c0:	66 1f       	adc	r22, r22
    55c2:	77 1f       	adc	r23, r23
    55c4:	88 1f       	adc	r24, r24
    55c6:	c2 f7       	brpl	.-16     	; 0x55b8 <__addsf3x+0x6a>
    55c8:	0e c0       	rjmp	.+28     	; 0x55e6 <__addsf3x+0x98>
    55ca:	ba 0f       	add	r27, r26
    55cc:	62 1f       	adc	r22, r18
    55ce:	73 1f       	adc	r23, r19
    55d0:	84 1f       	adc	r24, r20
    55d2:	48 f4       	brcc	.+18     	; 0x55e6 <__addsf3x+0x98>
    55d4:	87 95       	ror	r24
    55d6:	77 95       	ror	r23
    55d8:	67 95       	ror	r22
    55da:	b7 95       	ror	r27
    55dc:	f7 95       	ror	r31
    55de:	9e 3f       	cpi	r25, 0xFE	; 254
    55e0:	08 f0       	brcs	.+2      	; 0x55e4 <__addsf3x+0x96>
    55e2:	b3 cf       	rjmp	.-154    	; 0x554a <__addsf3+0x1e>
    55e4:	93 95       	inc	r25
    55e6:	88 0f       	add	r24, r24
    55e8:	08 f0       	brcs	.+2      	; 0x55ec <__addsf3x+0x9e>
    55ea:	99 27       	eor	r25, r25
    55ec:	ee 0f       	add	r30, r30
    55ee:	97 95       	ror	r25
    55f0:	87 95       	ror	r24
    55f2:	08 95       	ret

000055f4 <__divsf3>:
    55f4:	0c d0       	rcall	.+24     	; 0x560e <__divsf3x>
    55f6:	eb c0       	rjmp	.+470    	; 0x57ce <__fp_round>
    55f8:	e3 d0       	rcall	.+454    	; 0x57c0 <__fp_pscB>
    55fa:	40 f0       	brcs	.+16     	; 0x560c <__divsf3+0x18>
    55fc:	da d0       	rcall	.+436    	; 0x57b2 <__fp_pscA>
    55fe:	30 f0       	brcs	.+12     	; 0x560c <__divsf3+0x18>
    5600:	21 f4       	brne	.+8      	; 0x560a <__divsf3+0x16>
    5602:	5f 3f       	cpi	r21, 0xFF	; 255
    5604:	19 f0       	breq	.+6      	; 0x560c <__divsf3+0x18>
    5606:	cc c0       	rjmp	.+408    	; 0x57a0 <__fp_inf>
    5608:	51 11       	cpse	r21, r1
    560a:	15 c1       	rjmp	.+554    	; 0x5836 <__fp_szero>
    560c:	cf c0       	rjmp	.+414    	; 0x57ac <__fp_nan>

0000560e <__divsf3x>:
    560e:	f0 d0       	rcall	.+480    	; 0x57f0 <__fp_split3>
    5610:	98 f3       	brcs	.-26     	; 0x55f8 <__divsf3+0x4>

00005612 <__divsf3_pse>:
    5612:	99 23       	and	r25, r25
    5614:	c9 f3       	breq	.-14     	; 0x5608 <__divsf3+0x14>
    5616:	55 23       	and	r21, r21
    5618:	b1 f3       	breq	.-20     	; 0x5606 <__divsf3+0x12>
    561a:	95 1b       	sub	r25, r21
    561c:	55 0b       	sbc	r21, r21
    561e:	bb 27       	eor	r27, r27
    5620:	aa 27       	eor	r26, r26
    5622:	62 17       	cp	r22, r18
    5624:	73 07       	cpc	r23, r19
    5626:	84 07       	cpc	r24, r20
    5628:	38 f0       	brcs	.+14     	; 0x5638 <__divsf3_pse+0x26>
    562a:	9f 5f       	subi	r25, 0xFF	; 255
    562c:	5f 4f       	sbci	r21, 0xFF	; 255
    562e:	22 0f       	add	r18, r18
    5630:	33 1f       	adc	r19, r19
    5632:	44 1f       	adc	r20, r20
    5634:	aa 1f       	adc	r26, r26
    5636:	a9 f3       	breq	.-22     	; 0x5622 <__divsf3_pse+0x10>
    5638:	33 d0       	rcall	.+102    	; 0x56a0 <__divsf3_pse+0x8e>
    563a:	0e 2e       	mov	r0, r30
    563c:	3a f0       	brmi	.+14     	; 0x564c <__divsf3_pse+0x3a>
    563e:	e0 e8       	ldi	r30, 0x80	; 128
    5640:	30 d0       	rcall	.+96     	; 0x56a2 <__divsf3_pse+0x90>
    5642:	91 50       	subi	r25, 0x01	; 1
    5644:	50 40       	sbci	r21, 0x00	; 0
    5646:	e6 95       	lsr	r30
    5648:	00 1c       	adc	r0, r0
    564a:	ca f7       	brpl	.-14     	; 0x563e <__divsf3_pse+0x2c>
    564c:	29 d0       	rcall	.+82     	; 0x56a0 <__divsf3_pse+0x8e>
    564e:	fe 2f       	mov	r31, r30
    5650:	27 d0       	rcall	.+78     	; 0x56a0 <__divsf3_pse+0x8e>
    5652:	66 0f       	add	r22, r22
    5654:	77 1f       	adc	r23, r23
    5656:	88 1f       	adc	r24, r24
    5658:	bb 1f       	adc	r27, r27
    565a:	26 17       	cp	r18, r22
    565c:	37 07       	cpc	r19, r23
    565e:	48 07       	cpc	r20, r24
    5660:	ab 07       	cpc	r26, r27
    5662:	b0 e8       	ldi	r27, 0x80	; 128
    5664:	09 f0       	breq	.+2      	; 0x5668 <__divsf3_pse+0x56>
    5666:	bb 0b       	sbc	r27, r27
    5668:	80 2d       	mov	r24, r0
    566a:	bf 01       	movw	r22, r30
    566c:	ff 27       	eor	r31, r31
    566e:	93 58       	subi	r25, 0x83	; 131
    5670:	5f 4f       	sbci	r21, 0xFF	; 255
    5672:	2a f0       	brmi	.+10     	; 0x567e <__divsf3_pse+0x6c>
    5674:	9e 3f       	cpi	r25, 0xFE	; 254
    5676:	51 05       	cpc	r21, r1
    5678:	68 f0       	brcs	.+26     	; 0x5694 <__divsf3_pse+0x82>
    567a:	92 c0       	rjmp	.+292    	; 0x57a0 <__fp_inf>
    567c:	dc c0       	rjmp	.+440    	; 0x5836 <__fp_szero>
    567e:	5f 3f       	cpi	r21, 0xFF	; 255
    5680:	ec f3       	brlt	.-6      	; 0x567c <__divsf3_pse+0x6a>
    5682:	98 3e       	cpi	r25, 0xE8	; 232
    5684:	dc f3       	brlt	.-10     	; 0x567c <__divsf3_pse+0x6a>
    5686:	86 95       	lsr	r24
    5688:	77 95       	ror	r23
    568a:	67 95       	ror	r22
    568c:	b7 95       	ror	r27
    568e:	f7 95       	ror	r31
    5690:	9f 5f       	subi	r25, 0xFF	; 255
    5692:	c9 f7       	brne	.-14     	; 0x5686 <__divsf3_pse+0x74>
    5694:	88 0f       	add	r24, r24
    5696:	91 1d       	adc	r25, r1
    5698:	96 95       	lsr	r25
    569a:	87 95       	ror	r24
    569c:	97 f9       	bld	r25, 7
    569e:	08 95       	ret
    56a0:	e1 e0       	ldi	r30, 0x01	; 1
    56a2:	66 0f       	add	r22, r22
    56a4:	77 1f       	adc	r23, r23
    56a6:	88 1f       	adc	r24, r24
    56a8:	bb 1f       	adc	r27, r27
    56aa:	62 17       	cp	r22, r18
    56ac:	73 07       	cpc	r23, r19
    56ae:	84 07       	cpc	r24, r20
    56b0:	ba 07       	cpc	r27, r26
    56b2:	20 f0       	brcs	.+8      	; 0x56bc <__divsf3_pse+0xaa>
    56b4:	62 1b       	sub	r22, r18
    56b6:	73 0b       	sbc	r23, r19
    56b8:	84 0b       	sbc	r24, r20
    56ba:	ba 0b       	sbc	r27, r26
    56bc:	ee 1f       	adc	r30, r30
    56be:	88 f7       	brcc	.-30     	; 0x56a2 <__divsf3_pse+0x90>
    56c0:	e0 95       	com	r30
    56c2:	08 95       	ret

000056c4 <__fixsfsi>:
    56c4:	04 d0       	rcall	.+8      	; 0x56ce <__fixunssfsi>
    56c6:	68 94       	set
    56c8:	b1 11       	cpse	r27, r1
    56ca:	b5 c0       	rjmp	.+362    	; 0x5836 <__fp_szero>
    56cc:	08 95       	ret

000056ce <__fixunssfsi>:
    56ce:	98 d0       	rcall	.+304    	; 0x5800 <__fp_splitA>
    56d0:	88 f0       	brcs	.+34     	; 0x56f4 <__fixunssfsi+0x26>
    56d2:	9f 57       	subi	r25, 0x7F	; 127
    56d4:	90 f0       	brcs	.+36     	; 0x56fa <__fixunssfsi+0x2c>
    56d6:	b9 2f       	mov	r27, r25
    56d8:	99 27       	eor	r25, r25
    56da:	b7 51       	subi	r27, 0x17	; 23
    56dc:	a0 f0       	brcs	.+40     	; 0x5706 <__fixunssfsi+0x38>
    56de:	d1 f0       	breq	.+52     	; 0x5714 <__fixunssfsi+0x46>
    56e0:	66 0f       	add	r22, r22
    56e2:	77 1f       	adc	r23, r23
    56e4:	88 1f       	adc	r24, r24
    56e6:	99 1f       	adc	r25, r25
    56e8:	1a f0       	brmi	.+6      	; 0x56f0 <__fixunssfsi+0x22>
    56ea:	ba 95       	dec	r27
    56ec:	c9 f7       	brne	.-14     	; 0x56e0 <__fixunssfsi+0x12>
    56ee:	12 c0       	rjmp	.+36     	; 0x5714 <__fixunssfsi+0x46>
    56f0:	b1 30       	cpi	r27, 0x01	; 1
    56f2:	81 f0       	breq	.+32     	; 0x5714 <__fixunssfsi+0x46>
    56f4:	9f d0       	rcall	.+318    	; 0x5834 <__fp_zero>
    56f6:	b1 e0       	ldi	r27, 0x01	; 1
    56f8:	08 95       	ret
    56fa:	9c c0       	rjmp	.+312    	; 0x5834 <__fp_zero>
    56fc:	67 2f       	mov	r22, r23
    56fe:	78 2f       	mov	r23, r24
    5700:	88 27       	eor	r24, r24
    5702:	b8 5f       	subi	r27, 0xF8	; 248
    5704:	39 f0       	breq	.+14     	; 0x5714 <__fixunssfsi+0x46>
    5706:	b9 3f       	cpi	r27, 0xF9	; 249
    5708:	cc f3       	brlt	.-14     	; 0x56fc <__fixunssfsi+0x2e>
    570a:	86 95       	lsr	r24
    570c:	77 95       	ror	r23
    570e:	67 95       	ror	r22
    5710:	b3 95       	inc	r27
    5712:	d9 f7       	brne	.-10     	; 0x570a <__fixunssfsi+0x3c>
    5714:	3e f4       	brtc	.+14     	; 0x5724 <__fixunssfsi+0x56>
    5716:	90 95       	com	r25
    5718:	80 95       	com	r24
    571a:	70 95       	com	r23
    571c:	61 95       	neg	r22
    571e:	7f 4f       	sbci	r23, 0xFF	; 255
    5720:	8f 4f       	sbci	r24, 0xFF	; 255
    5722:	9f 4f       	sbci	r25, 0xFF	; 255
    5724:	08 95       	ret

00005726 <__floatunsisf>:
    5726:	e8 94       	clt
    5728:	09 c0       	rjmp	.+18     	; 0x573c <__floatsisf+0x12>

0000572a <__floatsisf>:
    572a:	97 fb       	bst	r25, 7
    572c:	3e f4       	brtc	.+14     	; 0x573c <__floatsisf+0x12>
    572e:	90 95       	com	r25
    5730:	80 95       	com	r24
    5732:	70 95       	com	r23
    5734:	61 95       	neg	r22
    5736:	7f 4f       	sbci	r23, 0xFF	; 255
    5738:	8f 4f       	sbci	r24, 0xFF	; 255
    573a:	9f 4f       	sbci	r25, 0xFF	; 255
    573c:	99 23       	and	r25, r25
    573e:	a9 f0       	breq	.+42     	; 0x576a <__floatsisf+0x40>
    5740:	f9 2f       	mov	r31, r25
    5742:	96 e9       	ldi	r25, 0x96	; 150
    5744:	bb 27       	eor	r27, r27
    5746:	93 95       	inc	r25
    5748:	f6 95       	lsr	r31
    574a:	87 95       	ror	r24
    574c:	77 95       	ror	r23
    574e:	67 95       	ror	r22
    5750:	b7 95       	ror	r27
    5752:	f1 11       	cpse	r31, r1
    5754:	f8 cf       	rjmp	.-16     	; 0x5746 <__floatsisf+0x1c>
    5756:	fa f4       	brpl	.+62     	; 0x5796 <__floatsisf+0x6c>
    5758:	bb 0f       	add	r27, r27
    575a:	11 f4       	brne	.+4      	; 0x5760 <__floatsisf+0x36>
    575c:	60 ff       	sbrs	r22, 0
    575e:	1b c0       	rjmp	.+54     	; 0x5796 <__floatsisf+0x6c>
    5760:	6f 5f       	subi	r22, 0xFF	; 255
    5762:	7f 4f       	sbci	r23, 0xFF	; 255
    5764:	8f 4f       	sbci	r24, 0xFF	; 255
    5766:	9f 4f       	sbci	r25, 0xFF	; 255
    5768:	16 c0       	rjmp	.+44     	; 0x5796 <__floatsisf+0x6c>
    576a:	88 23       	and	r24, r24
    576c:	11 f0       	breq	.+4      	; 0x5772 <__floatsisf+0x48>
    576e:	96 e9       	ldi	r25, 0x96	; 150
    5770:	11 c0       	rjmp	.+34     	; 0x5794 <__floatsisf+0x6a>
    5772:	77 23       	and	r23, r23
    5774:	21 f0       	breq	.+8      	; 0x577e <__floatsisf+0x54>
    5776:	9e e8       	ldi	r25, 0x8E	; 142
    5778:	87 2f       	mov	r24, r23
    577a:	76 2f       	mov	r23, r22
    577c:	05 c0       	rjmp	.+10     	; 0x5788 <__floatsisf+0x5e>
    577e:	66 23       	and	r22, r22
    5780:	71 f0       	breq	.+28     	; 0x579e <__floatsisf+0x74>
    5782:	96 e8       	ldi	r25, 0x86	; 134
    5784:	86 2f       	mov	r24, r22
    5786:	70 e0       	ldi	r23, 0x00	; 0
    5788:	60 e0       	ldi	r22, 0x00	; 0
    578a:	2a f0       	brmi	.+10     	; 0x5796 <__floatsisf+0x6c>
    578c:	9a 95       	dec	r25
    578e:	66 0f       	add	r22, r22
    5790:	77 1f       	adc	r23, r23
    5792:	88 1f       	adc	r24, r24
    5794:	da f7       	brpl	.-10     	; 0x578c <__floatsisf+0x62>
    5796:	88 0f       	add	r24, r24
    5798:	96 95       	lsr	r25
    579a:	87 95       	ror	r24
    579c:	97 f9       	bld	r25, 7
    579e:	08 95       	ret

000057a0 <__fp_inf>:
    57a0:	97 f9       	bld	r25, 7
    57a2:	9f 67       	ori	r25, 0x7F	; 127
    57a4:	80 e8       	ldi	r24, 0x80	; 128
    57a6:	70 e0       	ldi	r23, 0x00	; 0
    57a8:	60 e0       	ldi	r22, 0x00	; 0
    57aa:	08 95       	ret

000057ac <__fp_nan>:
    57ac:	9f ef       	ldi	r25, 0xFF	; 255
    57ae:	80 ec       	ldi	r24, 0xC0	; 192
    57b0:	08 95       	ret

000057b2 <__fp_pscA>:
    57b2:	00 24       	eor	r0, r0
    57b4:	0a 94       	dec	r0
    57b6:	16 16       	cp	r1, r22
    57b8:	17 06       	cpc	r1, r23
    57ba:	18 06       	cpc	r1, r24
    57bc:	09 06       	cpc	r0, r25
    57be:	08 95       	ret

000057c0 <__fp_pscB>:
    57c0:	00 24       	eor	r0, r0
    57c2:	0a 94       	dec	r0
    57c4:	12 16       	cp	r1, r18
    57c6:	13 06       	cpc	r1, r19
    57c8:	14 06       	cpc	r1, r20
    57ca:	05 06       	cpc	r0, r21
    57cc:	08 95       	ret

000057ce <__fp_round>:
    57ce:	09 2e       	mov	r0, r25
    57d0:	03 94       	inc	r0
    57d2:	00 0c       	add	r0, r0
    57d4:	11 f4       	brne	.+4      	; 0x57da <__fp_round+0xc>
    57d6:	88 23       	and	r24, r24
    57d8:	52 f0       	brmi	.+20     	; 0x57ee <__fp_round+0x20>
    57da:	bb 0f       	add	r27, r27
    57dc:	40 f4       	brcc	.+16     	; 0x57ee <__fp_round+0x20>
    57de:	bf 2b       	or	r27, r31
    57e0:	11 f4       	brne	.+4      	; 0x57e6 <__fp_round+0x18>
    57e2:	60 ff       	sbrs	r22, 0
    57e4:	04 c0       	rjmp	.+8      	; 0x57ee <__fp_round+0x20>
    57e6:	6f 5f       	subi	r22, 0xFF	; 255
    57e8:	7f 4f       	sbci	r23, 0xFF	; 255
    57ea:	8f 4f       	sbci	r24, 0xFF	; 255
    57ec:	9f 4f       	sbci	r25, 0xFF	; 255
    57ee:	08 95       	ret

000057f0 <__fp_split3>:
    57f0:	57 fd       	sbrc	r21, 7
    57f2:	90 58       	subi	r25, 0x80	; 128
    57f4:	44 0f       	add	r20, r20
    57f6:	55 1f       	adc	r21, r21
    57f8:	59 f0       	breq	.+22     	; 0x5810 <__fp_splitA+0x10>
    57fa:	5f 3f       	cpi	r21, 0xFF	; 255
    57fc:	71 f0       	breq	.+28     	; 0x581a <__fp_splitA+0x1a>
    57fe:	47 95       	ror	r20

00005800 <__fp_splitA>:
    5800:	88 0f       	add	r24, r24
    5802:	97 fb       	bst	r25, 7
    5804:	99 1f       	adc	r25, r25
    5806:	61 f0       	breq	.+24     	; 0x5820 <__fp_splitA+0x20>
    5808:	9f 3f       	cpi	r25, 0xFF	; 255
    580a:	79 f0       	breq	.+30     	; 0x582a <__fp_splitA+0x2a>
    580c:	87 95       	ror	r24
    580e:	08 95       	ret
    5810:	12 16       	cp	r1, r18
    5812:	13 06       	cpc	r1, r19
    5814:	14 06       	cpc	r1, r20
    5816:	55 1f       	adc	r21, r21
    5818:	f2 cf       	rjmp	.-28     	; 0x57fe <__fp_split3+0xe>
    581a:	46 95       	lsr	r20
    581c:	f1 df       	rcall	.-30     	; 0x5800 <__fp_splitA>
    581e:	08 c0       	rjmp	.+16     	; 0x5830 <__fp_splitA+0x30>
    5820:	16 16       	cp	r1, r22
    5822:	17 06       	cpc	r1, r23
    5824:	18 06       	cpc	r1, r24
    5826:	99 1f       	adc	r25, r25
    5828:	f1 cf       	rjmp	.-30     	; 0x580c <__fp_splitA+0xc>
    582a:	86 95       	lsr	r24
    582c:	71 05       	cpc	r23, r1
    582e:	61 05       	cpc	r22, r1
    5830:	08 94       	sec
    5832:	08 95       	ret

00005834 <__fp_zero>:
    5834:	e8 94       	clt

00005836 <__fp_szero>:
    5836:	bb 27       	eor	r27, r27
    5838:	66 27       	eor	r22, r22
    583a:	77 27       	eor	r23, r23
    583c:	cb 01       	movw	r24, r22
    583e:	97 f9       	bld	r25, 7
    5840:	08 95       	ret

00005842 <__mulsf3>:
    5842:	0b d0       	rcall	.+22     	; 0x585a <__mulsf3x>
    5844:	c4 cf       	rjmp	.-120    	; 0x57ce <__fp_round>
    5846:	b5 df       	rcall	.-150    	; 0x57b2 <__fp_pscA>
    5848:	28 f0       	brcs	.+10     	; 0x5854 <__mulsf3+0x12>
    584a:	ba df       	rcall	.-140    	; 0x57c0 <__fp_pscB>
    584c:	18 f0       	brcs	.+6      	; 0x5854 <__mulsf3+0x12>
    584e:	95 23       	and	r25, r21
    5850:	09 f0       	breq	.+2      	; 0x5854 <__mulsf3+0x12>
    5852:	a6 cf       	rjmp	.-180    	; 0x57a0 <__fp_inf>
    5854:	ab cf       	rjmp	.-170    	; 0x57ac <__fp_nan>
    5856:	11 24       	eor	r1, r1
    5858:	ee cf       	rjmp	.-36     	; 0x5836 <__fp_szero>

0000585a <__mulsf3x>:
    585a:	ca df       	rcall	.-108    	; 0x57f0 <__fp_split3>
    585c:	a0 f3       	brcs	.-24     	; 0x5846 <__mulsf3+0x4>

0000585e <__mulsf3_pse>:
    585e:	95 9f       	mul	r25, r21
    5860:	d1 f3       	breq	.-12     	; 0x5856 <__mulsf3+0x14>
    5862:	95 0f       	add	r25, r21
    5864:	50 e0       	ldi	r21, 0x00	; 0
    5866:	55 1f       	adc	r21, r21
    5868:	62 9f       	mul	r22, r18
    586a:	f0 01       	movw	r30, r0
    586c:	72 9f       	mul	r23, r18
    586e:	bb 27       	eor	r27, r27
    5870:	f0 0d       	add	r31, r0
    5872:	b1 1d       	adc	r27, r1
    5874:	63 9f       	mul	r22, r19
    5876:	aa 27       	eor	r26, r26
    5878:	f0 0d       	add	r31, r0
    587a:	b1 1d       	adc	r27, r1
    587c:	aa 1f       	adc	r26, r26
    587e:	64 9f       	mul	r22, r20
    5880:	66 27       	eor	r22, r22
    5882:	b0 0d       	add	r27, r0
    5884:	a1 1d       	adc	r26, r1
    5886:	66 1f       	adc	r22, r22
    5888:	82 9f       	mul	r24, r18
    588a:	22 27       	eor	r18, r18
    588c:	b0 0d       	add	r27, r0
    588e:	a1 1d       	adc	r26, r1
    5890:	62 1f       	adc	r22, r18
    5892:	73 9f       	mul	r23, r19
    5894:	b0 0d       	add	r27, r0
    5896:	a1 1d       	adc	r26, r1
    5898:	62 1f       	adc	r22, r18
    589a:	83 9f       	mul	r24, r19
    589c:	a0 0d       	add	r26, r0
    589e:	61 1d       	adc	r22, r1
    58a0:	22 1f       	adc	r18, r18
    58a2:	74 9f       	mul	r23, r20
    58a4:	33 27       	eor	r19, r19
    58a6:	a0 0d       	add	r26, r0
    58a8:	61 1d       	adc	r22, r1
    58aa:	23 1f       	adc	r18, r19
    58ac:	84 9f       	mul	r24, r20
    58ae:	60 0d       	add	r22, r0
    58b0:	21 1d       	adc	r18, r1
    58b2:	82 2f       	mov	r24, r18
    58b4:	76 2f       	mov	r23, r22
    58b6:	6a 2f       	mov	r22, r26
    58b8:	11 24       	eor	r1, r1
    58ba:	9f 57       	subi	r25, 0x7F	; 127
    58bc:	50 40       	sbci	r21, 0x00	; 0
    58be:	8a f0       	brmi	.+34     	; 0x58e2 <__mulsf3_pse+0x84>
    58c0:	e1 f0       	breq	.+56     	; 0x58fa <__mulsf3_pse+0x9c>
    58c2:	88 23       	and	r24, r24
    58c4:	4a f0       	brmi	.+18     	; 0x58d8 <__mulsf3_pse+0x7a>
    58c6:	ee 0f       	add	r30, r30
    58c8:	ff 1f       	adc	r31, r31
    58ca:	bb 1f       	adc	r27, r27
    58cc:	66 1f       	adc	r22, r22
    58ce:	77 1f       	adc	r23, r23
    58d0:	88 1f       	adc	r24, r24
    58d2:	91 50       	subi	r25, 0x01	; 1
    58d4:	50 40       	sbci	r21, 0x00	; 0
    58d6:	a9 f7       	brne	.-22     	; 0x58c2 <__mulsf3_pse+0x64>
    58d8:	9e 3f       	cpi	r25, 0xFE	; 254
    58da:	51 05       	cpc	r21, r1
    58dc:	70 f0       	brcs	.+28     	; 0x58fa <__mulsf3_pse+0x9c>
    58de:	60 cf       	rjmp	.-320    	; 0x57a0 <__fp_inf>
    58e0:	aa cf       	rjmp	.-172    	; 0x5836 <__fp_szero>
    58e2:	5f 3f       	cpi	r21, 0xFF	; 255
    58e4:	ec f3       	brlt	.-6      	; 0x58e0 <__mulsf3_pse+0x82>
    58e6:	98 3e       	cpi	r25, 0xE8	; 232
    58e8:	dc f3       	brlt	.-10     	; 0x58e0 <__mulsf3_pse+0x82>
    58ea:	86 95       	lsr	r24
    58ec:	77 95       	ror	r23
    58ee:	67 95       	ror	r22
    58f0:	b7 95       	ror	r27
    58f2:	f7 95       	ror	r31
    58f4:	e7 95       	ror	r30
    58f6:	9f 5f       	subi	r25, 0xFF	; 255
    58f8:	c1 f7       	brne	.-16     	; 0x58ea <__mulsf3_pse+0x8c>
    58fa:	fe 2b       	or	r31, r30
    58fc:	88 0f       	add	r24, r24
    58fe:	91 1d       	adc	r25, r1
    5900:	96 95       	lsr	r25
    5902:	87 95       	ror	r24
    5904:	97 f9       	bld	r25, 7
    5906:	08 95       	ret

00005908 <sprintf>:
    5908:	0f 93       	push	r16
    590a:	1f 93       	push	r17
    590c:	cf 93       	push	r28
    590e:	df 93       	push	r29
    5910:	cd b7       	in	r28, 0x3d	; 61
    5912:	de b7       	in	r29, 0x3e	; 62
    5914:	2e 97       	sbiw	r28, 0x0e	; 14
    5916:	cd bf       	out	0x3d, r28	; 61
    5918:	de bf       	out	0x3e, r29	; 62
    591a:	0e 89       	ldd	r16, Y+22	; 0x16
    591c:	1f 89       	ldd	r17, Y+23	; 0x17
    591e:	86 e0       	ldi	r24, 0x06	; 6
    5920:	8c 83       	std	Y+4, r24	; 0x04
    5922:	09 83       	std	Y+1, r16	; 0x01
    5924:	1a 83       	std	Y+2, r17	; 0x02
    5926:	8f ef       	ldi	r24, 0xFF	; 255
    5928:	9f e7       	ldi	r25, 0x7F	; 127
    592a:	8d 83       	std	Y+5, r24	; 0x05
    592c:	9e 83       	std	Y+6, r25	; 0x06
    592e:	ae 01       	movw	r20, r28
    5930:	46 5e       	subi	r20, 0xE6	; 230
    5932:	5f 4f       	sbci	r21, 0xFF	; 255
    5934:	68 8d       	ldd	r22, Y+24	; 0x18
    5936:	79 8d       	ldd	r23, Y+25	; 0x19
    5938:	ce 01       	movw	r24, r28
    593a:	01 96       	adiw	r24, 0x01	; 1
    593c:	0d d0       	rcall	.+26     	; 0x5958 <vfprintf>
    593e:	ef 81       	ldd	r30, Y+7	; 0x07
    5940:	f8 85       	ldd	r31, Y+8	; 0x08
    5942:	e0 0f       	add	r30, r16
    5944:	f1 1f       	adc	r31, r17
    5946:	10 82       	st	Z, r1
    5948:	2e 96       	adiw	r28, 0x0e	; 14
    594a:	cd bf       	out	0x3d, r28	; 61
    594c:	de bf       	out	0x3e, r29	; 62
    594e:	df 91       	pop	r29
    5950:	cf 91       	pop	r28
    5952:	1f 91       	pop	r17
    5954:	0f 91       	pop	r16
    5956:	08 95       	ret

00005958 <vfprintf>:
    5958:	2f 92       	push	r2
    595a:	3f 92       	push	r3
    595c:	4f 92       	push	r4
    595e:	5f 92       	push	r5
    5960:	6f 92       	push	r6
    5962:	7f 92       	push	r7
    5964:	8f 92       	push	r8
    5966:	9f 92       	push	r9
    5968:	af 92       	push	r10
    596a:	bf 92       	push	r11
    596c:	cf 92       	push	r12
    596e:	df 92       	push	r13
    5970:	ef 92       	push	r14
    5972:	ff 92       	push	r15
    5974:	0f 93       	push	r16
    5976:	1f 93       	push	r17
    5978:	cf 93       	push	r28
    597a:	df 93       	push	r29
    597c:	cd b7       	in	r28, 0x3d	; 61
    597e:	de b7       	in	r29, 0x3e	; 62
    5980:	2c 97       	sbiw	r28, 0x0c	; 12
    5982:	cd bf       	out	0x3d, r28	; 61
    5984:	de bf       	out	0x3e, r29	; 62
    5986:	7c 01       	movw	r14, r24
    5988:	6b 01       	movw	r12, r22
    598a:	8a 01       	movw	r16, r20
    598c:	fc 01       	movw	r30, r24
    598e:	16 82       	std	Z+6, r1	; 0x06
    5990:	17 82       	std	Z+7, r1	; 0x07
    5992:	83 81       	ldd	r24, Z+3	; 0x03
    5994:	81 ff       	sbrs	r24, 1
    5996:	b0 c1       	rjmp	.+864    	; 0x5cf8 <vfprintf+0x3a0>
    5998:	ce 01       	movw	r24, r28
    599a:	01 96       	adiw	r24, 0x01	; 1
    599c:	4c 01       	movw	r8, r24
    599e:	f7 01       	movw	r30, r14
    59a0:	93 81       	ldd	r25, Z+3	; 0x03
    59a2:	f6 01       	movw	r30, r12
    59a4:	93 fd       	sbrc	r25, 3
    59a6:	85 91       	lpm	r24, Z+
    59a8:	93 ff       	sbrs	r25, 3
    59aa:	81 91       	ld	r24, Z+
    59ac:	6f 01       	movw	r12, r30
    59ae:	88 23       	and	r24, r24
    59b0:	09 f4       	brne	.+2      	; 0x59b4 <vfprintf+0x5c>
    59b2:	9e c1       	rjmp	.+828    	; 0x5cf0 <vfprintf+0x398>
    59b4:	85 32       	cpi	r24, 0x25	; 37
    59b6:	39 f4       	brne	.+14     	; 0x59c6 <vfprintf+0x6e>
    59b8:	93 fd       	sbrc	r25, 3
    59ba:	85 91       	lpm	r24, Z+
    59bc:	93 ff       	sbrs	r25, 3
    59be:	81 91       	ld	r24, Z+
    59c0:	6f 01       	movw	r12, r30
    59c2:	85 32       	cpi	r24, 0x25	; 37
    59c4:	21 f4       	brne	.+8      	; 0x59ce <vfprintf+0x76>
    59c6:	b7 01       	movw	r22, r14
    59c8:	90 e0       	ldi	r25, 0x00	; 0
    59ca:	c4 d1       	rcall	.+904    	; 0x5d54 <fputc>
    59cc:	e8 cf       	rjmp	.-48     	; 0x599e <vfprintf+0x46>
    59ce:	51 2c       	mov	r5, r1
    59d0:	31 2c       	mov	r3, r1
    59d2:	20 e0       	ldi	r18, 0x00	; 0
    59d4:	20 32       	cpi	r18, 0x20	; 32
    59d6:	a0 f4       	brcc	.+40     	; 0x5a00 <vfprintf+0xa8>
    59d8:	8b 32       	cpi	r24, 0x2B	; 43
    59da:	69 f0       	breq	.+26     	; 0x59f6 <vfprintf+0x9e>
    59dc:	30 f4       	brcc	.+12     	; 0x59ea <vfprintf+0x92>
    59de:	80 32       	cpi	r24, 0x20	; 32
    59e0:	59 f0       	breq	.+22     	; 0x59f8 <vfprintf+0xa0>
    59e2:	83 32       	cpi	r24, 0x23	; 35
    59e4:	69 f4       	brne	.+26     	; 0x5a00 <vfprintf+0xa8>
    59e6:	20 61       	ori	r18, 0x10	; 16
    59e8:	2c c0       	rjmp	.+88     	; 0x5a42 <vfprintf+0xea>
    59ea:	8d 32       	cpi	r24, 0x2D	; 45
    59ec:	39 f0       	breq	.+14     	; 0x59fc <vfprintf+0xa4>
    59ee:	80 33       	cpi	r24, 0x30	; 48
    59f0:	39 f4       	brne	.+14     	; 0x5a00 <vfprintf+0xa8>
    59f2:	21 60       	ori	r18, 0x01	; 1
    59f4:	26 c0       	rjmp	.+76     	; 0x5a42 <vfprintf+0xea>
    59f6:	22 60       	ori	r18, 0x02	; 2
    59f8:	24 60       	ori	r18, 0x04	; 4
    59fa:	23 c0       	rjmp	.+70     	; 0x5a42 <vfprintf+0xea>
    59fc:	28 60       	ori	r18, 0x08	; 8
    59fe:	21 c0       	rjmp	.+66     	; 0x5a42 <vfprintf+0xea>
    5a00:	27 fd       	sbrc	r18, 7
    5a02:	27 c0       	rjmp	.+78     	; 0x5a52 <vfprintf+0xfa>
    5a04:	30 ed       	ldi	r19, 0xD0	; 208
    5a06:	38 0f       	add	r19, r24
    5a08:	3a 30       	cpi	r19, 0x0A	; 10
    5a0a:	78 f4       	brcc	.+30     	; 0x5a2a <vfprintf+0xd2>
    5a0c:	26 ff       	sbrs	r18, 6
    5a0e:	06 c0       	rjmp	.+12     	; 0x5a1c <vfprintf+0xc4>
    5a10:	fa e0       	ldi	r31, 0x0A	; 10
    5a12:	5f 9e       	mul	r5, r31
    5a14:	30 0d       	add	r19, r0
    5a16:	11 24       	eor	r1, r1
    5a18:	53 2e       	mov	r5, r19
    5a1a:	13 c0       	rjmp	.+38     	; 0x5a42 <vfprintf+0xea>
    5a1c:	8a e0       	ldi	r24, 0x0A	; 10
    5a1e:	38 9e       	mul	r3, r24
    5a20:	30 0d       	add	r19, r0
    5a22:	11 24       	eor	r1, r1
    5a24:	33 2e       	mov	r3, r19
    5a26:	20 62       	ori	r18, 0x20	; 32
    5a28:	0c c0       	rjmp	.+24     	; 0x5a42 <vfprintf+0xea>
    5a2a:	8e 32       	cpi	r24, 0x2E	; 46
    5a2c:	21 f4       	brne	.+8      	; 0x5a36 <vfprintf+0xde>
    5a2e:	26 fd       	sbrc	r18, 6
    5a30:	5f c1       	rjmp	.+702    	; 0x5cf0 <vfprintf+0x398>
    5a32:	20 64       	ori	r18, 0x40	; 64
    5a34:	06 c0       	rjmp	.+12     	; 0x5a42 <vfprintf+0xea>
    5a36:	8c 36       	cpi	r24, 0x6C	; 108
    5a38:	11 f4       	brne	.+4      	; 0x5a3e <vfprintf+0xe6>
    5a3a:	20 68       	ori	r18, 0x80	; 128
    5a3c:	02 c0       	rjmp	.+4      	; 0x5a42 <vfprintf+0xea>
    5a3e:	88 36       	cpi	r24, 0x68	; 104
    5a40:	41 f4       	brne	.+16     	; 0x5a52 <vfprintf+0xfa>
    5a42:	f6 01       	movw	r30, r12
    5a44:	93 fd       	sbrc	r25, 3
    5a46:	85 91       	lpm	r24, Z+
    5a48:	93 ff       	sbrs	r25, 3
    5a4a:	81 91       	ld	r24, Z+
    5a4c:	6f 01       	movw	r12, r30
    5a4e:	81 11       	cpse	r24, r1
    5a50:	c1 cf       	rjmp	.-126    	; 0x59d4 <vfprintf+0x7c>
    5a52:	98 2f       	mov	r25, r24
    5a54:	9f 7d       	andi	r25, 0xDF	; 223
    5a56:	95 54       	subi	r25, 0x45	; 69
    5a58:	93 30       	cpi	r25, 0x03	; 3
    5a5a:	28 f4       	brcc	.+10     	; 0x5a66 <vfprintf+0x10e>
    5a5c:	0c 5f       	subi	r16, 0xFC	; 252
    5a5e:	1f 4f       	sbci	r17, 0xFF	; 255
    5a60:	ff e3       	ldi	r31, 0x3F	; 63
    5a62:	f9 83       	std	Y+1, r31	; 0x01
    5a64:	0d c0       	rjmp	.+26     	; 0x5a80 <vfprintf+0x128>
    5a66:	83 36       	cpi	r24, 0x63	; 99
    5a68:	31 f0       	breq	.+12     	; 0x5a76 <vfprintf+0x11e>
    5a6a:	83 37       	cpi	r24, 0x73	; 115
    5a6c:	71 f0       	breq	.+28     	; 0x5a8a <vfprintf+0x132>
    5a6e:	83 35       	cpi	r24, 0x53	; 83
    5a70:	09 f0       	breq	.+2      	; 0x5a74 <vfprintf+0x11c>
    5a72:	57 c0       	rjmp	.+174    	; 0x5b22 <vfprintf+0x1ca>
    5a74:	21 c0       	rjmp	.+66     	; 0x5ab8 <vfprintf+0x160>
    5a76:	f8 01       	movw	r30, r16
    5a78:	80 81       	ld	r24, Z
    5a7a:	89 83       	std	Y+1, r24	; 0x01
    5a7c:	0e 5f       	subi	r16, 0xFE	; 254
    5a7e:	1f 4f       	sbci	r17, 0xFF	; 255
    5a80:	44 24       	eor	r4, r4
    5a82:	43 94       	inc	r4
    5a84:	51 2c       	mov	r5, r1
    5a86:	54 01       	movw	r10, r8
    5a88:	14 c0       	rjmp	.+40     	; 0x5ab2 <vfprintf+0x15a>
    5a8a:	38 01       	movw	r6, r16
    5a8c:	f2 e0       	ldi	r31, 0x02	; 2
    5a8e:	6f 0e       	add	r6, r31
    5a90:	71 1c       	adc	r7, r1
    5a92:	f8 01       	movw	r30, r16
    5a94:	a0 80       	ld	r10, Z
    5a96:	b1 80       	ldd	r11, Z+1	; 0x01
    5a98:	26 ff       	sbrs	r18, 6
    5a9a:	03 c0       	rjmp	.+6      	; 0x5aa2 <vfprintf+0x14a>
    5a9c:	65 2d       	mov	r22, r5
    5a9e:	70 e0       	ldi	r23, 0x00	; 0
    5aa0:	02 c0       	rjmp	.+4      	; 0x5aa6 <vfprintf+0x14e>
    5aa2:	6f ef       	ldi	r22, 0xFF	; 255
    5aa4:	7f ef       	ldi	r23, 0xFF	; 255
    5aa6:	c5 01       	movw	r24, r10
    5aa8:	2c 87       	std	Y+12, r18	; 0x0c
    5aaa:	49 d1       	rcall	.+658    	; 0x5d3e <strnlen>
    5aac:	2c 01       	movw	r4, r24
    5aae:	83 01       	movw	r16, r6
    5ab0:	2c 85       	ldd	r18, Y+12	; 0x0c
    5ab2:	2f 77       	andi	r18, 0x7F	; 127
    5ab4:	22 2e       	mov	r2, r18
    5ab6:	16 c0       	rjmp	.+44     	; 0x5ae4 <vfprintf+0x18c>
    5ab8:	38 01       	movw	r6, r16
    5aba:	f2 e0       	ldi	r31, 0x02	; 2
    5abc:	6f 0e       	add	r6, r31
    5abe:	71 1c       	adc	r7, r1
    5ac0:	f8 01       	movw	r30, r16
    5ac2:	a0 80       	ld	r10, Z
    5ac4:	b1 80       	ldd	r11, Z+1	; 0x01
    5ac6:	26 ff       	sbrs	r18, 6
    5ac8:	03 c0       	rjmp	.+6      	; 0x5ad0 <vfprintf+0x178>
    5aca:	65 2d       	mov	r22, r5
    5acc:	70 e0       	ldi	r23, 0x00	; 0
    5ace:	02 c0       	rjmp	.+4      	; 0x5ad4 <vfprintf+0x17c>
    5ad0:	6f ef       	ldi	r22, 0xFF	; 255
    5ad2:	7f ef       	ldi	r23, 0xFF	; 255
    5ad4:	c5 01       	movw	r24, r10
    5ad6:	2c 87       	std	Y+12, r18	; 0x0c
    5ad8:	27 d1       	rcall	.+590    	; 0x5d28 <strnlen_P>
    5ada:	2c 01       	movw	r4, r24
    5adc:	2c 85       	ldd	r18, Y+12	; 0x0c
    5ade:	20 68       	ori	r18, 0x80	; 128
    5ae0:	22 2e       	mov	r2, r18
    5ae2:	83 01       	movw	r16, r6
    5ae4:	23 fc       	sbrc	r2, 3
    5ae6:	19 c0       	rjmp	.+50     	; 0x5b1a <vfprintf+0x1c2>
    5ae8:	83 2d       	mov	r24, r3
    5aea:	90 e0       	ldi	r25, 0x00	; 0
    5aec:	48 16       	cp	r4, r24
    5aee:	59 06       	cpc	r5, r25
    5af0:	a0 f4       	brcc	.+40     	; 0x5b1a <vfprintf+0x1c2>
    5af2:	b7 01       	movw	r22, r14
    5af4:	80 e2       	ldi	r24, 0x20	; 32
    5af6:	90 e0       	ldi	r25, 0x00	; 0
    5af8:	2d d1       	rcall	.+602    	; 0x5d54 <fputc>
    5afa:	3a 94       	dec	r3
    5afc:	f5 cf       	rjmp	.-22     	; 0x5ae8 <vfprintf+0x190>
    5afe:	f5 01       	movw	r30, r10
    5b00:	27 fc       	sbrc	r2, 7
    5b02:	85 91       	lpm	r24, Z+
    5b04:	27 fe       	sbrs	r2, 7
    5b06:	81 91       	ld	r24, Z+
    5b08:	5f 01       	movw	r10, r30
    5b0a:	b7 01       	movw	r22, r14
    5b0c:	90 e0       	ldi	r25, 0x00	; 0
    5b0e:	22 d1       	rcall	.+580    	; 0x5d54 <fputc>
    5b10:	31 10       	cpse	r3, r1
    5b12:	3a 94       	dec	r3
    5b14:	f1 e0       	ldi	r31, 0x01	; 1
    5b16:	4f 1a       	sub	r4, r31
    5b18:	51 08       	sbc	r5, r1
    5b1a:	41 14       	cp	r4, r1
    5b1c:	51 04       	cpc	r5, r1
    5b1e:	79 f7       	brne	.-34     	; 0x5afe <vfprintf+0x1a6>
    5b20:	de c0       	rjmp	.+444    	; 0x5cde <vfprintf+0x386>
    5b22:	84 36       	cpi	r24, 0x64	; 100
    5b24:	11 f0       	breq	.+4      	; 0x5b2a <vfprintf+0x1d2>
    5b26:	89 36       	cpi	r24, 0x69	; 105
    5b28:	31 f5       	brne	.+76     	; 0x5b76 <vfprintf+0x21e>
    5b2a:	f8 01       	movw	r30, r16
    5b2c:	27 ff       	sbrs	r18, 7
    5b2e:	07 c0       	rjmp	.+14     	; 0x5b3e <vfprintf+0x1e6>
    5b30:	60 81       	ld	r22, Z
    5b32:	71 81       	ldd	r23, Z+1	; 0x01
    5b34:	82 81       	ldd	r24, Z+2	; 0x02
    5b36:	93 81       	ldd	r25, Z+3	; 0x03
    5b38:	0c 5f       	subi	r16, 0xFC	; 252
    5b3a:	1f 4f       	sbci	r17, 0xFF	; 255
    5b3c:	08 c0       	rjmp	.+16     	; 0x5b4e <vfprintf+0x1f6>
    5b3e:	60 81       	ld	r22, Z
    5b40:	71 81       	ldd	r23, Z+1	; 0x01
    5b42:	88 27       	eor	r24, r24
    5b44:	77 fd       	sbrc	r23, 7
    5b46:	80 95       	com	r24
    5b48:	98 2f       	mov	r25, r24
    5b4a:	0e 5f       	subi	r16, 0xFE	; 254
    5b4c:	1f 4f       	sbci	r17, 0xFF	; 255
    5b4e:	2f 76       	andi	r18, 0x6F	; 111
    5b50:	b2 2e       	mov	r11, r18
    5b52:	97 ff       	sbrs	r25, 7
    5b54:	09 c0       	rjmp	.+18     	; 0x5b68 <vfprintf+0x210>
    5b56:	90 95       	com	r25
    5b58:	80 95       	com	r24
    5b5a:	70 95       	com	r23
    5b5c:	61 95       	neg	r22
    5b5e:	7f 4f       	sbci	r23, 0xFF	; 255
    5b60:	8f 4f       	sbci	r24, 0xFF	; 255
    5b62:	9f 4f       	sbci	r25, 0xFF	; 255
    5b64:	20 68       	ori	r18, 0x80	; 128
    5b66:	b2 2e       	mov	r11, r18
    5b68:	2a e0       	ldi	r18, 0x0A	; 10
    5b6a:	30 e0       	ldi	r19, 0x00	; 0
    5b6c:	a4 01       	movw	r20, r8
    5b6e:	24 d1       	rcall	.+584    	; 0x5db8 <__ultoa_invert>
    5b70:	a8 2e       	mov	r10, r24
    5b72:	a8 18       	sub	r10, r8
    5b74:	43 c0       	rjmp	.+134    	; 0x5bfc <vfprintf+0x2a4>
    5b76:	85 37       	cpi	r24, 0x75	; 117
    5b78:	29 f4       	brne	.+10     	; 0x5b84 <vfprintf+0x22c>
    5b7a:	2f 7e       	andi	r18, 0xEF	; 239
    5b7c:	b2 2e       	mov	r11, r18
    5b7e:	2a e0       	ldi	r18, 0x0A	; 10
    5b80:	30 e0       	ldi	r19, 0x00	; 0
    5b82:	25 c0       	rjmp	.+74     	; 0x5bce <vfprintf+0x276>
    5b84:	f2 2f       	mov	r31, r18
    5b86:	f9 7f       	andi	r31, 0xF9	; 249
    5b88:	bf 2e       	mov	r11, r31
    5b8a:	8f 36       	cpi	r24, 0x6F	; 111
    5b8c:	c1 f0       	breq	.+48     	; 0x5bbe <vfprintf+0x266>
    5b8e:	18 f4       	brcc	.+6      	; 0x5b96 <vfprintf+0x23e>
    5b90:	88 35       	cpi	r24, 0x58	; 88
    5b92:	79 f0       	breq	.+30     	; 0x5bb2 <vfprintf+0x25a>
    5b94:	ad c0       	rjmp	.+346    	; 0x5cf0 <vfprintf+0x398>
    5b96:	80 37       	cpi	r24, 0x70	; 112
    5b98:	19 f0       	breq	.+6      	; 0x5ba0 <vfprintf+0x248>
    5b9a:	88 37       	cpi	r24, 0x78	; 120
    5b9c:	21 f0       	breq	.+8      	; 0x5ba6 <vfprintf+0x24e>
    5b9e:	a8 c0       	rjmp	.+336    	; 0x5cf0 <vfprintf+0x398>
    5ba0:	2f 2f       	mov	r18, r31
    5ba2:	20 61       	ori	r18, 0x10	; 16
    5ba4:	b2 2e       	mov	r11, r18
    5ba6:	b4 fe       	sbrs	r11, 4
    5ba8:	0d c0       	rjmp	.+26     	; 0x5bc4 <vfprintf+0x26c>
    5baa:	8b 2d       	mov	r24, r11
    5bac:	84 60       	ori	r24, 0x04	; 4
    5bae:	b8 2e       	mov	r11, r24
    5bb0:	09 c0       	rjmp	.+18     	; 0x5bc4 <vfprintf+0x26c>
    5bb2:	24 ff       	sbrs	r18, 4
    5bb4:	0a c0       	rjmp	.+20     	; 0x5bca <vfprintf+0x272>
    5bb6:	9f 2f       	mov	r25, r31
    5bb8:	96 60       	ori	r25, 0x06	; 6
    5bba:	b9 2e       	mov	r11, r25
    5bbc:	06 c0       	rjmp	.+12     	; 0x5bca <vfprintf+0x272>
    5bbe:	28 e0       	ldi	r18, 0x08	; 8
    5bc0:	30 e0       	ldi	r19, 0x00	; 0
    5bc2:	05 c0       	rjmp	.+10     	; 0x5bce <vfprintf+0x276>
    5bc4:	20 e1       	ldi	r18, 0x10	; 16
    5bc6:	30 e0       	ldi	r19, 0x00	; 0
    5bc8:	02 c0       	rjmp	.+4      	; 0x5bce <vfprintf+0x276>
    5bca:	20 e1       	ldi	r18, 0x10	; 16
    5bcc:	32 e0       	ldi	r19, 0x02	; 2
    5bce:	f8 01       	movw	r30, r16
    5bd0:	b7 fe       	sbrs	r11, 7
    5bd2:	07 c0       	rjmp	.+14     	; 0x5be2 <vfprintf+0x28a>
    5bd4:	60 81       	ld	r22, Z
    5bd6:	71 81       	ldd	r23, Z+1	; 0x01
    5bd8:	82 81       	ldd	r24, Z+2	; 0x02
    5bda:	93 81       	ldd	r25, Z+3	; 0x03
    5bdc:	0c 5f       	subi	r16, 0xFC	; 252
    5bde:	1f 4f       	sbci	r17, 0xFF	; 255
    5be0:	06 c0       	rjmp	.+12     	; 0x5bee <vfprintf+0x296>
    5be2:	60 81       	ld	r22, Z
    5be4:	71 81       	ldd	r23, Z+1	; 0x01
    5be6:	80 e0       	ldi	r24, 0x00	; 0
    5be8:	90 e0       	ldi	r25, 0x00	; 0
    5bea:	0e 5f       	subi	r16, 0xFE	; 254
    5bec:	1f 4f       	sbci	r17, 0xFF	; 255
    5bee:	a4 01       	movw	r20, r8
    5bf0:	e3 d0       	rcall	.+454    	; 0x5db8 <__ultoa_invert>
    5bf2:	a8 2e       	mov	r10, r24
    5bf4:	a8 18       	sub	r10, r8
    5bf6:	fb 2d       	mov	r31, r11
    5bf8:	ff 77       	andi	r31, 0x7F	; 127
    5bfa:	bf 2e       	mov	r11, r31
    5bfc:	b6 fe       	sbrs	r11, 6
    5bfe:	0b c0       	rjmp	.+22     	; 0x5c16 <vfprintf+0x2be>
    5c00:	2b 2d       	mov	r18, r11
    5c02:	2e 7f       	andi	r18, 0xFE	; 254
    5c04:	a5 14       	cp	r10, r5
    5c06:	50 f4       	brcc	.+20     	; 0x5c1c <vfprintf+0x2c4>
    5c08:	b4 fe       	sbrs	r11, 4
    5c0a:	0a c0       	rjmp	.+20     	; 0x5c20 <vfprintf+0x2c8>
    5c0c:	b2 fc       	sbrc	r11, 2
    5c0e:	08 c0       	rjmp	.+16     	; 0x5c20 <vfprintf+0x2c8>
    5c10:	2b 2d       	mov	r18, r11
    5c12:	2e 7e       	andi	r18, 0xEE	; 238
    5c14:	05 c0       	rjmp	.+10     	; 0x5c20 <vfprintf+0x2c8>
    5c16:	7a 2c       	mov	r7, r10
    5c18:	2b 2d       	mov	r18, r11
    5c1a:	03 c0       	rjmp	.+6      	; 0x5c22 <vfprintf+0x2ca>
    5c1c:	7a 2c       	mov	r7, r10
    5c1e:	01 c0       	rjmp	.+2      	; 0x5c22 <vfprintf+0x2ca>
    5c20:	75 2c       	mov	r7, r5
    5c22:	24 ff       	sbrs	r18, 4
    5c24:	0d c0       	rjmp	.+26     	; 0x5c40 <vfprintf+0x2e8>
    5c26:	fe 01       	movw	r30, r28
    5c28:	ea 0d       	add	r30, r10
    5c2a:	f1 1d       	adc	r31, r1
    5c2c:	80 81       	ld	r24, Z
    5c2e:	80 33       	cpi	r24, 0x30	; 48
    5c30:	11 f4       	brne	.+4      	; 0x5c36 <vfprintf+0x2de>
    5c32:	29 7e       	andi	r18, 0xE9	; 233
    5c34:	09 c0       	rjmp	.+18     	; 0x5c48 <vfprintf+0x2f0>
    5c36:	22 ff       	sbrs	r18, 2
    5c38:	06 c0       	rjmp	.+12     	; 0x5c46 <vfprintf+0x2ee>
    5c3a:	73 94       	inc	r7
    5c3c:	73 94       	inc	r7
    5c3e:	04 c0       	rjmp	.+8      	; 0x5c48 <vfprintf+0x2f0>
    5c40:	82 2f       	mov	r24, r18
    5c42:	86 78       	andi	r24, 0x86	; 134
    5c44:	09 f0       	breq	.+2      	; 0x5c48 <vfprintf+0x2f0>
    5c46:	73 94       	inc	r7
    5c48:	23 fd       	sbrc	r18, 3
    5c4a:	12 c0       	rjmp	.+36     	; 0x5c70 <vfprintf+0x318>
    5c4c:	20 ff       	sbrs	r18, 0
    5c4e:	06 c0       	rjmp	.+12     	; 0x5c5c <vfprintf+0x304>
    5c50:	5a 2c       	mov	r5, r10
    5c52:	73 14       	cp	r7, r3
    5c54:	18 f4       	brcc	.+6      	; 0x5c5c <vfprintf+0x304>
    5c56:	53 0c       	add	r5, r3
    5c58:	57 18       	sub	r5, r7
    5c5a:	73 2c       	mov	r7, r3
    5c5c:	73 14       	cp	r7, r3
    5c5e:	60 f4       	brcc	.+24     	; 0x5c78 <vfprintf+0x320>
    5c60:	b7 01       	movw	r22, r14
    5c62:	80 e2       	ldi	r24, 0x20	; 32
    5c64:	90 e0       	ldi	r25, 0x00	; 0
    5c66:	2c 87       	std	Y+12, r18	; 0x0c
    5c68:	75 d0       	rcall	.+234    	; 0x5d54 <fputc>
    5c6a:	73 94       	inc	r7
    5c6c:	2c 85       	ldd	r18, Y+12	; 0x0c
    5c6e:	f6 cf       	rjmp	.-20     	; 0x5c5c <vfprintf+0x304>
    5c70:	73 14       	cp	r7, r3
    5c72:	10 f4       	brcc	.+4      	; 0x5c78 <vfprintf+0x320>
    5c74:	37 18       	sub	r3, r7
    5c76:	01 c0       	rjmp	.+2      	; 0x5c7a <vfprintf+0x322>
    5c78:	31 2c       	mov	r3, r1
    5c7a:	24 ff       	sbrs	r18, 4
    5c7c:	11 c0       	rjmp	.+34     	; 0x5ca0 <vfprintf+0x348>
    5c7e:	b7 01       	movw	r22, r14
    5c80:	80 e3       	ldi	r24, 0x30	; 48
    5c82:	90 e0       	ldi	r25, 0x00	; 0
    5c84:	2c 87       	std	Y+12, r18	; 0x0c
    5c86:	66 d0       	rcall	.+204    	; 0x5d54 <fputc>
    5c88:	2c 85       	ldd	r18, Y+12	; 0x0c
    5c8a:	22 ff       	sbrs	r18, 2
    5c8c:	16 c0       	rjmp	.+44     	; 0x5cba <vfprintf+0x362>
    5c8e:	21 ff       	sbrs	r18, 1
    5c90:	03 c0       	rjmp	.+6      	; 0x5c98 <vfprintf+0x340>
    5c92:	88 e5       	ldi	r24, 0x58	; 88
    5c94:	90 e0       	ldi	r25, 0x00	; 0
    5c96:	02 c0       	rjmp	.+4      	; 0x5c9c <vfprintf+0x344>
    5c98:	88 e7       	ldi	r24, 0x78	; 120
    5c9a:	90 e0       	ldi	r25, 0x00	; 0
    5c9c:	b7 01       	movw	r22, r14
    5c9e:	0c c0       	rjmp	.+24     	; 0x5cb8 <vfprintf+0x360>
    5ca0:	82 2f       	mov	r24, r18
    5ca2:	86 78       	andi	r24, 0x86	; 134
    5ca4:	51 f0       	breq	.+20     	; 0x5cba <vfprintf+0x362>
    5ca6:	21 fd       	sbrc	r18, 1
    5ca8:	02 c0       	rjmp	.+4      	; 0x5cae <vfprintf+0x356>
    5caa:	80 e2       	ldi	r24, 0x20	; 32
    5cac:	01 c0       	rjmp	.+2      	; 0x5cb0 <vfprintf+0x358>
    5cae:	8b e2       	ldi	r24, 0x2B	; 43
    5cb0:	27 fd       	sbrc	r18, 7
    5cb2:	8d e2       	ldi	r24, 0x2D	; 45
    5cb4:	b7 01       	movw	r22, r14
    5cb6:	90 e0       	ldi	r25, 0x00	; 0
    5cb8:	4d d0       	rcall	.+154    	; 0x5d54 <fputc>
    5cba:	a5 14       	cp	r10, r5
    5cbc:	30 f4       	brcc	.+12     	; 0x5cca <vfprintf+0x372>
    5cbe:	b7 01       	movw	r22, r14
    5cc0:	80 e3       	ldi	r24, 0x30	; 48
    5cc2:	90 e0       	ldi	r25, 0x00	; 0
    5cc4:	47 d0       	rcall	.+142    	; 0x5d54 <fputc>
    5cc6:	5a 94       	dec	r5
    5cc8:	f8 cf       	rjmp	.-16     	; 0x5cba <vfprintf+0x362>
    5cca:	aa 94       	dec	r10
    5ccc:	f4 01       	movw	r30, r8
    5cce:	ea 0d       	add	r30, r10
    5cd0:	f1 1d       	adc	r31, r1
    5cd2:	80 81       	ld	r24, Z
    5cd4:	b7 01       	movw	r22, r14
    5cd6:	90 e0       	ldi	r25, 0x00	; 0
    5cd8:	3d d0       	rcall	.+122    	; 0x5d54 <fputc>
    5cda:	a1 10       	cpse	r10, r1
    5cdc:	f6 cf       	rjmp	.-20     	; 0x5cca <vfprintf+0x372>
    5cde:	33 20       	and	r3, r3
    5ce0:	09 f4       	brne	.+2      	; 0x5ce4 <vfprintf+0x38c>
    5ce2:	5d ce       	rjmp	.-838    	; 0x599e <vfprintf+0x46>
    5ce4:	b7 01       	movw	r22, r14
    5ce6:	80 e2       	ldi	r24, 0x20	; 32
    5ce8:	90 e0       	ldi	r25, 0x00	; 0
    5cea:	34 d0       	rcall	.+104    	; 0x5d54 <fputc>
    5cec:	3a 94       	dec	r3
    5cee:	f7 cf       	rjmp	.-18     	; 0x5cde <vfprintf+0x386>
    5cf0:	f7 01       	movw	r30, r14
    5cf2:	86 81       	ldd	r24, Z+6	; 0x06
    5cf4:	97 81       	ldd	r25, Z+7	; 0x07
    5cf6:	02 c0       	rjmp	.+4      	; 0x5cfc <vfprintf+0x3a4>
    5cf8:	8f ef       	ldi	r24, 0xFF	; 255
    5cfa:	9f ef       	ldi	r25, 0xFF	; 255
    5cfc:	2c 96       	adiw	r28, 0x0c	; 12
    5cfe:	cd bf       	out	0x3d, r28	; 61
    5d00:	de bf       	out	0x3e, r29	; 62
    5d02:	df 91       	pop	r29
    5d04:	cf 91       	pop	r28
    5d06:	1f 91       	pop	r17
    5d08:	0f 91       	pop	r16
    5d0a:	ff 90       	pop	r15
    5d0c:	ef 90       	pop	r14
    5d0e:	df 90       	pop	r13
    5d10:	cf 90       	pop	r12
    5d12:	bf 90       	pop	r11
    5d14:	af 90       	pop	r10
    5d16:	9f 90       	pop	r9
    5d18:	8f 90       	pop	r8
    5d1a:	7f 90       	pop	r7
    5d1c:	6f 90       	pop	r6
    5d1e:	5f 90       	pop	r5
    5d20:	4f 90       	pop	r4
    5d22:	3f 90       	pop	r3
    5d24:	2f 90       	pop	r2
    5d26:	08 95       	ret

00005d28 <strnlen_P>:
    5d28:	fc 01       	movw	r30, r24
    5d2a:	05 90       	lpm	r0, Z+
    5d2c:	61 50       	subi	r22, 0x01	; 1
    5d2e:	70 40       	sbci	r23, 0x00	; 0
    5d30:	01 10       	cpse	r0, r1
    5d32:	d8 f7       	brcc	.-10     	; 0x5d2a <strnlen_P+0x2>
    5d34:	80 95       	com	r24
    5d36:	90 95       	com	r25
    5d38:	8e 0f       	add	r24, r30
    5d3a:	9f 1f       	adc	r25, r31
    5d3c:	08 95       	ret

00005d3e <strnlen>:
    5d3e:	fc 01       	movw	r30, r24
    5d40:	61 50       	subi	r22, 0x01	; 1
    5d42:	70 40       	sbci	r23, 0x00	; 0
    5d44:	01 90       	ld	r0, Z+
    5d46:	01 10       	cpse	r0, r1
    5d48:	d8 f7       	brcc	.-10     	; 0x5d40 <strnlen+0x2>
    5d4a:	80 95       	com	r24
    5d4c:	90 95       	com	r25
    5d4e:	8e 0f       	add	r24, r30
    5d50:	9f 1f       	adc	r25, r31
    5d52:	08 95       	ret

00005d54 <fputc>:
    5d54:	0f 93       	push	r16
    5d56:	1f 93       	push	r17
    5d58:	cf 93       	push	r28
    5d5a:	df 93       	push	r29
    5d5c:	18 2f       	mov	r17, r24
    5d5e:	09 2f       	mov	r16, r25
    5d60:	eb 01       	movw	r28, r22
    5d62:	8b 81       	ldd	r24, Y+3	; 0x03
    5d64:	81 fd       	sbrc	r24, 1
    5d66:	03 c0       	rjmp	.+6      	; 0x5d6e <fputc+0x1a>
    5d68:	8f ef       	ldi	r24, 0xFF	; 255
    5d6a:	9f ef       	ldi	r25, 0xFF	; 255
    5d6c:	20 c0       	rjmp	.+64     	; 0x5dae <fputc+0x5a>
    5d6e:	82 ff       	sbrs	r24, 2
    5d70:	10 c0       	rjmp	.+32     	; 0x5d92 <fputc+0x3e>
    5d72:	4e 81       	ldd	r20, Y+6	; 0x06
    5d74:	5f 81       	ldd	r21, Y+7	; 0x07
    5d76:	2c 81       	ldd	r18, Y+4	; 0x04
    5d78:	3d 81       	ldd	r19, Y+5	; 0x05
    5d7a:	42 17       	cp	r20, r18
    5d7c:	53 07       	cpc	r21, r19
    5d7e:	7c f4       	brge	.+30     	; 0x5d9e <fputc+0x4a>
    5d80:	e8 81       	ld	r30, Y
    5d82:	f9 81       	ldd	r31, Y+1	; 0x01
    5d84:	9f 01       	movw	r18, r30
    5d86:	2f 5f       	subi	r18, 0xFF	; 255
    5d88:	3f 4f       	sbci	r19, 0xFF	; 255
    5d8a:	28 83       	st	Y, r18
    5d8c:	39 83       	std	Y+1, r19	; 0x01
    5d8e:	10 83       	st	Z, r17
    5d90:	06 c0       	rjmp	.+12     	; 0x5d9e <fputc+0x4a>
    5d92:	e8 85       	ldd	r30, Y+8	; 0x08
    5d94:	f9 85       	ldd	r31, Y+9	; 0x09
    5d96:	81 2f       	mov	r24, r17
    5d98:	19 95       	eicall
    5d9a:	89 2b       	or	r24, r25
    5d9c:	29 f7       	brne	.-54     	; 0x5d68 <fputc+0x14>
    5d9e:	2e 81       	ldd	r18, Y+6	; 0x06
    5da0:	3f 81       	ldd	r19, Y+7	; 0x07
    5da2:	2f 5f       	subi	r18, 0xFF	; 255
    5da4:	3f 4f       	sbci	r19, 0xFF	; 255
    5da6:	2e 83       	std	Y+6, r18	; 0x06
    5da8:	3f 83       	std	Y+7, r19	; 0x07
    5daa:	81 2f       	mov	r24, r17
    5dac:	90 2f       	mov	r25, r16
    5dae:	df 91       	pop	r29
    5db0:	cf 91       	pop	r28
    5db2:	1f 91       	pop	r17
    5db4:	0f 91       	pop	r16
    5db6:	08 95       	ret

00005db8 <__ultoa_invert>:
    5db8:	fa 01       	movw	r30, r20
    5dba:	aa 27       	eor	r26, r26
    5dbc:	28 30       	cpi	r18, 0x08	; 8
    5dbe:	51 f1       	breq	.+84     	; 0x5e14 <__ultoa_invert+0x5c>
    5dc0:	20 31       	cpi	r18, 0x10	; 16
    5dc2:	81 f1       	breq	.+96     	; 0x5e24 <__ultoa_invert+0x6c>
    5dc4:	e8 94       	clt
    5dc6:	6f 93       	push	r22
    5dc8:	6e 7f       	andi	r22, 0xFE	; 254
    5dca:	6e 5f       	subi	r22, 0xFE	; 254
    5dcc:	7f 4f       	sbci	r23, 0xFF	; 255
    5dce:	8f 4f       	sbci	r24, 0xFF	; 255
    5dd0:	9f 4f       	sbci	r25, 0xFF	; 255
    5dd2:	af 4f       	sbci	r26, 0xFF	; 255
    5dd4:	b1 e0       	ldi	r27, 0x01	; 1
    5dd6:	3e d0       	rcall	.+124    	; 0x5e54 <__ultoa_invert+0x9c>
    5dd8:	b4 e0       	ldi	r27, 0x04	; 4
    5dda:	3c d0       	rcall	.+120    	; 0x5e54 <__ultoa_invert+0x9c>
    5ddc:	67 0f       	add	r22, r23
    5dde:	78 1f       	adc	r23, r24
    5de0:	89 1f       	adc	r24, r25
    5de2:	9a 1f       	adc	r25, r26
    5de4:	a1 1d       	adc	r26, r1
    5de6:	68 0f       	add	r22, r24
    5de8:	79 1f       	adc	r23, r25
    5dea:	8a 1f       	adc	r24, r26
    5dec:	91 1d       	adc	r25, r1
    5dee:	a1 1d       	adc	r26, r1
    5df0:	6a 0f       	add	r22, r26
    5df2:	71 1d       	adc	r23, r1
    5df4:	81 1d       	adc	r24, r1
    5df6:	91 1d       	adc	r25, r1
    5df8:	a1 1d       	adc	r26, r1
    5dfa:	20 d0       	rcall	.+64     	; 0x5e3c <__ultoa_invert+0x84>
    5dfc:	09 f4       	brne	.+2      	; 0x5e00 <__ultoa_invert+0x48>
    5dfe:	68 94       	set
    5e00:	3f 91       	pop	r19
    5e02:	2a e0       	ldi	r18, 0x0A	; 10
    5e04:	26 9f       	mul	r18, r22
    5e06:	11 24       	eor	r1, r1
    5e08:	30 19       	sub	r19, r0
    5e0a:	30 5d       	subi	r19, 0xD0	; 208
    5e0c:	31 93       	st	Z+, r19
    5e0e:	de f6       	brtc	.-74     	; 0x5dc6 <__ultoa_invert+0xe>
    5e10:	cf 01       	movw	r24, r30
    5e12:	08 95       	ret
    5e14:	46 2f       	mov	r20, r22
    5e16:	47 70       	andi	r20, 0x07	; 7
    5e18:	40 5d       	subi	r20, 0xD0	; 208
    5e1a:	41 93       	st	Z+, r20
    5e1c:	b3 e0       	ldi	r27, 0x03	; 3
    5e1e:	0f d0       	rcall	.+30     	; 0x5e3e <__ultoa_invert+0x86>
    5e20:	c9 f7       	brne	.-14     	; 0x5e14 <__ultoa_invert+0x5c>
    5e22:	f6 cf       	rjmp	.-20     	; 0x5e10 <__ultoa_invert+0x58>
    5e24:	46 2f       	mov	r20, r22
    5e26:	4f 70       	andi	r20, 0x0F	; 15
    5e28:	40 5d       	subi	r20, 0xD0	; 208
    5e2a:	4a 33       	cpi	r20, 0x3A	; 58
    5e2c:	18 f0       	brcs	.+6      	; 0x5e34 <__ultoa_invert+0x7c>
    5e2e:	49 5d       	subi	r20, 0xD9	; 217
    5e30:	31 fd       	sbrc	r19, 1
    5e32:	40 52       	subi	r20, 0x20	; 32
    5e34:	41 93       	st	Z+, r20
    5e36:	02 d0       	rcall	.+4      	; 0x5e3c <__ultoa_invert+0x84>
    5e38:	a9 f7       	brne	.-22     	; 0x5e24 <__ultoa_invert+0x6c>
    5e3a:	ea cf       	rjmp	.-44     	; 0x5e10 <__ultoa_invert+0x58>
    5e3c:	b4 e0       	ldi	r27, 0x04	; 4
    5e3e:	a6 95       	lsr	r26
    5e40:	97 95       	ror	r25
    5e42:	87 95       	ror	r24
    5e44:	77 95       	ror	r23
    5e46:	67 95       	ror	r22
    5e48:	ba 95       	dec	r27
    5e4a:	c9 f7       	brne	.-14     	; 0x5e3e <__ultoa_invert+0x86>
    5e4c:	00 97       	sbiw	r24, 0x00	; 0
    5e4e:	61 05       	cpc	r22, r1
    5e50:	71 05       	cpc	r23, r1
    5e52:	08 95       	ret
    5e54:	9b 01       	movw	r18, r22
    5e56:	ac 01       	movw	r20, r24
    5e58:	0a 2e       	mov	r0, r26
    5e5a:	06 94       	lsr	r0
    5e5c:	57 95       	ror	r21
    5e5e:	47 95       	ror	r20
    5e60:	37 95       	ror	r19
    5e62:	27 95       	ror	r18
    5e64:	ba 95       	dec	r27
    5e66:	c9 f7       	brne	.-14     	; 0x5e5a <__ultoa_invert+0xa2>
    5e68:	62 0f       	add	r22, r18
    5e6a:	73 1f       	adc	r23, r19
    5e6c:	84 1f       	adc	r24, r20
    5e6e:	95 1f       	adc	r25, r21
    5e70:	a0 1d       	adc	r26, r0
    5e72:	08 95       	ret

00005e74 <_exit>:
    5e74:	f8 94       	cli

00005e76 <__stop_program>:
    5e76:	ff cf       	rjmp	.-2      	; 0x5e76 <__stop_program>
